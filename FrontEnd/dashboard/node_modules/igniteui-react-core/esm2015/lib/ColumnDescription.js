/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { DefinitionBaseDescription } from "./DefinitionBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ColumnDescription = /*@__PURE__*/ (() => {
    class ColumnDescription extends DefinitionBaseDescription {
        constructor() {
            super();
            this.c2 = 0;
            this.c4 = 0;
            this.c3 = 0;
            this.c1 = 0;
            this.dr = null;
            this.dp = null;
            this.dq = null;
            this.dd = null;
            this.du = null;
            this.dg = null;
            this.dt = null;
            this.df = null;
            this.b6 = null;
            this.b4 = null;
            this.cw = 0;
            this.cg = false;
            this.cc = false;
            this.b2 = null;
            this.b8 = null;
            this.cf = false;
            this.ci = false;
            this.ch = false;
            this.cj = false;
            this.dv = null;
            this.ds = null;
            this.c9 = null;
            this.dh = null;
            this.db = null;
            this.dj = null;
            this.di = null;
            this.da = null;
            this.cb = false;
            this.cd = false;
            this.ce = false;
            this.dk = null;
            this.dc = null;
            this.cv = 0;
            this.ct = 0;
            this.dl = null;
            this.cu = 0;
            this.dm = null;
            this.dn = null;
            this.de = null;
        }
        get_type() {
            return "Column";
        }
        get paddingLeft() {
            return this.c2;
        }
        set paddingLeft(a) {
            this.c2 = a;
            this.e("PaddingLeft");
        }
        get paddingTop() {
            return this.c4;
        }
        set paddingTop(a) {
            this.c4 = a;
            this.e("PaddingTop");
        }
        get paddingRight() {
            return this.c3;
        }
        set paddingRight(a) {
            this.c3 = a;
            this.e("PaddingRight");
        }
        get paddingBottom() {
            return this.c1;
        }
        set paddingBottom(a) {
            this.c1 = a;
            this.e("PaddingBottom");
        }
        get name() {
            return this.dr;
        }
        set name(a) {
            this.dr = a;
            this.e("Name");
        }
        get field() {
            return this.dp;
        }
        set field(a) {
            this.dp = a;
            this.e("Field");
        }
        get headerText() {
            return this.dq;
        }
        set headerText(a) {
            this.dq = a;
            this.e("HeaderText");
        }
        get actualHeaderText() {
            return this.dd;
        }
        set actualHeaderText(a) {
            this.dd = a;
            this.e("ActualHeaderText");
        }
        get selectedBackground() {
            return this.du;
        }
        set selectedBackground(a) {
            this.du = a;
            this.e("SelectedBackground");
        }
        get actualSelectedBackground() {
            return this.dg;
        }
        set actualSelectedBackground(a) {
            this.dg = a;
            this.e("ActualSelectedBackground");
        }
        get rowHoverBackground() {
            return this.dt;
        }
        set rowHoverBackground(a) {
            this.dt = a;
            this.e("RowHoverBackground");
        }
        get actualHoverBackground() {
            return this.df;
        }
        set actualHoverBackground(a) {
            this.df = a;
            this.e("ActualHoverBackground");
        }
        get animationSettings() {
            return this.b6;
        }
        set animationSettings(a) {
            this.b6 = a;
            this.e("AnimationSettings");
        }
        get width() {
            return this.b4;
        }
        set width(a) {
            this.b4 = a;
            this.e("Width");
        }
        get minWidth() {
            return this.cw;
        }
        set minWidth(a) {
            this.cw = a;
            this.e("MinWidth");
        }
        get isFromMarkup() {
            return this.cg;
        }
        set isFromMarkup(a) {
            this.cg = a;
            this.e("IsFromMarkup");
        }
        get isAutoGenerated() {
            return this.cc;
        }
        set isAutoGenerated(a) {
            this.cc = a;
            this.e("IsAutoGenerated");
        }
        get filter() {
            return this.b2;
        }
        set filter(a) {
            this.b2 = a;
            this.e("Filter");
        }
        get header() {
            return this.b8;
        }
        set header(a) {
            this.b8 = a;
            this.e("Header");
        }
        get isFilteringEnabled() {
            return this.cf;
        }
        set isFilteringEnabled(a) {
            this.cf = a;
            this.e("IsFilteringEnabled");
        }
        get isResizingEnabled() {
            return this.ci;
        }
        set isResizingEnabled(a) {
            this.ci = a;
            this.e("IsResizingEnabled");
        }
        get isHidden() {
            return this.ch;
        }
        set isHidden(a) {
            this.ch = a;
            this.e("IsHidden");
        }
        get shouldRemoveWhenHidden() {
            return this.cj;
        }
        set shouldRemoveWhenHidden(a) {
            this.cj = a;
            this.e("ShouldRemoveWhenHidden");
        }
        get sortDirection() {
            return this.dv;
        }
        set sortDirection(a) {
            this.dv = a;
            this.e("SortDirection");
        }
        get pinned() {
            return this.ds;
        }
        set pinned(a) {
            this.ds = a;
            this.e("Pinned");
        }
        get actualColumnOptionsIconAlignment() {
            return this.c9;
        }
        set actualColumnOptionsIconAlignment(a) {
            this.c9 = a;
            this.e("ActualColumnOptionsIconAlignment");
        }
        get columnOptionsIconAlignment() {
            return this.dh;
        }
        set columnOptionsIconAlignment(a) {
            this.dh = a;
            this.e("ColumnOptionsIconAlignment");
        }
        get actualColumnOptionsIconColor() {
            return this.db;
        }
        set actualColumnOptionsIconColor(a) {
            this.db = a;
            this.e("ActualColumnOptionsIconColor");
        }
        get columnOptionsIconColor() {
            return this.dj;
        }
        set columnOptionsIconColor(a) {
            this.dj = a;
            this.e("ColumnOptionsIconColor");
        }
        get columnOptionsIconBehavior() {
            return this.di;
        }
        set columnOptionsIconBehavior(a) {
            this.di = a;
            this.e("ColumnOptionsIconBehavior");
        }
        get actualColumnOptionsIconBehavior() {
            return this.da;
        }
        set actualColumnOptionsIconBehavior(a) {
            this.da = a;
            this.e("ActualColumnOptionsIconBehavior");
        }
        get actualIsColumnOptionsEnabled() {
            return this.cb;
        }
        set actualIsColumnOptionsEnabled(a) {
            this.cb = a;
            this.e("ActualIsColumnOptionsEnabled");
        }
        get isColumnOptionsEnabled() {
            return this.cd;
        }
        set isColumnOptionsEnabled(a) {
            this.cd = a;
            this.e("IsColumnOptionsEnabled");
        }
        get isEditable() {
            return this.ce;
        }
        set isEditable(a) {
            this.ce = a;
            this.e("IsEditable");
        }
        get deletedTextColor() {
            return this.dk;
        }
        set deletedTextColor(a) {
            this.dk = a;
            this.e("DeletedTextColor");
        }
        get actualDeletedTextColor() {
            return this.dc;
        }
        set actualDeletedTextColor(a) {
            this.dc = a;
            this.e("ActualDeletedTextColor");
        }
        get editOpacity() {
            return this.cv;
        }
        set editOpacity(a) {
            this.cv = a;
            this.e("EditOpacity");
        }
        get actualEditOpacity() {
            return this.ct;
        }
        set actualEditOpacity(a) {
            this.ct = a;
            this.e("ActualEditOpacity");
        }
        get editFontFamily() {
            return this.dl;
        }
        set editFontFamily(a) {
            this.dl = a;
            this.e("EditFontFamily");
        }
        get editFontSize() {
            return this.cu;
        }
        set editFontSize(a) {
            this.cu = a;
            this.e("EditFontSize");
        }
        get editFontStyle() {
            return this.dm;
        }
        set editFontStyle(a) {
            this.dm = a;
            this.e("EditFontStyle");
        }
        get editFontWeight() {
            return this.dn;
        }
        set editFontWeight(a) {
            this.dn = a;
            this.e("EditFontWeight");
        }
        get actualHeaderTextChangeRef() {
            return this.de;
        }
        set actualHeaderTextChangeRef(a) {
            this.de = a;
            this.e("ActualHeaderTextChangeRef");
        }
    }
    ColumnDescription.$t = /*@__PURE__*/ markType(ColumnDescription, 'ColumnDescription', DefinitionBaseDescription.$);
    ColumnDescription.__canMarshalByValue = true;
    return ColumnDescription;
})();
//# sourceMappingURL=ColumnDescription.js.map
