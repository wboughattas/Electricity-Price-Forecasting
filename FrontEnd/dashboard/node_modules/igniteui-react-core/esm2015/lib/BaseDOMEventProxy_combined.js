/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { EventProxy } from "./EventProxy";
import { Point_$type, runOn, markType, PointUtil, String_$type, Delegate_$type } from "./type";
import { Rect } from "./Rect";
import { MouseEventArgs } from "./MouseEventArgs";
import { Dictionary$2 } from "./Dictionary$2";
import { List$1 } from "./List$1";
/**
 * @hidden
 */
export let BaseDOMEventProxy = /*@__PURE__*/ (() => {
    class BaseDOMEventProxy extends EventProxy {
        constructor() {
            super(...arguments);
            this.by = null;
            this.bp = false;
            this.br = false;
            this.bx = null;
            this.bi = false;
            this.bv = 0;
            this.bw = 0;
            this.bt = 0;
            this.bu = 0;
            this.bz = 0;
            this.cx = null;
            this.cw = null;
            this.bh = false;
            this.b0 = -1;
            this.bm = false;
            this.bj = false;
            this.bg = false;
        }
        d() {
            let a = new DOMEventProxy(this.by, this.bx, this.br);
            a.aa = this.aa;
            a.al = this.al;
            return a;
        }
        static get bs() {
            return (BaseDOMEventProxy.bn || BaseDOMEventProxy.bo);
        }
        be(a) {
            return DOMEventProxy.cy(a);
        }
        bl(e_) {
            let pointerEvent_ = e_.originalEvent;
            let a = false;
            if (BaseDOMEventProxy.bo) {
                a = (pointerEvent_.pointerType == 'touch');
            }
            else {
                a = (pointerEvent_.pointerType == pointerEvent_.MSPOINTER_TYPE_TOUCH);
            }
            return a;
        }
        co(a) {
            if (!this.ac) {
                if (this.bk(a)) {
                    if (this.an == null || this.an(a)) {
                        a.preventDefault();
                    }
                }
            }
        }
        bk(e_) {
            return (e_.originalEvent.cancelable || e_.originalEvent.cancelable == undefined);
        }
        ck() {
            let source_ = this.by.getNativeElement();
            BaseDOMEventProxy.cn(source_);
        }
        static cn(source_) {
            if (BaseDOMEventProxy.bo) {
                source_.style.touchAction = 'none';
            }
            else {
                source_.style.msTouchAction = 'none';
            }
            source_.style.msUserSelect = 'none';
            source_.style.webkitTouchCallout = 'none';
            source_.style.webkitUserSelect = 'none';
            source_.style.khtmlUserSelect = 'none';
            source_.style.mozUserSelect = 'none';
            source_.style.userSelect = 'none';
        }
        static ch(source_) {
            if (BaseDOMEventProxy.bo) {
                source_.style.touchAction = 'auto';
            }
            else {
                source_.style.msTouchAction = 'auto';
            }
            source_.style.msUserSelect = 'auto';
            source_.style.webkitTouchCallout = 'none';
            source_.style.webkitUserSelect = 'auto';
            source_.style.khtmlUserSelect = 'auto';
            source_.style.mozUserSelect = 'auto';
            source_.style.userSelect = 'auto';
        }
        ci() {
            let source_ = this.by.getNativeElement();
            BaseDOMEventProxy.ch(source_);
        }
        ar() {
            super.ar();
            if (!this.ac) {
                this.ck();
            }
            else {
                this.ci();
            }
        }
        b5() {
            let ver_ = -1;
            let matchIE_ = /Trident\/([\d.]+)/;
            if ((matchIE_.exec(navigator.userAgent) != null)) {
                ver_ = (parseFloat(RegExp.$1));
            }
            return ver_;
        }
        b4() {
            let ver_ = -1;
            let matchIE_ = /Edge\/([\d.]+)/;
            if ((matchIE_.exec(navigator.userAgent) != null)) {
                ver_ = (parseFloat(RegExp.$1));
            }
            return ver_;
        }
        static cm(e_) {
            let a = BaseDOMEventProxy.b6 >= 6;
            let oe_ = e_.originalEvent;
            if ((((typeof e_.pageX == 'undefined')) || a) && oe_.clientX != null) {
                let od_;
                if ((e_.target !== undefined)) {
                    od_ = e_.target.ownerDocument;
                }
                else {
                    od_ = e_.originalEvent.target.ownerDocument;
                }
                let ed_ = od_ ? od_ : document;
                let doc_ = ed_.documentElement;
                let body_ = ed_.body;
                let clientX_ = oe_.clientX;
                let clientY_ = oe_.clientY;
                let scrollLeft_ = doc_ && doc_.scrollLeft || body_ && body_.scrollLeft || 0;
                let scrollTop_ = doc_ && doc_.scrollTop || body_ && body_.scrollTop || 0;
                let clientLeft_ = doc_ && doc_.clientLeft || body_ && body_.clientLeft || 0;
                let clientTop_ = doc_ && doc_.clientTop || body_ && body_.clientTop || 0;
                e_.pageX = clientX_ + (scrollLeft_ - clientLeft_);
                e_.pageY = clientY_ + (scrollTop_ - clientTop_);
            }
            if ((!e_.pageX)) {
                e_.pageX = e_.originalEvent.pageX;
            }
            if ((!e_.pageY)) {
                e_.pageY = e_.originalEvent.pageY;
            }
            if (((typeof e_.button == 'undefined')) && ((typeof oe_.button != 'undefined'))) {
                e_.button = oe_.button;
            }
        }
        static cy(a) {
            let b = BaseDOMEventProxy.b6 >= 6;
            let source_ = a.getNativeElement();
            let d_ = source_.ownerDocument;
            let doc_ = d_ ? d_.documentElement : null;
            let z_ = doc_ ? doc_.msContentZoomFactor : null;
            let body_ = doc_.body;
            if ((z_ && z_ > 1) || b) {
                let rect_ = source_.getBoundingClientRect();
                let x_ = (rect_.left);
                let y_ = (rect_.top);
                let scrollLeft_ = (doc_ && doc_.scrollLeft || body_ && body_.scrollLeft || 0);
                let scrollTop_ = (doc_ && doc_.scrollTop || body_ && body_.scrollTop || 0);
                let clientLeft_ = (doc_ && doc_.clientLeft || body_ && body_.clientLeft || 0);
                let clientTop_ = (doc_ && doc_.clientTop || body_ && body_.clientTop || 0);
                let c = x_ + scrollLeft_ - clientLeft_;
                let d = y_ + scrollTop_ - clientTop_;
                return new Rect(0, c, d, 0, 0);
            }
            else {
                let e = a.getOffset();
                return new Rect(0, e.left, e.top, 0, 0);
            }
        }
        get b2() {
            return this.bz;
        }
        set b2(a) {
            this.bz = a;
        }
        cr(a) {
            this.ao = a;
            BaseDOMEventProxy.cm(a);
            let b = BaseDOMEventProxy.cy(this.by);
            let c = 0;
            let d = 0;
            if (Rect.l_op_Inequality(this.bf, null)) {
                c = this.bf.left;
                d = this.bf.top;
            }
            this.bv = a.pageX - b.left;
            this.bw = a.pageY - b.top;
            this.bt = this.bv - c;
            this.bu = this.bw - d;
            this.cx = { $type: Point_$type, x: this.bv, y: this.bw };
            this.cw = { $type: Point_$type, x: this.bt, y: this.bu };
        }
        cs(e_) {
            this.ao = e_;
            BaseDOMEventProxy.cm(e_);
            if (BaseDOMEventProxy.bs) {
                let a = e_.pageX;
                let b = e_.pageY;
                let c = BaseDOMEventProxy.cy(this.by);
                this.bv = a - c.left;
                this.bw = b - c.top;
            }
            else {
                this.bz = 0;
                if (!e_.originalEvent.targetTouches || e_.originalEvent.targetTouches.length < 1) {
                    return;
                }
                ;
                this.bz = (e_.originalEvent.targetTouches.length);
                let d = (e_.originalEvent.targetTouches[0].pageX);
                let e = (e_.originalEvent.targetTouches[0].pageY);
                let f = BaseDOMEventProxy.cy(this.by);
                this.bv = d - f.left;
                this.bw = e - f.top;
            }
            let g = 0;
            let h = 0;
            if (Rect.l_op_Inequality(this.bf, null)) {
                g = this.bf.left;
                h = this.bf.top;
            }
            this.bt = this.bv - g;
            this.bu = this.bw - h;
            this.cx = { $type: Point_$type, x: this.bv, y: this.bw };
            this.cw = { $type: Point_$type, x: this.bt, y: this.bu };
        }
        cg(e_) {
            this.cq(e_);
            if (this.ab(this.cx, false, true)) {
                let deltaY_ = 0;
                let ev_ = e_;
                deltaY_ = (ev_.originalEvent ? ev_.originalEvent.deltaY : ev_.deltaY);
                let deltaX_ = 0;
                deltaX_ = (ev_.originalEvent ? ev_.originalEvent.deltaX : ev_.deltaX);
                let a = (ev_.originalEvent ? (ev_.originalEvent.deltaMode == 1) : (ev_.deltaMode == 1));
                if (a) {
                    deltaY_ = deltaY_ * 40;
                    deltaX_ = deltaX_ * 40;
                }
                let b = this.ag(this.cw, deltaY_);
                let c = this.ah(this.cw, deltaX_);
                if (b || c) {
                    this.co(e_);
                }
            }
        }
        ce(e_) {
            this.cq(e_);
            this.cr(e_);
            if (this.ab(this.cx, false, true)) {
                let ev_ = e_;
                let delta_ = 0;
                if (ev_.wheelDelta) {
                    delta_ = ev_.wheelDelta / 120;
                }
                ;
                if (ev_.originalEvent && ev_.originalEvent.wheelDelta) {
                    delta_ = ev_.originalEvent.wheelDelta / 120;
                }
                ;
                if (ev_.detail) {
                    delta_ = -ev_.detail / 3;
                }
                ;
                if (ev_.originalEvent && ev_.originalEvent.detail) {
                    delta_ = -ev_.originalEvent.detail / 3;
                }
                ;
                delta_ = delta_ / 10;
                let a = this.ag(this.cw, delta_);
                if (a) {
                    this.co(e_);
                }
            }
        }
        cl() {
            if (this.bh) {
                if (this.b0 == -1) {
                    this.b0 = this.bx.setTimeout(runOn(this, this.cj), 500);
                }
                else {
                    window.clearTimeout(this.b0);
                    this.b0 = -1;
                    this.b0 = this.bx.setTimeout(runOn(this, this.cj), 500);
                }
            }
        }
        b7() {
            this.bh = true;
            if (this.b0 != -1) {
                window.clearTimeout(this.b0);
                this.b0 = -1;
            }
        }
        cj() {
            this.bh = false;
        }
        get bq() {
            return this.bj;
        }
        set bq(a) {
            this.bj = a;
        }
        cc(a) {
            if (this.bj || this.bh) {
                return;
            }
            this.cr(a);
            if (this.bm) {
                this.bm = false;
                this.a3(this.cw);
            }
        }
        cd(a) {
            if (this.bj || this.bh) {
                return;
            }
            this.cr(a);
            this.cq(a);
            let b = new MouseEventArgs();
            b.position = this.cx;
            if (this.ab(this.cx, false, false)) {
                if (!this.bm) {
                    this.bm = true;
                    this.a2(this.cx);
                }
                this.a4(this.cx, true, false);
                this.at(this.cw, false);
            }
            else if (this.bm) {
                this.cc(a);
            }
        }
        cp(a) {
            this.by.focus(this.bp);
        }
        cb(a) {
            if (this.bj || this.bh) {
                return;
            }
            this.cp(a);
            this.cr(a);
            this.cq(a);
            if (this.ab(this.cx, false, false)) {
                this.bg = true;
                this.a1(this.cx);
                this.au(this.cw, false);
                this.co(a);
            }
        }
        ct(a) {
            if (this.bj || this.bh) {
                return;
            }
            if (this.bg) {
                this.cf(a);
            }
        }
        cf(a) {
            if (this.bj || this.bh) {
                return;
            }
            this.cq(a);
            if (PointUtil.equals(this.cx, null) || PointUtil.equals(this.cw, null)) {
                this.cr(a);
            }
            let b = this.ab(this.cx, false, false) || this.bg || this.bm;
            this.bg = false;
            this.a5(this.cx);
            this.as(this.cw, false);
            if (b) {
                this.co(a);
            }
        }
        b8(a) {
            this.b9(a, true);
        }
        ca(a) {
            this.b9(a, false);
        }
        cv(a) {
            return BaseDOMEventProxy.cu(a);
        }
        static cu(a) {
            let b;
            switch (a.which) {
                case 33:
                    b = 10;
                    break;
                case 34:
                    b = 11;
                    break;
                case 36:
                    b = 13;
                    break;
                case 37:
                    b = 14;
                    break;
                case 38:
                    b = 15;
                    break;
                case 39:
                    b = 16;
                    break;
                case 40:
                    b = 17;
                    break;
                case 9:
                    b = 2;
                    break;
                case 32:
                    b = 9;
                    break;
                case 13:
                    b = 3;
                    break;
                case 27:
                    b = 8;
                    break;
                case 16:
                    b = 4;
                    break;
                case 17:
                    b = 5;
                    break;
                case 18:
                    b = 6;
                    break;
                case 8:
                    b = 1;
                    break;
                case 35:
                    b = 12;
                    break;
                case 45:
                    b = 18;
                    break;
                case 46:
                    b = 19;
                    break;
                case 106:
                    b = 78;
                    break;
                case 107:
                    b = 79;
                    break;
                case 109:
                    b = 80;
                    break;
                case 110:
                    b = 81;
                    break;
                case 111:
                    b = 82;
                    break;
                case 220:
                    b = 85;
                    break;
                case 192:
                    b = 86;
                    break;
                case 191:
                    b = 84;
                    break;
                case 186:
                    b = 83;
                    break;
                case 189:
                    b = 88;
                    break;
                case 187:
                    b = 87;
                    break;
                default:
                    if (112 <= a.which && a.which <= 123) {
                        b = (56 + a.which - 112);
                    }
                    else if (65 <= a.which && a.which <= 90) {
                        b = (30 + a.which - 65);
                    }
                    else if (48 <= a.which && a.which <= 57) {
                        b = (20 + a.which - 48);
                    }
                    else if (96 <= a.which && a.which <= 105) {
                        b = (68 + a.which - 96);
                    }
                    else {
                        b = 0;
                    }
                    break;
            }
            return b;
        }
        b9(a, b) {
            let c = this.cv(a);
            let d = c != 0;
            this.cq(a);
            if (d) {
                let e = false;
                if (b) {
                    e = this.ae(c);
                }
                else {
                    e = this.af(c);
                }
                if (e) {
                    this.co(a);
                }
            }
        }
        cq(a) {
            this.ao = a;
            this.bc = 0;
            if (a.shiftKey) {
                this.bc = this.bc | 4;
            }
            if (a.altKey) {
                this.bc = this.bc | 1;
            }
            if (a.ctrlKey) {
                this.bc = this.bc | 2;
            }
            this.ai = a.button == 2;
        }
        bd() {
            let a = BaseDOMEventProxy.cy(this.by);
            let b = a.left;
            let c = a.top;
            return { $type: Point_$type, x: b, y: c };
        }
    }
    BaseDOMEventProxy.$t = /*@__PURE__*/ markType(BaseDOMEventProxy, 'BaseDOMEventProxy', EventProxy.$);
    BaseDOMEventProxy.bn = false;
    BaseDOMEventProxy.bo = false;
    BaseDOMEventProxy.b6 = 0;
    BaseDOMEventProxy.b3 = 0;
    return BaseDOMEventProxy;
})();
/**
 * @hidden
 */
export let DOMEventProxy = /*@__PURE__*/ (() => {
    class DOMEventProxy extends BaseDOMEventProxy {
        constructor(a, b, c) {
            super();
            this.c9 = 0;
            this.da = "";
            this.c0 = false;
            this.c6 = null;
            this.c2 = new Dictionary$2(String_$type, List$1.$.specialize(Delegate_$type), 0);
            this.dx = null;
            this.c7 = -1;
            this.dy = null;
            this.c4 = 0;
            this.c5 = 0;
            this.c3 = 5;
            this.cz = false;
            this.dw = null;
            this.br = c;
            this.bx = b;
            this.al = (d) => true;
            this.aa = false;
            DOMEventProxy.c8++;
            this.c9 = DOMEventProxy.c8;
            this.da = ".DOMProxy" + this.c9.toString();
            this.bc = 0;
            this.by = a;
            BaseDOMEventProxy.bn = false;
            try {
                BaseDOMEventProxy.bn = (window.navigator.msPointerEnabled && MSGesture !== undefined);
            }
            catch (d) {
            }
            BaseDOMEventProxy.bo = false;
            try {
                BaseDOMEventProxy.bo = (window.PointerEvent || window.navigator.pointerEnabled);
            }
            catch (e) {
            }
            BaseDOMEventProxy.b6 = this.b5();
            BaseDOMEventProxy.b3 = this.b4();
            this.ap(this.by, "");
            this.ak = (f) => true;
        }
        db(a, b, c) {
        }
        ap(a, b) {
            let c = a;
            let d = this.da + b;
            if (!this.bx.supportsDOMEvents()) {
                return;
            }
            let e = new List$1(Delegate_$type, 0);
            this.c2.addItem(d, e);
            this.db(a, b, e);
            if (!BaseDOMEventProxy.bs) {
                e.add(c.listen("mousemove", runOn(this, this.cd)));
                e.add(c.listen("mouseleave", runOn(this, this.cc)));
                e.add(c.listen("mousedown", runOn(this, this.cb)));
                e.add(c.listen("mouseup", runOn(this, this.cf)));
                e.add(this.bx.globalListen("window", "mouseup", runOn(this, this.ct)));
            }
            e.add(c.listen("keydown", runOn(this, this.b8)));
            e.add(c.listen("keyup", runOn(this, this.ca)));
            let source_ = this.by.getNativeElement();
            if (!this.ac) {
                BaseDOMEventProxy.cn(source_);
            }
            if (BaseDOMEventProxy.bs) {
                let f = this.by.getNativeElement();
                if ((window.MSGesture !== undefined)) {
                    let g = (new MSGesture());
                    g.target = f;
                    this.c6 = g;
                    e.add(c.listen("MSGestureStart", runOn(this, this.de)));
                    e.add(c.listen("MSGestureChange", runOn(this, this.dc)));
                    e.add(c.listen("MSGestureEnd", runOn(this, this.dd)));
                }
                if (BaseDOMEventProxy.bo) {
                    e.add(c.listen("pointerdown", runOn(this, this.dh)));
                    e.add(c.listen("pointerup", runOn(this, this.dk)));
                    e.add(c.listen("pointercancel", runOn(this, this.dg)));
                    e.add(c.listen("pointermove", runOn(this, this.di)));
                    e.add(c.listen("pointerout", runOn(this, this.dj)));
                    e.add(c.listen("lostpointercapture", runOn(this, this.df)));
                }
                else {
                    e.add(c.listen("MSPointerDown", runOn(this, this.dh)));
                    e.add(c.listen("MSPointerUp", runOn(this, this.dk)));
                    e.add(c.listen("MSPointerCancel", runOn(this, this.dg)));
                    e.add(c.listen("MSPointerMove", runOn(this, this.di)));
                    e.add(c.listen("MSPointerOut", runOn(this, this.dj)));
                    e.add(c.listen("MSLostPointerCapture", runOn(this, this.df)));
                }
            }
            else {
                e.add(c.listen("gesturestart", runOn(this, this.de)));
                e.add(c.listen("gesturechange", runOn(this, this.dc)));
                e.add(c.listen("gestureend", runOn(this, this.dd)));
                e.add(c.listen("touchstart", runOn(this, this.dn)));
                e.add(c.listen("touchmove", runOn(this, this.dm)));
                e.add(c.listen("touchend", runOn(this, this.dl)));
            }
            if (this.br) {
                e.add(c.listen("wheel", runOn(this, this.cg)));
            }
            else {
                e.add(c.listen("DOMMouseScroll", runOn(this, this.ce)));
                e.add(c.listen("mousewheel", runOn(this, this.ce)));
            }
        }
        dk(e_) {
            let a = this.bl(e_);
            if (a) {
                this.b2 = this.b2 - 1;
                if (this.b2 < 0) {
                    this.b2 = 0;
                }
            }
            if (this.b2 < 2 && this.c0 && a) {
                this.c0 = false;
                let b = (e_.originalEvent.scale);
                this.az(this.cw, b);
            }
            else {
                if (a) {
                    this.dl(e_);
                }
                else {
                    this.cf(e_);
                }
            }
        }
        df(e_) {
            let a = this.bl(e_);
            if (a) {
                this.b2--;
                if (this.b2 < 0) {
                    this.b2 = 0;
                }
            }
            if (this.b2 < 2 && this.c0 && a) {
                this.c0 = false;
                let b = (e_.originalEvent.scale);
                this.az(this.cw, b);
            }
        }
        dg(e_) {
            let a = this.bl(e_);
            if (a) {
                this.b2--;
                if (this.b2 < 0) {
                    this.b2 = 0;
                }
            }
            if (this.b2 < 2 && this.c0 && a) {
                this.c0 = false;
                let b = (e_.originalEvent.scale);
                this.az(this.cw, b);
            }
        }
        dh(e_) {
            let a = this.bl(e_);
            if (this.c6 != null && a) {
                this.b2++;
                this.c6.addPointer((e_.originalEvent.pointerId));
            }
            let eventSource_ = this.by.getNativeElement();
            if (BaseDOMEventProxy.bo) {
                eventSource_.setPointerCapture(e_.originalEvent.pointerId);
            }
            else {
                eventSource_.msSetPointerCapture(e_.originalEvent.pointerId);
            }
            if (this.b2 > 1 && !this.c0 && a) {
                this.c0 = true;
                this.cs(e_);
                let b = (e_.originalEvent.scale);
                this.a7(this.cw, b);
            }
            else {
                if (a) {
                    this.dn(e_);
                }
                else {
                    this.cb(e_);
                }
            }
        }
        di(e_) {
            let a = this.bl(e_);
            if (this.c0) {
                return;
            }
            if (a) {
                this.dm(e_);
            }
            else {
                this.cd(e_);
            }
        }
        dj(e_) {
            let a = this.bl(e_);
            if (this.c0) {
                return;
            }
            if (a) {
            }
            else {
                this.cc(e_);
            }
        }
        de(e_) {
            this.bm = true;
            this.cq(e_);
            this.cs(e_);
            this.dq();
            if (this.ab(this.cx, true, false)) {
                this.co(e_);
                if (BaseDOMEventProxy.bs && this.b2 < 2) {
                    return;
                }
                let a = (e_.originalEvent.scale);
                this.a7(this.cw, a);
            }
        }
        dc(e_) {
            this.bm = true;
            this.cq(e_);
            this.cs(e_);
            if (this.ab(this.cx, true, false)) {
                this.co(e_);
                if (BaseDOMEventProxy.bs && this.b2 < 2) {
                    return;
                }
                let a = (e_.originalEvent.scale);
                this.a6(this.cw, a);
            }
        }
        dd(e_) {
            this.co(e_);
            let a = (e_.originalEvent.scale);
            this.bm = false;
            this.cq(e_);
            this.cs(e_);
            if (!BaseDOMEventProxy.bs || this.c0) {
                this.az(this.cw, a);
            }
        }
        dn(e_) {
            this.bm = true;
            this.cq(e_);
            this.cs(e_);
            this.dx = this.cw;
            if (this.ab(this.cx, true, false)) {
                if (!this.aa) {
                    this.co(e_);
                }
                else {
                    this.bq = true;
                }
                this.a4(this.cx, false, true);
                this.a1(this.cx);
                this.au(this.cw, true);
                this.dt();
            }
        }
        dt() {
            if (this.c7 == -1) {
                this.c4 = this.cx.x;
                this.c5 = this.cx.y;
                this.c7 = this.bx.setTimeout(runOn(this, this.dr), 1500);
            }
        }
        dq() {
            if (Math.abs(this.c4 - this.cx.x) > this.c3 || Math.abs(this.c5 - this.cx.y) > this.c3) {
                this.du();
            }
        }
        du() {
            if (this.c7 != -1) {
                window.clearTimeout(this.c7);
                this.c7 = -1;
            }
        }
        dr() {
            this.c7 = -1;
            if (this.bq) {
                this.bq = false;
                this.b7();
            }
            this.a0(this.cw);
        }
        dm(a) {
            this.bm = true;
            this.cq(a);
            this.cs(a);
            if (this.bq) {
                if (this.ab(this.cx, true, false) && this.c1()) {
                    this.bq = false;
                    this.b7();
                }
            }
            this.dq();
            this.dv();
            if (this.ab(this.cx, true, false) && this.b2 == 1 && !this.bq) {
                this.co(a);
                if (!this.cz) {
                    this.cz = true;
                    this.dw = this.cw;
                    this.ay(this.dw);
                }
                else {
                    this.a4(this.cx, true, true);
                    this.at(this.cw, true);
                    this.ax(this.cw);
                }
            }
        }
        c1() {
            let a = { $type: Point_$type, x: this.dx.x - this.cw.x, y: this.dx.y - this.cw.y };
            if (Math.abs(a.x) < 2 && Math.abs(a.y) < 2) {
                return false;
            }
            if (Math.abs(a.x) > Math.abs(a.y)) {
                a.y = 0;
            }
            if (Math.abs(a.y) > Math.abs(a.x)) {
                a.x = 0;
            }
            return this.al(a);
        }
        dl(a) {
            this.bm = false;
            this.cq(a);
            this.cs(a);
            this.du();
            if (this.bq) {
                this.bq = false;
                this.b7();
            }
            this.co(a);
            this.a4(this.cx, false, true);
            this.a5(this.cx);
            if (this.b2 == 0) {
                this.ds(this.cx);
                this.cl();
            }
            if (this.cz && this.b2 == 0) {
                this.cz = false;
                this.dw = null;
                this.aw(this.cw);
                this.cl();
            }
            this.as(this.cw, true);
        }
        ds(a) {
            if (Rect.l_op_Equality(this.dy, null)) {
                this.dy = new Rect(0, a.x - 50, a.y - 50, 100, 100);
                this.bx.setTimeout(runOn(this, this.dv), 500);
            }
            else {
                if (a.x >= this.dy.x && a.x <= this.dy.right && a.y >= this.dy.y && a.y <= this.dy.bottom) {
                    this.dv();
                    this.av(a);
                }
            }
        }
        dv() {
            this.dy = null;
        }
        dp(a) {
            if (this.c2.containsKey(a)) {
                let b = this.c2.item(a);
                this.c2.removeItem(a);
                for (let c = 0; c < b.count; c++) {
                    b._inner[c]();
                }
                b.clear();
            }
        }
        bb(a, b) {
            let c = a;
            let d = this.da + b;
            this.dp(d);
        }
        aq() {
            if (this.by == null) {
                return;
            }
            this.dp(this.da);
            this.by = null;
        }
    }
    DOMEventProxy.$t = /*@__PURE__*/ markType(DOMEventProxy, 'DOMEventProxy', BaseDOMEventProxy.$);
    DOMEventProxy.c8 = 0;
    return DOMEventProxy;
})();
//# sourceMappingURL=BaseDOMEventProxy_combined.js.map
