/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { GridColumnOptionsBaseDescription } from "./GridColumnOptionsBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let GridColumnOptionsDescription = /*@__PURE__*/ (() => {
    class GridColumnOptionsDescription extends GridColumnOptionsBaseDescription {
        constructor() {
            super();
            this.bi = null;
            this.a4 = 0;
            this.bj = null;
            this.bk = null;
            this.a7 = 0;
            this.a9 = 0;
            this.a8 = 0;
            this.a6 = 0;
            this.as = false;
            this.aw = false;
            this.au = false;
            this.av = false;
            this.at = false;
            this.ar = false;
            this.aq = false;
            this.bx = null;
            this.bv = null;
            this.bw = null;
            this.bp = null;
            this.bq = null;
            this.br = null;
            this.bs = null;
            this.bt = null;
            this.bu = null;
            this.bf = null;
            this.bg = null;
            this.bh = null;
            this.bn = null;
            this.be = null;
            this.bo = null;
            this.bl = null;
            this.bm = null;
        }
        get_type() {
            return "GridColumnOptions";
        }
        get columnNameFontFamily() {
            return this.bi;
        }
        set columnNameFontFamily(a) {
            this.bi = a;
            this.e("ColumnNameFontFamily");
        }
        get columnNameFontSize() {
            return this.a4;
        }
        set columnNameFontSize(a) {
            this.a4 = a;
            this.e("ColumnNameFontSize");
        }
        get columnNameFontStyle() {
            return this.bj;
        }
        set columnNameFontStyle(a) {
            this.bj = a;
            this.e("ColumnNameFontStyle");
        }
        get columnNameFontWeight() {
            return this.bk;
        }
        set columnNameFontWeight(a) {
            this.bk = a;
            this.e("ColumnNameFontWeight");
        }
        get paddingLeft() {
            return this.a7;
        }
        set paddingLeft(a) {
            this.a7 = a;
            this.e("PaddingLeft");
        }
        get paddingTop() {
            return this.a9;
        }
        set paddingTop(a) {
            this.a9 = a;
            this.e("PaddingTop");
        }
        get paddingRight() {
            return this.a8;
        }
        set paddingRight(a) {
            this.a8 = a;
            this.e("PaddingRight");
        }
        get paddingBottom() {
            return this.a6;
        }
        set paddingBottom(a) {
            this.a6 = a;
            this.e("PaddingBottom");
        }
        get headerVisible() {
            return this.as;
        }
        set headerVisible(a) {
            this.as = a;
            this.e("HeaderVisible");
        }
        get sortOptionsVisible() {
            return this.aw;
        }
        set sortOptionsVisible(a) {
            this.aw = a;
            this.e("SortOptionsVisible");
        }
        get moveOptionsVisible() {
            return this.au;
        }
        set moveOptionsVisible(a) {
            this.au = a;
            this.e("MoveOptionsVisible");
        }
        get pinOptionsVisible() {
            return this.av;
        }
        set pinOptionsVisible(a) {
            this.av = a;
            this.e("PinOptionsVisible");
        }
        get hideOptionsVisible() {
            return this.at;
        }
        set hideOptionsVisible(a) {
            this.at = a;
            this.e("HideOptionsVisible");
        }
        get groupOptionsVisible() {
            return this.ar;
        }
        set groupOptionsVisible(a) {
            this.ar = a;
            this.e("GroupOptionsVisible");
        }
        get filterOptionsVisible() {
            return this.aq;
        }
        set filterOptionsVisible(a) {
            this.aq = a;
            this.e("FilterOptionsVisible");
        }
        get sortHeaderCaption() {
            return this.bx;
        }
        set sortHeaderCaption(a) {
            this.bx = a;
            this.e("SortHeaderCaption");
        }
        get sortAscendingCaption() {
            return this.bv;
        }
        set sortAscendingCaption(a) {
            this.bv = a;
            this.e("SortAscendingCaption");
        }
        get sortDescendingCaption() {
            return this.bw;
        }
        set sortDescendingCaption(a) {
            this.bw = a;
            this.e("SortDescendingCaption");
        }
        get moveHeaderCaption() {
            return this.bp;
        }
        set moveHeaderCaption(a) {
            this.bp = a;
            this.e("MoveHeaderCaption");
        }
        get moveLeftCaption() {
            return this.bq;
        }
        set moveLeftCaption(a) {
            this.bq = a;
            this.e("MoveLeftCaption");
        }
        get moveRightCaption() {
            return this.br;
        }
        set moveRightCaption(a) {
            this.br = a;
            this.e("MoveRightCaption");
        }
        get pinHeaderCaption() {
            return this.bs;
        }
        set pinHeaderCaption(a) {
            this.bs = a;
            this.e("PinHeaderCaption");
        }
        get pinLeftCaption() {
            return this.bt;
        }
        set pinLeftCaption(a) {
            this.bt = a;
            this.e("PinLeftCaption");
        }
        get pinRightCaption() {
            return this.bu;
        }
        set pinRightCaption(a) {
            this.bu = a;
            this.e("PinRightCaption");
        }
        get applyFiltersButtonCaption() {
            return this.bf;
        }
        set applyFiltersButtonCaption(a) {
            this.bf = a;
            this.e("ApplyFiltersButtonCaption");
        }
        get cancelFiltersButtonCaption() {
            return this.bg;
        }
        set cancelFiltersButtonCaption(a) {
            this.bg = a;
            this.e("CancelFiltersButtonCaption");
        }
        get clearColumnFiltersCaption() {
            return this.bh;
        }
        set clearColumnFiltersCaption(a) {
            this.bh = a;
            this.e("ClearColumnFiltersCaption");
        }
        get filterListDensity() {
            return this.bn;
        }
        set filterListDensity(a) {
            this.bn = a;
            this.e("FilterListDensity");
        }
        get actualFilterListDensity() {
            return this.be;
        }
        set actualFilterListDensity(a) {
            this.be = a;
            this.e("ActualFilterListDensity");
        }
        get filterListPlaceholderText() {
            return this.bo;
        }
        set filterListPlaceholderText(a) {
            this.bo = a;
            this.e("FilterListPlaceholderText");
        }
        get filterApplyButtonClickRef() {
            return this.bl;
        }
        set filterApplyButtonClickRef(a) {
            this.bl = a;
            this.e("FilterApplyButtonClickRef");
        }
        get filterCancelButtonClickRef() {
            return this.bm;
        }
        set filterCancelButtonClickRef(a) {
            this.bm = a;
            this.e("FilterCancelButtonClickRef");
        }
    }
    GridColumnOptionsDescription.$t = /*@__PURE__*/ markType(GridColumnOptionsDescription, 'GridColumnOptionsDescription', GridColumnOptionsBaseDescription.$);
    return GridColumnOptionsDescription;
})();
//# sourceMappingURL=GridColumnOptionsDescription.js.map
