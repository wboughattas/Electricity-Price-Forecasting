/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { GeographicMapImageryDescription } from "./GeographicMapImageryDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let BingMapsMapImageryDescription = /*@__PURE__*/ (() => {
    class BingMapsMapImageryDescription extends GeographicMapImageryDescription {
        constructor() {
            super();
            this.ad = false;
            this.ac = false;
            this.am = null;
            this.ah = null;
            this.z = null;
            this.y = null;
            this.aj = null;
            this.ag = null;
            this.ak = null;
            this.ai = null;
            this.al = null;
        }
        get_type() {
            return "BingMapsMapImagery";
        }
        get isInitialized() {
            return this.ad;
        }
        set isInitialized(a) {
            this.ad = a;
            this.e("IsInitialized");
        }
        get isDeferredLoad() {
            return this.ac;
        }
        set isDeferredLoad(a) {
            this.ac = a;
            this.e("IsDeferredLoad");
        }
        get tilePath() {
            return this.am;
        }
        set tilePath(a) {
            this.am = a;
            this.e("TilePath");
        }
        get actualTilePath() {
            return this.ah;
        }
        set actualTilePath(a) {
            this.ah = a;
            this.e("ActualTilePath");
        }
        get subDomains() {
            return this.z;
        }
        set subDomains(a) {
            this.z = a;
            this.e("SubDomains");
        }
        get actualSubDomains() {
            return this.y;
        }
        set actualSubDomains(a) {
            this.y = a;
            this.e("ActualSubDomains");
        }
        get bingImageryRestUri() {
            return this.aj;
        }
        set bingImageryRestUri(a) {
            this.aj = a;
            this.e("BingImageryRestUri");
        }
        get actualBingImageryRestUri() {
            return this.ag;
        }
        set actualBingImageryRestUri(a) {
            this.ag = a;
            this.e("ActualBingImageryRestUri");
        }
        get cultureName() {
            return this.ak;
        }
        set cultureName(a) {
            this.ak = a;
            this.e("CultureName");
        }
        get apiKey() {
            return this.ai;
        }
        set apiKey(a) {
            this.ai = a;
            this.e("ApiKey");
        }
        get imageryStyle() {
            return this.al;
        }
        set imageryStyle(a) {
            this.al = a;
            this.e("ImageryStyle");
        }
    }
    BingMapsMapImageryDescription.$t = /*@__PURE__*/ markType(BingMapsMapImageryDescription, 'BingMapsMapImageryDescription', GeographicMapImageryDescription.$);
    return BingMapsMapImageryDescription;
})();
//# sourceMappingURL=BingMapsMapImageryDescription.js.map
