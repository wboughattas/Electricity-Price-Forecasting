/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { DefinitionBaseDescription } from "./DefinitionBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let SummaryRowDescription = /*@__PURE__*/ (() => {
    class SummaryRowDescription extends DefinitionBaseDescription {
        constructor() {
            super();
            this.ce = null;
            this.cc = null;
            this.ci = null;
            this.cd = null;
            this.cf = null;
            this.b2 = 0;
            this.cg = null;
            this.ch = null;
            this.b5 = 0;
            this.b7 = 0;
            this.b6 = 0;
            this.b4 = 0;
        }
        get_type() {
            return "SummaryRow";
        }
        get selectedBackground() {
            return this.ce;
        }
        set selectedBackground(a) {
            this.ce = a;
            this.e("SelectedBackground");
        }
        get actualSelectedBackground() {
            return this.cc;
        }
        set actualSelectedBackground(a) {
            this.cc = a;
            this.e("ActualSelectedBackground");
        }
        get summaryLabelTextColor() {
            return this.ci;
        }
        set summaryLabelTextColor(a) {
            this.ci = a;
            this.e("SummaryLabelTextColor");
        }
        get actualSummaryLabelTextColor() {
            return this.cd;
        }
        set actualSummaryLabelTextColor(a) {
            this.cd = a;
            this.e("ActualSummaryLabelTextColor");
        }
        get summaryLabelFontFamily() {
            return this.cf;
        }
        set summaryLabelFontFamily(a) {
            this.cf = a;
            this.e("SummaryLabelFontFamily");
        }
        get summaryLabelFontSize() {
            return this.b2;
        }
        set summaryLabelFontSize(a) {
            this.b2 = a;
            this.e("SummaryLabelFontSize");
        }
        get summaryLabelFontStyle() {
            return this.cg;
        }
        set summaryLabelFontStyle(a) {
            this.cg = a;
            this.e("SummaryLabelFontStyle");
        }
        get summaryLabelFontWeight() {
            return this.ch;
        }
        set summaryLabelFontWeight(a) {
            this.ch = a;
            this.e("SummaryLabelFontWeight");
        }
        get paddingLeft() {
            return this.b5;
        }
        set paddingLeft(a) {
            this.b5 = a;
            this.e("PaddingLeft");
        }
        get paddingTop() {
            return this.b7;
        }
        set paddingTop(a) {
            this.b7 = a;
            this.e("PaddingTop");
        }
        get paddingRight() {
            return this.b6;
        }
        set paddingRight(a) {
            this.b6 = a;
            this.e("PaddingRight");
        }
        get paddingBottom() {
            return this.b4;
        }
        set paddingBottom(a) {
            this.b4 = a;
            this.e("PaddingBottom");
        }
    }
    SummaryRowDescription.$t = /*@__PURE__*/ markType(SummaryRowDescription, 'SummaryRowDescription', DefinitionBaseDescription.$);
    return SummaryRowDescription;
})();
//# sourceMappingURL=SummaryRowDescription.js.map
