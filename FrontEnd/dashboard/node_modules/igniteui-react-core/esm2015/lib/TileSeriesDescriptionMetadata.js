/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GeographicMapImageryDescriptionMetadata } from "./GeographicMapImageryDescriptionMetadata";
import { ShapeSeriesBaseDescriptionMetadata } from "./ShapeSeriesBaseDescriptionMetadata";
import { TileSeriesDescription } from "./TileSeriesDescription";
/**
 * @hidden
 */
export let TileSeriesDescriptionMetadata = /*@__PURE__*/ (() => {
    class TileSeriesDescriptionMetadata extends Base {
        static b(a) {
            if (TileSeriesDescriptionMetadata.a == null) {
                TileSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                TileSeriesDescriptionMetadata.c(a, TileSeriesDescriptionMetadata.a);
                GeographicMapImageryDescriptionMetadata.d(a);
            }
        }
        static c(a, b) {
            ShapeSeriesBaseDescriptionMetadata.c(a, b);
            b.item("TileImagery", "ExportedType:GeographicMapImagery");
        }
        static d(a) {
            TileSeriesDescriptionMetadata.b(a);
            a.n("TileSeries", () => new TileSeriesDescription());
            a.m("TileSeries", TileSeriesDescriptionMetadata.a);
        }
    }
    TileSeriesDescriptionMetadata.$t = /*@__PURE__*/ markType(TileSeriesDescriptionMetadata, 'TileSeriesDescriptionMetadata');
    TileSeriesDescriptionMetadata.a = null;
    return TileSeriesDescriptionMetadata;
})();
//# sourceMappingURL=TileSeriesDescriptionMetadata.js.map
