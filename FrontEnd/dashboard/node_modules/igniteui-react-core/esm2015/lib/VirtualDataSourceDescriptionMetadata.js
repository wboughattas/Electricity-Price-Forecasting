/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { BaseDataSourceDescriptionMetadata } from "./BaseDataSourceDescriptionMetadata";
import { VirtualDataSourceDescription } from "./VirtualDataSourceDescription";
/**
 * @hidden
 */
export let VirtualDataSourceDescriptionMetadata = /*@__PURE__*/ (() => {
    class VirtualDataSourceDescriptionMetadata extends Base {
        static b(a) {
            if (VirtualDataSourceDescriptionMetadata.a == null) {
                VirtualDataSourceDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                VirtualDataSourceDescriptionMetadata.c(a, VirtualDataSourceDescriptionMetadata.a);
            }
        }
        static c(a, b) {
            BaseDataSourceDescriptionMetadata.c(a, b);
            b.item("IsSectionCollapsable", "Boolean");
            b.item("IsSectionExpandedDefault", "Boolean");
            b.item("PageSizeRequested", "Number:int");
            b.item("MaxCachedPages", "Number:int");
            b.item("ActualPageSize", "Number:int");
            b.item("ConcurrencyTag", "String");
            b.item("IsBatchingEnabled", "Boolean");
        }
        static d(a) {
            VirtualDataSourceDescriptionMetadata.b(a);
            a.n("VirtualDataSource", () => new VirtualDataSourceDescription());
            a.m("VirtualDataSource", VirtualDataSourceDescriptionMetadata.a);
        }
    }
    VirtualDataSourceDescriptionMetadata.$t = /*@__PURE__*/ markType(VirtualDataSourceDescriptionMetadata, 'VirtualDataSourceDescriptionMetadata');
    VirtualDataSourceDescriptionMetadata.a = null;
    return VirtualDataSourceDescriptionMetadata;
})();
//# sourceMappingURL=VirtualDataSourceDescriptionMetadata.js.map
