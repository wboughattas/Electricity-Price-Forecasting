/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { InputGroupDescription } from "./InputGroupDescription";
/**
 * @hidden
 */
export let InputGroupDescriptionMetadata = /*@__PURE__*/ (() => {
    class InputGroupDescriptionMetadata extends Base {
        static b(a) {
            if (InputGroupDescriptionMetadata.a == null) {
                InputGroupDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                InputGroupDescriptionMetadata.c(a, InputGroupDescriptionMetadata.a);
            }
        }
        static c(a, b) {
            b.item("DisplayType", "ExportedType:string:InputGroupDisplayType");
            b.item("Density", "ExportedType:string:ControlDisplayDensity");
            b.item("ActualDensity", "ExportedType:string:ControlDisplayDensity");
            b.item("BaseTheme", "ExportedType:string:BaseControlTheme");
            b.item("ActualBorderColor", "Brush");
            b.item("ActualFocusBorderColor", "Brush");
            b.item("ActualBorderWidth", "Number:double");
            b.item("ActualFocusBorderWidth", "Number:double");
            b.item("ActualCornerRadiusBottomRight", "(w:ActualCornerRadius.BottomRight,wf:ActualCornerRadiusBottomRight)Number:double");
            b.item("ActualCornerRadiusBottomLeft", "(w:ActualCornerRadius.BottomLeft,wf:ActualCornerRadiusBottomLeft)Number:double");
            b.item("ActualCornerRadiusTopLeft", "(w:ActualCornerRadius.TopLeft,wf:ActualCornerRadiusTopLeft)Number:double");
            b.item("ActualCornerRadiusTopRight", "(w:ActualCornerRadius.TopRight,wf:ActualCornerRadiusTopRight)Number:double");
            b.item("ActualContentPaddingBottom", "(w:ActualContentPadding.Bottom,wf:ActualContentPaddingBottom)Number:double");
            b.item("ActualContentPaddingLeft", "(w:ActualContentPadding.Left,wf:ActualContentPaddingLeft)Number:double");
            b.item("ActualContentPaddingRight", "(w:ActualContentPadding.Right,wf:ActualContentPaddingRight)Number:double");
            b.item("ActualContentPaddingTop", "(w:ActualContentPadding.Top,wf:ActualContentPaddingTop)Number:double");
            b.item("ActualUnderlineWidth", "Number:double");
            b.item("ActualUnderlineRippleWidth", "Number:double");
            b.item("ActualHoverUnderlineWidth", "Number:double");
            b.item("ActualUnderlineColor", "Brush");
            b.item("ActualUnderlineRippleColor", "Brush");
            b.item("ActualHoverUnderlineColor", "Brush");
            b.item("ActualFocusUnderlineColor", "Brush");
            b.item("ActualUnderlineOpacity", "Number:double");
            b.item("ActualHoverUnderlineOpacity", "Number:double");
            b.item("ActualFocusUnderlineOpacity", "Number:double");
            b.item("ActualFocusUnderlineRippleOpacity", "Number:double");
            b.item("ActualUnderlineRippleOpacity", "Number:double");
            b.item("ActualBackgroundColor", "Brush");
            b.item("BorderWidth", "Number:double");
            b.item("FocusBorderWidth", "Number:double");
            b.item("BorderColor", "Brush");
            b.item("CornerRadiusBottomRight", "(w:CornerRadius.BottomRight,wf:CornerRadiusBottomRight)Number:double");
            b.item("CornerRadiusBottomLeft", "(w:CornerRadius.BottomLeft,wf:CornerRadiusBottomLeft)Number:double");
            b.item("CornerRadiusTopLeft", "(w:CornerRadius.TopLeft,wf:CornerRadiusTopLeft)Number:double");
            b.item("CornerRadiusTopRight", "(w:CornerRadius.TopRight,wf:CornerRadiusTopRight)Number:double");
            b.item("ContentPaddingBottom", "(w:ContentPadding.Bottom,wf:ContentPaddingBottom)Number:double");
            b.item("ContentPaddingLeft", "(w:ContentPadding.Left,wf:ContentPaddingLeft)Number:double");
            b.item("ContentPaddingRight", "(w:ContentPadding.Right,wf:ContentPaddingRight)Number:double");
            b.item("ContentPaddingTop", "(w:ContentPadding.Top,wf:ContentPaddingTop)Number:double");
            b.item("UnderlineWidth", "Number:double");
            b.item("UnderlineRippleWidth", "Number:double");
            b.item("HoverUnderlineWidth", "Number:double");
            b.item("UnderlineColor", "Brush");
            b.item("UnderlineRippleColor", "Brush");
            b.item("HoverUnderlineColor", "Brush");
            b.item("FocusUnderlineColor", "Brush");
            b.item("UnderlineOpacity", "Number:double");
            b.item("HoverUnderlineOpacity", "Number:double");
            b.item("FocusUnderlineOpacity", "Number:double");
            b.item("FocusUnderlineRippleOpacity", "Number:double");
            b.item("UnderlineRippleOpacity", "Number:double");
            b.item("BackgroundColor", "Brush");
            b.item("LineTypeBorderWidth", "Number:double");
            b.item("LineTypeFocusBorderWidth", "Number:double");
            b.item("LineTypeFocusBorderColor", "Brush");
            b.item("LineTypeBorderColor", "Brush");
            b.item("LineTypeCornerRadiusBottomRight", "(w:LineTypeCornerRadius.BottomRight,wf:LineTypeCornerRadiusBottomRight)Number:double");
            b.item("LineTypeCornerRadiusBottomLeft", "(w:LineTypeCornerRadius.BottomLeft,wf:LineTypeCornerRadiusBottomLeft)Number:double");
            b.item("LineTypeCornerRadiusTopLeft", "(w:LineTypeCornerRadius.TopLeft,wf:LineTypeCornerRadiusTopLeft)Number:double");
            b.item("LineTypeCornerRadiusTopRight", "(w:LineTypeCornerRadius.TopRight,wf:LineTypeCornerRadiusTopRight)Number:double");
            b.item("LineTypeContentPaddingBottom", "(w:LineTypeContentPadding.Bottom,wf:LineTypeContentPaddingBottom)Number:double");
            b.item("LineTypeContentPaddingLeft", "(w:LineTypeContentPadding.Left,wf:LineTypeContentPaddingLeft)Number:double");
            b.item("LineTypeContentPaddingRight", "(w:LineTypeContentPadding.Right,wf:LineTypeContentPaddingRight)Number:double");
            b.item("LineTypeContentPaddingTop", "(w:LineTypeContentPadding.Top,wf:LineTypeContentPaddingTop)Number:double");
            b.item("LineTypeUnderlineWidth", "Number:double");
            b.item("LineTypeUnderlineRippleWidth", "Number:double");
            b.item("LineTypeHoverUnderlineWidth", "Number:double");
            b.item("LineTypeUnderlineColor", "Brush");
            b.item("LineTypeUnderlineRippleColor", "Brush");
            b.item("LineTypeHoverUnderlineColor", "Brush");
            b.item("LineTypeFocusUnderlineColor", "Brush");
            b.item("LineTypeUnderlineOpacity", "Number:double");
            b.item("LineTypeHoverUnderlineOpacity", "Number:double");
            b.item("LineTypeFocusUnderlineOpacity", "Number:double");
            b.item("LineTypeFocusUnderlineRippleOpacity", "Number:double");
            b.item("LineTypeUnderlineRippleOpacity", "Number:double");
            b.item("LineTypeBackgroundColor", "Brush");
            b.item("BoxTypeBorderWidth", "Number:double");
            b.item("BoxTypeFocusBorderWidth", "Number:double");
            b.item("BoxTypeFocusBorderColor", "Brush");
            b.item("BoxTypeBorderColor", "Brush");
            b.item("BoxTypeCornerRadiusBottomRight", "(w:BoxTypeCornerRadius.BottomRight,wf:BoxTypeCornerRadiusBottomRight)Number:double");
            b.item("BoxTypeCornerRadiusBottomLeft", "(w:BoxTypeCornerRadius.BottomLeft,wf:BoxTypeCornerRadiusBottomLeft)Number:double");
            b.item("BoxTypeCornerRadiusTopLeft", "(w:BoxTypeCornerRadius.TopLeft,wf:BoxTypeCornerRadiusTopLeft)Number:double");
            b.item("BoxTypeCornerRadiusTopRight", "(w:BoxTypeCornerRadius.TopRight,wf:BoxTypeCornerRadiusTopRight)Number:double");
            b.item("BoxTypeContentPaddingBottom", "(w:BoxTypeContentPadding.Bottom,wf:BoxTypeContentPaddingBottom)Number:double");
            b.item("BoxTypeContentPaddingLeft", "(w:BoxTypeContentPadding.Left,wf:BoxTypeContentPaddingLeft)Number:double");
            b.item("BoxTypeContentPaddingRight", "(w:BoxTypeContentPadding.Right,wf:BoxTypeContentPaddingRight)Number:double");
            b.item("BoxTypeContentPaddingTop", "(w:BoxTypeContentPadding.Top,wf:BoxTypeContentPaddingTop)Number:double");
            b.item("BoxTypeUnderlineWidth", "Number:double");
            b.item("BoxTypeUnderlineRippleWidth", "Number:double");
            b.item("BoxTypeHoverUnderlineWidth", "Number:double");
            b.item("BoxTypeUnderlineColor", "Brush");
            b.item("BoxTypeUnderlineRippleColor", "Brush");
            b.item("BoxTypeHoverUnderlineColor", "Brush");
            b.item("BoxTypeFocusUnderlineColor", "Brush");
            b.item("BoxTypeUnderlineOpacity", "Number:double");
            b.item("BoxTypeHoverUnderlineOpacity", "Number:double");
            b.item("BoxTypeFocusUnderlineOpacity", "Number:double");
            b.item("BoxTypeFocusUnderlineRippleOpacity", "Number:double");
            b.item("BoxTypeUnderlineRippleOpacity", "Number:double");
            b.item("BoxTypeBackgroundColor", "Brush");
            b.item("BorderTypeBorderWidth", "Number:double");
            b.item("BorderTypeFocusBorderWidth", "Number:double");
            b.item("BorderTypeFocusBorderColor", "Brush");
            b.item("BorderTypeBorderColor", "Brush");
            b.item("BorderTypeCornerRadiusBottomRight", "(w:BorderTypeCornerRadius.BottomRight,wf:BorderTypeCornerRadiusBottomRight)Number:double");
            b.item("BorderTypeCornerRadiusBottomLeft", "(w:BorderTypeCornerRadius.BottomLeft,wf:BorderTypeCornerRadiusBottomLeft)Number:double");
            b.item("BorderTypeCornerRadiusTopLeft", "(w:BorderTypeCornerRadius.TopLeft,wf:BorderTypeCornerRadiusTopLeft)Number:double");
            b.item("BorderTypeCornerRadiusTopRight", "(w:BorderTypeCornerRadius.TopRight,wf:BorderTypeCornerRadiusTopRight)Number:double");
            b.item("BorderTypeContentPaddingBottom", "(w:BorderTypeContentPadding.Bottom,wf:BorderTypeContentPaddingBottom)Number:double");
            b.item("BorderTypeContentPaddingLeft", "(w:BorderTypeContentPadding.Left,wf:BorderTypeContentPaddingLeft)Number:double");
            b.item("BorderTypeContentPaddingRight", "(w:BorderTypeContentPadding.Right,wf:BorderTypeContentPaddingRight)Number:double");
            b.item("BorderTypeContentPaddingTop", "(w:BorderTypeContentPadding.Top,wf:BorderTypeContentPaddingTop)Number:double");
            b.item("BorderTypeUnderlineWidth", "Number:double");
            b.item("BorderTypeUnderlineRippleWidth", "Number:double");
            b.item("BorderTypeHoverUnderlineWidth", "Number:double");
            b.item("BorderTypeUnderlineColor", "Brush");
            b.item("BorderTypeUnderlineRippleColor", "Brush");
            b.item("BorderTypeHoverUnderlineColor", "Brush");
            b.item("BorderTypeFocusUnderlineColor", "Brush");
            b.item("BorderTypeUnderlineOpacity", "Number:double");
            b.item("BorderTypeHoverUnderlineOpacity", "Number:double");
            b.item("BorderTypeFocusUnderlineOpacity", "Number:double");
            b.item("BorderTypeFocusUnderlineRippleOpacity", "Number:double");
            b.item("BorderTypeUnderlineRippleOpacity", "Number:double");
            b.item("BorderTypeBackgroundColor", "Brush");
            b.item("SearchTypeBorderWidth", "Number:double");
            b.item("SearchTypeFocusBorderWidth", "Number:double");
            b.item("SearchTypeFocusBorderColor", "Brush");
            b.item("SearchTypeBorderColor", "Brush");
            b.item("SearchTypeCornerRadiusBottomRight", "(w:SearchTypeCornerRadius.BottomRight,wf:SearchTypeCornerRadiusBottomRight)Number:double");
            b.item("SearchTypeCornerRadiusBottomLeft", "(w:SearchTypeCornerRadius.BottomLeft,wf:SearchTypeCornerRadiusBottomLeft)Number:double");
            b.item("SearchTypeCornerRadiusTopLeft", "(w:SearchTypeCornerRadius.TopLeft,wf:SearchTypeCornerRadiusTopLeft)Number:double");
            b.item("SearchTypeCornerRadiusTopRight", "(w:SearchTypeCornerRadius.TopRight,wf:SearchTypeCornerRadiusTopRight)Number:double");
            b.item("SearchTypeContentPaddingBottom", "(w:SearchTypeContentPadding.Bottom,wf:SearchTypeContentPaddingBottom)Number:double");
            b.item("SearchTypeContentPaddingLeft", "(w:SearchTypeContentPadding.Left,wf:SearchTypeContentPaddingLeft)Number:double");
            b.item("SearchTypeContentPaddingRight", "(w:SearchTypeContentPadding.Right,wf:SearchTypeContentPaddingRight)Number:double");
            b.item("SearchTypeContentPaddingTop", "(w:SearchTypeContentPadding.Top,wf:SearchTypeContentPaddingTop)Number:double");
            b.item("SearchTypeUnderlineWidth", "Number:double");
            b.item("SearchTypeUnderlineRippleWidth", "Number:double");
            b.item("SearchTypeHoverUnderlineWidth", "Number:double");
            b.item("SearchTypeUnderlineColor", "Brush");
            b.item("SearchTypeUnderlineRippleColor", "Brush");
            b.item("SearchTypeHoverUnderlineColor", "Brush");
            b.item("SearchTypeFocusUnderlineColor", "Brush");
            b.item("SearchTypeUnderlineOpacity", "Number:double");
            b.item("SearchTypeHoverUnderlineOpacity", "Number:double");
            b.item("SearchTypeFocusUnderlineOpacity", "Number:double");
            b.item("SearchTypeFocusUnderlineRippleOpacity", "Number:double");
            b.item("SearchTypeUnderlineRippleOpacity", "Number:double");
            b.item("SearchTypeBackgroundColor", "Brush");
            b.item("IsExpanded", "Boolean");
            b.item("IsHovered", "Boolean");
            b.item("IsFocused", "Boolean");
            b.item("ActualIsExpanded", "Boolean");
            b.item("FocusBorderColor", "Brush");
            b.item("Id", "String");
            b.item("Disabled", "(w:IsDisabled,wf:IsDisabled)Boolean");
            b.item("Inputs", "Collection:InputGroupItem:InputGroupInputCollection:InputGroupItem");
        }
        static d(a) {
            InputGroupDescriptionMetadata.b(a);
            a.n("InputGroup", () => new InputGroupDescription());
            a.m("InputGroup", InputGroupDescriptionMetadata.a);
        }
    }
    InputGroupDescriptionMetadata.$t = /*@__PURE__*/ markType(InputGroupDescriptionMetadata, 'InputGroupDescriptionMetadata');
    InputGroupDescriptionMetadata.a = null;
    return InputGroupDescriptionMetadata;
})();
//# sourceMappingURL=InputGroupDescriptionMetadata.js.map
