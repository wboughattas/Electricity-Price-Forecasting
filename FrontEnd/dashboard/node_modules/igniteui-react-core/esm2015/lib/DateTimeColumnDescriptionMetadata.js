/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColumnDescriptionMetadata } from "./ColumnDescriptionMetadata";
import { DateTimeColumnDescription } from "./DateTimeColumnDescription";
/**
 * @hidden
 */
export let DateTimeColumnDescriptionMetadata = /*@__PURE__*/ (() => {
    class DateTimeColumnDescriptionMetadata extends Base {
        static b(a) {
            if (DateTimeColumnDescriptionMetadata.a == null) {
                DateTimeColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                DateTimeColumnDescriptionMetadata.c(a, DateTimeColumnDescriptionMetadata.a);
            }
        }
        static c(a, b) {
            ColumnDescriptionMetadata.c(a, b);
            b.item("DateTimeFormat", "ExportedType:string:DateTimeFormats");
            b.item("FormatString", "String");
            b.item("FormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
            b.item("FormatOverrideRef", "(w:FormatOverride,wf:FormatOverride)DataRef");
            b.item("EditorType", "ExportedType:string:EditorType");
            b.item("EditorDataSourceRef", "(w:EditorItemsSource,wf:EditorItemsSource)DataRef::object");
            b.item("EditorDataSource", "(w:EditorItemsSource,wf:EditorItemsSource)ExportedType:BaseDataSource:BaseDataSource");
            b.item("EditorTextField", "String");
            b.item("EditorValueField", "Array:string");
        }
        static d(a) {
            DateTimeColumnDescriptionMetadata.b(a);
            a.n("DateTimeColumn", () => new DateTimeColumnDescription());
            a.m("DateTimeColumn", DateTimeColumnDescriptionMetadata.a);
        }
    }
    DateTimeColumnDescriptionMetadata.$t = /*@__PURE__*/ markType(DateTimeColumnDescriptionMetadata, 'DateTimeColumnDescriptionMetadata');
    DateTimeColumnDescriptionMetadata.a = null;
    return DateTimeColumnDescriptionMetadata;
})();
//# sourceMappingURL=DateTimeColumnDescriptionMetadata.js.map
