/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let CheckboxDescription = /*@__PURE__*/ (() => {
    class CheckboxDescription extends Description {
        constructor() {
            super();
            this.ao = null;
            this.ay = null;
            this.ak = null;
            this.aq = null;
            this.ax = null;
            this.aj = null;
            this.az = null;
            this.ar = null;
            this.al = null;
            this.ai = null;
            this.u = 0;
            this.r = 0;
            this.v = 0;
            this.w = 0;
            this.t = 0;
            this.s = 0;
            this.ah = null;
            this.at = null;
            this.as = null;
            this.au = null;
            this.a0 = null;
            this.aw = null;
            this.ae = 0;
            this.ad = 0;
            this.j = false;
            this.an = null;
            this.am = null;
            this.av = null;
            this.h = false;
            this.f = false;
            this.k = false;
            this.g = false;
            this.i = false;
            this.ap = null;
        }
        get_type() {
            return "Checkbox";
        }
        get type() {
            return this.get_type();
        }
        get baseTheme() {
            return this.ao;
        }
        set baseTheme(a) {
            this.ao = a;
            this.e("BaseTheme");
        }
        get uncheckedBackgroundColor() {
            return this.ay;
        }
        set uncheckedBackgroundColor(a) {
            this.ay = a;
            this.e("UncheckedBackgroundColor");
        }
        get actualUncheckedBackgroundColor() {
            return this.ak;
        }
        set actualUncheckedBackgroundColor(a) {
            this.ak = a;
            this.e("ActualUncheckedBackgroundColor");
        }
        get checkedBackgroundColor() {
            return this.aq;
        }
        set checkedBackgroundColor(a) {
            this.aq = a;
            this.e("CheckedBackgroundColor");
        }
        get tickColor() {
            return this.ax;
        }
        set tickColor(a) {
            this.ax = a;
            this.e("TickColor");
        }
        get actualTickColor() {
            return this.aj;
        }
        set actualTickColor(a) {
            this.aj = a;
            this.e("ActualTickColor");
        }
        get uncheckedBorderColor() {
            return this.az;
        }
        set uncheckedBorderColor(a) {
            this.az = a;
            this.e("UncheckedBorderColor");
        }
        get checkedBorderColor() {
            return this.ar;
        }
        set checkedBorderColor(a) {
            this.ar = a;
            this.e("CheckedBorderColor");
        }
        get actualUncheckedBorderColor() {
            return this.al;
        }
        set actualUncheckedBorderColor(a) {
            this.al = a;
            this.e("ActualUncheckedBorderColor");
        }
        get actualCheckedBorderColor() {
            return this.ai;
        }
        set actualCheckedBorderColor(a) {
            this.ai = a;
            this.e("ActualCheckedBorderColor");
        }
        get borderWidth() {
            return this.u;
        }
        set borderWidth(a) {
            this.u = a;
            this.e("BorderWidth");
        }
        get actualBorderWidth() {
            return this.r;
        }
        set actualBorderWidth(a) {
            this.r = a;
            this.e("ActualBorderWidth");
        }
        get cornerRadius() {
            return this.v;
        }
        set cornerRadius(a) {
            this.v = a;
            this.e("CornerRadius");
        }
        get tickStrokeWidth() {
            return this.w;
        }
        set tickStrokeWidth(a) {
            this.w = a;
            this.e("TickStrokeWidth");
        }
        get actualTickStrokeWidth() {
            return this.t;
        }
        set actualTickStrokeWidth(a) {
            this.t = a;
            this.e("ActualTickStrokeWidth");
        }
        get actualCornerRadius() {
            return this.s;
        }
        set actualCornerRadius(a) {
            this.s = a;
            this.e("ActualCornerRadius");
        }
        get actualCheckedBackgroundColor() {
            return this.ah;
        }
        set actualCheckedBackgroundColor(a) {
            this.ah = a;
            this.e("ActualCheckedBackgroundColor");
        }
        get inputId() {
            return this.at;
        }
        set inputId(a) {
            this.at = a;
            this.e("InputId");
        }
        get id() {
            return this.as;
        }
        set id(a) {
            this.as = a;
            this.e("Id");
        }
        get labelId() {
            return this.au;
        }
        set labelId(a) {
            this.au = a;
            this.e("LabelId");
        }
        get valueRef() {
            return this.a0;
        }
        set valueRef(a) {
            this.a0 = a;
            this.e("ValueRef");
        }
        get name() {
            return this.aw;
        }
        set name(a) {
            this.aw = a;
            this.e("Name");
        }
        get tabIndex() {
            return this.ae;
        }
        set tabIndex(a) {
            this.ae = a;
            this.e("TabIndex");
        }
        get required() {
            return this.ad;
        }
        set required(a) {
            this.ad = a;
            this.e("Required");
        }
        get focused() {
            return this.j;
        }
        set focused(a) {
            this.j = a;
            this.e("Focused");
        }
        get ariaLabelledBy() {
            return this.an;
        }
        set ariaLabelledBy(a) {
            this.an = a;
            this.e("AriaLabelledBy");
        }
        get ariaLabel() {
            return this.am;
        }
        set ariaLabel(a) {
            this.am = a;
            this.e("AriaLabel");
        }
        get labelPosition() {
            return this.av;
        }
        set labelPosition(a) {
            this.av = a;
            this.e("LabelPosition");
        }
        get disableRipple() {
            return this.h;
        }
        set disableRipple(a) {
            this.h = a;
            this.e("DisableRipple");
        }
        get checked() {
            return this.f;
        }
        set checked(a) {
            this.f = a;
            this.e("Checked");
        }
        get indeterminate() {
            return this.k;
        }
        set indeterminate(a) {
            this.k = a;
            this.e("Indeterminate");
        }
        get disabled() {
            return this.g;
        }
        set disabled(a) {
            this.g = a;
            this.e("Disabled");
        }
        get disableTransitions() {
            return this.i;
        }
        set disableTransitions(a) {
            this.i = a;
            this.e("DisableTransitions");
        }
        get changeRef() {
            return this.ap;
        }
        set changeRef(a) {
            this.ap = a;
            this.e("ChangeRef");
        }
    }
    CheckboxDescription.$t = /*@__PURE__*/ markType(CheckboxDescription, 'CheckboxDescription', Description.$);
    return CheckboxDescription;
})();
//# sourceMappingURL=CheckboxDescription.js.map
