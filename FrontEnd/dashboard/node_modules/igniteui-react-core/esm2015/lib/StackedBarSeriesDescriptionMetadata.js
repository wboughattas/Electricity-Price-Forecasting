/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { VerticalStackedSeriesBaseDescriptionMetadata } from "./VerticalStackedSeriesBaseDescriptionMetadata";
import { StackedBarSeriesDescription } from "./StackedBarSeriesDescription";
/**
 * @hidden
 */
export let StackedBarSeriesDescriptionMetadata = /*@__PURE__*/ (() => {
    class StackedBarSeriesDescriptionMetadata extends Base {
        static b(a) {
            if (StackedBarSeriesDescriptionMetadata.a == null) {
                StackedBarSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                StackedBarSeriesDescriptionMetadata.c(a, StackedBarSeriesDescriptionMetadata.a);
            }
        }
        static c(a, b) {
            VerticalStackedSeriesBaseDescriptionMetadata.c(a, b);
            b.item("RadiusX", "Number:double");
            b.item("RadiusY", "Number:double");
        }
        static d(a) {
            StackedBarSeriesDescriptionMetadata.b(a);
            a.n("StackedBarSeries", () => new StackedBarSeriesDescription());
            a.m("StackedBarSeries", StackedBarSeriesDescriptionMetadata.a);
        }
    }
    StackedBarSeriesDescriptionMetadata.$t = /*@__PURE__*/ markType(StackedBarSeriesDescriptionMetadata, 'StackedBarSeriesDescriptionMetadata');
    StackedBarSeriesDescriptionMetadata.a = null;
    return StackedBarSeriesDescriptionMetadata;
})();
//# sourceMappingURL=StackedBarSeriesDescriptionMetadata.js.map
