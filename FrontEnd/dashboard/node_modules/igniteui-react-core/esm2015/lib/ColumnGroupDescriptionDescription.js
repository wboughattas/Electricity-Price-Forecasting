/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ColumnSortDescriptionDescription } from "./ColumnSortDescriptionDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ColumnGroupDescriptionDescription = /*@__PURE__*/ (() => {
    class ColumnGroupDescriptionDescription extends ColumnSortDescriptionDescription {
        constructor() {
            super();
            this.v = null;
            this.n = null;
            this.s = null;
            this.m = null;
            this.t = null;
            this.u = null;
        }
        get_type() {
            return "ColumnGroupDescription";
        }
        get valueFormat() {
            return this.v;
        }
        set valueFormat(a) {
            this.v = a;
            this.e("ValueFormat");
        }
        get valueFormatSpecifiers() {
            return this.n;
        }
        set valueFormatSpecifiers(a) {
            this.n = a;
            this.e("ValueFormatSpecifiers");
        }
        get displayFormat() {
            return this.s;
        }
        set displayFormat(a) {
            this.s = a;
            this.e("DisplayFormat");
        }
        get displayFormatSpecifiers() {
            return this.m;
        }
        set displayFormatSpecifiers(a) {
            this.m = a;
            this.e("DisplayFormatSpecifiers");
        }
        get displayName() {
            return this.t;
        }
        set displayName(a) {
            this.t = a;
            this.e("DisplayName");
        }
        get formatTextRef() {
            return this.u;
        }
        set formatTextRef(a) {
            this.u = a;
            this.e("FormatTextRef");
        }
    }
    ColumnGroupDescriptionDescription.$t = /*@__PURE__*/ markType(ColumnGroupDescriptionDescription, 'ColumnGroupDescriptionDescription', ColumnSortDescriptionDescription.$);
    ColumnGroupDescriptionDescription.__marshalByValue1 = true;
    ColumnGroupDescriptionDescription.__marshalByValueAlias1 = "ColumnGroupDescription";
    return ColumnGroupDescriptionDescription;
})();
//# sourceMappingURL=ColumnGroupDescriptionDescription.js.map
