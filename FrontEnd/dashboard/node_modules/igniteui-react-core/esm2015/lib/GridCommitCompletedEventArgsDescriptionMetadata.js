/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GridCommitCompletedEventArgsDescription } from "./GridCommitCompletedEventArgsDescription";
/**
 * @hidden
 */
export let GridCommitCompletedEventArgsDescriptionMetadata = /*@__PURE__*/ (() => {
    class GridCommitCompletedEventArgsDescriptionMetadata extends Base {
        static b(a) {
            if (GridCommitCompletedEventArgsDescriptionMetadata.a == null) {
                GridCommitCompletedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                GridCommitCompletedEventArgsDescriptionMetadata.c(a, GridCommitCompletedEventArgsDescriptionMetadata.a);
            }
        }
        static c(a, b) {
            b.item("TransactionTypes", "Array:string:TransactionType");
            b.item("ItemsRef", "(w:Items,wf:Items)DataRef:object");
        }
        static d(a) {
            GridCommitCompletedEventArgsDescriptionMetadata.b(a);
            a.n("GridCommitCompletedEventArgs", () => new GridCommitCompletedEventArgsDescription());
            a.m("GridCommitCompletedEventArgs", GridCommitCompletedEventArgsDescriptionMetadata.a);
        }
    }
    GridCommitCompletedEventArgsDescriptionMetadata.$t = /*@__PURE__*/ markType(GridCommitCompletedEventArgsDescriptionMetadata, 'GridCommitCompletedEventArgsDescriptionMetadata');
    GridCommitCompletedEventArgsDescriptionMetadata.a = null;
    return GridCommitCompletedEventArgsDescriptionMetadata;
})();
//# sourceMappingURL=GridCommitCompletedEventArgsDescriptionMetadata.js.map
