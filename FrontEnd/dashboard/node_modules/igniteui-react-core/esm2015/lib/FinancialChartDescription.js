/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let FinancialChartDescription = /*@__PURE__*/ (() => {
    class FinancialChartDescription extends XYChartDescription {
        constructor() {
            super();
            this.jx = null;
            this.jz = null;
            this.jw = null;
            this.ju = null;
            this.iv = 0;
            this.h9 = false;
            this.iy = 0;
            this.ig = false;
            this.jm = 0;
            this.i0 = 0;
            this.i2 = 0;
            this.i1 = 0;
            this.i3 = 0;
            this.jy = null;
            this.j0 = null;
            this.j3 = null;
            this.ib = false;
            this.jv = null;
            this.j1 = null;
            this.id = false;
            this.hl = null;
            this.hq = null;
            this.ie = false;
            this.ix = 0;
            this.j2 = null;
            this.j4 = null;
            this.hm = null;
            this.hn = null;
            this.ho = null;
            this.hp = null;
            this.ht = null;
            this.hs = null;
            this.hk = null;
            this.hi = null;
            this.iz = 0;
            this.iw = 0;
            this.iu = 0;
            this.hj = null;
            this.ji = 0;
            this.it = 0;
            this.jl = 0;
            this.jj = 0;
            this.jh = 0;
            this.jk = 0;
            this.hr = null;
            this.hh = null;
            this.ic = false;
            this.j5 = null;
            this.i4 = 0;
            this.ia = false;
            this.iq = new Date();
            this.ip = new Date();
            this.hu = null;
            this.jt = null;
        }
        get tooltipTemplateRef() {
            return this.jx;
        }
        set tooltipTemplateRef(a) {
            this.jx = a;
            this.e("TooltipTemplateRef");
        }
        get width() {
            return this.jz;
        }
        set width(a) {
            this.jz = a;
            this.e("Width");
        }
        get height() {
            return this.jw;
        }
        set height(a) {
            this.jw = a;
            this.e("Height");
        }
        get background() {
            return this.ju;
        }
        set background(a) {
            this.ju = a;
            this.e("Background");
        }
        get_type() {
            return "FinancialChart";
        }
        get leftMargin() {
            return this.iv;
        }
        set leftMargin(a) {
            this.iv = a;
            this.e("LeftMargin");
        }
        get isHorizontalZoomEnabled() {
            return this.h9;
        }
        set isHorizontalZoomEnabled(a) {
            this.h9 = a;
            this.e("IsHorizontalZoomEnabled");
        }
        get toolbarHeight() {
            return this.iy;
        }
        set toolbarHeight(a) {
            this.iy = a;
            this.e("ToolbarHeight");
        }
        get yAxisIsLogarithmic() {
            return this.ig;
        }
        set yAxisIsLogarithmic(a) {
            this.ig = a;
            this.e("YAxisIsLogarithmic");
        }
        get yAxisLogarithmBase() {
            return this.jm;
        }
        set yAxisLogarithmBase(a) {
            this.jm = a;
            this.e("YAxisLogarithmBase");
        }
        get yAxisInterval() {
            return this.i0;
        }
        set yAxisInterval(a) {
            this.i0 = a;
            this.e("YAxisInterval");
        }
        get yAxisMinimumValue() {
            return this.i2;
        }
        set yAxisMinimumValue(a) {
            this.i2 = a;
            this.e("YAxisMinimumValue");
        }
        get yAxisMaximumValue() {
            return this.i1;
        }
        set yAxisMaximumValue(a) {
            this.i1 = a;
            this.e("YAxisMaximumValue");
        }
        get yAxisMinorInterval() {
            return this.i3;
        }
        set yAxisMinorInterval(a) {
            this.i3 = a;
            this.e("YAxisMinorInterval");
        }
        get volumeType() {
            return this.jy;
        }
        set volumeType(a) {
            this.jy = a;
            this.e("VolumeType");
        }
        get xAxisMode() {
            return this.j0;
        }
        set xAxisMode(a) {
            this.j0 = a;
            this.e("XAxisMode");
        }
        get yAxisMode() {
            return this.j3;
        }
        set yAxisMode(a) {
            this.j3 = a;
            this.e("YAxisMode");
        }
        get isToolbarVisible() {
            return this.ib;
        }
        set isToolbarVisible(a) {
            this.ib = a;
            this.e("IsToolbarVisible");
        }
        get chartType() {
            return this.jv;
        }
        set chartType(a) {
            this.jv = a;
            this.e("ChartType");
        }
        get yAxisLabelHorizontalAlignment() {
            return this.j1;
        }
        set yAxisLabelHorizontalAlignment(a) {
            this.j1 = a;
            this.e("YAxisLabelHorizontalAlignment");
        }
        get isWindowSyncedToVisibleRange() {
            return this.id;
        }
        set isWindowSyncedToVisibleRange(a) {
            this.id = a;
            this.e("IsWindowSyncedToVisibleRange");
        }
        get indicatorTypes() {
            return this.hl;
        }
        set indicatorTypes(a) {
            this.hl = a;
            this.e("IndicatorTypes");
        }
        get overlayTypes() {
            return this.hq;
        }
        set overlayTypes(a) {
            this.hq = a;
            this.e("OverlayTypes");
        }
        get yAxisAbbreviateLargeNumbers() {
            return this.ie;
        }
        set yAxisAbbreviateLargeNumbers(a) {
            this.ie = a;
            this.e("YAxisAbbreviateLargeNumbers");
        }
        get resolution() {
            return this.ix;
        }
        set resolution(a) {
            this.ix = a;
            this.e("Resolution");
        }
        get yAxisLabelLocation() {
            return this.j2;
        }
        set yAxisLabelLocation(a) {
            this.j2 = a;
            this.e("YAxisLabelLocation");
        }
        get zoomSliderType() {
            return this.j4;
        }
        set zoomSliderType(a) {
            this.j4 = a;
            this.e("ZoomSliderType");
        }
        get negativeBrushes() {
            return this.hm;
        }
        set negativeBrushes(a) {
            this.hm = a;
            this.e("NegativeBrushes");
        }
        get negativeOutlines() {
            return this.hn;
        }
        set negativeOutlines(a) {
            this.hn = a;
            this.e("NegativeOutlines");
        }
        get overlayBrushes() {
            return this.ho;
        }
        set overlayBrushes(a) {
            this.ho = a;
            this.e("OverlayBrushes");
        }
        get overlayOutlines() {
            return this.hp;
        }
        set overlayOutlines(a) {
            this.hp = a;
            this.e("OverlayOutlines");
        }
        get volumeOutlines() {
            return this.ht;
        }
        set volumeOutlines(a) {
            this.ht = a;
            this.e("VolumeOutlines");
        }
        get volumeBrushes() {
            return this.hs;
        }
        set volumeBrushes(a) {
            this.hs = a;
            this.e("VolumeBrushes");
        }
        get indicatorNegativeBrushes() {
            return this.hk;
        }
        set indicatorNegativeBrushes(a) {
            this.hk = a;
            this.e("IndicatorNegativeBrushes");
        }
        get indicatorBrushes() {
            return this.hi;
        }
        set indicatorBrushes(a) {
            this.hi = a;
            this.e("IndicatorBrushes");
        }
        get volumeThickness() {
            return this.iz;
        }
        set volumeThickness(a) {
            this.iz = a;
            this.e("VolumeThickness");
        }
        get overlayThickness() {
            return this.iw;
        }
        set overlayThickness(a) {
            this.iw = a;
            this.e("OverlayThickness");
        }
        get indicatorThickness() {
            return this.iu;
        }
        set indicatorThickness(a) {
            this.iu = a;
            this.e("IndicatorThickness");
        }
        get indicatorDisplayTypes() {
            return this.hj;
        }
        set indicatorDisplayTypes(a) {
            this.hj = a;
            this.e("IndicatorDisplayTypes");
        }
        get indicatorPeriod() {
            return this.ji;
        }
        set indicatorPeriod(a) {
            this.ji = a;
            this.e("IndicatorPeriod");
        }
        get indicatorMultiplier() {
            return this.it;
        }
        set indicatorMultiplier(a) {
            this.it = a;
            this.e("IndicatorMultiplier");
        }
        get indicatorSmoothingPeriod() {
            return this.jl;
        }
        set indicatorSmoothingPeriod(a) {
            this.jl = a;
            this.e("IndicatorSmoothingPeriod");
        }
        get indicatorShortPeriod() {
            return this.jj;
        }
        set indicatorShortPeriod(a) {
            this.jj = a;
            this.e("IndicatorShortPeriod");
        }
        get indicatorLongPeriod() {
            return this.jh;
        }
        set indicatorLongPeriod(a) {
            this.jh = a;
            this.e("IndicatorLongPeriod");
        }
        get indicatorSignalPeriod() {
            return this.jk;
        }
        set indicatorSignalPeriod(a) {
            this.jk = a;
            this.e("IndicatorSignalPeriod");
        }
        get rangeSelectorOptions() {
            return this.hr;
        }
        set rangeSelectorOptions(a) {
            this.hr = a;
            this.e("RangeSelectorOptions");
        }
        get customIndicatorNames() {
            return this.hh;
        }
        set customIndicatorNames(a) {
            this.hh = a;
            this.e("CustomIndicatorNames");
        }
        get isVerticalZoomEnabled() {
            return this.ic;
        }
        set isVerticalZoomEnabled(a) {
            this.ic = a;
            this.e("IsVerticalZoomEnabled");
        }
        get zoomSliderXAxisMajorStroke() {
            return this.j5;
        }
        set zoomSliderXAxisMajorStroke(a) {
            this.j5 = a;
            this.e("ZoomSliderXAxisMajorStroke");
        }
        get zoomSliderXAxisMajorStrokeThickness() {
            return this.i4;
        }
        set zoomSliderXAxisMajorStrokeThickness(a) {
            this.i4 = a;
            this.e("ZoomSliderXAxisMajorStrokeThickness");
        }
        get isLegendVisible() {
            return this.ia;
        }
        set isLegendVisible(a) {
            this.ia = a;
            this.e("IsLegendVisible");
        }
        get xAxisMinimumValue() {
            return this.iq;
        }
        set xAxisMinimumValue(a) {
            this.iq = a;
            this.e("XAxisMinimumValue");
        }
        get xAxisMaximumValue() {
            return this.ip;
        }
        set xAxisMaximumValue(a) {
            this.ip = a;
            this.e("XAxisMaximumValue");
        }
        get xAxisBreaks() {
            return this.hu;
        }
        set xAxisBreaks(a) {
            this.hu = a;
            this.e("XAxisBreaks");
        }
        get applyCustomIndicatorsRef() {
            return this.jt;
        }
        set applyCustomIndicatorsRef(a) {
            this.jt = a;
            this.e("ApplyCustomIndicatorsRef");
        }
    }
    FinancialChartDescription.$t = /*@__PURE__*/ markType(FinancialChartDescription, 'FinancialChartDescription', XYChartDescription.$);
    return FinancialChartDescription;
})();
//# sourceMappingURL=FinancialChartDescription.js.map
