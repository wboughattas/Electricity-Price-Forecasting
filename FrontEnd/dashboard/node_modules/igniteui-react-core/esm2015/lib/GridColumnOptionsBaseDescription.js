/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let GridColumnOptionsBaseDescription = /*@__PURE__*/ (() => {
    class GridColumnOptionsBaseDescription extends Description {
        constructor() {
            super();
            this.h = false;
            this.q = null;
            this.r = null;
            this.n = null;
            this.s = null;
            this.o = null;
            this.t = null;
            this.j = 0;
            this.u = null;
            this.v = null;
            this.f = null;
            this.w = null;
            this.p = null;
            this.x = null;
            this.k = 0;
            this.y = null;
            this.z = null;
            this.aa = null;
        }
        get_type() {
            return "GridColumnOptionsBase";
        }
        get type() {
            return this.get_type();
        }
        get autoSize() {
            return this.h;
        }
        set autoSize(a) {
            this.h = a;
            this.e("AutoSize");
        }
        get backgroundColor() {
            return this.q;
        }
        set backgroundColor(a) {
            this.q = a;
            this.e("BackgroundColor");
        }
        get baseTheme() {
            return this.r;
        }
        set baseTheme(a) {
            this.r = a;
            this.e("BaseTheme");
        }
        get actualBaseTheme() {
            return this.n;
        }
        set actualBaseTheme(a) {
            this.n = a;
            this.e("ActualBaseTheme");
        }
        get buttonDensity() {
            return this.s;
        }
        set buttonDensity(a) {
            this.s = a;
            this.e("ButtonDensity");
        }
        get actualButtonDensity() {
            return this.o;
        }
        set actualButtonDensity(a) {
            this.o = a;
            this.e("ActualButtonDensity");
        }
        get buttonFontFamily() {
            return this.t;
        }
        set buttonFontFamily(a) {
            this.t = a;
            this.e("ButtonFontFamily");
        }
        get buttonFontSize() {
            return this.j;
        }
        set buttonFontSize(a) {
            this.j = a;
            this.e("ButtonFontSize");
        }
        get buttonFontStyle() {
            return this.u;
        }
        set buttonFontStyle(a) {
            this.u = a;
            this.e("ButtonFontStyle");
        }
        get buttonFontWeight() {
            return this.v;
        }
        set buttonFontWeight(a) {
            this.v = a;
            this.e("ButtonFontWeight");
        }
        get column() {
            return this.f;
        }
        set column(a) {
            this.f = a;
            this.e("Column");
        }
        get density() {
            return this.w;
        }
        set density(a) {
            this.w = a;
            this.e("Density");
        }
        get actualDensity() {
            return this.p;
        }
        set actualDensity(a) {
            this.p = a;
            this.e("ActualDensity");
        }
        get labelFontFamily() {
            return this.x;
        }
        set labelFontFamily(a) {
            this.x = a;
            this.e("LabelFontFamily");
        }
        get labelFontSize() {
            return this.k;
        }
        set labelFontSize(a) {
            this.k = a;
            this.e("LabelFontSize");
        }
        get labelFontStyle() {
            return this.y;
        }
        set labelFontStyle(a) {
            this.y = a;
            this.e("LabelFontStyle");
        }
        get labelFontWeight() {
            return this.z;
        }
        set labelFontWeight(a) {
            this.z = a;
            this.e("LabelFontWeight");
        }
        get textColor() {
            return this.aa;
        }
        set textColor(a) {
            this.aa = a;
            this.e("TextColor");
        }
    }
    GridColumnOptionsBaseDescription.$t = /*@__PURE__*/ markType(GridColumnOptionsBaseDescription, 'GridColumnOptionsBaseDescription', Description.$);
    return GridColumnOptionsBaseDescription;
})();
//# sourceMappingURL=GridColumnOptionsBaseDescription.js.map
