/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { InputGroupItemDescriptionMetadata } from "./InputGroupItemDescriptionMetadata";
import { PrefixDescription } from "./PrefixDescription";
/**
 * @hidden
 */
export let PrefixDescriptionMetadata = /*@__PURE__*/ (() => {
    class PrefixDescriptionMetadata extends Base {
        static b(a) {
            if (PrefixDescriptionMetadata.a == null) {
                PrefixDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                PrefixDescriptionMetadata.c(a, PrefixDescriptionMetadata.a);
            }
        }
        static c(a, b) {
            InputGroupItemDescriptionMetadata.c(a, b);
            b.item("Id", "String");
            b.item("AriaLabel", "String");
            b.item("IsHover", "Boolean");
            b.item("Disabled", "(w:IsDisabled,wf:IsDisabled)Boolean");
        }
        static d(a) {
            PrefixDescriptionMetadata.b(a);
            a.n("Prefix", () => new PrefixDescription());
            a.m("Prefix", PrefixDescriptionMetadata.a);
        }
    }
    PrefixDescriptionMetadata.$t = /*@__PURE__*/ markType(PrefixDescriptionMetadata, 'PrefixDescriptionMetadata');
    PrefixDescriptionMetadata.a = null;
    return PrefixDescriptionMetadata;
})();
//# sourceMappingURL=PrefixDescriptionMetadata.js.map
