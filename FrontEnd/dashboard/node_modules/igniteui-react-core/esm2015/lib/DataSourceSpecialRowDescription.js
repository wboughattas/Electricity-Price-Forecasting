/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DataSourceSpecialRowDescription = /*@__PURE__*/ (() => {
    class DataSourceSpecialRowDescription extends Description {
        constructor() {
            super();
            this.n = null;
            this.k = null;
            this.i = 0;
            this.f = null;
        }
        get_type() {
            return "DataSourceSpecialRow";
        }
        get type() {
            return this.get_type();
        }
        get rowType() {
            return this.n;
        }
        set rowType(a) {
            this.n = a;
            this.e("RowType");
        }
        get targetRow() {
            return this.k;
        }
        set targetRow(a) {
            this.k = a;
            this.e("TargetRow");
        }
        get level() {
            return this.i;
        }
        set level(a) {
            this.i = a;
            this.e("Level");
        }
        get summaryResults() {
            return this.f;
        }
        set summaryResults(a) {
            this.f = a;
            this.e("SummaryResults");
        }
    }
    DataSourceSpecialRowDescription.$t = /*@__PURE__*/ markType(DataSourceSpecialRowDescription, 'DataSourceSpecialRowDescription', Description.$);
    DataSourceSpecialRowDescription.__marshalByValue = true;
    DataSourceSpecialRowDescription.__marshalByValueAlias = "DataSourceSpecialRow";
    return DataSourceSpecialRowDescription;
})();
//# sourceMappingURL=DataSourceSpecialRowDescription.js.map
