/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let CrosshairLayerDescription = /*@__PURE__*/ (() => {
    class CrosshairLayerDescription extends AnnotationLayerDescription {
        constructor() {
            super();
            this.c2 = null;
            this.c5 = null;
            this.c4 = null;
            this.ca = false;
            this.b8 = false;
            this.c9 = null;
            this.c7 = null;
            this.cy = 0;
            this.c8 = null;
            this.cf = 0;
            this.ch = 0;
            this.cg = 0;
            this.ce = 0;
            this.ck = 0;
            this.cm = 0;
            this.cl = 0;
            this.cj = 0;
            this.ci = 0;
            this.dc = null;
            this.da = null;
            this.cz = 0;
            this.db = null;
            this.cn = 0;
            this.c6 = null;
            this.c3 = null;
            this.b9 = false;
        }
        get_type() {
            return "CrosshairLayer";
        }
        get horizontalLineStroke() {
            return this.c2;
        }
        set horizontalLineStroke(a) {
            this.c2 = a;
            this.e("HorizontalLineStroke");
        }
        get verticalLineStroke() {
            return this.c5;
        }
        set verticalLineStroke(a) {
            this.c5 = a;
            this.e("VerticalLineStroke");
        }
        get targetSeriesRef() {
            return this.c4;
        }
        set targetSeriesRef(a) {
            this.c4 = a;
            this.e("TargetSeriesRef");
        }
        get useInterpolation() {
            return this.ca;
        }
        set useInterpolation(a) {
            this.ca = a;
            this.e("UseInterpolation");
        }
        get isAxisAnnotationEnabled() {
            return this.b8;
        }
        set isAxisAnnotationEnabled(a) {
            this.b8 = a;
            this.e("IsAxisAnnotationEnabled");
        }
        get xAxisAnnotationTextColor() {
            return this.c9;
        }
        set xAxisAnnotationTextColor(a) {
            this.c9 = a;
            this.e("XAxisAnnotationTextColor");
        }
        get xAxisAnnotationBackground() {
            return this.c7;
        }
        set xAxisAnnotationBackground(a) {
            this.c7 = a;
            this.e("XAxisAnnotationBackground");
        }
        get xAxisAnnotationInterpolatedValuePrecision() {
            return this.cy;
        }
        set xAxisAnnotationInterpolatedValuePrecision(a) {
            this.cy = a;
            this.e("XAxisAnnotationInterpolatedValuePrecision");
        }
        get xAxisAnnotationOutline() {
            return this.c8;
        }
        set xAxisAnnotationOutline(a) {
            this.c8 = a;
            this.e("XAxisAnnotationOutline");
        }
        get xAxisAnnotationPaddingLeft() {
            return this.cf;
        }
        set xAxisAnnotationPaddingLeft(a) {
            this.cf = a;
            this.e("XAxisAnnotationPaddingLeft");
        }
        get xAxisAnnotationPaddingTop() {
            return this.ch;
        }
        set xAxisAnnotationPaddingTop(a) {
            this.ch = a;
            this.e("XAxisAnnotationPaddingTop");
        }
        get xAxisAnnotationPaddingRight() {
            return this.cg;
        }
        set xAxisAnnotationPaddingRight(a) {
            this.cg = a;
            this.e("XAxisAnnotationPaddingRight");
        }
        get xAxisAnnotationPaddingBottom() {
            return this.ce;
        }
        set xAxisAnnotationPaddingBottom(a) {
            this.ce = a;
            this.e("XAxisAnnotationPaddingBottom");
        }
        get yAxisAnnotationPaddingLeft() {
            return this.ck;
        }
        set yAxisAnnotationPaddingLeft(a) {
            this.ck = a;
            this.e("YAxisAnnotationPaddingLeft");
        }
        get yAxisAnnotationPaddingTop() {
            return this.cm;
        }
        set yAxisAnnotationPaddingTop(a) {
            this.cm = a;
            this.e("YAxisAnnotationPaddingTop");
        }
        get yAxisAnnotationPaddingRight() {
            return this.cl;
        }
        set yAxisAnnotationPaddingRight(a) {
            this.cl = a;
            this.e("YAxisAnnotationPaddingRight");
        }
        get yAxisAnnotationPaddingBottom() {
            return this.cj;
        }
        set yAxisAnnotationPaddingBottom(a) {
            this.cj = a;
            this.e("YAxisAnnotationPaddingBottom");
        }
        get xAxisAnnotationStrokeThickness() {
            return this.ci;
        }
        set xAxisAnnotationStrokeThickness(a) {
            this.ci = a;
            this.e("XAxisAnnotationStrokeThickness");
        }
        get yAxisAnnotationTextColor() {
            return this.dc;
        }
        set yAxisAnnotationTextColor(a) {
            this.dc = a;
            this.e("YAxisAnnotationTextColor");
        }
        get yAxisAnnotationBackground() {
            return this.da;
        }
        set yAxisAnnotationBackground(a) {
            this.da = a;
            this.e("YAxisAnnotationBackground");
        }
        get yAxisAnnotationInterpolatedValuePrecision() {
            return this.cz;
        }
        set yAxisAnnotationInterpolatedValuePrecision(a) {
            this.cz = a;
            this.e("YAxisAnnotationInterpolatedValuePrecision");
        }
        get yAxisAnnotationOutline() {
            return this.db;
        }
        set yAxisAnnotationOutline(a) {
            this.db = a;
            this.e("YAxisAnnotationOutline");
        }
        get yAxisAnnotationStrokeThickness() {
            return this.cn;
        }
        set yAxisAnnotationStrokeThickness(a) {
            this.cn = a;
            this.e("YAxisAnnotationStrokeThickness");
        }
        get verticalLineVisibility() {
            return this.c6;
        }
        set verticalLineVisibility(a) {
            this.c6 = a;
            this.e("VerticalLineVisibility");
        }
        get horizontalLineVisibility() {
            return this.c3;
        }
        set horizontalLineVisibility(a) {
            this.c3 = a;
            this.e("HorizontalLineVisibility");
        }
        get skipUnknownValues() {
            return this.b9;
        }
        set skipUnknownValues(a) {
            this.b9 = a;
            this.e("SkipUnknownValues");
        }
    }
    CrosshairLayerDescription.$t = /*@__PURE__*/ markType(CrosshairLayerDescription, 'CrosshairLayerDescription', AnnotationLayerDescription.$);
    return CrosshairLayerDescription;
})();
//# sourceMappingURL=CrosshairLayerDescription.js.map
