/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let PolarBaseDescription = /*@__PURE__*/ (() => {
    class PolarBaseDescription extends MarkerSeriesDescription {
        constructor() {
            super();
            this.cs = null;
            this.cu = null;
            this.cr = null;
            this.ct = null;
            this.cf = false;
            this.ck = 0;
            this.cw = null;
            this.cv = null;
            this.cq = null;
            this.ci = 0;
            this.cl = 0;
            this.cm = 0;
            this.ce = false;
        }
        get_type() {
            return "PolarBase";
        }
        get angleMemberPath() {
            return this.cs;
        }
        set angleMemberPath(a) {
            this.cs = a;
            this.e("AngleMemberPath");
        }
        get radiusMemberPath() {
            return this.cu;
        }
        set radiusMemberPath(a) {
            this.cu = a;
            this.e("RadiusMemberPath");
        }
        get angleAxisRef() {
            return this.cr;
        }
        set angleAxisRef(a) {
            this.cr = a;
            this.e("AngleAxisRef");
        }
        get radiusAxisRef() {
            return this.ct;
        }
        set radiusAxisRef(a) {
            this.ct = a;
            this.e("RadiusAxisRef");
        }
        get useCartesianInterpolation() {
            return this.cf;
        }
        set useCartesianInterpolation(a) {
            this.cf = a;
            this.e("UseCartesianInterpolation");
        }
        get maximumMarkers() {
            return this.ck;
        }
        set maximumMarkers(a) {
            this.ck = a;
            this.e("MaximumMarkers");
        }
        get trendLineType() {
            return this.cw;
        }
        set trendLineType(a) {
            this.cw = a;
            this.e("TrendLineType");
        }
        get trendLineBrush() {
            return this.cv;
        }
        set trendLineBrush(a) {
            this.cv = a;
            this.e("TrendLineBrush");
        }
        get actualTrendLineBrush() {
            return this.cq;
        }
        set actualTrendLineBrush(a) {
            this.cq = a;
            this.e("ActualTrendLineBrush");
        }
        get trendLineThickness() {
            return this.ci;
        }
        set trendLineThickness(a) {
            this.ci = a;
            this.e("TrendLineThickness");
        }
        get trendLinePeriod() {
            return this.cl;
        }
        set trendLinePeriod(a) {
            this.cl = a;
            this.e("TrendLinePeriod");
        }
        get trendLineZIndex() {
            return this.cm;
        }
        set trendLineZIndex(a) {
            this.cm = a;
            this.e("TrendLineZIndex");
        }
        get clipSeriesToBounds() {
            return this.ce;
        }
        set clipSeriesToBounds(a) {
            this.ce = a;
            this.e("ClipSeriesToBounds");
        }
    }
    PolarBaseDescription.$t = /*@__PURE__*/ markType(PolarBaseDescription, 'PolarBaseDescription', MarkerSeriesDescription.$);
    return PolarBaseDescription;
})();
//# sourceMappingURL=PolarBaseDescription.js.map
