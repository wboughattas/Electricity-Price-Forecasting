/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let ShapeDataSourceDescription = /*@__PURE__*/ (() => {
    class ShapeDataSourceDescription extends Description {
        constructor() {
            super();
            this.g = null;
            this.f = null;
            this.j = false;
            this.p = null;
            this.l = null;
            this.o = null;
            this.n = null;
            this.m = null;
        }
        get_type() {
            return "ShapeDataSource";
        }
        get type() {
            return this.get_type();
        }
        get worldRect() {
            return this.g;
        }
        set worldRect(a) {
            this.g = a;
            this.e("WorldRect");
        }
        get computedWorldRect() {
            return this.f;
        }
        set computedWorldRect(a) {
            this.f = a;
            this.e("ComputedWorldRect");
        }
        get deferImportCompleted() {
            return this.j;
        }
        set deferImportCompleted(a) {
            this.j = a;
            this.e("DeferImportCompleted");
        }
        get shapefileSource() {
            return this.p;
        }
        set shapefileSource(a) {
            this.p = a;
            this.e("ShapefileSource");
        }
        get databaseSource() {
            return this.l;
        }
        set databaseSource(a) {
            this.l = a;
            this.e("DatabaseSource");
        }
        get importPendingRef() {
            return this.o;
        }
        set importPendingRef(a) {
            this.o = a;
            this.e("ImportPendingRef");
        }
        get importCompletedRef() {
            return this.n;
        }
        set importCompletedRef(a) {
            this.n = a;
            this.e("ImportCompletedRef");
        }
        get filterRef() {
            return this.m;
        }
        set filterRef(a) {
            this.m = a;
            this.e("FilterRef");
        }
    }
    ShapeDataSourceDescription.$t = /*@__PURE__*/ markType(ShapeDataSourceDescription, 'ShapeDataSourceDescription', Description.$);
    return ShapeDataSourceDescription;
})();
//# sourceMappingURL=ShapeDataSourceDescription.js.map
