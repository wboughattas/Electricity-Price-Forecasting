/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ButtonGroupSelectionChangedEventArgsDescriptionMetadata } from "./ButtonGroupSelectionChangedEventArgsDescriptionMetadata";
import { ButtonGroupDescription } from "./ButtonGroupDescription";
/**
 * @hidden
 */
export let ButtonGroupDescriptionMetadata = /*@__PURE__*/ (() => {
    class ButtonGroupDescriptionMetadata extends Base {
        static b(a) {
            if (ButtonGroupDescriptionMetadata.a == null) {
                ButtonGroupDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ButtonGroupDescriptionMetadata.c(a, ButtonGroupDescriptionMetadata.a);
                ButtonGroupSelectionChangedEventArgsDescriptionMetadata.d(a);
            }
        }
        static c(a, b) {
            b.item("DisplayType", "ExportedType:string:ButtonGroupDisplayStyle");
            b.item("BaseTheme", "ExportedType:string:BaseControlTheme");
            b.item("Density", "ExportedType:string:ControlDisplayDensity");
            b.item("ActualDensity", "ExportedType:string:ControlDisplayDensity");
            b.item("SelectedIndices", "Array:int");
            b.item("ActualItemCornerRadius", "Number:double");
            b.item("ActualItemBackgroundColor", "Brush");
            b.item("ActualItemDisabledBackgroundColor", "Brush");
            b.item("ActualItemTextColor", "Brush");
            b.item("ActualItemDisabledTextColor", "Brush");
            b.item("ActualItemBorderColor", "Brush");
            b.item("ActualItemDisabledBorderColor", "Brush");
            b.item("ActualItemBorderWidth", "Number:double");
            b.item("ActualSelectedItemBackgroundColor", "Brush");
            b.item("ActualSelectedItemTextColor", "Brush");
            b.item("ActualItemHoverBackgroundColor", "Brush");
            b.item("ActualItemHoverTextColor", "Brush");
            b.item("ActualSelectedItemHoverBackgroundColor", "Brush");
            b.item("ActualSelectedItemHoverTextColor", "Brush");
            b.item("ItemCornerRadius", "Number:double");
            b.item("ItemBackgroundColor", "Brush");
            b.item("ItemDisabledBackgroundColor", "Brush");
            b.item("ItemTextColor", "Brush");
            b.item("ItemDisabledTextColor", "Brush");
            b.item("ItemHoverBackgroundColor", "Brush");
            b.item("ItemBorderColor", "Brush");
            b.item("ItemDisabledBorderColor", "Brush");
            b.item("ItemBorderWidth", "Number:double");
            b.item("ItemHoverTextColor", "Brush");
            b.item("SelectedItemBackgroundColor", "Brush");
            b.item("SelectedItemTextColor", "Brush");
            b.item("SelectedItemHoverBackgroundColor", "Brush");
            b.item("SelectedItemHoverTextColor", "Brush");
            b.item("OutlinedItemCornerRadius", "Number:double");
            b.item("OutlinedItemBackgroundColor", "Brush");
            b.item("OutlinedItemDisabledBackgroundColor", "Brush");
            b.item("OutlinedItemTextColor", "Brush");
            b.item("OutlinedItemDisabledTextColor", "Brush");
            b.item("OutlinedItemHoverBackgroundColor", "Brush");
            b.item("OutlinedItemBorderColor", "Brush");
            b.item("OutlinedItemDisabledBorderColor", "Brush");
            b.item("OutlinedItemBorderWidth", "Number:double");
            b.item("OutlinedItemHoverTextColor", "Brush");
            b.item("OutlinedSelectedItemBackgroundColor", "Brush");
            b.item("OutlinedSelectedItemTextColor", "Brush");
            b.item("OutlinedSelectedItemHoverBackgroundColor", "Brush");
            b.item("OutlinedSelectedItemHoverTextColor", "Brush");
            b.item("FlatItemCornerRadius", "Number:double");
            b.item("FlatItemBackgroundColor", "Brush");
            b.item("FlatItemDisabledBackgroundColor", "Brush");
            b.item("FlatItemTextColor", "Brush");
            b.item("FlatItemDisabledTextColor", "Brush");
            b.item("FlatItemHoverBackgroundColor", "Brush");
            b.item("FlatItemBorderColor", "Brush");
            b.item("FlatItemDisabledBorderColor", "Brush");
            b.item("FlatItemBorderWidth", "Number:double");
            b.item("FlatItemHoverTextColor", "Brush");
            b.item("FlatSelectedItemBackgroundColor", "Brush");
            b.item("FlatSelectedItemTextColor", "Brush");
            b.item("FlatSelectedItemHoverBackgroundColor", "Brush");
            b.item("FlatSelectedItemHoverTextColor", "Brush");
            b.item("Orientation", "ExportedType:string:ButtonGroupOrientation");
            b.item("Id", "String");
            b.item("Disabled", "(w:IsDisabled,wf:IsDisabled)Boolean");
            b.item("IsMultiSelect", "Boolean");
            b.item("Buttons", "Collection:Button:ButtonGroupButtonCollection:Button");
            b.item("SelectionChangedRef", "EventRef::selectionChanged");
        }
        static d(a) {
            ButtonGroupDescriptionMetadata.b(a);
            a.n("ButtonGroup", () => new ButtonGroupDescription());
            a.m("ButtonGroup", ButtonGroupDescriptionMetadata.a);
        }
    }
    ButtonGroupDescriptionMetadata.$t = /*@__PURE__*/ markType(ButtonGroupDescriptionMetadata, 'ButtonGroupDescriptionMetadata');
    ButtonGroupDescriptionMetadata.a = null;
    return ButtonGroupDescriptionMetadata;
})();
//# sourceMappingURL=ButtonGroupDescriptionMetadata.js.map
