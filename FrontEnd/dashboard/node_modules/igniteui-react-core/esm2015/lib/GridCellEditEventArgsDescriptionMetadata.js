/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColumnDescriptionMetadata } from "./ColumnDescriptionMetadata";
import { GridCellEditEventArgsDescription } from "./GridCellEditEventArgsDescription";
/**
 * @hidden
 */
export let GridCellEditEventArgsDescriptionMetadata = /*@__PURE__*/ (() => {
    class GridCellEditEventArgsDescriptionMetadata extends Base {
        static b(a) {
            if (GridCellEditEventArgsDescriptionMetadata.a == null) {
                GridCellEditEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                GridCellEditEventArgsDescriptionMetadata.c(a, GridCellEditEventArgsDescriptionMetadata.a);
                ColumnDescriptionMetadata.d(a);
            }
        }
        static c(a, b) {
            b.item("Column", "ExportedType:Column");
            b.item("OldValueRef", "(w:OldValue,wf:OldValue)DataRef");
            b.item("NewValueRef", "(w:NewValue,wf:NewValue)DataRef");
            b.item("ErrorMessage", "String");
            b.item("Cancel", "Boolean");
        }
        static d(a) {
            GridCellEditEventArgsDescriptionMetadata.b(a);
            a.n("GridCellEditEventArgs", () => new GridCellEditEventArgsDescription());
            a.m("GridCellEditEventArgs", GridCellEditEventArgsDescriptionMetadata.a);
        }
    }
    GridCellEditEventArgsDescriptionMetadata.$t = /*@__PURE__*/ markType(GridCellEditEventArgsDescriptionMetadata, 'GridCellEditEventArgsDescriptionMetadata');
    GridCellEditEventArgsDescriptionMetadata.a = null;
    return GridCellEditEventArgsDescriptionMetadata;
})();
//# sourceMappingURL=GridCellEditEventArgsDescriptionMetadata.js.map
