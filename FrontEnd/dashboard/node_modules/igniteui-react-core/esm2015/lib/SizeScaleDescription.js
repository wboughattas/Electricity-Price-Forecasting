/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let SizeScaleDescription = /*@__PURE__*/ (() => {
    class SizeScaleDescription extends Description {
        constructor() {
            super();
            this.i = 0;
            this.h = 0;
            this.k = 0;
            this.j = 0;
            this.f = false;
            this.p = 0;
            this.r = null;
        }
        get_type() {
            return "SizeScale";
        }
        get type() {
            return this.get_type();
        }
        get globalMinimum() {
            return this.i;
        }
        set globalMinimum(a) {
            this.i = a;
            this.e("GlobalMinimum");
        }
        get globalMaximum() {
            return this.h;
        }
        set globalMaximum(a) {
            this.h = a;
            this.e("GlobalMaximum");
        }
        get minimumValue() {
            return this.k;
        }
        set minimumValue(a) {
            this.k = a;
            this.e("MinimumValue");
        }
        get maximumValue() {
            return this.j;
        }
        set maximumValue(a) {
            this.j = a;
            this.e("MaximumValue");
        }
        get isLogarithmic() {
            return this.f;
        }
        set isLogarithmic(a) {
            this.f = a;
            this.e("IsLogarithmic");
        }
        get logarithmBase() {
            return this.p;
        }
        set logarithmBase(a) {
            this.p = a;
            this.e("LogarithmBase");
        }
        get propertyUpdatedRef() {
            return this.r;
        }
        set propertyUpdatedRef(a) {
            this.r = a;
            this.e("PropertyUpdatedRef");
        }
    }
    SizeScaleDescription.$t = /*@__PURE__*/ markType(SizeScaleDescription, 'SizeScaleDescription', Description.$);
    return SizeScaleDescription;
})();
//# sourceMappingURL=SizeScaleDescription.js.map
