/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let LinearGaugeDescription = /*@__PURE__*/ (() => {
    class LinearGaugeDescription extends Description {
        constructor() {
            super();
            this.ct = null;
            this.z = 0;
            this.cv = null;
            this.cu = null;
            this.c9 = null;
            this.cx = null;
            this.co = null;
            this.a8 = 0;
            this.c4 = null;
            this.i = null;
            this.g = null;
            this.h = null;
            this.ag = 0;
            this.u = 0;
            this.af = 0;
            this.t = 0;
            this.a9 = 0;
            this.c3 = null;
            this.c1 = null;
            this.aw = 0;
            this.az = 0;
            this.ax = 0;
            this.a0 = 0;
            this.an = 0;
            this.ar = 0;
            this.am = 0;
            this.aq = 0;
            this.ap = 0;
            this.at = 0;
            this.ao = 0;
            this.as = 0;
            this.aa = 0;
            this.a4 = 0;
            this.a5 = 0;
            this.ac = 0;
            this.ab = 0;
            this.ad = 0;
            this.ae = 0;
            this.ah = 0;
            this.a6 = 0;
            this.a3 = 0;
            this.a7 = 0;
            this.c7 = null;
            this.cs = null;
            this.al = 0;
            this.c0 = null;
            this.c2 = null;
            this.au = 0;
            this.aj = 0;
            this.ai = 0;
            this.ak = 0;
            this.cz = null;
            this.o = false;
            this.cp = null;
            this.cq = null;
            this.y = 0;
            this.w = 0;
            this.x = 0;
            this.a1 = 0;
            this.ay = 0;
            this.c5 = null;
            this.c6 = null;
            this.a2 = 0;
            this.n = false;
            this.cy = null;
            this.f = null;
            this.ci = 0;
            this.ch = 0;
            this.p = false;
            this.cr = null;
            this.av = 0;
            this.v = 0;
            this.cw = null;
            this.cn = null;
            this.c8 = null;
            this.cm = null;
            this.cl = null;
        }
        get fontFamily() {
            return this.ct;
        }
        set fontFamily(a) {
            this.ct = a;
            this.e("FontFamily");
        }
        get fontSize() {
            return this.z;
        }
        set fontSize(a) {
            this.z = a;
            this.e("FontSize");
        }
        get fontWeight() {
            return this.cv;
        }
        set fontWeight(a) {
            this.cv = a;
            this.e("FontWeight");
        }
        get fontStyle() {
            return this.cu;
        }
        set fontStyle(a) {
            this.cu = a;
            this.e("FontStyle");
        }
        get width() {
            return this.c9;
        }
        set width(a) {
            this.c9 = a;
            this.e("Width");
        }
        get height() {
            return this.cx;
        }
        set height(a) {
            this.cx = a;
            this.e("Height");
        }
        get background() {
            return this.co;
        }
        set background(a) {
            this.co = a;
            this.e("Background");
        }
        get_type() {
            return "LinearGauge";
        }
        get type() {
            return this.get_type();
        }
        get transitionProgress() {
            return this.a8;
        }
        set transitionProgress(a) {
            this.a8 = a;
            this.e("TransitionProgress");
        }
        get orientation() {
            return this.c4;
        }
        set orientation(a) {
            this.c4 = a;
            this.e("Orientation");
        }
        get ranges() {
            return this.i;
        }
        set ranges(a) {
            this.i = a;
            this.e("Ranges");
        }
        get rangeBrushes() {
            return this.g;
        }
        set rangeBrushes(a) {
            this.g = a;
            this.e("RangeBrushes");
        }
        get rangeOutlines() {
            return this.h;
        }
        set rangeOutlines(a) {
            this.h = a;
            this.e("RangeOutlines");
        }
        get minimumValue() {
            return this.ag;
        }
        set minimumValue(a) {
            this.ag = a;
            this.e("MinimumValue");
        }
        get actualMinimumValue() {
            return this.u;
        }
        set actualMinimumValue(a) {
            this.u = a;
            this.e("ActualMinimumValue");
        }
        get maximumValue() {
            return this.af;
        }
        set maximumValue(a) {
            this.af = a;
            this.e("MaximumValue");
        }
        get actualMaximumValue() {
            return this.t;
        }
        set actualMaximumValue(a) {
            this.t = a;
            this.e("ActualMaximumValue");
        }
        get value() {
            return this.a9;
        }
        set value(a) {
            this.a9 = a;
            this.e("Value");
        }
        get needleShape() {
            return this.c3;
        }
        set needleShape(a) {
            this.c3 = a;
            this.e("NeedleShape");
        }
        get needleName() {
            return this.c1;
        }
        set needleName(a) {
            this.c1 = a;
            this.e("NeedleName");
        }
        get rangeInnerExtent() {
            return this.aw;
        }
        set rangeInnerExtent(a) {
            this.aw = a;
            this.e("RangeInnerExtent");
        }
        get scaleInnerExtent() {
            return this.az;
        }
        set scaleInnerExtent(a) {
            this.az = a;
            this.e("ScaleInnerExtent");
        }
        get rangeOuterExtent() {
            return this.ax;
        }
        set rangeOuterExtent(a) {
            this.ax = a;
            this.e("RangeOuterExtent");
        }
        get scaleOuterExtent() {
            return this.a0;
        }
        set scaleOuterExtent(a) {
            this.a0 = a;
            this.e("ScaleOuterExtent");
        }
        get needleInnerExtent() {
            return this.an;
        }
        set needleInnerExtent(a) {
            this.an = a;
            this.e("NeedleInnerExtent");
        }
        get needleOuterExtent() {
            return this.ar;
        }
        set needleOuterExtent(a) {
            this.ar = a;
            this.e("NeedleOuterExtent");
        }
        get needleInnerBaseWidth() {
            return this.am;
        }
        set needleInnerBaseWidth(a) {
            this.am = a;
            this.e("NeedleInnerBaseWidth");
        }
        get needleOuterBaseWidth() {
            return this.aq;
        }
        set needleOuterBaseWidth(a) {
            this.aq = a;
            this.e("NeedleOuterBaseWidth");
        }
        get needleInnerPointWidth() {
            return this.ap;
        }
        set needleInnerPointWidth(a) {
            this.ap = a;
            this.e("NeedleInnerPointWidth");
        }
        get needleOuterPointWidth() {
            return this.at;
        }
        set needleOuterPointWidth(a) {
            this.at = a;
            this.e("NeedleOuterPointWidth");
        }
        get needleInnerPointExtent() {
            return this.ao;
        }
        set needleInnerPointExtent(a) {
            this.ao = a;
            this.e("NeedleInnerPointExtent");
        }
        get needleOuterPointExtent() {
            return this.as;
        }
        set needleOuterPointExtent(a) {
            this.as = a;
            this.e("NeedleOuterPointExtent");
        }
        get interval() {
            return this.aa;
        }
        set interval(a) {
            this.aa = a;
            this.e("Interval");
        }
        get ticksPostInitial() {
            return this.a4;
        }
        set ticksPostInitial(a) {
            this.a4 = a;
            this.e("TicksPostInitial");
        }
        get ticksPreTerminal() {
            return this.a5;
        }
        set ticksPreTerminal(a) {
            this.a5 = a;
            this.e("TicksPreTerminal");
        }
        get labelInterval() {
            return this.ac;
        }
        set labelInterval(a) {
            this.ac = a;
            this.e("LabelInterval");
        }
        get labelExtent() {
            return this.ab;
        }
        set labelExtent(a) {
            this.ab = a;
            this.e("LabelExtent");
        }
        get labelsPostInitial() {
            return this.ad;
        }
        set labelsPostInitial(a) {
            this.ad = a;
            this.e("LabelsPostInitial");
        }
        get labelsPreTerminal() {
            return this.ae;
        }
        set labelsPreTerminal(a) {
            this.ae = a;
            this.e("LabelsPreTerminal");
        }
        get minorTickCount() {
            return this.ah;
        }
        set minorTickCount(a) {
            this.ah = a;
            this.e("MinorTickCount");
        }
        get tickStartExtent() {
            return this.a6;
        }
        set tickStartExtent(a) {
            this.a6 = a;
            this.e("TickStartExtent");
        }
        get tickEndExtent() {
            return this.a3;
        }
        set tickEndExtent(a) {
            this.a3 = a;
            this.e("TickEndExtent");
        }
        get tickStrokeThickness() {
            return this.a7;
        }
        set tickStrokeThickness(a) {
            this.a7 = a;
            this.e("TickStrokeThickness");
        }
        get tickBrush() {
            return this.c7;
        }
        set tickBrush(a) {
            this.c7 = a;
            this.e("TickBrush");
        }
        get fontBrush() {
            return this.cs;
        }
        set fontBrush(a) {
            this.cs = a;
            this.e("FontBrush");
        }
        get needleBreadth() {
            return this.al;
        }
        set needleBreadth(a) {
            this.al = a;
            this.e("NeedleBreadth");
        }
        get needleBrush() {
            return this.c0;
        }
        set needleBrush(a) {
            this.c0 = a;
            this.e("NeedleBrush");
        }
        get needleOutline() {
            return this.c2;
        }
        set needleOutline(a) {
            this.c2 = a;
            this.e("NeedleOutline");
        }
        get needleStrokeThickness() {
            return this.au;
        }
        set needleStrokeThickness(a) {
            this.au = a;
            this.e("NeedleStrokeThickness");
        }
        get minorTickStartExtent() {
            return this.aj;
        }
        set minorTickStartExtent(a) {
            this.aj = a;
            this.e("MinorTickStartExtent");
        }
        get minorTickEndExtent() {
            return this.ai;
        }
        set minorTickEndExtent(a) {
            this.ai = a;
            this.e("MinorTickEndExtent");
        }
        get minorTickStrokeThickness() {
            return this.ak;
        }
        set minorTickStrokeThickness(a) {
            this.ak = a;
            this.e("MinorTickStrokeThickness");
        }
        get minorTickBrush() {
            return this.cz;
        }
        set minorTickBrush(a) {
            this.cz = a;
            this.e("MinorTickBrush");
        }
        get isScaleInverted() {
            return this.o;
        }
        set isScaleInverted(a) {
            this.o = a;
            this.e("IsScaleInverted");
        }
        get backingBrush() {
            return this.cp;
        }
        set backingBrush(a) {
            this.cp = a;
            this.e("BackingBrush");
        }
        get backingOutline() {
            return this.cq;
        }
        set backingOutline(a) {
            this.cq = a;
            this.e("BackingOutline");
        }
        get backingStrokeThickness() {
            return this.y;
        }
        set backingStrokeThickness(a) {
            this.y = a;
            this.e("BackingStrokeThickness");
        }
        get backingInnerExtent() {
            return this.w;
        }
        set backingInnerExtent(a) {
            this.w = a;
            this.e("BackingInnerExtent");
        }
        get backingOuterExtent() {
            return this.x;
        }
        set backingOuterExtent(a) {
            this.x = a;
            this.e("BackingOuterExtent");
        }
        get scaleStartExtent() {
            return this.a1;
        }
        set scaleStartExtent(a) {
            this.a1 = a;
            this.e("ScaleStartExtent");
        }
        get scaleEndExtent() {
            return this.ay;
        }
        set scaleEndExtent(a) {
            this.ay = a;
            this.e("ScaleEndExtent");
        }
        get scaleBrush() {
            return this.c5;
        }
        set scaleBrush(a) {
            this.c5 = a;
            this.e("ScaleBrush");
        }
        get scaleOutline() {
            return this.c6;
        }
        set scaleOutline(a) {
            this.c6 = a;
            this.e("ScaleOutline");
        }
        get scaleStrokeThickness() {
            return this.a2;
        }
        set scaleStrokeThickness(a) {
            this.a2 = a;
            this.e("ScaleStrokeThickness");
        }
        get isNeedleDraggingEnabled() {
            return this.n;
        }
        set isNeedleDraggingEnabled(a) {
            this.n = a;
            this.e("IsNeedleDraggingEnabled");
        }
        get labelFormat() {
            return this.cy;
        }
        set labelFormat(a) {
            this.cy = a;
            this.e("LabelFormat");
        }
        get labelFormatSpecifiers() {
            return this.f;
        }
        set labelFormatSpecifiers(a) {
            this.f = a;
            this.e("LabelFormatSpecifiers");
        }
        get transitionDuration() {
            return this.ci;
        }
        set transitionDuration(a) {
            this.ci = a;
            this.e("TransitionDuration");
        }
        get showToolTipTimeout() {
            return this.ch;
        }
        set showToolTipTimeout(a) {
            this.ch = a;
            this.e("ShowToolTipTimeout");
        }
        get showToolTip() {
            return this.p;
        }
        set showToolTip(a) {
            this.p = a;
            this.e("ShowToolTip");
        }
        get font() {
            return this.cr;
        }
        set font(a) {
            this.cr = a;
            this.e("Font");
        }
        get pixelScalingRatio() {
            return this.av;
        }
        set pixelScalingRatio(a) {
            this.av = a;
            this.e("PixelScalingRatio");
        }
        get actualPixelScalingRatio() {
            return this.v;
        }
        set actualPixelScalingRatio(a) {
            this.v = a;
            this.e("ActualPixelScalingRatio");
        }
        get formatLabelRef() {
            return this.cw;
        }
        set formatLabelRef(a) {
            this.cw = a;
            this.e("FormatLabelRef");
        }
        get alignLabelRef() {
            return this.cn;
        }
        set alignLabelRef(a) {
            this.cn = a;
            this.e("AlignLabelRef");
        }
        get valueChangedRef() {
            return this.c8;
        }
        set valueChangedRef(a) {
            this.c8 = a;
            this.e("ValueChangedRef");
        }
        get actualMinimumValueChangeRef() {
            return this.cm;
        }
        set actualMinimumValueChangeRef(a) {
            this.cm = a;
            this.e("ActualMinimumValueChangeRef");
        }
        get actualMaximumValueChangeRef() {
            return this.cl;
        }
        set actualMaximumValueChangeRef(a) {
            this.cl = a;
            this.e("ActualMaximumValueChangeRef");
        }
    }
    LinearGaugeDescription.$t = /*@__PURE__*/ markType(LinearGaugeDescription, 'LinearGaugeDescription', Description.$);
    return LinearGaugeDescription;
})();
//# sourceMappingURL=LinearGaugeDescription.js.map
