/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { TreemapNodeStyleDescription } from "./TreemapNodeStyleDescription";
/**
 * @hidden
 */
export let TreemapNodeStyleDescriptionMetadata = /*@__PURE__*/ (() => {
    class TreemapNodeStyleDescriptionMetadata extends Base {
        static b(a) {
            if (TreemapNodeStyleDescriptionMetadata.a == null) {
                TreemapNodeStyleDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                TreemapNodeStyleDescriptionMetadata.c(a, TreemapNodeStyleDescriptionMetadata.a);
            }
        }
        static c(a, b) {
            b.item("HeaderHoverBackground", "Brush");
            b.item("HeaderBackground", "Brush");
            b.item("HeaderTextColor", "Brush");
            b.item("Label", "String");
            b.item("TextColor", "Brush");
            b.item("HeaderHoverTextColor", "Brush");
            b.item("HeaderLabelLeftMargin", "Number:double");
            b.item("HeaderLabelTopMargin", "Number:double");
            b.item("HeaderLabelRightMargin", "Number:double");
            b.item("HeaderLabelBottomMargin", "Number:double");
            b.item("LabelLeftMargin", "Number:double");
            b.item("LabelTopMargin", "Number:double");
            b.item("LabelRightMargin", "Number:double");
            b.item("LabelBottomMargin", "Number:double");
            b.item("HeaderHeight", "Number:double");
            b.item("LabelHorizontalAlignment", "ExportedType:string:HorizontalAlignment");
            b.item("LabelVerticalAlignment", "ExportedType:string:VerticalAlignment");
            b.item("Fill", "Brush");
            b.item("Outline", "Brush");
            b.item("StrokeThickness", "Number:double");
        }
        static d(a) {
            TreemapNodeStyleDescriptionMetadata.b(a);
            a.n("TreemapNodeStyle", () => new TreemapNodeStyleDescription());
            a.m("TreemapNodeStyle", TreemapNodeStyleDescriptionMetadata.a);
        }
    }
    TreemapNodeStyleDescriptionMetadata.$t = /*@__PURE__*/ markType(TreemapNodeStyleDescriptionMetadata, 'TreemapNodeStyleDescriptionMetadata');
    TreemapNodeStyleDescriptionMetadata.a = null;
    return TreemapNodeStyleDescriptionMetadata;
})();
//# sourceMappingURL=TreemapNodeStyleDescriptionMetadata.js.map
