/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { TransactionStateDescription } from "./TransactionStateDescription";
/**
 * @hidden
 */
export let TransactionStateDescriptionMetadata = /*@__PURE__*/ (() => {
    class TransactionStateDescriptionMetadata extends Base {
        static b(a) {
            if (TransactionStateDescriptionMetadata.a == null) {
                TransactionStateDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                TransactionStateDescriptionMetadata.c(a, TransactionStateDescriptionMetadata.a);
            }
        }
        static c(a, b) {
            b.item("IdRef", "(w:ID,wf:ID)DataRef");
            b.item("TransactionType", "ExportedType:string:TransactionType");
            b.item("ValueRef", "(w:Value,wf:Value)DataRef");
            b.item("VersionRef", "(w:Version,wf:Version)DataRef");
        }
        static d(a) {
            TransactionStateDescriptionMetadata.b(a);
            a.n("TransactionState", () => new TransactionStateDescription());
            a.m("TransactionState", TransactionStateDescriptionMetadata.a);
        }
    }
    TransactionStateDescriptionMetadata.$t = /*@__PURE__*/ markType(TransactionStateDescriptionMetadata, 'TransactionStateDescriptionMetadata');
    TransactionStateDescriptionMetadata.a = null;
    return TransactionStateDescriptionMetadata;
})();
//# sourceMappingURL=TransactionStateDescriptionMetadata.js.map
