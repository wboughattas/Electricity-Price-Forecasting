/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DataGridExpansionIndicatorDescription } from "./DataGridExpansionIndicatorDescription";
/**
 * @hidden
 */
export let DataGridExpansionIndicatorDescriptionMetadata = /*@__PURE__*/ (() => {
    class DataGridExpansionIndicatorDescriptionMetadata extends Base {
        static b(a) {
            if (DataGridExpansionIndicatorDescriptionMetadata.a == null) {
                DataGridExpansionIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                DataGridExpansionIndicatorDescriptionMetadata.c(a, DataGridExpansionIndicatorDescriptionMetadata.a);
            }
        }
        static c(a, b) {
            b.item("IsExpanded", "Boolean");
            b.item("IconColor", "Brush");
            b.item("IsAnimationEnabled", "Boolean");
            b.item("PixelScalingRatio", "Number:double");
            b.item("ActualPixelScalingRatio", "Number:double");
        }
        static d(a) {
            DataGridExpansionIndicatorDescriptionMetadata.b(a);
            a.n("DataGridExpansionIndicator", () => new DataGridExpansionIndicatorDescription());
            a.m("DataGridExpansionIndicator", DataGridExpansionIndicatorDescriptionMetadata.a);
        }
    }
    DataGridExpansionIndicatorDescriptionMetadata.$t = /*@__PURE__*/ markType(DataGridExpansionIndicatorDescriptionMetadata, 'DataGridExpansionIndicatorDescriptionMetadata');
    DataGridExpansionIndicatorDescriptionMetadata.a = null;
    return DataGridExpansionIndicatorDescriptionMetadata;
})();
//# sourceMappingURL=DataGridExpansionIndicatorDescriptionMetadata.js.map
