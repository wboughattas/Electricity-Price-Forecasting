/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DataGridExpansionIndicatorDescription = /*@__PURE__*/ (() => {
    class DataGridExpansionIndicatorDescription extends Description {
        constructor() {
            super();
            this.g = false;
            this.n = null;
            this.f = false;
            this.k = 0;
            this.j = 0;
        }
        get_type() {
            return "DataGridExpansionIndicator";
        }
        get type() {
            return this.get_type();
        }
        get isExpanded() {
            return this.g;
        }
        set isExpanded(a) {
            this.g = a;
            this.e("IsExpanded");
        }
        get iconColor() {
            return this.n;
        }
        set iconColor(a) {
            this.n = a;
            this.e("IconColor");
        }
        get isAnimationEnabled() {
            return this.f;
        }
        set isAnimationEnabled(a) {
            this.f = a;
            this.e("IsAnimationEnabled");
        }
        get pixelScalingRatio() {
            return this.k;
        }
        set pixelScalingRatio(a) {
            this.k = a;
            this.e("PixelScalingRatio");
        }
        get actualPixelScalingRatio() {
            return this.j;
        }
        set actualPixelScalingRatio(a) {
            this.j = a;
            this.e("ActualPixelScalingRatio");
        }
    }
    DataGridExpansionIndicatorDescription.$t = /*@__PURE__*/ markType(DataGridExpansionIndicatorDescription, 'DataGridExpansionIndicatorDescription', Description.$);
    return DataGridExpansionIndicatorDescription;
})();
//# sourceMappingURL=DataGridExpansionIndicatorDescription.js.map
