/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ValueChangedEventArgsDescriptionMetadata } from "./ValueChangedEventArgsDescriptionMetadata";
import { CalendarDescription } from "./CalendarDescription";
/**
 * @hidden
 */
export let CalendarDescriptionMetadata = /*@__PURE__*/ (() => {
    class CalendarDescriptionMetadata extends Base {
        static b(a) {
            if (CalendarDescriptionMetadata.a == null) {
                CalendarDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                CalendarDescriptionMetadata.c(a, CalendarDescriptionMetadata.a);
                ValueChangedEventArgsDescriptionMetadata.d(a);
            }
        }
        static c(a, b) {
            b.item("Value", "Date");
            b.item("Density", "ExportedType:string:ControlDisplayDensity");
            b.item("BaseTheme", "ExportedType:string:BaseControlTheme");
            b.item("BackgroundColor", "Brush");
            b.item("SelectedDateBackgroundColor", "Brush");
            b.item("SelectedFocusDateBackgroundColor", "Brush");
            b.item("FocusDateBackgroundColor", "Brush");
            b.item("HoverBackgroundColor", "Brush");
            b.item("TextColor", "Brush");
            b.item("SelectedDateTextColor", "Brush");
            b.item("FocusDateTextColor", "Brush");
            b.item("CurrentDateTextColor", "Brush");
            b.item("FontFamily", "(w:FontFamily/FontFamilyTransform,wf:FontFamily,web:textStyle/FontFamilyTransform)String");
            b.item("FontSize", "(w:FontSize,wf:FontSize,web:textStyle/FontSizeTransform)Number:double");
            b.item("FontStyle", "(w:FontStyle/FontStyleTransform,wf:FontFamily/FontStyleTransform,web:textStyle/FontStyleTransform)String");
            b.item("FontWeight", "(w:FontWeight/FontWeightTransform,wf:FontFamily/FontWeightTransform,web:textStyle/FontWeightTransform)String");
            b.item("ValueChangedRef", "EventRef::valueChanged");
        }
        static d(a) {
            CalendarDescriptionMetadata.b(a);
            a.n("Calendar", () => new CalendarDescription());
            a.m("Calendar", CalendarDescriptionMetadata.a);
        }
    }
    CalendarDescriptionMetadata.$t = /*@__PURE__*/ markType(CalendarDescriptionMetadata, 'CalendarDescriptionMetadata');
    CalendarDescriptionMetadata.a = null;
    return CalendarDescriptionMetadata;
})();
//# sourceMappingURL=CalendarDescriptionMetadata.js.map
