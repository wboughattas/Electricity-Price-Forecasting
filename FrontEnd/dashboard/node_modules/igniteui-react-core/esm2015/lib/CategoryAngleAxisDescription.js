/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CategoryAxisBaseDescription } from "./CategoryAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let CategoryAngleAxisDescription = /*@__PURE__*/ (() => {
    class CategoryAngleAxisDescription extends CategoryAxisBaseDescription {
        constructor() {
            super();
            this.dk = 0;
            this.di = 0;
            this.dg = 0;
            this.dj = 0;
            this.dh = 0;
            this.dr = null;
        }
        get_type() {
            return "CategoryAngleAxis";
        }
        get startAngleOffset() {
            return this.dk;
        }
        set startAngleOffset(a) {
            this.dk = a;
            this.e("StartAngleOffset");
        }
        get interval() {
            return this.di;
        }
        set interval(a) {
            this.di = a;
            this.e("Interval");
        }
        get actualInterval() {
            return this.dg;
        }
        set actualInterval(a) {
            this.dg = a;
            this.e("ActualInterval");
        }
        get minorInterval() {
            return this.dj;
        }
        set minorInterval(a) {
            this.dj = a;
            this.e("MinorInterval");
        }
        get actualMinorInterval() {
            return this.dh;
        }
        set actualMinorInterval(a) {
            this.dh = a;
            this.e("ActualMinorInterval");
        }
        get actualIntervalChangeRef() {
            return this.dr;
        }
        set actualIntervalChangeRef(a) {
            this.dr = a;
            this.e("ActualIntervalChangeRef");
        }
    }
    CategoryAngleAxisDescription.$t = /*@__PURE__*/ markType(CategoryAngleAxisDescription, 'CategoryAngleAxisDescription', CategoryAxisBaseDescription.$);
    return CategoryAngleAxisDescription;
})();
//# sourceMappingURL=CategoryAngleAxisDescription.js.map
