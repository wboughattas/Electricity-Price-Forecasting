/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DatePickerDescription = /*@__PURE__*/ (() => {
    class DatePickerDescription extends Description {
        constructor() {
            super();
            this.h = new Date();
            this.m = null;
            this.l = null;
            this.p = null;
            this.j = 0;
            this.q = null;
            this.r = null;
            this.o = null;
            this.n = null;
            this.f = false;
            this.s = null;
        }
        get_type() {
            return "DatePicker";
        }
        get type() {
            return this.get_type();
        }
        get value() {
            return this.h;
        }
        set value(a) {
            this.h = a;
            this.e("Value");
        }
        get density() {
            return this.m;
        }
        set density(a) {
            this.m = a;
            this.e("Density");
        }
        get baseTheme() {
            return this.l;
        }
        set baseTheme(a) {
            this.l = a;
            this.e("BaseTheme");
        }
        get textFontFamily() {
            return this.p;
        }
        set textFontFamily(a) {
            this.p = a;
            this.e("TextFontFamily");
        }
        get textFontSize() {
            return this.j;
        }
        set textFontSize(a) {
            this.j = a;
            this.e("TextFontSize");
        }
        get textFontStyle() {
            return this.q;
        }
        set textFontStyle(a) {
            this.q = a;
            this.e("TextFontStyle");
        }
        get textFontWeight() {
            return this.r;
        }
        set textFontWeight(a) {
            this.r = a;
            this.e("TextFontWeight");
        }
        get textColor() {
            return this.o;
        }
        set textColor(a) {
            this.o = a;
            this.e("TextColor");
        }
        get iconColor() {
            return this.n;
        }
        set iconColor(a) {
            this.n = a;
            this.e("IconColor");
        }
        get showClearButton() {
            return this.f;
        }
        set showClearButton(a) {
            this.f = a;
            this.e("ShowClearButton");
        }
        get valueChangedRef() {
            return this.s;
        }
        set valueChangedRef(a) {
            this.s = a;
            this.e("ValueChangedRef");
        }
    }
    DatePickerDescription.$t = /*@__PURE__*/ markType(DatePickerDescription, 'DatePickerDescription', Description.$);
    return DatePickerDescription;
})();
//# sourceMappingURL=DatePickerDescription.js.map
