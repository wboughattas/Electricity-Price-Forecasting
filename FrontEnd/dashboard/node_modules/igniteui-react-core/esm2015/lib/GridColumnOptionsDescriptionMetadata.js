/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { FilterApplyButtonClickEventArgsDescriptionMetadata } from "./FilterApplyButtonClickEventArgsDescriptionMetadata";
import { FilterCancelButtonClickEventArgsDescriptionMetadata } from "./FilterCancelButtonClickEventArgsDescriptionMetadata";
import { GridColumnOptionsBaseDescriptionMetadata } from "./GridColumnOptionsBaseDescriptionMetadata";
import { GridColumnOptionsDescription } from "./GridColumnOptionsDescription";
/**
 * @hidden
 */
export let GridColumnOptionsDescriptionMetadata = /*@__PURE__*/ (() => {
    class GridColumnOptionsDescriptionMetadata extends Base {
        static b(a) {
            if (GridColumnOptionsDescriptionMetadata.a == null) {
                GridColumnOptionsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                GridColumnOptionsDescriptionMetadata.c(a, GridColumnOptionsDescriptionMetadata.a);
                FilterApplyButtonClickEventArgsDescriptionMetadata.d(a);
                FilterCancelButtonClickEventArgsDescriptionMetadata.d(a);
            }
        }
        static c(a, b) {
            GridColumnOptionsBaseDescriptionMetadata.c(a, b);
            b.item("ColumnNameFontFamily", "(w:ColumnNameFontFamily/FontFamilyTransform,wf:ColumnNameFontFamily,web:columnNameTextStyle/FontFamilyTransform)String");
            b.item("ColumnNameFontSize", "(w:ColumnNameFontSize,wf:ColumnNameFontSize,web:columnNameTextStyle/FontSizeTransform)Number:double");
            b.item("ColumnNameFontStyle", "(w:ColumnNameFontStyle/FontStyleTransform,wf:ColumnNameFontFamily/FontStyleTransform,web:columnNameTextStyle/FontStyleTransform)String");
            b.item("ColumnNameFontWeight", "(w:ColumnNameFontWeight/FontWeightTransform,wf:ColumnNameFontFamily/FontWeightTransform,web:columnNameTextStyle/FontWeightTransform)String");
            b.item("PaddingLeft", "Number:int");
            b.item("PaddingTop", "Number:int");
            b.item("PaddingRight", "Number:int");
            b.item("PaddingBottom", "Number:int");
            b.item("HeaderVisible", "Boolean");
            b.item("SortOptionsVisible", "Boolean");
            b.item("MoveOptionsVisible", "Boolean");
            b.item("PinOptionsVisible", "Boolean");
            b.item("HideOptionsVisible", "Boolean");
            b.item("GroupOptionsVisible", "Boolean");
            b.item("FilterOptionsVisible", "Boolean");
            b.item("SortHeaderCaption", "String");
            b.item("SortAscendingCaption", "String");
            b.item("SortDescendingCaption", "String");
            b.item("MoveHeaderCaption", "String");
            b.item("MoveLeftCaption", "String");
            b.item("MoveRightCaption", "String");
            b.item("PinHeaderCaption", "String");
            b.item("PinLeftCaption", "String");
            b.item("PinRightCaption", "String");
            b.item("ApplyFiltersButtonCaption", "String");
            b.item("CancelFiltersButtonCaption", "String");
            b.item("ClearColumnFiltersCaption", "String");
            b.item("FilterListDensity", "ExportedType:string:ControlDisplayDensity");
            b.item("ActualFilterListDensity", "ExportedType:string:ControlDisplayDensity");
            b.item("FilterListPlaceholderText", "String");
            b.item("FilterApplyButtonClickRef", "EventRef::filterApplyButtonClick");
            b.item("FilterCancelButtonClickRef", "EventRef::filterCancelButtonClick");
        }
        static d(a) {
            GridColumnOptionsDescriptionMetadata.b(a);
            a.n("GridColumnOptions", () => new GridColumnOptionsDescription());
            a.m("GridColumnOptions", GridColumnOptionsDescriptionMetadata.a);
        }
    }
    GridColumnOptionsDescriptionMetadata.$t = /*@__PURE__*/ markType(GridColumnOptionsDescriptionMetadata, 'GridColumnOptionsDescriptionMetadata');
    GridColumnOptionsDescriptionMetadata.a = null;
    return GridColumnOptionsDescriptionMetadata;
})();
//# sourceMappingURL=GridColumnOptionsDescriptionMetadata.js.map
