import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class StackedFragmentSeriesDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private a4;
    brush: string;
    private at;
    actualBrush: string;
    private h;
    isDropShadowEnabled: boolean;
    private f;
    actualIsDropShadowEnabled: boolean;
    private z;
    shadowBlur: number;
    private r;
    actualShadowBlur: number;
    private bg;
    shadowColor: string;
    private a2;
    actualShadowColor: string;
    private i;
    useSingleShadow: boolean;
    private g;
    actualUseSingleShadow: boolean;
    private aa;
    shadowOffsetX: number;
    private s;
    actualShadowOffsetX: number;
    private ab;
    shadowOffsetY: number;
    private t;
    actualShadowOffsetY: number;
    private a5;
    legendItemBadgeTemplateRef: string;
    private au;
    actualLegendItemBadgeTemplateRef: string;
    private a6;
    legendItemTemplateRef: string;
    private av;
    actualLegendItemTemplateRef: string;
    private a7;
    legendItemVisibility: string;
    private aw;
    actualLegendItemVisibility: string;
    private a8;
    markerBrush: string;
    private ax;
    actualMarkerBrush: string;
    private a9;
    markerOutline: string;
    private ay;
    actualMarkerOutline: string;
    private ba;
    markerTemplateRef: string;
    private az;
    actualMarkerTemplateRef: string;
    private bb;
    markerType: string;
    private a0;
    actualMarkerType: string;
    private bc;
    name: string;
    private w;
    opacity: number;
    private o;
    actualOpacity: number;
    private bd;
    outline: string;
    private a1;
    actualOutline: string;
    private v;
    areaFillOpacity: number;
    private n;
    actualAreaFillOpacity: number;
    private x;
    radiusX: number;
    private p;
    actualRadiusX: number;
    private y;
    radiusY: number;
    private q;
    actualRadiusY: number;
    private ac;
    thickness: number;
    private u;
    actualThickness: number;
    private bh;
    titleRef: string;
    private bi;
    valueMemberPath: string;
    private bj;
    visibility: string;
    private a3;
    actualVisibility: string;
    private be;
    parentOrLocalBrush: string;
    private bf;
    propertyUpdatedRef: string;
}
