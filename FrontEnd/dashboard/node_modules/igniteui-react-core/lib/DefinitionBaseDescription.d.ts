import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class DefinitionBaseDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private av;
    background: string;
    private aw;
    border: string;
    private al;
    activationBorder: string;
    private a0;
    errorBorder: string;
    private ao;
    actualBorder: string;
    private s;
    borderLeftWidth: number;
    private u;
    borderTopWidth: number;
    private t;
    borderRightWidth: number;
    private r;
    borderBottomWidth: number;
    private o;
    activationBorderLeftWidth: number;
    private q;
    activationBorderTopWidth: number;
    private p;
    activationBorderRightWidth: number;
    private n;
    activationBorderBottomWidth: number;
    private w;
    errorBorderLeftWidth: number;
    private y;
    errorBorderTopWidth: number;
    private x;
    errorBorderRightWidth: number;
    private v;
    errorBorderBottomWidth: number;
    private an;
    actualBackground: string;
    private am;
    actualActivationBorder: string;
    private ap;
    actualErrorBorder: string;
    private a8;
    stickyRowBackground: string;
    private at;
    actualStickyRowBackground: string;
    private a7;
    pinnedRowBackground: string;
    private as;
    actualPinnedRowBackground: string;
    private a5;
    lastStickyRowBackground: string;
    private aq;
    actualLastStickyRowBackground: string;
    private g;
    contentOpacity: number;
    private a4;
    horizontalAlignment: string;
    private ba;
    verticalAlignment: string;
    private a6;
    lineBreakMode: string;
    private ar;
    actualLineBreakMode: string;
    private a9;
    textColor: string;
    private au;
    actualTextColor: string;
    private i;
    pinnedRowOpacity: number;
    private f;
    actualPinnedRowOpacity: number;
    private a1;
    fontFamily: string;
    private h;
    fontSize: number;
    private a2;
    fontStyle: string;
    private a3;
    fontWeight: string;
    private ay;
    dataBindingRef: string;
    private az;
    dataBoundRef: string;
    private ax;
    cellStyleKeyRequestedRef: string;
}
