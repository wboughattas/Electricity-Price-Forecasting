import { Description } from "./Description";
import { TreemapNodeStyleMappingDescription } from "./TreemapNodeStyleMappingDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class TreemapDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private cu;
    valueMemberPath: string;
    private cs;
    rootTitle: string;
    private bq;
    breadcrumbSequence: string;
    private cr;
    parentIdMemberPath: string;
    private cd;
    labelMemberPath: string;
    private br;
    customValueMemberPath: string;
    private ca;
    idMemberPath: string;
    private bt;
    dataSourceRef: string;
    private f;
    fillBrushes: string[];
    private g;
    styleMappings: TreemapNodeStyleMappingDescription[];
    private bu;
    fillScaleMode: string;
    private j;
    isFillScaleLogarithmic: boolean;
    private bl;
    fillScaleLogarithmBase: number;
    private o;
    fillScaleMinimumValue: number;
    private n;
    fillScaleMaximumValue: number;
    private cf;
    labelVerticalFitMode: string;
    private cc;
    labelHorizontalFitMode: string;
    private cq;
    overlayHeaderHoverBackground: string;
    private b5;
    headerHoverBackground: string;
    private bz;
    headerBackground: string;
    private cp;
    overlayHeaderBackground: string;
    private b8;
    headerTextColor: string;
    private b0;
    headerDarkTextColor: string;
    private ct;
    textColor: string;
    private bs;
    darkTextColor: string;
    private b7;
    headerHoverTextColor: string;
    private b6;
    headerHoverDarkTextColor: string;
    private bw;
    fontFamily: string;
    private p;
    fontSize: number;
    private bx;
    fontStyle: string;
    private by;
    fontWeight: string;
    private b2;
    headerFontFamily: string;
    private q;
    headerFontSize: number;
    private b3;
    headerFontStyle: string;
    private b4;
    headerFontWeight: string;
    private b1;
    headerDisplayMode: string;
    private t;
    headerLabelLeftMargin: number;
    private v;
    headerLabelTopMargin: number;
    private u;
    headerLabelRightMargin: number;
    private s;
    headerLabelBottomMargin: number;
    private ad;
    overlayHeaderLabelLeftMargin: number;
    private af;
    overlayHeaderLabelTopMargin: number;
    private ae;
    overlayHeaderLabelRightMargin: number;
    private ac;
    overlayHeaderLabelBottomMargin: number;
    private y;
    labelLeftMargin: number;
    private aa;
    labelTopMargin: number;
    private z;
    labelRightMargin: number;
    private x;
    labelBottomMargin: number;
    private ai;
    parentNodeLeftMargin: number;
    private am;
    parentNodeTopMargin: number;
    private ak;
    parentNodeRightMargin: number;
    private ag;
    parentNodeBottomMargin: number;
    private aj;
    parentNodeLeftPadding: number;
    private an;
    parentNodeTopPadding: number;
    private al;
    parentNodeRightPadding: number;
    private ah;
    parentNodeBottomPadding: number;
    private cb;
    labelHorizontalAlignment: string;
    private ce;
    labelVerticalAlignment: string;
    private r;
    headerHeight: number;
    private co;
    outline: string;
    private ap;
    strokeThickness: number;
    private cg;
    layoutOrientation: string;
    private ch;
    layoutType: string;
    private ab;
    minimumDisplaySize: number;
    private bm;
    transitionDuration: number;
    private ao;
    pixelScalingRatio: number;
    private m;
    actualPixelScalingRatio: number;
    private w;
    interactionPixelScalingRatio: number;
    private l;
    actualInteractionPixelScalingRatio: number;
    private bv;
    focusItemRef: string;
    private cn;
    nodeStylingRef: string;
    private ck;
    nodePointerOverRef: string;
    private ci;
    nodePointerEnterRef: string;
    private cj;
    nodePointerLeaveRef: string;
    private cl;
    nodePointerPressedRef: string;
    private cm;
    nodePointerReleasedRef: string;
    private cv;
    width: string;
    private b9;
    height: string;
    private bp;
    background: string;
}
