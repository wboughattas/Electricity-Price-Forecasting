import { Description } from "./Description";
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class RingSeriesBaseDescription extends Description {
    static $t: Type;
    private bi;
    tooltipTemplateRef: string;
    private as;
    fontFamily: string;
    private t;
    fontSize: number;
    private au;
    fontWeight: string;
    private at;
    fontStyle: string;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private ar;
    dataSourceRef: string;
    private bj;
    valueMemberPath: string;
    private az;
    labelMemberPath: string;
    private a7;
    legendLabelMemberPath: string;
    private a1;
    labelsPosition: string;
    private a5;
    leaderLineVisibility: string;
    private a2;
    leaderLineFill: string;
    private a3;
    leaderLineStroke: string;
    private x;
    leaderLineStrokeThickness: number;
    private w;
    leaderLineOpacity: number;
    private a4;
    leaderLineType: string;
    private v;
    leaderLineMargin: number;
    private aa;
    othersCategoryThreshold: number;
    private bd;
    othersCategoryType: string;
    private bc;
    othersCategoryText: string;
    private a9;
    legendRef: string;
    private av;
    formatLabelRef: string;
    private aw;
    formatLegendLabelRef: string;
    private ax;
    labelFormat: string;
    private g;
    labelFormatSpecifiers: FormatSpecifierDescription[];
    private be;
    othersLabelFormat: string;
    private j;
    othersLabelFormatSpecifiers: FormatSpecifierDescription[];
    private a6;
    legendLabelFormat: string;
    private h;
    legendLabelFormatSpecifiers: FormatSpecifierDescription[];
    private a8;
    legendOthersLabelFormat: string;
    private i;
    legendOthersLabelFormatSpecifiers: FormatSpecifierDescription[];
    private u;
    labelExtent: number;
    private ae;
    startAngle: number;
    private ba;
    othersCategoryFill: string;
    private bb;
    othersCategoryStroke: string;
    private z;
    othersCategoryStrokeThickness: number;
    private y;
    othersCategoryOpacity: number;
    private bg;
    selectedSliceFill: string;
    private bh;
    selectedSliceStroke: string;
    private ad;
    selectedSliceStrokeThickness: number;
    private ac;
    selectedSliceOpacity: number;
    private f;
    brushes: string[];
    private k;
    outlines: string[];
    private a0;
    labelOuterColor: string;
    private ay;
    labelInnerColor: string;
    private r;
    isSurfaceInteractionDisabled: boolean;
    private ab;
    radiusFactor: number;
    private bf;
    propertyUpdatedRef: string;
}
