import { Base, Point, Type } from "./type";
import { TouchGestureState } from "./TouchGestureState";
import { IExecutionContext } from "./IExecutionContext";
import { List$1 } from "./List$1";
import { TouchPointInfo } from "./TouchPointInfo";
import { TouchGestureEventArgs } from "./TouchGestureEventArgs";
/**
 * @hidden
 */
export declare class TouchGestureRecognizer extends Base {
    static $t: Type;
    constructor(a: IExecutionContext);
    n: TouchGestureState;
    private p;
    private t;
    private u;
    private aa;
    private ab;
    private v;
    private w;
    private am;
    private an;
    private al;
    private aj;
    private ak;
    private y;
    private x;
    av: number;
    readonly as: number;
    readonly at: number;
    bf(): Point;
    bd(a: List$1<TouchPointInfo>): void;
    a6(a: List$1<TouchPointInfo>): void;
    private ay;
    private ao;
    private ap;
    private r;
    private a9;
    private a2;
    bc(): void;
    private a5;
    private a8;
    private af;
    private ag;
    private ac;
    private ad;
    private ae;
    private bb;
    private a3;
    private ba;
    private a1;
    private o;
    private au;
    private aw;
    private be;
    private b;
    private q;
    private ax;
    private s;
    private a7;
    private a4;
    private c;
    private a0;
    holdStarting: (sender: any, args: TouchGestureEventArgs) => void;
    holdEnding: (sender: any, args: TouchGestureEventArgs) => void;
    panStarting: (sender: any, args: TouchGestureEventArgs) => void;
    manipulationStarting: (sender: any, args: TouchGestureEventArgs) => void;
    manipulationChanging: (sender: any, args: TouchGestureEventArgs) => void;
    manipulationEnding: (sender: any, args: TouchGestureEventArgs) => void;
    panEnding: (sender: any, args: TouchGestureEventArgs) => void;
    zoomStarting: (sender: any, args: TouchGestureEventArgs) => void;
    zoomEnding: (sender: any, args: TouchGestureEventArgs) => void;
    flingStarting: (sender: any, args: TouchGestureEventArgs) => boolean;
    doubleTapped: (sender: any, args: TouchGestureEventArgs) => void;
    private ah;
    private ai;
    private z;
    private aq;
    private ar;
}
