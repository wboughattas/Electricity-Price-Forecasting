import { Base, Type } from "./type";
import { ISummaryResult } from "./ISummaryResult";
import { SummaryGroup } from "./SummaryGroup";
import { DataSourceSectionHeaderDisplayMode } from "./DataSourceSectionHeaderDisplayMode";
import { List$1 } from "./List$1";
import { Dictionary$2 } from "./Dictionary$2";
import { DataSourceRowType } from "./DataSourceRowType";
import { DataSourceSpecialRow } from "./DataSourceSpecialRow";
/**
 * @hidden
 */
export declare class SectionData extends Base {
    static $t: Type;
    o: boolean;
    ae: number;
    af: number;
    ad: number;
    e: string[];
    f: any[];
    i: ISummaryResult[][];
    h: number[];
    g: SummaryGroup[];
    aa: number;
    ah: number;
    ag: number;
    t: number;
    d: number[];
    u: number;
    b: number[];
    private s;
    z: number;
    readonly ac: number;
    readonly ab: number;
    c: boolean[];
    a: string[];
    y: number;
    readonly p: boolean;
    private l;
    q: boolean;
    k: SectionData;
    ai(a: DataSourceSectionHeaderDisplayMode, b: boolean): void;
    aj(a: DataSourceSectionHeaderDisplayMode, b: boolean, c: number): void;
    static r(a: ISummaryResult[]): List$1<Dictionary$2<string, ISummaryResult>>;
    j(a: number): DataSourceRowType;
    x(a: number): number;
    v(): number;
    w(): number;
    m(): boolean;
    am(a: (arg1: DataSourceSpecialRow) => void): void;
    ak(a: DataSourceSpecialRow, b: number): void;
    n(): boolean;
    an(a: number, b: number, c: ISummaryResult): void;
    al(a: number, b: number): void;
}
