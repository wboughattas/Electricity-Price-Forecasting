import { TransactionType } from "./TransactionType";
import { TransactionState as TransactionState_internal } from "./TransactionState";
/**
 * Represents the final state of items with all transactions combined.
*/
export declare class IgrTransactionState {
    protected _implementation: any;
    /**
     * @hidden
     */
    readonly i: TransactionState_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets or sets the ID for the state.  I.e. an items primary key.
    */
    id: any;
    /**
     * Gets or sets how this state was created.
    */
    transactionType: TransactionType;
    /**
     * Gets or sets the final value with all transaction deltas combined.
    */
    value: any;
    /**
     * Gets or sets the version data for this item. Used for concurrency.
    */
    version: any;
    findByName(name: string): any;
}
