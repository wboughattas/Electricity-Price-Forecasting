import { Description } from "./Description";
import { ButtonDescription } from "./ButtonDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class ButtonGroupDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private as;
    displayType: string;
    private aq;
    baseTheme: string;
    private ar;
    density: string;
    private ad;
    actualDensity: string;
    private g;
    selectedIndices: number[];
    private o;
    actualItemCornerRadius: number;
    private ae;
    actualItemBackgroundColor: string;
    private ag;
    actualItemDisabledBackgroundColor: string;
    private al;
    actualItemTextColor: string;
    private ai;
    actualItemDisabledTextColor: string;
    private af;
    actualItemBorderColor: string;
    private ah;
    actualItemDisabledBorderColor: string;
    private n;
    actualItemBorderWidth: number;
    private am;
    actualSelectedItemBackgroundColor: string;
    private ap;
    actualSelectedItemTextColor: string;
    private aj;
    actualItemHoverBackgroundColor: string;
    private ak;
    actualItemHoverTextColor: string;
    private an;
    actualSelectedItemHoverBackgroundColor: string;
    private ao;
    actualSelectedItemHoverTextColor: string;
    private s;
    itemCornerRadius: number;
    private a6;
    itemBackgroundColor: string;
    private a8;
    itemDisabledBackgroundColor: string;
    private bd;
    itemTextColor: string;
    private ba;
    itemDisabledTextColor: string;
    private bb;
    itemHoverBackgroundColor: string;
    private a7;
    itemBorderColor: string;
    private a9;
    itemDisabledBorderColor: string;
    private r;
    itemBorderWidth: number;
    private bc;
    itemHoverTextColor: string;
    private br;
    selectedItemBackgroundColor: string;
    private bu;
    selectedItemTextColor: string;
    private bs;
    selectedItemHoverBackgroundColor: string;
    private bt;
    selectedItemHoverTextColor: string;
    private u;
    outlinedItemCornerRadius: number;
    private bf;
    outlinedItemBackgroundColor: string;
    private bh;
    outlinedItemDisabledBackgroundColor: string;
    private bm;
    outlinedItemTextColor: string;
    private bj;
    outlinedItemDisabledTextColor: string;
    private bk;
    outlinedItemHoverBackgroundColor: string;
    private bg;
    outlinedItemBorderColor: string;
    private bi;
    outlinedItemDisabledBorderColor: string;
    private t;
    outlinedItemBorderWidth: number;
    private bl;
    outlinedItemHoverTextColor: string;
    private bn;
    outlinedSelectedItemBackgroundColor: string;
    private bq;
    outlinedSelectedItemTextColor: string;
    private bo;
    outlinedSelectedItemHoverBackgroundColor: string;
    private bp;
    outlinedSelectedItemHoverTextColor: string;
    private q;
    flatItemCornerRadius: number;
    private at;
    flatItemBackgroundColor: string;
    private av;
    flatItemDisabledBackgroundColor: string;
    private a0;
    flatItemTextColor: string;
    private ax;
    flatItemDisabledTextColor: string;
    private ay;
    flatItemHoverBackgroundColor: string;
    private au;
    flatItemBorderColor: string;
    private aw;
    flatItemDisabledBorderColor: string;
    private p;
    flatItemBorderWidth: number;
    private az;
    flatItemHoverTextColor: string;
    private a1;
    flatSelectedItemBackgroundColor: string;
    private a4;
    flatSelectedItemTextColor: string;
    private a2;
    flatSelectedItemHoverBackgroundColor: string;
    private a3;
    flatSelectedItemHoverTextColor: string;
    private be;
    orientation: string;
    private a5;
    id: string;
    private j;
    disabled: boolean;
    private k;
    isMultiSelect: boolean;
    private f;
    buttons: ButtonDescription[];
    private bv;
    selectionChangedRef: string;
}
