import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class MultiColumnComboBoxDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private s;
    showClearButton: boolean;
    private h;
    fields: string[];
    private cv;
    backgroundColor: string;
    private ch;
    actualBackgroundColor: string;
    private cw;
    baseTheme: string;
    private ci;
    actualBaseTheme: string;
    private cx;
    borderColor: string;
    private cj;
    actualBorderColor: string;
    private ar;
    borderWidth: number;
    private z;
    actualBorderWidth: number;
    private p;
    columnHeadersVisible: boolean;
    private as;
    contentPaddingBottom: number;
    private at;
    contentPaddingLeft: number;
    private au;
    contentPaddingRight: number;
    private av;
    contentPaddingTop: number;
    private aa;
    actualContentPaddingBottom: number;
    private ab;
    actualContentPaddingLeft: number;
    private ac;
    actualContentPaddingRight: number;
    private ad;
    actualContentPaddingTop: number;
    private ax;
    cornerRadiusBottomRight: number;
    private aw;
    cornerRadiusBottomLeft: number;
    private ay;
    cornerRadiusTopLeft: number;
    private az;
    cornerRadiusTopRight: number;
    private af;
    actualCornerRadiusBottomRight: number;
    private ae;
    actualCornerRadiusBottomLeft: number;
    private ag;
    actualCornerRadiusTopLeft: number;
    private ah;
    actualCornerRadiusTopRight: number;
    private g;
    dataSourceDesiredProperties: string[];
    private cz;
    density: string;
    private ck;
    actualDensity: string;
    private q;
    dropDownButtonVisible: boolean;
    private c0;
    focusBorderColor: string;
    private cl;
    actualFocusBorderColor: string;
    private a0;
    focusBorderWidth: number;
    private ai;
    actualFocusBorderWidth: number;
    private c1;
    focusUnderlineColor: string;
    private cm;
    actualFocusUnderlineColor: string;
    private a1;
    focusUnderlineOpacity: number;
    private aj;
    actualFocusUnderlineOpacity: number;
    private a2;
    focusUnderlineRippleOpacity: number;
    private ak;
    actualFocusUnderlineRippleOpacity: number;
    private c6;
    hoverUnderlineColor: string;
    private cn;
    actualHoverUnderlineColor: string;
    private a4;
    hoverUnderlineOpacity: number;
    private al;
    actualHoverUnderlineOpacity: number;
    private a5;
    hoverUnderlineWidth: number;
    private am;
    actualHoverUnderlineWidth: number;
    private cy;
    dataSourceRef: string;
    private c7;
    label: string;
    private db;
    labelTextColor: string;
    private co;
    actualLabelTextColor: string;
    private c8;
    labelFontFamily: string;
    private a6;
    labelFontSize: number;
    private c9;
    labelFontStyle: string;
    private da;
    labelFontWeight: string;
    private n;
    actualLabelVisible: boolean;
    private dd;
    noMatchesFoundLabel: string;
    private cp;
    actualNoMatchesFoundLabel: string;
    private de;
    noMatchesFoundLabelBackgroundColor: string;
    private cq;
    actualNoMatchesFoundLabelBackgroundColor: string;
    private di;
    noMatchesFoundLabelTextColor: string;
    private cr;
    actualNoMatchesFoundLabelTextColor: string;
    private df;
    noMatchesFoundLabelFontFamily: string;
    private a7;
    noMatchesFoundLabelFontSize: number;
    private dg;
    noMatchesFoundLabelFontStyle: string;
    private dh;
    noMatchesFoundLabelFontWeight: string;
    private dj;
    placeholder: string;
    private r;
    rowSeparatorsVisible: boolean;
    private dn;
    textColor: string;
    private cs;
    actualTextColor: string;
    private c2;
    fontFamily: string;
    private a3;
    fontSize: number;
    private c3;
    fontStyle: string;
    private c4;
    fontWeight: string;
    private dq;
    underlineColor: string;
    private ct;
    actualUnderlineColor: string;
    private a8;
    underlineOpacity: number;
    private an;
    actualUnderlineOpacity: number;
    private dr;
    underlineRippleColor: string;
    private cu;
    actualUnderlineRippleColor: string;
    private a9;
    underlineRippleOpacity: number;
    private ao;
    actualUnderlineRippleOpacity: number;
    private ba;
    underlineRippleWidth: number;
    private ap;
    actualUnderlineRippleWidth: number;
    private bb;
    underlineWidth: number;
    private aq;
    actualUnderlineWidth: number;
    private o;
    allowFilter: boolean;
    private dk;
    sortMode: string;
    private dp;
    textField: string;
    private dl;
    text: string;
    private i;
    valueField: string[];
    private f;
    actualValueField: string[];
    private cf;
    value: any;
    private c5;
    gotFocusRef: string;
    private dc;
    lostFocusRef: string;
    private dm;
    textChangedRef: string;
    private ds;
    valueChangedRef: string;
}
