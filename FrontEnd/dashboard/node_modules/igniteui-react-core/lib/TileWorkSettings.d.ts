import { Base, Type } from "./type";
import { HeatTileScaler } from "./HeatTileScaler";
import { Color } from "./Color";
import { Rect } from "./Rect";
/**
 * @hidden
 */
export declare class TileWorkSettings extends Base {
    static $t: Type;
    private _scaler;
    scaler: HeatTileScaler;
    private _blurRadius;
    blurRadius: number;
    private _maxBlurRadius;
    maxBlurRadius: number;
    private _useBlurRadiusAdjustedForZoom;
    useBlurRadiusAdjustedForZoom: boolean;
    private _minimumColor;
    minimumColor: Color;
    private _maximumColor;
    maximumColor: Color;
    private _tileViewport;
    tileViewport: Rect;
    private _yValues;
    yValues: number[];
    private _xValues;
    xValues: number[];
    private _values;
    values: number[];
    private _isNewData;
    isNewData: boolean;
    private _minimumVisibleLatitude;
    minimumVisibleLatitude: number;
    private _maximumVisibleLatitude;
    maximumVisibleLatitude: number;
    private _minimumVisibleLongitude;
    minimumVisibleLongitude: number;
    private _maximumVisibleLongitude;
    maximumVisibleLongitude: number;
    private _z;
    z: number;
    private _x;
    x: number;
    private _y;
    y: number;
    private _window;
    window: Rect;
    private _testRun;
    testRun: boolean;
    private _globalMinimum;
    globalMinimum: number;
    private _globalMaximum;
    globalMaximum: number;
    private _useGlobalMinMax;
    useGlobalMinMax: boolean;
    private _minimumValue;
    minimumValue: number;
    private _maximumValue;
    maximumValue: number;
    private _scaleColors;
    scaleColors: Color[];
    private _scaleColorOffsets;
    scaleColorOffsets: number[];
    private _useLogarithmicScale;
    useLogarithmicScale: boolean;
    private _logarithmBase;
    logarithmBase: number;
    private _image;
    image: any;
    flatten(): any;
}
