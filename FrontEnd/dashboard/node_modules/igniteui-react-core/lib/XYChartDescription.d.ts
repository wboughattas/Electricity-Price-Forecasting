import { DomainChartDescription } from "./DomainChartDescription";
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class XYChartDescription extends DomainChartDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private fj;
    xAxisFormatLabelRef: string;
    private f0;
    yAxisFormatLabelRef: string;
    private dq;
    xAxisLabelLeftMargin: number;
    private ds;
    xAxisLabelTopMargin: number;
    private dr;
    xAxisLabelRightMargin: number;
    private dp;
    xAxisLabelBottomMargin: number;
    private d7;
    yAxisLabelLeftMargin: number;
    private d9;
    yAxisLabelTopMargin: number;
    private d8;
    yAxisLabelRightMargin: number;
    private d6;
    yAxisLabelBottomMargin: number;
    private fn;
    xAxisLabelTextColor: string;
    private f5;
    yAxisLabelTextColor: string;
    private d1;
    xAxisTitleMargin: number;
    private ei;
    yAxisTitleMargin: number;
    private d0;
    xAxisTitleLeftMargin: number;
    private eh;
    yAxisTitleLeftMargin: number;
    private d3;
    xAxisTitleTopMargin: number;
    private ek;
    yAxisTitleTopMargin: number;
    private d2;
    xAxisTitleRightMargin: number;
    private ej;
    yAxisTitleRightMargin: number;
    private dz;
    xAxisTitleBottomMargin: number;
    private eg;
    yAxisTitleBottomMargin: number;
    private fy;
    xAxisTitleTextColor: string;
    private gg;
    yAxisTitleTextColor: string;
    private fo;
    xAxisLabelTextStyle: string;
    private f6;
    yAxisLabelTextStyle: string;
    private fz;
    xAxisTitleTextStyle: string;
    private gh;
    yAxisTitleTextStyle: string;
    private fm;
    xAxisLabelRef: string;
    private f4;
    yAxisLabelRef: string;
    private fr;
    xAxisMajorStroke: string;
    private f9;
    yAxisMajorStroke: string;
    private dt;
    xAxisMajorStrokeThickness: number;
    private ea;
    yAxisMajorStrokeThickness: number;
    private du;
    xAxisMinorStrokeThickness: number;
    private eb;
    yAxisMinorStrokeThickness: number;
    private ft;
    xAxisStrip: string;
    private gb;
    yAxisStrip: string;
    private fu;
    xAxisStroke: string;
    private gc;
    yAxisStroke: string;
    private dv;
    xAxisStrokeThickness: number;
    private ec;
    yAxisStrokeThickness: number;
    private dw;
    xAxisTickLength: number;
    private ed;
    yAxisTickLength: number;
    private fv;
    xAxisTickStroke: string;
    private gd;
    yAxisTickStroke: string;
    private dx;
    xAxisTickStrokeThickness: number;
    private ee;
    yAxisTickStrokeThickness: number;
    private fw;
    xAxisTitle: string;
    private ge;
    yAxisTitle: string;
    private fs;
    xAxisMinorStroke: string;
    private ga;
    yAxisMinorStroke: string;
    private dn;
    xAxisLabelAngle: number;
    private d5;
    yAxisLabelAngle: number;
    private dm;
    xAxisExtent: number;
    private d4;
    yAxisExtent: number;
    private dy;
    xAxisTitleAngle: number;
    private ef;
    yAxisTitleAngle: number;
    private di;
    xAxisInverted: boolean;
    private dj;
    yAxisInverted: boolean;
    private fx;
    xAxisTitleAlignment: string;
    private gf;
    yAxisTitleAlignment: string;
    private fl;
    xAxisLabelHorizontalAlignment: string;
    private f2;
    yAxisLabelHorizontalAlignment: string;
    private fp;
    xAxisLabelVerticalAlignment: string;
    private f7;
    yAxisLabelVerticalAlignment: string;
    private fq;
    xAxisLabelVisibility: string;
    private f8;
    yAxisLabelVisibility: string;
    private f3;
    yAxisLabelLocation: string;
    private fk;
    xAxisLabelFormat: string;
    private de;
    xAxisLabelFormatSpecifiers: FormatSpecifierDescription[];
    private f1;
    yAxisLabelFormat: string;
    private df;
    yAxisLabelFormatSpecifiers: FormatSpecifierDescription[];
}
