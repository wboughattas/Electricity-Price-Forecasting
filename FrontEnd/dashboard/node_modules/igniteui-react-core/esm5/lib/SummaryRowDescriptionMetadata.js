/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DefinitionBaseDescriptionMetadata } from "./DefinitionBaseDescriptionMetadata";
/**
 * @hidden
 */
var SummaryRowDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SummaryRowDescriptionMetadata, _super);
    function SummaryRowDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SummaryRowDescriptionMetadata.b = function (a) {
        if (SummaryRowDescriptionMetadata.a == null) {
            SummaryRowDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            SummaryRowDescriptionMetadata.c(a, SummaryRowDescriptionMetadata.a);
        }
    };
    SummaryRowDescriptionMetadata.c = function (a, b) {
        DefinitionBaseDescriptionMetadata.c(a, b);
        b.item("SelectedBackground", "Brush");
        b.item("ActualSelectedBackground", "Brush");
        b.item("SummaryLabelTextColor", "Brush");
        b.item("ActualSummaryLabelTextColor", "Brush");
        b.item("SummaryLabelFontFamily", "(w:SummaryLabelFontFamily/FontFamilyTransform,wf:SummaryLabelFontFamily,web:summaryNameTextStyle/FontFamilyTransform)String");
        b.item("SummaryLabelFontSize", "(w:SummaryLabelFontSize,wf:SummaryLabelFontSize,web:summaryNameTextStyle/FontSizeTransform)Number:double");
        b.item("SummaryLabelFontStyle", "(w:SummaryLabelFontStyle/FontStyleTransform,wf:SummaryLabelFontFamily/FontStyleTransform,web:summaryNameTextStyle/FontStyleTransform)String");
        b.item("SummaryLabelFontWeight", "(w:SummaryLabelFontWeight/FontWeightTransform,wf:SummaryLabelFontFamily/FontWeightTransform,web:summaryNameTextStyle/FontWeightTransform)String");
        b.item("PaddingLeft", "Number:int");
        b.item("PaddingTop", "Number:int");
        b.item("PaddingRight", "Number:int");
        b.item("PaddingBottom", "Number:int");
    };
    SummaryRowDescriptionMetadata.d = function (a) {
        SummaryRowDescriptionMetadata.b(a);
        a.m("SummaryRow", SummaryRowDescriptionMetadata.a);
    };
    SummaryRowDescriptionMetadata.$t = markType(SummaryRowDescriptionMetadata, 'SummaryRowDescriptionMetadata');
    SummaryRowDescriptionMetadata.a = null;
    return SummaryRowDescriptionMetadata;
}(Base));
export { SummaryRowDescriptionMetadata };
//# sourceMappingURL=SummaryRowDescriptionMetadata.js.map
