/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var DataGridFilterDialogDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DataGridFilterDialogDescription, _super);
    function DataGridFilterDialogDescription() {
        var _this = _super.call(this) || this;
        _this.f = false;
        _this.i = 0;
        _this.h = 0;
        _this.q = null;
        _this.j = 0;
        _this.n = null;
        _this.p = null;
        _this.o = null;
        _this.r = null;
        return _this;
    }
    DataGridFilterDialogDescription.prototype.get_type = function () {
        return "DataGridFilterDialog";
    };
    Object.defineProperty(DataGridFilterDialogDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridFilterDialogDescription.prototype, "isAnimationEnabled", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("IsAnimationEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridFilterDialogDescription.prototype, "pixelScalingRatio", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.e("PixelScalingRatio");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridFilterDialogDescription.prototype, "actualPixelScalingRatio", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("ActualPixelScalingRatio");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridFilterDialogDescription.prototype, "iconColor", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.e("IconColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridFilterDialogDescription.prototype, "viewSize", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("ViewSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridFilterDialogDescription.prototype, "dialogOpeningRef", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.e("DialogOpeningRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridFilterDialogDescription.prototype, "filterChangingRef", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("FilterChangingRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridFilterDialogDescription.prototype, "filterChangedRef", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.e("FilterChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridFilterDialogDescription.prototype, "renderCompletedRef", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.e("RenderCompletedRef");
        },
        enumerable: true,
        configurable: true
    });
    DataGridFilterDialogDescription.$t = markType(DataGridFilterDialogDescription, 'DataGridFilterDialogDescription', Description.$);
    return DataGridFilterDialogDescription;
}(Description));
export { DataGridFilterDialogDescription };
//# sourceMappingURL=DataGridFilterDialogDescription.js.map
