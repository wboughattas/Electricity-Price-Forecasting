/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, markType } from "./type";
/**
 * @hidden
 */
var Transaction = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(Transaction, _super);
    function Transaction() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._id = null;
        _this._transactionID = 0;
        _this._type = 0;
        _this._value = null;
        _this._error = null;
        return _this;
    }
    Object.defineProperty(Transaction.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (a) {
            this._id = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Transaction.prototype, "transactionID", {
        get: function () {
            return this._transactionID;
        },
        set: function (a) {
            this._transactionID = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Transaction.prototype, "type", {
        get: function () {
            return this._type;
        },
        set: function (a) {
            this._type = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Transaction.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (a) {
            this._value = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Transaction.prototype, "error", {
        get: function () {
            return this._error;
        },
        set: function (a) {
            this._error = a;
        },
        enumerable: true,
        configurable: true
    });
    Transaction.$t = markType(Transaction, 'Transaction');
    return Transaction;
}(Base));
export { Transaction };
//# sourceMappingURL=Transaction.js.map
