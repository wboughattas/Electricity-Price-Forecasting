/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { StyleShapeEventArgsDescriptionMetadata } from "./StyleShapeEventArgsDescriptionMetadata";
import { GeographicShapeSeriesBaseDescriptionMetadata } from "./GeographicShapeSeriesBaseDescriptionMetadata";
import { GeographicShapeSeriesDescription } from "./GeographicShapeSeriesDescription";
/**
 * @hidden
 */
var GeographicShapeSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GeographicShapeSeriesDescriptionMetadata, _super);
    function GeographicShapeSeriesDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GeographicShapeSeriesDescriptionMetadata.b = function (a) {
        if (GeographicShapeSeriesDescriptionMetadata.a == null) {
            GeographicShapeSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GeographicShapeSeriesDescriptionMetadata.c(a, GeographicShapeSeriesDescriptionMetadata.a);
            StyleShapeEventArgsDescriptionMetadata.d(a);
        }
    };
    GeographicShapeSeriesDescriptionMetadata.c = function (a, b) {
        GeographicShapeSeriesBaseDescriptionMetadata.c(a, b);
        b.item("ShapeStyleSelectorRef", "(w:ShapeStyleSelector,wf:ShapeStyleSelector)DataRef::object");
        b.item("ShapeFill", "(w:ShapeStyle.Fill,wf:ShapeFill)String");
        b.item("ShapeStroke", "(w:ShapeStyle.Stroke,wf:ShapeStroke)String");
        b.item("ShapeStrokeThickness", "(w:ShapeStyle.StrokeThickness,wf:ShapeStrokeThickness)Number:double");
        b.item("ShapeOpacity", "(w:ShapeStyle.Opacity,wf:ShapeOpacity)Number:double");
        b.item("MarkerType", "ExportedType:string:MarkerType");
        b.item("MarkerTemplateRef", "(w:MarkerTemplate,wf:MarkerTemplate)DataRef::object");
        b.item("MarkerBrush", "Brush");
        b.item("MarkerOutline", "Brush");
        b.item("MarkerThickness", "Number:double");
        b.item("MarkerCollisionAvoidance", "ExportedType:string:CollisionAvoidanceType");
        b.item("StyleShapeRef", "EventRef::styleShape");
    };
    GeographicShapeSeriesDescriptionMetadata.d = function (a) {
        GeographicShapeSeriesDescriptionMetadata.b(a);
        a.n("GeographicShapeSeries", function () { return new GeographicShapeSeriesDescription(); });
        a.m("GeographicShapeSeries", GeographicShapeSeriesDescriptionMetadata.a);
    };
    GeographicShapeSeriesDescriptionMetadata.$t = markType(GeographicShapeSeriesDescriptionMetadata, 'GeographicShapeSeriesDescriptionMetadata');
    GeographicShapeSeriesDescriptionMetadata.a = null;
    return GeographicShapeSeriesDescriptionMetadata;
}(Base));
export { GeographicShapeSeriesDescriptionMetadata };
//# sourceMappingURL=GeographicShapeSeriesDescriptionMetadata.js.map
