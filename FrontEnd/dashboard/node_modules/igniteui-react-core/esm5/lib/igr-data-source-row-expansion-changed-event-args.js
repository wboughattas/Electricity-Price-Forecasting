/**
 * Provides information about row expansion or collapse.
*/
var IgrDataSourceRowExpansionChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
    function IgrDataSourceRowExpansionChangedEventArgs() {
    }
    Object.defineProperty(IgrDataSourceRowExpansionChangedEventArgs.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    IgrDataSourceRowExpansionChangedEventArgs.prototype.onImplementationCreated = function () {
    };
    IgrDataSourceRowExpansionChangedEventArgs.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgrDataSourceRowExpansionChangedEventArgs.prototype, "rowIndex", {
        /**
         * The index of the row being expanded or collapsed.
        */
        get: function () {
            return this.i.rowIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrDataSourceRowExpansionChangedEventArgs.prototype, "oldState", {
        /**
         * The previous state of the row. True is expanded, False is collapsed.
        */
        get: function () {
            return this.i.oldState;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrDataSourceRowExpansionChangedEventArgs.prototype, "newState", {
        /**
         * The new state of the row. True is expanded, False is collapsed.
        */
        get: function () {
            return this.i.newState;
        },
        enumerable: true,
        configurable: true
    });
    return IgrDataSourceRowExpansionChangedEventArgs;
}());
export { IgrDataSourceRowExpansionChangedEventArgs };
//# sourceMappingURL=igr-data-source-row-expansion-changed-event-args.js.map
