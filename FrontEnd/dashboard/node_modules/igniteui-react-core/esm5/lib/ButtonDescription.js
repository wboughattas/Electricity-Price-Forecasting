/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var ButtonDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ButtonDescription, _super);
    function ButtonDescription() {
        var _this = _super.call(this) || this;
        _this.au = 0;
        _this.at = 0;
        _this.el = null;
        _this.eg = null;
        _this.ed = null;
        _this.dx = null;
        _this.dw = null;
        _this.d9 = null;
        _this.d6 = null;
        _this.du = null;
        _this.ca = 0;
        _this.b8 = 0;
        _this.b9 = 0;
        _this.d7 = null;
        _this.v = 0;
        _this.u = 0;
        _this.w = 0;
        _this.x = 0;
        _this.dv = null;
        _this.dy = null;
        _this.dz = null;
        _this.d0 = null;
        _this.b7 = 0;
        _this.d1 = null;
        _this.d8 = null;
        _this.d5 = null;
        _this.d2 = null;
        _this.d3 = null;
        _this.d4 = null;
        _this.t = 0;
        _this.f7 = null;
        _this.f9 = null;
        _this.ga = null;
        _this.gb = null;
        _this.cu = 0;
        _this.ge = null;
        _this.f8 = null;
        _this.cx = 0;
        _this.cw = 0;
        _this.cv = 0;
        _this.a0 = 0;
        _this.a2 = 0;
        _this.a1 = 0;
        _this.a3 = 0;
        _this.a4 = 0;
        _this.gg = null;
        _this.ey = null;
        _this.e0 = null;
        _this.e1 = null;
        _this.e2 = null;
        _this.cg = 0;
        _this.e5 = null;
        _this.ez = null;
        _this.cj = 0;
        _this.ci = 0;
        _this.ch = 0;
        _this.e7 = null;
        _this.e8 = null;
        _this.e6 = null;
        _this.e3 = null;
        _this.e4 = null;
        _this.ai = 0;
        _this.ak = 0;
        _this.aj = 0;
        _this.al = 0;
        _this.am = 0;
        _this.ec = null;
        _this.eh = null;
        _this.ei = null;
        _this.ej = null;
        _this.cb = 0;
        _this.em = null;
        _this.fg = null;
        _this.ee = null;
        _this.cy = 0;
        _this.cl = 0;
        _this.ck = 0;
        _this.fd = null;
        _this.an = 0;
        _this.fe = null;
        _this.ff = null;
        _this.gj = null;
        _this.fh = null;
        _this.gi = null;
        _this.gh = null;
        _this.gf = null;
        _this.gc = null;
        _this.gd = null;
        _this.fb = null;
        _this.fc = null;
        _this.y = 0;
        _this.aa = 0;
        _this.z = 0;
        _this.ab = 0;
        _this.ac = 0;
        _this.fw = null;
        _this.fy = null;
        _this.fz = null;
        _this.f0 = null;
        _this.cq = 0;
        _this.f3 = null;
        _this.fx = null;
        _this.ct = 0;
        _this.cs = 0;
        _this.cr = 0;
        _this.av = 0;
        _this.ax = 0;
        _this.aw = 0;
        _this.ay = 0;
        _this.az = 0;
        _this.f5 = null;
        _this.f6 = null;
        _this.f4 = null;
        _this.f1 = null;
        _this.f2 = null;
        _this.en = null;
        _this.ep = null;
        _this.eq = null;
        _this.er = null;
        _this.cc = 0;
        _this.eu = null;
        _this.eo = null;
        _this.cf = 0;
        _this.ce = 0;
        _this.cd = 0;
        _this.ad = 0;
        _this.af = 0;
        _this.ae = 0;
        _this.ag = 0;
        _this.ah = 0;
        _this.ew = null;
        _this.ex = null;
        _this.ev = null;
        _this.es = null;
        _this.et = null;
        _this.fi = null;
        _this.fk = null;
        _this.fl = null;
        _this.fm = null;
        _this.cm = 0;
        _this.fp = null;
        _this.fj = null;
        _this.cp = 0;
        _this.co = 0;
        _this.cn = 0;
        _this.ao = 0;
        _this.aq = 0;
        _this.ap = 0;
        _this.ar = 0;
        _this.as = 0;
        _this.fr = null;
        _this.fs = null;
        _this.fq = null;
        _this.fn = null;
        _this.fo = null;
        _this.fu = null;
        _this.ft = null;
        _this.ek = null;
        _this.e9 = null;
        _this.fa = null;
        _this.ea = null;
        _this.gk = null;
        _this.fv = null;
        _this.cz = 0;
        _this.j = false;
        _this.k = false;
        _this.eb = null;
        _this.h = false;
        _this.f = false;
        _this.l = false;
        _this.g = false;
        _this.i = false;
        _this.ef = null;
        return _this;
    }
    ButtonDescription.prototype.get_type = function () {
        return "Button";
    };
    Object.defineProperty(ButtonDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "minWidth", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.e("MinWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "minHeight", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.e("MinHeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "displayType", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.e("DisplayType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "density", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            this.eg = a;
            this.e("Density");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "baseTheme", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.e("BaseTheme");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDensity", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.e("ActualDensity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualBorderColor", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            this.dw = a;
            this.e("ActualBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualUmbraShadowColor", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.e("ActualUmbraShadowColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualPenumbraShadowColor", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.e("ActualPenumbraShadowColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualAmbientShadowColor", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            this.du = a;
            this.e("ActualAmbientShadowColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualRestingElevation", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
            this.e("ActualRestingElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualFocusElevation", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.e("ActualFocusElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualHoverElevation", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            this.b9 = a;
            this.e("ActualHoverElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualRippleColor", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.e("ActualRippleColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualCornerRadiusBottomRight", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.e("ActualCornerRadiusBottomRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualCornerRadiusBottomLeft", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.e("ActualCornerRadiusBottomLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualCornerRadiusTopLeft", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.e("ActualCornerRadiusTopLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualCornerRadiusTopRight", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.e("ActualCornerRadiusTopRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualBackgroundColor", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.e("ActualBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDisabledBackgroundColor", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.e("ActualDisabledBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDisabledBorderColor", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.e("ActualDisabledBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDisabledTextColor", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.e("ActualDisabledTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDisabledElevation", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
            this.e("ActualDisabledElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualElevationMode", {
        get: function () {
            return this.d1;
        },
        set: function (a) {
            this.d1 = a;
            this.e("ActualElevationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualTextColor", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            this.d8 = a;
            this.e("ActualTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualHoverTextColor", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.e("ActualHoverTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualFocusBackgroundColor", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            this.d2 = a;
            this.e("ActualFocusBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualFocusTextColor", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.e("ActualFocusTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualHoverBackgroundColor", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.e("ActualHoverBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualBorderWidth", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.e("ActualBorderWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedBackgroundColor", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            this.f7 = a;
            this.e("RaisedBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedDisabledBackgroundColor", {
        get: function () {
            return this.f9;
        },
        set: function (a) {
            this.f9 = a;
            this.e("RaisedDisabledBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedDisabledBorderColor", {
        get: function () {
            return this.ga;
        },
        set: function (a) {
            this.ga = a;
            this.e("RaisedDisabledBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedDisabledTextColor", {
        get: function () {
            return this.gb;
        },
        set: function (a) {
            this.gb = a;
            this.e("RaisedDisabledTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedDisabledElevation", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            this.cu = a;
            this.e("RaisedDisabledElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedHoverBackgroundColor", {
        get: function () {
            return this.ge;
        },
        set: function (a) {
            this.ge = a;
            this.e("RaisedHoverBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedBorderColor", {
        get: function () {
            return this.f8;
        },
        set: function (a) {
            this.f8 = a;
            this.e("RaisedBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedRestingElevation", {
        get: function () {
            return this.cx;
        },
        set: function (a) {
            this.cx = a;
            this.e("RaisedRestingElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedHoverElevation", {
        get: function () {
            return this.cw;
        },
        set: function (a) {
            this.cw = a;
            this.e("RaisedHoverElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedFocusElevation", {
        get: function () {
            return this.cv;
        },
        set: function (a) {
            this.cv = a;
            this.e("RaisedFocusElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedBorderWidth", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.e("RaisedBorderWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedCornerRadiusBottomRight", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.e("RaisedCornerRadiusBottomRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedCornerRadiusBottomLeft", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.e("RaisedCornerRadiusBottomLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedCornerRadiusTopLeft", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.e("RaisedCornerRadiusTopLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedCornerRadiusTopRight", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.e("RaisedCornerRadiusTopRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedRippleColor", {
        get: function () {
            return this.gg;
        },
        set: function (a) {
            this.gg = a;
            this.e("RaisedRippleColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatBackgroundColor", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            this.ey = a;
            this.e("FlatBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatDisabledBackgroundColor", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            this.e0 = a;
            this.e("FlatDisabledBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatDisabledBorderColor", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            this.e1 = a;
            this.e("FlatDisabledBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatDisabledTextColor", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            this.e2 = a;
            this.e("FlatDisabledTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatDisabledElevation", {
        get: function () {
            return this.cg;
        },
        set: function (a) {
            this.cg = a;
            this.e("FlatDisabledElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatHoverBackgroundColor", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            this.e5 = a;
            this.e("FlatHoverBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatBorderColor", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            this.ez = a;
            this.e("FlatBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatRestingElevation", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            this.cj = a;
            this.e("FlatRestingElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatHoverElevation", {
        get: function () {
            return this.ci;
        },
        set: function (a) {
            this.ci = a;
            this.e("FlatHoverElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatFocusElevation", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            this.ch = a;
            this.e("FlatFocusElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatRippleColor", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            this.e7 = a;
            this.e("FlatRippleColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatTextColor", {
        get: function () {
            return this.e8;
        },
        set: function (a) {
            this.e8 = a;
            this.e("FlatTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatHoverTextColor", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            this.e6 = a;
            this.e("FlatHoverTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatFocusBackgroundColor", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            this.e3 = a;
            this.e("FlatFocusBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatFocusTextColor", {
        get: function () {
            return this.e4;
        },
        set: function (a) {
            this.e4 = a;
            this.e("FlatFocusTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatBorderWidth", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.e("FlatBorderWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatCornerRadiusBottomRight", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.e("FlatCornerRadiusBottomRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatCornerRadiusBottomLeft", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.e("FlatCornerRadiusBottomLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatCornerRadiusTopLeft", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.e("FlatCornerRadiusTopLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatCornerRadiusTopRight", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.e("FlatCornerRadiusTopRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "backgroundColor", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            this.ec = a;
            this.e("BackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disabledBackgroundColor", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.e("DisabledBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disabledBorderColor", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.e("DisabledBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disabledTextColor", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.e("DisabledTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disabledElevation", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            this.cb = a;
            this.e("DisabledElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "elevationMode", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.e("ElevationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "hoverBackgroundColor", {
        get: function () {
            return this.fg;
        },
        set: function (a) {
            this.fg = a;
            this.e("HoverBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "borderColor", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.e("BorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "restingElevation", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            this.cy = a;
            this.e("RestingElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "hoverElevation", {
        get: function () {
            return this.cl;
        },
        set: function (a) {
            this.cl = a;
            this.e("HoverElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "focusElevation", {
        get: function () {
            return this.ck;
        },
        set: function (a) {
            this.ck = a;
            this.e("FocusElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fontFamily", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.e("FontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fontSize", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.e("FontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fontStyle", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.e("FontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fontWeight", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            this.ff = a;
            this.e("FontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "textColor", {
        get: function () {
            return this.gj;
        },
        set: function (a) {
            this.gj = a;
            this.e("TextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "hoverTextColor", {
        get: function () {
            return this.fh;
        },
        set: function (a) {
            this.fh = a;
            this.e("HoverTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "rippleColor", {
        get: function () {
            return this.gi;
        },
        set: function (a) {
            this.gi = a;
            this.e("RippleColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedTextColor", {
        get: function () {
            return this.gh;
        },
        set: function (a) {
            this.gh = a;
            this.e("RaisedTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedHoverTextColor", {
        get: function () {
            return this.gf;
        },
        set: function (a) {
            this.gf = a;
            this.e("RaisedHoverTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedFocusBackgroundColor", {
        get: function () {
            return this.gc;
        },
        set: function (a) {
            this.gc = a;
            this.e("RaisedFocusBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedFocusTextColor", {
        get: function () {
            return this.gd;
        },
        set: function (a) {
            this.gd = a;
            this.e("RaisedFocusTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "focusBackgroundColor", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.e("FocusBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "focusTextColor", {
        get: function () {
            return this.fc;
        },
        set: function (a) {
            this.fc = a;
            this.e("FocusTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "borderWidth", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.e("BorderWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "cornerRadiusBottomRight", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.e("CornerRadiusBottomRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "cornerRadiusBottomLeft", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.e("CornerRadiusBottomLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "cornerRadiusTopLeft", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.e("CornerRadiusTopLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "cornerRadiusTopRight", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.e("CornerRadiusTopRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedBackgroundColor", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            this.fw = a;
            this.e("OutlinedBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedDisabledBackgroundColor", {
        get: function () {
            return this.fy;
        },
        set: function (a) {
            this.fy = a;
            this.e("OutlinedDisabledBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedDisabledBorderColor", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            this.fz = a;
            this.e("OutlinedDisabledBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedDisabledTextColor", {
        get: function () {
            return this.f0;
        },
        set: function (a) {
            this.f0 = a;
            this.e("OutlinedDisabledTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedDisabledElevation", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            this.cq = a;
            this.e("OutlinedDisabledElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedHoverBackgroundColor", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            this.f3 = a;
            this.e("OutlinedHoverBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedBorderColor", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            this.fx = a;
            this.e("OutlinedBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedRestingElevation", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            this.ct = a;
            this.e("OutlinedRestingElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedHoverElevation", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            this.cs = a;
            this.e("OutlinedHoverElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedFocusElevation", {
        get: function () {
            return this.cr;
        },
        set: function (a) {
            this.cr = a;
            this.e("OutlinedFocusElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedBorderWidth", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.e("OutlinedBorderWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedCornerRadiusBottomRight", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.e("OutlinedCornerRadiusBottomRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedCornerRadiusBottomLeft", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.e("OutlinedCornerRadiusBottomLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedCornerRadiusTopLeft", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.e("OutlinedCornerRadiusTopLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedCornerRadiusTopRight", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.e("OutlinedCornerRadiusTopRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedRippleColor", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            this.f5 = a;
            this.e("OutlinedRippleColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedTextColor", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            this.f6 = a;
            this.e("OutlinedTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedHoverTextColor", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            this.f4 = a;
            this.e("OutlinedHoverTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedFocusBackgroundColor", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            this.f1 = a;
            this.e("OutlinedFocusBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedFocusTextColor", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            this.f2 = a;
            this.e("OutlinedFocusTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabBackgroundColor", {
        get: function () {
            return this.en;
        },
        set: function (a) {
            this.en = a;
            this.e("FabBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabDisabledBackgroundColor", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.e("FabDisabledBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabDisabledBorderColor", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.e("FabDisabledBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabDisabledTextColor", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.e("FabDisabledTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabDisabledElevation", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.e("FabDisabledElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabHoverBackgroundColor", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.e("FabHoverBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabBorderColor", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            this.eo = a;
            this.e("FabBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabRestingElevation", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            this.cf = a;
            this.e("FabRestingElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabHoverElevation", {
        get: function () {
            return this.ce;
        },
        set: function (a) {
            this.ce = a;
            this.e("FabHoverElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabFocusElevation", {
        get: function () {
            return this.cd;
        },
        set: function (a) {
            this.cd = a;
            this.e("FabFocusElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabBorderWidth", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.e("FabBorderWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabCornerRadiusBottomRight", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.e("FabCornerRadiusBottomRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabCornerRadiusBottomLeft", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.e("FabCornerRadiusBottomLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabCornerRadiusTopLeft", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.e("FabCornerRadiusTopLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabCornerRadiusTopRight", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.e("FabCornerRadiusTopRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabRippleColor", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            this.ew = a;
            this.e("FabRippleColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabTextColor", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            this.ex = a;
            this.e("FabTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabHoverTextColor", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            this.ev = a;
            this.e("FabHoverTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabFocusBackgroundColor", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.e("FabFocusBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabFocusTextColor", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.e("FabFocusTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconBackgroundColor", {
        get: function () {
            return this.fi;
        },
        set: function (a) {
            this.fi = a;
            this.e("IconBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconDisabledBackgroundColor", {
        get: function () {
            return this.fk;
        },
        set: function (a) {
            this.fk = a;
            this.e("IconDisabledBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconDisabledBorderColor", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.e("IconDisabledBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconDisabledTextColor", {
        get: function () {
            return this.fm;
        },
        set: function (a) {
            this.fm = a;
            this.e("IconDisabledTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconDisabledElevation", {
        get: function () {
            return this.cm;
        },
        set: function (a) {
            this.cm = a;
            this.e("IconDisabledElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconHoverBackgroundColor", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            this.fp = a;
            this.e("IconHoverBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconBorderColor", {
        get: function () {
            return this.fj;
        },
        set: function (a) {
            this.fj = a;
            this.e("IconBorderColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconRestingElevation", {
        get: function () {
            return this.cp;
        },
        set: function (a) {
            this.cp = a;
            this.e("IconRestingElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconHoverElevation", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            this.co = a;
            this.e("IconHoverElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconFocusElevation", {
        get: function () {
            return this.cn;
        },
        set: function (a) {
            this.cn = a;
            this.e("IconFocusElevation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconBorderWidth", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.e("IconBorderWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconCornerRadiusBottomRight", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.e("IconCornerRadiusBottomRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconCornerRadiusBottomLeft", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.e("IconCornerRadiusBottomLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconCornerRadiusTopLeft", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.e("IconCornerRadiusTopLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconCornerRadiusTopRight", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.e("IconCornerRadiusTopRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconRippleColor", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            this.fr = a;
            this.e("IconRippleColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconTextColor", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            this.fs = a;
            this.e("IconTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconHoverTextColor", {
        get: function () {
            return this.fq;
        },
        set: function (a) {
            this.fq = a;
            this.e("IconHoverTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconFocusBackgroundColor", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            this.fn = a;
            this.e("IconFocusBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconFocusTextColor", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            this.fo = a;
            this.e("IconFocusTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "inputId", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.e("InputId");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "id", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.e("Id");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "display", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.e("Display");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flexDirection", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            this.e9 = a;
            this.e("FlexDirection");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flexGrow", {
        get: function () {
            return this.fa;
        },
        set: function (a) {
            this.fa = a;
            this.e("FlexGrow");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "alignItems", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.e("AlignItems");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "valueRef", {
        get: function () {
            return this.gk;
        },
        set: function (a) {
            this.gk = a;
            this.e("ValueRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "name", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            this.fv = a;
            this.e("Name");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "tabIndex", {
        get: function () {
            return this.cz;
        },
        set: function (a) {
            this.cz = a;
            this.e("TabIndex");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "focused", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("Focused");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "isFocusStyleEnabled", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.e("IsFocusStyleEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "ariaLabel", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.e("AriaLabel");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disableRipple", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("DisableRipple");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDisableRipple", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("ActualDisableRipple");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "isHover", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("IsHover");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disabled", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("Disabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disableTransitions", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.e("DisableTransitions");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "clickedRef", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.e("ClickedRef");
        },
        enumerable: true,
        configurable: true
    });
    ButtonDescription.$t = markType(ButtonDescription, 'ButtonDescription', Description.$);
    return ButtonDescription;
}(Description));
export { ButtonDescription };
//# sourceMappingURL=ButtonDescription.js.map
