/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { TreemapNodeStyleDescriptionMetadata } from "./TreemapNodeStyleDescriptionMetadata";
import { TreemapNodeStyleMappingDescription } from "./TreemapNodeStyleMappingDescription";
/**
 * @hidden
 */
var TreemapNodeStyleMappingDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(TreemapNodeStyleMappingDescriptionMetadata, _super);
    function TreemapNodeStyleMappingDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreemapNodeStyleMappingDescriptionMetadata.b = function (a) {
        if (TreemapNodeStyleMappingDescriptionMetadata.a == null) {
            TreemapNodeStyleMappingDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            TreemapNodeStyleMappingDescriptionMetadata.c(a, TreemapNodeStyleMappingDescriptionMetadata.a);
        }
    };
    TreemapNodeStyleMappingDescriptionMetadata.c = function (a, b) {
        TreemapNodeStyleDescriptionMetadata.c(a, b);
        b.item("TargetType", "ExportedType:string:TreemapNodeStyleMappingTargetType");
        b.item("MinimumValue", "Number:double");
        b.item("MaximumValue", "Number:double");
        b.item("Value", "Unknown");
        b.item("MappingMode", "ExportedType:string:TreemapValueMappingMode");
    };
    TreemapNodeStyleMappingDescriptionMetadata.d = function (a) {
        TreemapNodeStyleMappingDescriptionMetadata.b(a);
        a.n("TreemapNodeStyleMapping", function () { return new TreemapNodeStyleMappingDescription(); });
        a.m("TreemapNodeStyleMapping", TreemapNodeStyleMappingDescriptionMetadata.a);
    };
    TreemapNodeStyleMappingDescriptionMetadata.$t = markType(TreemapNodeStyleMappingDescriptionMetadata, 'TreemapNodeStyleMappingDescriptionMetadata');
    TreemapNodeStyleMappingDescriptionMetadata.a = null;
    return TreemapNodeStyleMappingDescriptionMetadata;
}(Base));
export { TreemapNodeStyleMappingDescriptionMetadata };
//# sourceMappingURL=TreemapNodeStyleMappingDescriptionMetadata.js.map
