/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GridCommitCompletedEventArgsDescription } from "./GridCommitCompletedEventArgsDescription";
/**
 * @hidden
 */
var GridCommitCompletedEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GridCommitCompletedEventArgsDescriptionMetadata, _super);
    function GridCommitCompletedEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridCommitCompletedEventArgsDescriptionMetadata.b = function (a) {
        if (GridCommitCompletedEventArgsDescriptionMetadata.a == null) {
            GridCommitCompletedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridCommitCompletedEventArgsDescriptionMetadata.c(a, GridCommitCompletedEventArgsDescriptionMetadata.a);
        }
    };
    GridCommitCompletedEventArgsDescriptionMetadata.c = function (a, b) {
        b.item("TransactionTypes", "Array:string:TransactionType");
        b.item("ItemsRef", "(w:Items,wf:Items)DataRef:object");
    };
    GridCommitCompletedEventArgsDescriptionMetadata.d = function (a) {
        GridCommitCompletedEventArgsDescriptionMetadata.b(a);
        a.n("GridCommitCompletedEventArgs", function () { return new GridCommitCompletedEventArgsDescription(); });
        a.m("GridCommitCompletedEventArgs", GridCommitCompletedEventArgsDescriptionMetadata.a);
    };
    GridCommitCompletedEventArgsDescriptionMetadata.$t = markType(GridCommitCompletedEventArgsDescriptionMetadata, 'GridCommitCompletedEventArgsDescriptionMetadata');
    GridCommitCompletedEventArgsDescriptionMetadata.a = null;
    return GridCommitCompletedEventArgsDescriptionMetadata;
}(Base));
export { GridCommitCompletedEventArgsDescriptionMetadata };
//# sourceMappingURL=GridCommitCompletedEventArgsDescriptionMetadata.js.map
