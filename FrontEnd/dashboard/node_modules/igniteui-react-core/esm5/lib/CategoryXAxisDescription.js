/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { CategoryAxisBaseDescription } from "./CategoryAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CategoryXAxisDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CategoryXAxisDescription, _super);
    function CategoryXAxisDescription() {
        var _this = _super.call(this) || this;
        _this.di = 0;
        _this.dg = 0;
        _this.dj = 0;
        _this.dh = 0;
        _this.dp = null;
        _this.dq = null;
        return _this;
    }
    CategoryXAxisDescription.prototype.get_type = function () {
        return "CategoryXAxis";
    };
    Object.defineProperty(CategoryXAxisDescription.prototype, "interval", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.e("Interval");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "actualInterval", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.e("ActualInterval");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "minorInterval", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.e("MinorInterval");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "actualMinorInterval", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.e("ActualMinorInterval");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "actualIntervalChangeRef", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            this.dp = a;
            this.e("ActualIntervalChangeRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "actualMinorIntervalChangeRef", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            this.dq = a;
            this.e("ActualMinorIntervalChangeRef");
        },
        enumerable: true,
        configurable: true
    });
    CategoryXAxisDescription.$t = markType(CategoryXAxisDescription, 'CategoryXAxisDescription', CategoryAxisBaseDescription.$);
    return CategoryXAxisDescription;
}(CategoryAxisBaseDescription));
export { CategoryXAxisDescription };
//# sourceMappingURL=CategoryXAxisDescription.js.map
