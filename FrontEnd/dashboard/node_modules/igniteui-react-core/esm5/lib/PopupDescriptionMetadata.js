/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { OnClosedEventArgsDescriptionMetadata } from "./OnClosedEventArgsDescriptionMetadata";
import { OnPopupEventArgsDescriptionMetadata } from "./OnPopupEventArgsDescriptionMetadata";
import { PopupDescription } from "./PopupDescription";
/**
 * @hidden
 */
var PopupDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(PopupDescriptionMetadata, _super);
    function PopupDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PopupDescriptionMetadata.b = function (a) {
        if (PopupDescriptionMetadata.a == null) {
            PopupDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            PopupDescriptionMetadata.c(a, PopupDescriptionMetadata.a);
            OnClosedEventArgsDescriptionMetadata.d(a);
            OnPopupEventArgsDescriptionMetadata.d(a);
        }
    };
    PopupDescriptionMetadata.c = function (a, b) {
        b.item("AnimationDuration", "Number:int");
        b.item("AnimationEnabled", "Boolean");
        b.item("Elevation", "Number:int");
        b.item("ActualElevation", "Number:int");
        b.item("ActualUmbraShadowColor", "Brush");
        b.item("ActualPenumbraShadowColor", "Brush");
        b.item("ActualAmbientShadowColor", "Brush");
        b.item("OnClosedRef", "EventRef::onClosed");
        b.item("OnPopupRef", "EventRef::onPopup");
    };
    PopupDescriptionMetadata.d = function (a) {
        PopupDescriptionMetadata.b(a);
        a.n("Popup", function () { return new PopupDescription(); });
        a.m("Popup", PopupDescriptionMetadata.a);
    };
    PopupDescriptionMetadata.$t = markType(PopupDescriptionMetadata, 'PopupDescriptionMetadata');
    PopupDescriptionMetadata.a = null;
    return PopupDescriptionMetadata;
}(Base));
export { PopupDescriptionMetadata };
//# sourceMappingURL=PopupDescriptionMetadata.js.map
