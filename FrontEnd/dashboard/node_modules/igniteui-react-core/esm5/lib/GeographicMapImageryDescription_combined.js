/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
import { SeriesViewerDescription } from "./SeriesViewerDescription";
/**
 * @hidden
 */
var GeographicMapImageryDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GeographicMapImageryDescription, _super);
    function GeographicMapImageryDescription() {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.f = null;
        _this.p = null;
        _this.q = null;
        _this.j = 0;
        _this.o = null;
        _this.n = null;
        _this.l = null;
        _this.m = null;
        return _this;
    }
    GeographicMapImageryDescription.prototype.get_type = function () {
        return "GeographicMapImagery";
    };
    Object.defineProperty(GeographicMapImageryDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapImageryDescription.prototype, "windowRect", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("WindowRect");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapImageryDescription.prototype, "geographicMap", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("GeographicMap");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapImageryDescription.prototype, "referer", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("Referer");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapImageryDescription.prototype, "userAgent", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.e("UserAgent");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapImageryDescription.prototype, "opacity", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("Opacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapImageryDescription.prototype, "imageTilesReadyRef", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.e("ImageTilesReadyRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapImageryDescription.prototype, "imagesChangedRef", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.e("ImagesChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapImageryDescription.prototype, "cancellingImageRef", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("CancellingImageRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapImageryDescription.prototype, "downloadingImageRef", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.e("DownloadingImageRef");
        },
        enumerable: true,
        configurable: true
    });
    GeographicMapImageryDescription.$t = markType(GeographicMapImageryDescription, 'GeographicMapImageryDescription', Description.$);
    return GeographicMapImageryDescription;
}(Description));
export { GeographicMapImageryDescription };
/**
 * @hidden
 */
var GeographicMapDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GeographicMapDescription, _super);
    function GeographicMapDescription() {
        var _this = _super.call(this) || this;
        _this.d5 = false;
        _this.ef = null;
        _this.d4 = false;
        _this.d3 = false;
        _this.d0 = null;
        _this.dz = null;
        _this.dx = null;
        _this.ea = 0;
        _this.d9 = 0;
        _this.ee = null;
        _this.eg = null;
        _this.ed = null;
        return _this;
    }
    GeographicMapDescription.prototype.get_type = function () {
        return "GeographicMap";
    };
    Object.defineProperty(GeographicMapDescription.prototype, "zoomable", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.e("Zoomable");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "resizeBehavior", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.e("ResizeBehavior");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "useWorldRectForZoomBounds", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.e("UseWorldRectForZoomBounds");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "suppressZoomResetOnWorldRectChange", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.e("SuppressZoomResetOnWorldRectChange");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "worldRect", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.e("WorldRect");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "actualWorldRect", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.e("ActualWorldRect");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "backgroundContent", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.e("BackgroundContent");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "windowScale", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.e("WindowScale");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "actualWindowScale", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.e("ActualWindowScale");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "imageTilesReadyRef", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.e("ImageTilesReadyRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "width", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            this.eg = a;
            this.e("Width");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicMapDescription.prototype, "height", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.e("Height");
        },
        enumerable: true,
        configurable: true
    });
    GeographicMapDescription.$t = markType(GeographicMapDescription, 'GeographicMapDescription', SeriesViewerDescription.$);
    return GeographicMapDescription;
}(SeriesViewerDescription));
export { GeographicMapDescription };
//# sourceMappingURL=GeographicMapImageryDescription_combined.js.map
