/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { TreemapNodeStyleDescriptionMetadata } from "./TreemapNodeStyleDescriptionMetadata";
import { TreemapNodeStylingEventArgsDescription } from "./TreemapNodeStylingEventArgsDescription";
/**
 * @hidden
 */
var TreemapNodeStylingEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(TreemapNodeStylingEventArgsDescriptionMetadata, _super);
    function TreemapNodeStylingEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreemapNodeStylingEventArgsDescriptionMetadata.b = function (a) {
        if (TreemapNodeStylingEventArgsDescriptionMetadata.a == null) {
            TreemapNodeStylingEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            TreemapNodeStylingEventArgsDescriptionMetadata.c(a, TreemapNodeStylingEventArgsDescriptionMetadata.a);
            TreemapNodeStyleDescriptionMetadata.d(a);
        }
    };
    TreemapNodeStylingEventArgsDescriptionMetadata.c = function (a, b) {
        b.item("Value", "Number:double");
        b.item("Sum", "Number:double");
        b.item("CustomValueRef", "(w:CustomValue,wf:CustomValue)DataRef");
        b.item("ItemRef", "(w:Item,wf:Item)DataRef");
        b.item("ParentItemRef", "(w:ParentItem,wf:ParentItem)DataRef");
        b.item("Label", "String");
        b.item("ParentValue", "Number:double");
        b.item("ParentLabel", "String");
        b.item("ParentSum", "Number:double");
        b.item("IsParent", "Boolean");
        b.item("Style", "ExportedType:TreemapNodeStyle");
    };
    TreemapNodeStylingEventArgsDescriptionMetadata.d = function (a) {
        TreemapNodeStylingEventArgsDescriptionMetadata.b(a);
        a.n("TreemapNodeStylingEventArgs", function () { return new TreemapNodeStylingEventArgsDescription(); });
        a.m("TreemapNodeStylingEventArgs", TreemapNodeStylingEventArgsDescriptionMetadata.a);
    };
    TreemapNodeStylingEventArgsDescriptionMetadata.$t = markType(TreemapNodeStylingEventArgsDescriptionMetadata, 'TreemapNodeStylingEventArgsDescriptionMetadata');
    TreemapNodeStylingEventArgsDescriptionMetadata.a = null;
    return TreemapNodeStylingEventArgsDescriptionMetadata;
}(Base));
export { TreemapNodeStylingEventArgsDescriptionMetadata };
//# sourceMappingURL=TreemapNodeStylingEventArgsDescriptionMetadata.js.map
