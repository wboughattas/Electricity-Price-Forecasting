/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { DefinitionBaseDescription } from "./DefinitionBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ColumnDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ColumnDescription, _super);
    function ColumnDescription() {
        var _this = _super.call(this) || this;
        _this.c2 = 0;
        _this.c4 = 0;
        _this.c3 = 0;
        _this.c1 = 0;
        _this.dr = null;
        _this.dp = null;
        _this.dq = null;
        _this.dd = null;
        _this.du = null;
        _this.dg = null;
        _this.dt = null;
        _this.df = null;
        _this.b6 = null;
        _this.b4 = null;
        _this.cw = 0;
        _this.cg = false;
        _this.cc = false;
        _this.b2 = null;
        _this.b8 = null;
        _this.cf = false;
        _this.ci = false;
        _this.ch = false;
        _this.cj = false;
        _this.dv = null;
        _this.ds = null;
        _this.c9 = null;
        _this.dh = null;
        _this.db = null;
        _this.dj = null;
        _this.di = null;
        _this.da = null;
        _this.cb = false;
        _this.cd = false;
        _this.ce = false;
        _this.dk = null;
        _this.dc = null;
        _this.cv = 0;
        _this.ct = 0;
        _this.dl = null;
        _this.cu = 0;
        _this.dm = null;
        _this.dn = null;
        _this.de = null;
        return _this;
    }
    ColumnDescription.prototype.get_type = function () {
        return "Column";
    };
    Object.defineProperty(ColumnDescription.prototype, "paddingLeft", {
        get: function () {
            return this.c2;
        },
        set: function (a) {
            this.c2 = a;
            this.e("PaddingLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "paddingTop", {
        get: function () {
            return this.c4;
        },
        set: function (a) {
            this.c4 = a;
            this.e("PaddingTop");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "paddingRight", {
        get: function () {
            return this.c3;
        },
        set: function (a) {
            this.c3 = a;
            this.e("PaddingRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "paddingBottom", {
        get: function () {
            return this.c1;
        },
        set: function (a) {
            this.c1 = a;
            this.e("PaddingBottom");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "name", {
        get: function () {
            return this.dr;
        },
        set: function (a) {
            this.dr = a;
            this.e("Name");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "field", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            this.dp = a;
            this.e("Field");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "headerText", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            this.dq = a;
            this.e("HeaderText");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "actualHeaderText", {
        get: function () {
            return this.dd;
        },
        set: function (a) {
            this.dd = a;
            this.e("ActualHeaderText");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "selectedBackground", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            this.du = a;
            this.e("SelectedBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "actualSelectedBackground", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.e("ActualSelectedBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "rowHoverBackground", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.e("RowHoverBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "actualHoverBackground", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            this.df = a;
            this.e("ActualHoverBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "animationSettings", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.e("AnimationSettings");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "width", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.e("Width");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "minWidth", {
        get: function () {
            return this.cw;
        },
        set: function (a) {
            this.cw = a;
            this.e("MinWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "isFromMarkup", {
        get: function () {
            return this.cg;
        },
        set: function (a) {
            this.cg = a;
            this.e("IsFromMarkup");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "isAutoGenerated", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.e("IsAutoGenerated");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "filter", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.e("Filter");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "header", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.e("Header");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "isFilteringEnabled", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            this.cf = a;
            this.e("IsFilteringEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "isResizingEnabled", {
        get: function () {
            return this.ci;
        },
        set: function (a) {
            this.ci = a;
            this.e("IsResizingEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "isHidden", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            this.ch = a;
            this.e("IsHidden");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "shouldRemoveWhenHidden", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            this.cj = a;
            this.e("ShouldRemoveWhenHidden");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "sortDirection", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.e("SortDirection");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "pinned", {
        get: function () {
            return this.ds;
        },
        set: function (a) {
            this.ds = a;
            this.e("Pinned");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "actualColumnOptionsIconAlignment", {
        get: function () {
            return this.c9;
        },
        set: function (a) {
            this.c9 = a;
            this.e("ActualColumnOptionsIconAlignment");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "columnOptionsIconAlignment", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.e("ColumnOptionsIconAlignment");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "actualColumnOptionsIconColor", {
        get: function () {
            return this.db;
        },
        set: function (a) {
            this.db = a;
            this.e("ActualColumnOptionsIconColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "columnOptionsIconColor", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.e("ColumnOptionsIconColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "columnOptionsIconBehavior", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.e("ColumnOptionsIconBehavior");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "actualColumnOptionsIconBehavior", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            this.da = a;
            this.e("ActualColumnOptionsIconBehavior");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "actualIsColumnOptionsEnabled", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            this.cb = a;
            this.e("ActualIsColumnOptionsEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "isColumnOptionsEnabled", {
        get: function () {
            return this.cd;
        },
        set: function (a) {
            this.cd = a;
            this.e("IsColumnOptionsEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "isEditable", {
        get: function () {
            return this.ce;
        },
        set: function (a) {
            this.ce = a;
            this.e("IsEditable");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "deletedTextColor", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.e("DeletedTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "actualDeletedTextColor", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.e("ActualDeletedTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "editOpacity", {
        get: function () {
            return this.cv;
        },
        set: function (a) {
            this.cv = a;
            this.e("EditOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "actualEditOpacity", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            this.ct = a;
            this.e("ActualEditOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "editFontFamily", {
        get: function () {
            return this.dl;
        },
        set: function (a) {
            this.dl = a;
            this.e("EditFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "editFontSize", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            this.cu = a;
            this.e("EditFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "editFontStyle", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            this.dm = a;
            this.e("EditFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "editFontWeight", {
        get: function () {
            return this.dn;
        },
        set: function (a) {
            this.dn = a;
            this.e("EditFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnDescription.prototype, "actualHeaderTextChangeRef", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            this.de = a;
            this.e("ActualHeaderTextChangeRef");
        },
        enumerable: true,
        configurable: true
    });
    ColumnDescription.$t = markType(ColumnDescription, 'ColumnDescription', DefinitionBaseDescription.$);
    ColumnDescription.__canMarshalByValue = true;
    return ColumnDescription;
}(DefinitionBaseDescription));
export { ColumnDescription };
//# sourceMappingURL=ColumnDescription.js.map
