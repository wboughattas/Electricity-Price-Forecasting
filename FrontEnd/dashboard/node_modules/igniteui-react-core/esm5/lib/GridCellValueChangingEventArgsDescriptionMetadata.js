/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColumnDescriptionMetadata } from "./ColumnDescriptionMetadata";
import { GridCellValueChangingEventArgsDescription } from "./GridCellValueChangingEventArgsDescription";
/**
 * @hidden
 */
var GridCellValueChangingEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GridCellValueChangingEventArgsDescriptionMetadata, _super);
    function GridCellValueChangingEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridCellValueChangingEventArgsDescriptionMetadata.b = function (a) {
        if (GridCellValueChangingEventArgsDescriptionMetadata.a == null) {
            GridCellValueChangingEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridCellValueChangingEventArgsDescriptionMetadata.c(a, GridCellValueChangingEventArgsDescriptionMetadata.a);
            ColumnDescriptionMetadata.d(a);
        }
    };
    GridCellValueChangingEventArgsDescriptionMetadata.c = function (a, b) {
        b.item("EditID", "Number:int");
        b.item("Column", "ExportedType:Column");
        b.item("OldValue", "Unknown");
        b.item("NewValue", "Unknown");
    };
    GridCellValueChangingEventArgsDescriptionMetadata.d = function (a) {
        GridCellValueChangingEventArgsDescriptionMetadata.b(a);
        a.n("GridCellValueChangingEventArgs", function () { return new GridCellValueChangingEventArgsDescription(); });
        a.m("GridCellValueChangingEventArgs", GridCellValueChangingEventArgsDescriptionMetadata.a);
    };
    GridCellValueChangingEventArgsDescriptionMetadata.$t = markType(GridCellValueChangingEventArgsDescriptionMetadata, 'GridCellValueChangingEventArgsDescriptionMetadata');
    GridCellValueChangingEventArgsDescriptionMetadata.a = null;
    return GridCellValueChangingEventArgsDescriptionMetadata;
}(Base));
export { GridCellValueChangingEventArgsDescriptionMetadata };
//# sourceMappingURL=GridCellValueChangingEventArgsDescriptionMetadata.js.map
