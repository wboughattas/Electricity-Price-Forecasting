/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var CalendarDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CalendarDescription, _super);
    function CalendarDescription() {
        var _this = _super.call(this) || this;
        _this.f = new Date();
        _this.m = null;
        _this.k = null;
        _this.j = null;
        _this.t = null;
        _this.v = null;
        _this.n = null;
        _this.s = null;
        _this.w = null;
        _this.u = null;
        _this.o = null;
        _this.l = null;
        _this.p = null;
        _this.h = 0;
        _this.q = null;
        _this.r = null;
        _this.x = null;
        return _this;
    }
    CalendarDescription.prototype.get_type = function () {
        return "Calendar";
    };
    Object.defineProperty(CalendarDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "value", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("Value");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "density", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.e("Density");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "baseTheme", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.e("BaseTheme");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "backgroundColor", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("BackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "selectedDateBackgroundColor", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.e("SelectedDateBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "selectedFocusDateBackgroundColor", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.e("SelectedFocusDateBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "focusDateBackgroundColor", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.e("FocusDateBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "hoverBackgroundColor", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.e("HoverBackgroundColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "textColor", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.e("TextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "selectedDateTextColor", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.e("SelectedDateTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "focusDateTextColor", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.e("FocusDateTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "currentDateTextColor", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("CurrentDateTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "fontFamily", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("FontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "fontSize", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("FontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "fontStyle", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.e("FontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "fontWeight", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.e("FontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "valueChangedRef", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.e("ValueChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    CalendarDescription.$t = markType(CalendarDescription, 'CalendarDescription', Description.$);
    return CalendarDescription;
}(Description));
export { CalendarDescription };
//# sourceMappingURL=CalendarDescription.js.map
