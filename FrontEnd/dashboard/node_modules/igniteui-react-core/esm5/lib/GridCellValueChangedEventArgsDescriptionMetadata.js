/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColumnDescriptionMetadata } from "./ColumnDescriptionMetadata";
import { GridCellValueChangedEventArgsDescription } from "./GridCellValueChangedEventArgsDescription";
/**
 * @hidden
 */
var GridCellValueChangedEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GridCellValueChangedEventArgsDescriptionMetadata, _super);
    function GridCellValueChangedEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridCellValueChangedEventArgsDescriptionMetadata.b = function (a) {
        if (GridCellValueChangedEventArgsDescriptionMetadata.a == null) {
            GridCellValueChangedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridCellValueChangedEventArgsDescriptionMetadata.c(a, GridCellValueChangedEventArgsDescriptionMetadata.a);
            ColumnDescriptionMetadata.d(a);
        }
    };
    GridCellValueChangedEventArgsDescriptionMetadata.c = function (a, b) {
        b.item("TransactionID", "Number:int");
        b.item("Column", "ExportedType:Column");
        b.item("OldValueRef", "(w:OldValue,wf:OldValue)DataRef");
        b.item("NewValueRef", "(w:NewValue,wf:NewValue)DataRef");
        b.item("ErrorMessage", "String");
        b.item("PendingState", "ExportedType:string:TransactionPendingState");
    };
    GridCellValueChangedEventArgsDescriptionMetadata.d = function (a) {
        GridCellValueChangedEventArgsDescriptionMetadata.b(a);
        a.n("GridCellValueChangedEventArgs", function () { return new GridCellValueChangedEventArgsDescription(); });
        a.m("GridCellValueChangedEventArgs", GridCellValueChangedEventArgsDescriptionMetadata.a);
    };
    GridCellValueChangedEventArgsDescriptionMetadata.$t = markType(GridCellValueChangedEventArgsDescriptionMetadata, 'GridCellValueChangedEventArgsDescriptionMetadata');
    GridCellValueChangedEventArgsDescriptionMetadata.a = null;
    return GridCellValueChangedEventArgsDescriptionMetadata;
}(Base));
export { GridCellValueChangedEventArgsDescriptionMetadata };
//# sourceMappingURL=GridCellValueChangedEventArgsDescriptionMetadata.js.map
