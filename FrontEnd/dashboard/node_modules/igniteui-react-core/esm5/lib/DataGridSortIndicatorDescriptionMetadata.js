/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { SortIndicatorRenderCompletedEventArgsDescriptionMetadata } from "./SortIndicatorRenderCompletedEventArgsDescriptionMetadata";
import { DataGridSortIndicatorDescription } from "./DataGridSortIndicatorDescription";
/**
 * @hidden
 */
var DataGridSortIndicatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DataGridSortIndicatorDescriptionMetadata, _super);
    function DataGridSortIndicatorDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGridSortIndicatorDescriptionMetadata.b = function (a) {
        if (DataGridSortIndicatorDescriptionMetadata.a == null) {
            DataGridSortIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DataGridSortIndicatorDescriptionMetadata.c(a, DataGridSortIndicatorDescriptionMetadata.a);
            SortIndicatorRenderCompletedEventArgsDescriptionMetadata.d(a);
        }
    };
    DataGridSortIndicatorDescriptionMetadata.c = function (a, b) {
        b.item("SortDirection", "ExportedType:string:ColumnSortDirection");
        b.item("IconColor", "Brush");
        b.item("IsAnimationEnabled", "Boolean");
        b.item("PixelScalingRatio", "Number:double");
        b.item("ActualPixelScalingRatio", "Number:double");
        b.item("SortIndicatorStyle", "ExportedType:string:SortIndicatorStyle");
        b.item("RenderCompletedRef", "EventRef::renderCompleted");
    };
    DataGridSortIndicatorDescriptionMetadata.d = function (a) {
        DataGridSortIndicatorDescriptionMetadata.b(a);
        a.n("DataGridSortIndicator", function () { return new DataGridSortIndicatorDescription(); });
        a.m("DataGridSortIndicator", DataGridSortIndicatorDescriptionMetadata.a);
    };
    DataGridSortIndicatorDescriptionMetadata.$t = markType(DataGridSortIndicatorDescriptionMetadata, 'DataGridSortIndicatorDescriptionMetadata');
    DataGridSortIndicatorDescriptionMetadata.a = null;
    return DataGridSortIndicatorDescriptionMetadata;
}(Base));
export { DataGridSortIndicatorDescriptionMetadata };
//# sourceMappingURL=DataGridSortIndicatorDescriptionMetadata.js.map
