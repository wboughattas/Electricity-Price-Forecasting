/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var DataGridDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DataGridDescription, _super);
    function DataGridDescription() {
        var _this = _super.call(this) || this;
        _this.g4 = null;
        _this.fs = null;
        _this.d2 = null;
        _this.ex = null;
        _this.ep = null;
        _this.bk = false;
        _this.fy = null;
        _this.fc = null;
        _this.ch = 0;
        _this.ci = 0;
        _this.cj = 0;
        _this.ck = 0;
        _this.a5 = null;
        _this.a7 = null;
        _this.a9 = null;
        _this.a3 = null;
        _this.ax = null;
        _this.az = null;
        _this.ar = null;
        _this.ap = null;
        _this.a1 = null;
        _this.h = null;
        _this.j = null;
        _this.e6 = null;
        _this.dg = 0;
        _this.dm = 0;
        _this.ce = 0;
        _this.df = 0;
        _this.dj = 0;
        _this.e4 = null;
        _this.an = null;
        _this.fj = null;
        _this.fa = null;
        _this.fb = null;
        _this.bc = false;
        _this.dn = 0;
        _this.bj = false;
        _this.ek = null;
        _this.ev = null;
        _this.d6 = null;
        _this.fz = null;
        _this.fx = null;
        _this.eh = null;
        _this.at = null;
        _this.ew = null;
        _this.e0 = null;
        _this.eo = null;
        _this.en = null;
        _this.el = null;
        _this.gf = null;
        _this.dy = null;
        _this.ge = null;
        _this.s = null;
        _this.t = null;
        _this.r = null;
        _this.q = null;
        _this.m = null;
        _this.n = null;
        _this.be = false;
        _this.bh = false;
        _this.bi = false;
        _this.eg = null;
        _this.f8 = null;
        _this.gj = null;
        _this.gu = null;
        _this.cm = 0;
        _this.e7 = null;
        _this.cf = 0;
        _this.e8 = null;
        _this.e9 = null;
        _this.cg = 0;
        _this.e5 = null;
        _this.gi = null;
        _this.fu = null;
        _this.ft = null;
        _this.av = null;
        _this.d4 = null;
        _this.ei = null;
        _this.fp = null;
        _this.fq = null;
        _this.d9 = null;
        _this.b9 = 0;
        _this.ea = null;
        _this.eb = null;
        _this.f4 = null;
        _this.f9 = null;
        _this.f5 = null;
        _this.cn = 0;
        _this.f6 = null;
        _this.f7 = null;
        _this.gk = null;
        _this.co = 0;
        _this.gl = null;
        _this.gm = null;
        _this.gv = null;
        _this.cq = 0;
        _this.gw = null;
        _this.gx = null;
        _this.gs = null;
        _this.gp = null;
        _this.cp = 0;
        _this.gq = null;
        _this.gr = null;
        _this.g0 = null;
        _this.cr = 0;
        _this.g1 = null;
        _this.g2 = null;
        _this.g3 = null;
        _this.gn = null;
        _this.gy = null;
        _this.go = null;
        _this.gz = null;
        _this.dl = 0;
        _this.dk = 0;
        _this.fo = null;
        _this.fi = null;
        _this.fr = null;
        _this.fk = null;
        _this.cl = 0;
        _this.fl = null;
        _this.fm = null;
        _this.f0 = null;
        _this.fn = null;
        _this.f3 = null;
        _this.f1 = null;
        _this.f2 = null;
        _this.di = 0;
        _this.dh = 0;
        _this.ey = null;
        _this.eq = null;
        _this.bp = false;
        _this.er = null;
        _this.et = null;
        _this.es = null;
        _this.d3 = null;
        _this.b5 = 0;
        _this.b6 = 0;
        _this.b7 = 0;
        _this.b8 = 0;
        _this.bl = false;
        _this.cb = 0;
        _this.ca = 0;
        _this.cc = 0;
        _this.cd = 0;
        _this.bd = false;
        _this.p = null;
        _this.u = null;
        _this.l = null;
        _this.k = null;
        _this.v = null;
        _this.gt = null;
        _this.bf = false;
        _this.fg = null;
        _this.bg = false;
        _this.fh = null;
        _this.bb = false;
        _this.o = null;
        _this.g = null;
        _this.f = null;
        _this.i = null;
        _this.bo = false;
        _this.bn = false;
        _this.bm = false;
        _this.fe = null;
        _this.fd = null;
        _this.ee = null;
        _this.ef = null;
        _this.ec = null;
        _this.ed = null;
        _this.d5 = null;
        _this.gh = null;
        _this.ff = null;
        _this.em = null;
        _this.eu = null;
        _this.ej = null;
        _this.e2 = null;
        _this.e3 = null;
        _this.gg = null;
        _this.d0 = null;
        _this.ez = null;
        _this.gc = null;
        _this.gd = null;
        _this.gb = null;
        _this.dz = null;
        _this.ga = null;
        _this.e1 = null;
        _this.d8 = null;
        _this.d7 = null;
        _this.fw = null;
        _this.fv = null;
        _this.d1 = null;
        return _this;
    }
    Object.defineProperty(DataGridDescription.prototype, "width", {
        get: function () {
            return this.g4;
        },
        set: function (a) {
            this.g4 = a;
            this.e("Width");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "height", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            this.fs = a;
            this.e("Height");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "background", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            this.d2 = a;
            this.e("Background");
        },
        enumerable: true,
        configurable: true
    });
    DataGridDescription.prototype.get_type = function () {
        return "DataGrid";
    };
    Object.defineProperty(DataGridDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingMode", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            this.ex = a;
            this.e("ColumnResizingMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingMode", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.e("ColumnMovingMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isRowHoverEnabled", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.e("IsRowHoverEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowHoverBackground", {
        get: function () {
            return this.fy;
        },
        set: function (a) {
            this.fy = a;
            this.e("RowHoverBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editRowBorder", {
        get: function () {
            return this.fc;
        },
        set: function (a) {
            this.fc = a;
            this.e("EditRowBorder");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editRowBorderWidthBottom", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            this.ch = a;
            this.e("EditRowBorderWidthBottom");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editRowBorderWidthLeft", {
        get: function () {
            return this.ci;
        },
        set: function (a) {
            this.ci = a;
            this.e("EditRowBorderWidthLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editRowBorderWidthRight", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            this.cj = a;
            this.e("EditRowBorderWidthRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editRowBorderWidthTop", {
        get: function () {
            return this.ck;
        },
        set: function (a) {
            this.ck = a;
            this.e("EditRowBorderWidthTop");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeader", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.e("SectionHeader");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRowRoot", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.e("SummaryRowRoot");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRowSection", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.e("SummaryRowSection");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparator", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.e("RowSeparator");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerRowSeparator", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.e("HeaderRowSeparator");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerSeparator", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.e("HeaderSeparator");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingSeparator", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.e("ColumnResizingSeparator");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingSeparator", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.e("ColumnMovingSeparator");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedAreaSeparator", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.e("PinnedAreaSeparator");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "autoGenerateDesiredProperties", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("AutoGenerateDesiredProperties");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "dataSourceDesiredProperties", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("DataSourceDesiredProperties");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "density", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            this.e6 = a;
            this.e("Density");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualRowHeight", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.e("ActualRowHeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowHeight", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            this.dm = a;
            this.e("RowHeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "defaultColumnMinWidth", {
        get: function () {
            return this.ce;
        },
        set: function (a) {
            this.ce = a;
            this.e("DefaultColumnMinWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualHeaderHeight", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            this.df = a;
            this.e("ActualHeaderHeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerHeight", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.e("HeaderHeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "dataSourceRef", {
        get: function () {
            return this.e4;
        },
        set: function (a) {
            this.e4 = a;
            this.e("DataSourceRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "dataSource", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.e("DataSource");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerClickAction", {
        get: function () {
            return this.fj;
        },
        set: function (a) {
            this.fj = a;
            this.e("HeaderClickAction");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editMode", {
        get: function () {
            return this.fa;
        },
        set: function (a) {
            this.fa = a;
            this.e("EditMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editModeClickAction", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.e("EditModeClickAction");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "autoGenerateColumns", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.e("AutoGenerateColumns");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparatorHeight", {
        get: function () {
            return this.dn;
        },
        set: function (a) {
            this.dn = a;
            this.e("RowSeparatorHeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isPlaceholderRenderingEnabled", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.e("IsPlaceholderRenderingEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnAddingAnimationMode", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.e("ColumnAddingAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnPropertyUpdatingAnimationMode", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            this.ev = a;
            this.e("ColumnPropertyUpdatingAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellDataLoadedAnimationMode", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.e("CellDataLoadedAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSelectionAnimationMode", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            this.fz = a;
            this.e("RowSelectionAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowHoverAnimationMode", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            this.fx = a;
            this.e("RowHoverAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellSelectionAnimationMode", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.e("CellSelectionAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "animationSettings", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.e("AnimationSettings");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingAnimationMode", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            this.ew = a;
            this.e("ColumnResizingAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnShowingAnimationMode", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            this.e0 = a;
            this.e("ColumnShowingAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingAnimationMode", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            this.eo = a;
            this.e("ColumnMovingAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnHidingAnimationMode", {
        get: function () {
            return this.en;
        },
        set: function (a) {
            this.en = a;
            this.e("ColumnHidingAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnExchangingAnimationMode", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.e("ColumnExchangingAnimationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectionMode", {
        get: function () {
            return this.gf;
        },
        set: function (a) {
            this.gf = a;
            this.e("SelectionMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "activationMode", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.e("ActivationMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectionBehavior", {
        get: function () {
            return this.ge;
        },
        set: function (a) {
            this.ge = a;
            this.e("SelectionBehavior");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedItems", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.e("SelectedItems");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedKeys", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.e("SelectedKeys");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedCells", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.e("SelectedCells");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedCellRanges", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.e("SelectedCellRanges");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedItems", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.e("PinnedItems");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedKeys", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.e("PinnedKeys");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isColumnOptionsEnabled", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.e("IsColumnOptionsEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isGroupRowSticky", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.e("IsGroupRowSticky");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isHeaderSeparatorVisible", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.e("IsHeaderSeparatorVisible");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellSelectedBackground", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            this.eg = a;
            this.e("CellSelectedBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderSelectedBackground", {
        get: function () {
            return this.f8;
        },
        set: function (a) {
            this.f8 = a;
            this.e("SectionHeaderSelectedBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootBackground", {
        get: function () {
            return this.gj;
        },
        set: function (a) {
            this.gj = a;
            this.e("SummaryRootBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionBackground", {
        get: function () {
            return this.gu;
        },
        set: function (a) {
            this.gu = a;
            this.e("SummarySectionBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedRowOpacity", {
        get: function () {
            return this.cm;
        },
        set: function (a) {
            this.cm = a;
            this.e("PinnedRowOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editFontFamily", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            this.e7 = a;
            this.e("EditFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editFontSize", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            this.cf = a;
            this.e("EditFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editFontStyle", {
        get: function () {
            return this.e8;
        },
        set: function (a) {
            this.e8 = a;
            this.e("EditFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editFontWeight", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            this.e9 = a;
            this.e("EditFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editOpacity", {
        get: function () {
            return this.cg;
        },
        set: function (a) {
            this.cg = a;
            this.e("EditOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "deletedTextColor", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            this.e5 = a;
            this.e("DeletedTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "stickyRowBackground", {
        get: function () {
            return this.gi;
        },
        set: function (a) {
            this.gi = a;
            this.e("StickyRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedRowBackground", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.e("PinnedRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "lastStickyRowBackground", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.e("LastStickyRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "activeCell", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.e("ActiveCell");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellBackground", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.e("CellBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellTextColor", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.e("CellTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerSortIndicatorColor", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            this.fp = a;
            this.e("HeaderSortIndicatorColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerSortIndicatorStyle", {
        get: function () {
            return this.fq;
        },
        set: function (a) {
            this.fq = a;
            this.e("HeaderSortIndicatorStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellFontFamily", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.e("CellFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellFontSize", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            this.b9 = a;
            this.e("CellFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellFontStyle", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.e("CellFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellFontWeight", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.e("CellFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderBackground", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            this.f4 = a;
            this.e("SectionHeaderBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderTextColor", {
        get: function () {
            return this.f9;
        },
        set: function (a) {
            this.f9 = a;
            this.e("SectionHeaderTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderFontFamily", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            this.f5 = a;
            this.e("SectionHeaderFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderFontSize", {
        get: function () {
            return this.cn;
        },
        set: function (a) {
            this.cn = a;
            this.e("SectionHeaderFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderFontStyle", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            this.f6 = a;
            this.e("SectionHeaderFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderFontWeight", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            this.f7 = a;
            this.e("SectionHeaderFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootLabelFontFamily", {
        get: function () {
            return this.gk;
        },
        set: function (a) {
            this.gk = a;
            this.e("SummaryRootLabelFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootLabelFontSize", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            this.co = a;
            this.e("SummaryRootLabelFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootLabelFontStyle", {
        get: function () {
            return this.gl;
        },
        set: function (a) {
            this.gl = a;
            this.e("SummaryRootLabelFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootLabelFontWeight", {
        get: function () {
            return this.gm;
        },
        set: function (a) {
            this.gm = a;
            this.e("SummaryRootLabelFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionLabelFontFamily", {
        get: function () {
            return this.gv;
        },
        set: function (a) {
            this.gv = a;
            this.e("SummarySectionLabelFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionLabelFontSize", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            this.cq = a;
            this.e("SummarySectionLabelFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionLabelFontStyle", {
        get: function () {
            return this.gw;
        },
        set: function (a) {
            this.gw = a;
            this.e("SummarySectionLabelFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionLabelFontWeight", {
        get: function () {
            return this.gx;
        },
        set: function (a) {
            this.gx = a;
            this.e("SummarySectionLabelFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootValueTextColor", {
        get: function () {
            return this.gs;
        },
        set: function (a) {
            this.gs = a;
            this.e("SummaryRootValueTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootValueFontFamily", {
        get: function () {
            return this.gp;
        },
        set: function (a) {
            this.gp = a;
            this.e("SummaryRootValueFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootValueFontSize", {
        get: function () {
            return this.cp;
        },
        set: function (a) {
            this.cp = a;
            this.e("SummaryRootValueFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootValueFontStyle", {
        get: function () {
            return this.gq;
        },
        set: function (a) {
            this.gq = a;
            this.e("SummaryRootValueFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootValueFontWeight", {
        get: function () {
            return this.gr;
        },
        set: function (a) {
            this.gr = a;
            this.e("SummaryRootValueFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionValueFontFamily", {
        get: function () {
            return this.g0;
        },
        set: function (a) {
            this.g0 = a;
            this.e("SummarySectionValueFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionValueFontSize", {
        get: function () {
            return this.cr;
        },
        set: function (a) {
            this.cr = a;
            this.e("SummarySectionValueFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionValueFontStyle", {
        get: function () {
            return this.g1;
        },
        set: function (a) {
            this.g1 = a;
            this.e("SummarySectionValueFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionValueFontWeight", {
        get: function () {
            return this.g2;
        },
        set: function (a) {
            this.g2 = a;
            this.e("SummarySectionValueFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionValueTextColor", {
        get: function () {
            return this.g3;
        },
        set: function (a) {
            this.g3 = a;
            this.e("SummarySectionValueTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootLabelTextColor", {
        get: function () {
            return this.gn;
        },
        set: function (a) {
            this.gn = a;
            this.e("SummaryRootLabelTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionLabelTextColor", {
        get: function () {
            return this.gy;
        },
        set: function (a) {
            this.gy = a;
            this.e("SummarySectionLabelTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootSelectedBackground", {
        get: function () {
            return this.go;
        },
        set: function (a) {
            this.go = a;
            this.e("SummaryRootSelectedBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionSelectedBackground", {
        get: function () {
            return this.gz;
        },
        set: function (a) {
            this.gz = a;
            this.e("SummarySectionSelectedBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedAreaSeparatorWidth", {
        get: function () {
            return this.dl;
        },
        set: function (a) {
            this.dl = a;
            this.e("PinnedAreaSeparatorWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerSeparatorWidth", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.e("HeaderSeparatorWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerSeparatorBackground", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            this.fo = a;
            this.e("HeaderSeparatorBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerBackground", {
        get: function () {
            return this.fi;
        },
        set: function (a) {
            this.fi = a;
            this.e("HeaderBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerTextColor", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            this.fr = a;
            this.e("HeaderTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerFontFamily", {
        get: function () {
            return this.fk;
        },
        set: function (a) {
            this.fk = a;
            this.e("HeaderFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerFontSize", {
        get: function () {
            return this.cl;
        },
        set: function (a) {
            this.cl = a;
            this.e("HeaderFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerFontStyle", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.e("HeaderFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerFontWeight", {
        get: function () {
            return this.fm;
        },
        set: function (a) {
            this.fm = a;
            this.e("HeaderFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparatorBackground", {
        get: function () {
            return this.f0;
        },
        set: function (a) {
            this.f0 = a;
            this.e("RowSeparatorBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerRowSeparatorBackground", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            this.fn = a;
            this.e("HeaderRowSeparatorBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparatorStickyRowBackground", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            this.f3 = a;
            this.e("RowSeparatorStickyRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparatorLastStickyRowBackground", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            this.f1 = a;
            this.e("RowSeparatorLastStickyRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparatorPinnedRowBackground", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            this.f2 = a;
            this.e("RowSeparatorPinnedRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingSeparatorWidth", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.e("ColumnResizingSeparatorWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingSeparatorWidth", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.e("ColumnMovingSeparatorWidth");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingSeparatorBackground", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            this.ey = a;
            this.e("ColumnResizingSeparatorBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingSeparatorBackground", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.e("ColumnMovingSeparatorBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "shiftSectionContent", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.e("ShiftSectionContent");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnOptionsIconAlignment", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.e("ColumnOptionsIconAlignment");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnOptionsIconColor", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.e("ColumnOptionsIconColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnOptionsIconBehavior", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.e("ColumnOptionsIconBehavior");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "border", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.e("Border");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "borderWidthBottom", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            this.b5 = a;
            this.e("BorderWidthBottom");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "borderWidthLeft", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.e("BorderWidthLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "borderWidthRight", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
            this.e("BorderWidthRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "borderWidthTop", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.e("BorderWidthTop");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "notifyOnAllSelectionChanges", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.e("NotifyOnAllSelectionChanges");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cornerRadiusBottomRight", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            this.cb = a;
            this.e("CornerRadiusBottomRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cornerRadiusBottomLeft", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
            this.e("CornerRadiusBottomLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cornerRadiusTopLeft", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.e("CornerRadiusTopLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cornerRadiusTopRight", {
        get: function () {
            return this.cd;
        },
        set: function (a) {
            this.cd = a;
            this.e("CornerRadiusTopRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isActiveCellStyleEnabled", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.e("IsActiveCellStyleEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "responsiveStates", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("ResponsiveStates");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sortDescriptions", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.e("SortDescriptions");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "groupDescriptions", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("GroupDescriptions");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "filterExpressions", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.e("FilterExpressions");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryDescriptions", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.e("SummaryDescriptions");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryScope", {
        get: function () {
            return this.gt;
        },
        set: function (a) {
            this.gt = a;
            this.e("SummaryScope");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isGroupCollapsable", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.e("IsGroupCollapsable");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "groupHeaderDisplayMode", {
        get: function () {
            return this.fg;
        },
        set: function (a) {
            this.fg = a;
            this.e("GroupHeaderDisplayMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isGroupExpandedDefault", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.e("IsGroupExpandedDefault");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "groupSummaryDisplayMode", {
        get: function () {
            return this.fh;
        },
        set: function (a) {
            this.fh = a;
            this.e("GroupSummaryDisplayMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "autoAcceptEdits", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.e("AutoAcceptEdits");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "primaryKey", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.e("PrimaryKey");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualPrimaryKey", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("ActualPrimaryKey");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualColumns", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("ActualColumns");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columns", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.e("Columns");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "reactsToSortChanges", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.e("ReactsToSortChanges");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "reactsToGroupChanges", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.e("ReactsToGroupChanges");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "reactsToFilterChanges", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.e("ReactsToFilterChanges");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "filterExpressionsChangingRef", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.e("FilterExpressionsChangingRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "filterExpressionsChangedRef", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.e("FilterExpressionsChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellPreviewPointerDownRef", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.e("CellPreviewPointerDownRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellPreviewPointerUpRef", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.e("CellPreviewPointerUpRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellPointerDownRef", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            this.ec = a;
            this.e("CellPointerDownRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellPointerUpRef", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.e("CellPointerUpRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellClickedRef", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.e("CellClickedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sortDescriptionsChangedRef", {
        get: function () {
            return this.gh;
        },
        set: function (a) {
            this.gh = a;
            this.e("SortDescriptionsChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "groupDescriptionsChangedRef", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            this.ff = a;
            this.e("GroupDescriptionsChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnHiddenChangedRef", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.e("ColumnHiddenChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnPinnedChangedRef", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.e("ColumnPinnedChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellValueChangingRef", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.e("CellValueChangingRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "dataCommittedRef", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            this.e2 = a;
            this.e("DataCommittedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "dataCommittingRef", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            this.e3 = a;
            this.e("DataCommittingRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sizeChangedRef", {
        get: function () {
            return this.gg;
        },
        set: function (a) {
            this.gg = a;
            this.e("SizeChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualColumnsChangedRef", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.e("ActualColumnsChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnsAutoGeneratedRef", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            this.ez = a;
            this.e("ColumnsAutoGeneratedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedItemsChangedRef", {
        get: function () {
            return this.gc;
        },
        set: function (a) {
            this.gc = a;
            this.e("SelectedItemsChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedKeysChangedRef", {
        get: function () {
            return this.gd;
        },
        set: function (a) {
            this.gd = a;
            this.e("SelectedKeysChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedCellsChangedRef", {
        get: function () {
            return this.gb;
        },
        set: function (a) {
            this.gb = a;
            this.e("SelectedCellsChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "activeCellChangedRef", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.e("ActiveCellChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedCellRangesChangedRef", {
        get: function () {
            return this.ga;
        },
        set: function (a) {
            this.ga = a;
            this.e("SelectedCellRangesChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnWidthChangedRef", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            this.e1 = a;
            this.e("ColumnWidthChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellEditStartedRef", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            this.d8 = a;
            this.e("CellEditStartedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellEditEndedRef", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.e("CellEditEndedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowEditStartedRef", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            this.fw = a;
            this.e("RowEditStartedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowEditEndedRef", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            this.fv = a;
            this.e("RowEditEndedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualPrimaryKeyChangeRef", {
        get: function () {
            return this.d1;
        },
        set: function (a) {
            this.d1 = a;
            this.e("ActualPrimaryKeyChangeRef");
        },
        enumerable: true,
        configurable: true
    });
    DataGridDescription.$t = markType(DataGridDescription, 'DataGridDescription', Description.$);
    return DataGridDescription;
}(Description));
export { DataGridDescription };
//# sourceMappingURL=DataGridDescription.js.map
