/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { SeriesDescriptionMetadata } from "./SeriesDescriptionMetadata";
import { ValueOverlayDescription } from "./ValueOverlayDescription";
/**
 * @hidden
 */
var ValueOverlayDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ValueOverlayDescriptionMetadata, _super);
    function ValueOverlayDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ValueOverlayDescriptionMetadata.b = function (a) {
        if (ValueOverlayDescriptionMetadata.a == null) {
            ValueOverlayDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ValueOverlayDescriptionMetadata.c(a, ValueOverlayDescriptionMetadata.a);
        }
    };
    ValueOverlayDescriptionMetadata.c = function (a, b) {
        SeriesDescriptionMetadata.c(a, b);
        b.item("AxisRef", "(w:Axis,wf:Axis)DataRef::object");
        b.item("Value", "Number:double");
        b.item("IsAxisAnnotationEnabled", "Boolean");
        b.item("AxisAnnotationFormatLabelRef", "(w:AxisAnnotationFormatLabel,wf:AxisAnnotationFormatLabel)MethodRef");
        b.item("AxisAnnotationTextColor", "Brush");
        b.item("AxisAnnotationBackground", "Brush");
        b.item("AxisAnnotationInterpolatedValuePrecision", "Number:int");
        b.item("AxisAnnotationOutline", "Brush");
        b.item("AxisAnnotationPaddingLeft", "Number:double");
        b.item("AxisAnnotationPaddingTop", "Number:double");
        b.item("AxisAnnotationPaddingRight", "Number:double");
        b.item("AxisAnnotationPaddingBottom", "Number:double");
        b.item("AxisAnnotationStrokeThickness", "Number:double");
    };
    ValueOverlayDescriptionMetadata.d = function (a) {
        ValueOverlayDescriptionMetadata.b(a);
        a.n("ValueOverlay", function () { return new ValueOverlayDescription(); });
        a.m("ValueOverlay", ValueOverlayDescriptionMetadata.a);
    };
    ValueOverlayDescriptionMetadata.$t = markType(ValueOverlayDescriptionMetadata, 'ValueOverlayDescriptionMetadata');
    ValueOverlayDescriptionMetadata.a = null;
    return ValueOverlayDescriptionMetadata;
}(Base));
export { ValueOverlayDescriptionMetadata };
//# sourceMappingURL=ValueOverlayDescriptionMetadata.js.map
