/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DoubleValueChangedEventArgsDescription } from "./DoubleValueChangedEventArgsDescription";
/**
 * @hidden
 */
var DoubleValueChangedEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DoubleValueChangedEventArgsDescriptionMetadata, _super);
    function DoubleValueChangedEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DoubleValueChangedEventArgsDescriptionMetadata.b = function (a) {
        if (DoubleValueChangedEventArgsDescriptionMetadata.a == null) {
            DoubleValueChangedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DoubleValueChangedEventArgsDescriptionMetadata.c(a, DoubleValueChangedEventArgsDescriptionMetadata.a);
        }
    };
    DoubleValueChangedEventArgsDescriptionMetadata.c = function (a, b) {
        b.item("OldValue", "Number:double");
        b.item("NewValue", "Number:double");
    };
    DoubleValueChangedEventArgsDescriptionMetadata.d = function (a) {
        DoubleValueChangedEventArgsDescriptionMetadata.b(a);
        a.n("DoubleValueChangedEventArgs", function () { return new DoubleValueChangedEventArgsDescription(); });
        a.m("DoubleValueChangedEventArgs", DoubleValueChangedEventArgsDescriptionMetadata.a);
    };
    DoubleValueChangedEventArgsDescriptionMetadata.$t = markType(DoubleValueChangedEventArgsDescriptionMetadata, 'DoubleValueChangedEventArgsDescriptionMetadata');
    DoubleValueChangedEventArgsDescriptionMetadata.a = null;
    return DoubleValueChangedEventArgsDescriptionMetadata;
}(Base));
export { DoubleValueChangedEventArgsDescriptionMetadata };
//# sourceMappingURL=DoubleValueChangedEventArgsDescriptionMetadata.js.map
