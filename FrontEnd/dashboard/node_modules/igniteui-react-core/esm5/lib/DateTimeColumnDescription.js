/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { ColumnDescription } from "./ColumnDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var DateTimeColumnDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DateTimeColumnDescription, _super);
    function DateTimeColumnDescription() {
        var _this = _super.call(this) || this;
        _this.ep = null;
        _this.eu = null;
        _this.ej = null;
        _this.et = null;
        _this.es = null;
        _this.eq = null;
        _this.em = null;
        _this.er = null;
        _this.ei = null;
        return _this;
    }
    DateTimeColumnDescription.prototype.get_type = function () {
        return "DateTimeColumn";
    };
    Object.defineProperty(DateTimeColumnDescription.prototype, "dateTimeFormat", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.e("DateTimeFormat");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeColumnDescription.prototype, "formatString", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.e("FormatString");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeColumnDescription.prototype, "formatSpecifiers", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.e("FormatSpecifiers");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeColumnDescription.prototype, "formatOverrideRef", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.e("FormatOverrideRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeColumnDescription.prototype, "editorType", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.e("EditorType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeColumnDescription.prototype, "editorDataSourceRef", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.e("EditorDataSourceRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeColumnDescription.prototype, "editorDataSource", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.e("EditorDataSource");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeColumnDescription.prototype, "editorTextField", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.e("EditorTextField");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeColumnDescription.prototype, "editorValueField", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.e("EditorValueField");
        },
        enumerable: true,
        configurable: true
    });
    DateTimeColumnDescription.$t = markType(DateTimeColumnDescription, 'DateTimeColumnDescription', ColumnDescription.$);
    DateTimeColumnDescription.__canMarshalByValue1 = true;
    return DateTimeColumnDescription;
}(ColumnDescription));
export { DateTimeColumnDescription };
//# sourceMappingURL=DateTimeColumnDescription.js.map
