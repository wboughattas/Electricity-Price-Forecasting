/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GeographicMapSeriesHostDescriptionMetadata } from "./GeographicMapSeriesHostDescriptionMetadata";
/**
 * @hidden
 */
var GeographicXYTriangulatingSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GeographicXYTriangulatingSeriesDescriptionMetadata, _super);
    function GeographicXYTriangulatingSeriesDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GeographicXYTriangulatingSeriesDescriptionMetadata.b = function (a) {
        if (GeographicXYTriangulatingSeriesDescriptionMetadata.a == null) {
            GeographicXYTriangulatingSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GeographicXYTriangulatingSeriesDescriptionMetadata.c(a, GeographicXYTriangulatingSeriesDescriptionMetadata.a);
        }
    };
    GeographicXYTriangulatingSeriesDescriptionMetadata.c = function (a, b) {
        GeographicMapSeriesHostDescriptionMetadata.c(a, b);
        b.item("LongitudeMemberPath", "String");
        b.item("LatitudeMemberPath", "String");
        b.item("TrianglesSourceRef", "(w:TrianglesSource,wf:TrianglesSource)DataRef::object");
        b.item("TriangleVertexMemberPath1", "String");
        b.item("TriangleVertexMemberPath2", "String");
        b.item("TriangleVertexMemberPath3", "String");
    };
    GeographicXYTriangulatingSeriesDescriptionMetadata.d = function (a) {
        GeographicXYTriangulatingSeriesDescriptionMetadata.b(a);
        a.m("GeographicXYTriangulatingSeries", GeographicXYTriangulatingSeriesDescriptionMetadata.a);
    };
    GeographicXYTriangulatingSeriesDescriptionMetadata.$t = markType(GeographicXYTriangulatingSeriesDescriptionMetadata, 'GeographicXYTriangulatingSeriesDescriptionMetadata');
    GeographicXYTriangulatingSeriesDescriptionMetadata.a = null;
    return GeographicXYTriangulatingSeriesDescriptionMetadata;
}(Base));
export { GeographicXYTriangulatingSeriesDescriptionMetadata };
//# sourceMappingURL=GeographicXYTriangulatingSeriesDescriptionMetadata.js.map
