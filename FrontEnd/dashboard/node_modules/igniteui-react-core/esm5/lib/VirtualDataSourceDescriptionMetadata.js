/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { BaseDataSourceDescriptionMetadata } from "./BaseDataSourceDescriptionMetadata";
import { VirtualDataSourceDescription } from "./VirtualDataSourceDescription";
/**
 * @hidden
 */
var VirtualDataSourceDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(VirtualDataSourceDescriptionMetadata, _super);
    function VirtualDataSourceDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VirtualDataSourceDescriptionMetadata.b = function (a) {
        if (VirtualDataSourceDescriptionMetadata.a == null) {
            VirtualDataSourceDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            VirtualDataSourceDescriptionMetadata.c(a, VirtualDataSourceDescriptionMetadata.a);
        }
    };
    VirtualDataSourceDescriptionMetadata.c = function (a, b) {
        BaseDataSourceDescriptionMetadata.c(a, b);
        b.item("IsSectionCollapsable", "Boolean");
        b.item("IsSectionExpandedDefault", "Boolean");
        b.item("PageSizeRequested", "Number:int");
        b.item("MaxCachedPages", "Number:int");
        b.item("ActualPageSize", "Number:int");
        b.item("ConcurrencyTag", "String");
        b.item("IsBatchingEnabled", "Boolean");
    };
    VirtualDataSourceDescriptionMetadata.d = function (a) {
        VirtualDataSourceDescriptionMetadata.b(a);
        a.n("VirtualDataSource", function () { return new VirtualDataSourceDescription(); });
        a.m("VirtualDataSource", VirtualDataSourceDescriptionMetadata.a);
    };
    VirtualDataSourceDescriptionMetadata.$t = markType(VirtualDataSourceDescriptionMetadata, 'VirtualDataSourceDescriptionMetadata');
    VirtualDataSourceDescriptionMetadata.a = null;
    return VirtualDataSourceDescriptionMetadata;
}(Base));
export { VirtualDataSourceDescriptionMetadata };
//# sourceMappingURL=VirtualDataSourceDescriptionMetadata.js.map
