/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var FinancialChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(FinancialChartDescription, _super);
    function FinancialChartDescription() {
        var _this = _super.call(this) || this;
        _this.jx = null;
        _this.jz = null;
        _this.jw = null;
        _this.ju = null;
        _this.iv = 0;
        _this.h9 = false;
        _this.iy = 0;
        _this.ig = false;
        _this.jm = 0;
        _this.i0 = 0;
        _this.i2 = 0;
        _this.i1 = 0;
        _this.i3 = 0;
        _this.jy = null;
        _this.j0 = null;
        _this.j3 = null;
        _this.ib = false;
        _this.jv = null;
        _this.j1 = null;
        _this.id = false;
        _this.hl = null;
        _this.hq = null;
        _this.ie = false;
        _this.ix = 0;
        _this.j2 = null;
        _this.j4 = null;
        _this.hm = null;
        _this.hn = null;
        _this.ho = null;
        _this.hp = null;
        _this.ht = null;
        _this.hs = null;
        _this.hk = null;
        _this.hi = null;
        _this.iz = 0;
        _this.iw = 0;
        _this.iu = 0;
        _this.hj = null;
        _this.ji = 0;
        _this.it = 0;
        _this.jl = 0;
        _this.jj = 0;
        _this.jh = 0;
        _this.jk = 0;
        _this.hr = null;
        _this.hh = null;
        _this.ic = false;
        _this.j5 = null;
        _this.i4 = 0;
        _this.ia = false;
        _this.iq = new Date();
        _this.ip = new Date();
        _this.hu = null;
        _this.jt = null;
        return _this;
    }
    Object.defineProperty(FinancialChartDescription.prototype, "tooltipTemplateRef", {
        get: function () {
            return this.jx;
        },
        set: function (a) {
            this.jx = a;
            this.e("TooltipTemplateRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "width", {
        get: function () {
            return this.jz;
        },
        set: function (a) {
            this.jz = a;
            this.e("Width");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "height", {
        get: function () {
            return this.jw;
        },
        set: function (a) {
            this.jw = a;
            this.e("Height");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "background", {
        get: function () {
            return this.ju;
        },
        set: function (a) {
            this.ju = a;
            this.e("Background");
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartDescription.prototype.get_type = function () {
        return "FinancialChart";
    };
    Object.defineProperty(FinancialChartDescription.prototype, "leftMargin", {
        get: function () {
            return this.iv;
        },
        set: function (a) {
            this.iv = a;
            this.e("LeftMargin");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isHorizontalZoomEnabled", {
        get: function () {
            return this.h9;
        },
        set: function (a) {
            this.h9 = a;
            this.e("IsHorizontalZoomEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "toolbarHeight", {
        get: function () {
            return this.iy;
        },
        set: function (a) {
            this.iy = a;
            this.e("ToolbarHeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisIsLogarithmic", {
        get: function () {
            return this.ig;
        },
        set: function (a) {
            this.ig = a;
            this.e("YAxisIsLogarithmic");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLogarithmBase", {
        get: function () {
            return this.jm;
        },
        set: function (a) {
            this.jm = a;
            this.e("YAxisLogarithmBase");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisInterval", {
        get: function () {
            return this.i0;
        },
        set: function (a) {
            this.i0 = a;
            this.e("YAxisInterval");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinimumValue", {
        get: function () {
            return this.i2;
        },
        set: function (a) {
            this.i2 = a;
            this.e("YAxisMinimumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMaximumValue", {
        get: function () {
            return this.i1;
        },
        set: function (a) {
            this.i1 = a;
            this.e("YAxisMaximumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinorInterval", {
        get: function () {
            return this.i3;
        },
        set: function (a) {
            this.i3 = a;
            this.e("YAxisMinorInterval");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeType", {
        get: function () {
            return this.jy;
        },
        set: function (a) {
            this.jy = a;
            this.e("VolumeType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMode", {
        get: function () {
            return this.j0;
        },
        set: function (a) {
            this.j0 = a;
            this.e("XAxisMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMode", {
        get: function () {
            return this.j3;
        },
        set: function (a) {
            this.j3 = a;
            this.e("YAxisMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isToolbarVisible", {
        get: function () {
            return this.ib;
        },
        set: function (a) {
            this.ib = a;
            this.e("IsToolbarVisible");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "chartType", {
        get: function () {
            return this.jv;
        },
        set: function (a) {
            this.jv = a;
            this.e("ChartType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLabelHorizontalAlignment", {
        get: function () {
            return this.j1;
        },
        set: function (a) {
            this.j1 = a;
            this.e("YAxisLabelHorizontalAlignment");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isWindowSyncedToVisibleRange", {
        get: function () {
            return this.id;
        },
        set: function (a) {
            this.id = a;
            this.e("IsWindowSyncedToVisibleRange");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorTypes", {
        get: function () {
            return this.hl;
        },
        set: function (a) {
            this.hl = a;
            this.e("IndicatorTypes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayTypes", {
        get: function () {
            return this.hq;
        },
        set: function (a) {
            this.hq = a;
            this.e("OverlayTypes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisAbbreviateLargeNumbers", {
        get: function () {
            return this.ie;
        },
        set: function (a) {
            this.ie = a;
            this.e("YAxisAbbreviateLargeNumbers");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "resolution", {
        get: function () {
            return this.ix;
        },
        set: function (a) {
            this.ix = a;
            this.e("Resolution");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLabelLocation", {
        get: function () {
            return this.j2;
        },
        set: function (a) {
            this.j2 = a;
            this.e("YAxisLabelLocation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderType", {
        get: function () {
            return this.j4;
        },
        set: function (a) {
            this.j4 = a;
            this.e("ZoomSliderType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeBrushes", {
        get: function () {
            return this.hm;
        },
        set: function (a) {
            this.hm = a;
            this.e("NegativeBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeOutlines", {
        get: function () {
            return this.hn;
        },
        set: function (a) {
            this.hn = a;
            this.e("NegativeOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayBrushes", {
        get: function () {
            return this.ho;
        },
        set: function (a) {
            this.ho = a;
            this.e("OverlayBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayOutlines", {
        get: function () {
            return this.hp;
        },
        set: function (a) {
            this.hp = a;
            this.e("OverlayOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeOutlines", {
        get: function () {
            return this.ht;
        },
        set: function (a) {
            this.ht = a;
            this.e("VolumeOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeBrushes", {
        get: function () {
            return this.hs;
        },
        set: function (a) {
            this.hs = a;
            this.e("VolumeBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorNegativeBrushes", {
        get: function () {
            return this.hk;
        },
        set: function (a) {
            this.hk = a;
            this.e("IndicatorNegativeBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorBrushes", {
        get: function () {
            return this.hi;
        },
        set: function (a) {
            this.hi = a;
            this.e("IndicatorBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeThickness", {
        get: function () {
            return this.iz;
        },
        set: function (a) {
            this.iz = a;
            this.e("VolumeThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayThickness", {
        get: function () {
            return this.iw;
        },
        set: function (a) {
            this.iw = a;
            this.e("OverlayThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorThickness", {
        get: function () {
            return this.iu;
        },
        set: function (a) {
            this.iu = a;
            this.e("IndicatorThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorDisplayTypes", {
        get: function () {
            return this.hj;
        },
        set: function (a) {
            this.hj = a;
            this.e("IndicatorDisplayTypes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorPeriod", {
        get: function () {
            return this.ji;
        },
        set: function (a) {
            this.ji = a;
            this.e("IndicatorPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorMultiplier", {
        get: function () {
            return this.it;
        },
        set: function (a) {
            this.it = a;
            this.e("IndicatorMultiplier");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSmoothingPeriod", {
        get: function () {
            return this.jl;
        },
        set: function (a) {
            this.jl = a;
            this.e("IndicatorSmoothingPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorShortPeriod", {
        get: function () {
            return this.jj;
        },
        set: function (a) {
            this.jj = a;
            this.e("IndicatorShortPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorLongPeriod", {
        get: function () {
            return this.jh;
        },
        set: function (a) {
            this.jh = a;
            this.e("IndicatorLongPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSignalPeriod", {
        get: function () {
            return this.jk;
        },
        set: function (a) {
            this.jk = a;
            this.e("IndicatorSignalPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "rangeSelectorOptions", {
        get: function () {
            return this.hr;
        },
        set: function (a) {
            this.hr = a;
            this.e("RangeSelectorOptions");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "customIndicatorNames", {
        get: function () {
            return this.hh;
        },
        set: function (a) {
            this.hh = a;
            this.e("CustomIndicatorNames");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isVerticalZoomEnabled", {
        get: function () {
            return this.ic;
        },
        set: function (a) {
            this.ic = a;
            this.e("IsVerticalZoomEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStroke", {
        get: function () {
            return this.j5;
        },
        set: function (a) {
            this.j5 = a;
            this.e("ZoomSliderXAxisMajorStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStrokeThickness", {
        get: function () {
            return this.i4;
        },
        set: function (a) {
            this.i4 = a;
            this.e("ZoomSliderXAxisMajorStrokeThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isLegendVisible", {
        get: function () {
            return this.ia;
        },
        set: function (a) {
            this.ia = a;
            this.e("IsLegendVisible");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMinimumValue", {
        get: function () {
            return this.iq;
        },
        set: function (a) {
            this.iq = a;
            this.e("XAxisMinimumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMaximumValue", {
        get: function () {
            return this.ip;
        },
        set: function (a) {
            this.ip = a;
            this.e("XAxisMaximumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisBreaks", {
        get: function () {
            return this.hu;
        },
        set: function (a) {
            this.hu = a;
            this.e("XAxisBreaks");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "applyCustomIndicatorsRef", {
        get: function () {
            return this.jt;
        },
        set: function (a) {
            this.jt = a;
            this.e("ApplyCustomIndicatorsRef");
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartDescription.$t = markType(FinancialChartDescription, 'FinancialChartDescription', XYChartDescription.$);
    return FinancialChartDescription;
}(XYChartDescription));
export { FinancialChartDescription };
//# sourceMappingURL=FinancialChartDescription.js.map
