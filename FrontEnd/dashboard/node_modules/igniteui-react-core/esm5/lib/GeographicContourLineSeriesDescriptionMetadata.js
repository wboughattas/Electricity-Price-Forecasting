/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ValueBrushScaleDescriptionMetadata } from "./ValueBrushScaleDescriptionMetadata";
import { ContourValueResolverDescriptionMetadata } from "./ContourValueResolverDescriptionMetadata";
import { TriangulationStatusEventArgsDescriptionMetadata } from "./TriangulationStatusEventArgsDescriptionMetadata";
import { GeographicXYTriangulatingSeriesDescriptionMetadata } from "./GeographicXYTriangulatingSeriesDescriptionMetadata";
import { GeographicContourLineSeriesDescription } from "./GeographicContourLineSeriesDescription";
/**
 * @hidden
 */
var GeographicContourLineSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GeographicContourLineSeriesDescriptionMetadata, _super);
    function GeographicContourLineSeriesDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GeographicContourLineSeriesDescriptionMetadata.b = function (a) {
        if (GeographicContourLineSeriesDescriptionMetadata.a == null) {
            GeographicContourLineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GeographicContourLineSeriesDescriptionMetadata.c(a, GeographicContourLineSeriesDescriptionMetadata.a);
            ValueBrushScaleDescriptionMetadata.d(a);
            ContourValueResolverDescriptionMetadata.d(a);
            TriangulationStatusEventArgsDescriptionMetadata.d(a);
        }
    };
    GeographicContourLineSeriesDescriptionMetadata.c = function (a, b) {
        GeographicXYTriangulatingSeriesDescriptionMetadata.c(a, b);
        b.item("ValueMemberPath", "String");
        b.item("FillScale", "ExportedType:ValueBrushScale");
        b.item("ValueResolver", "ExportedType:ContourValueResolver");
        b.item("TriangulationStatusChangedRef", "EventRef::triangulationStatusChanged");
    };
    GeographicContourLineSeriesDescriptionMetadata.d = function (a) {
        GeographicContourLineSeriesDescriptionMetadata.b(a);
        a.n("GeographicContourLineSeries", function () { return new GeographicContourLineSeriesDescription(); });
        a.m("GeographicContourLineSeries", GeographicContourLineSeriesDescriptionMetadata.a);
    };
    GeographicContourLineSeriesDescriptionMetadata.$t = markType(GeographicContourLineSeriesDescriptionMetadata, 'GeographicContourLineSeriesDescriptionMetadata');
    GeographicContourLineSeriesDescriptionMetadata.a = null;
    return GeographicContourLineSeriesDescriptionMetadata;
}(Base));
export { GeographicContourLineSeriesDescriptionMetadata };
//# sourceMappingURL=GeographicContourLineSeriesDescriptionMetadata.js.map
