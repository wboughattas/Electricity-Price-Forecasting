/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColumnDescriptionMetadata } from "./ColumnDescriptionMetadata";
/**
 * @hidden
 */
var GridColumnOptionsBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GridColumnOptionsBaseDescriptionMetadata, _super);
    function GridColumnOptionsBaseDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridColumnOptionsBaseDescriptionMetadata.b = function (a) {
        if (GridColumnOptionsBaseDescriptionMetadata.a == null) {
            GridColumnOptionsBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridColumnOptionsBaseDescriptionMetadata.c(a, GridColumnOptionsBaseDescriptionMetadata.a);
            ColumnDescriptionMetadata.d(a);
        }
    };
    GridColumnOptionsBaseDescriptionMetadata.c = function (a, b) {
        b.item("AutoSize", "Boolean");
        b.item("BackgroundColor", "Brush");
        b.item("BaseTheme", "ExportedType:string:BaseControlTheme");
        b.item("ActualBaseTheme", "ExportedType:string:BaseControlTheme");
        b.item("ButtonDensity", "ExportedType:string:ControlDisplayDensity");
        b.item("ActualButtonDensity", "ExportedType:string:ControlDisplayDensity");
        b.item("ButtonFontFamily", "(w:ButtonFontFamily/FontFamilyTransform,wf:ButtonFontFamily,web:buttonTextStyle/FontFamilyTransform)String");
        b.item("ButtonFontSize", "(w:ButtonFontSize,wf:ButtonFontSize,web:buttonTextStyle/FontSizeTransform)Number:double");
        b.item("ButtonFontStyle", "(w:ButtonFontStyle/FontStyleTransform,wf:ButtonFontFamily/FontStyleTransform,web:buttonTextStyle/FontStyleTransform)String");
        b.item("ButtonFontWeight", "(w:ButtonFontWeight/FontWeightTransform,wf:ButtonFontFamily/FontWeightTransform,web:buttonTextStyle/FontWeightTransform)String");
        b.item("Column", "ExportedType:Column");
        b.item("Density", "ExportedType:string:ControlDisplayDensity");
        b.item("ActualDensity", "ExportedType:string:ControlDisplayDensity");
        b.item("LabelFontFamily", "(w:LabelFontFamily/FontFamilyTransform,wf:LabelFontFamily,web:labelTextStyle/FontFamilyTransform)String");
        b.item("LabelFontSize", "(w:LabelFontSize,wf:LabelFontSize,web:labelTextStyle/FontSizeTransform)Number:double");
        b.item("LabelFontStyle", "(w:LabelFontStyle/FontStyleTransform,wf:LabelFontFamily/FontStyleTransform,web:labelTextStyle/FontStyleTransform)String");
        b.item("LabelFontWeight", "(w:LabelFontWeight/FontWeightTransform,wf:LabelFontFamily/FontWeightTransform,web:labelTextStyle/FontWeightTransform)String");
        b.item("TextColor", "Brush");
    };
    GridColumnOptionsBaseDescriptionMetadata.d = function (a) {
        GridColumnOptionsBaseDescriptionMetadata.b(a);
        a.m("GridColumnOptionsBase", GridColumnOptionsBaseDescriptionMetadata.a);
    };
    GridColumnOptionsBaseDescriptionMetadata.$t = markType(GridColumnOptionsBaseDescriptionMetadata, 'GridColumnOptionsBaseDescriptionMetadata');
    GridColumnOptionsBaseDescriptionMetadata.a = null;
    return GridColumnOptionsBaseDescriptionMetadata;
}(Base));
export { GridColumnOptionsBaseDescriptionMetadata };
//# sourceMappingURL=GridColumnOptionsBaseDescriptionMetadata.js.map
