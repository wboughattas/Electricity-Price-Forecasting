/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ShapefileRecordDescriptionMetadata } from "./ShapefileRecordDescriptionMetadata";
import { ShapeFilterRecordEventArgsDescription } from "./ShapeFilterRecordEventArgsDescription";
/**
 * @hidden
 */
var ShapeFilterRecordEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ShapeFilterRecordEventArgsDescriptionMetadata, _super);
    function ShapeFilterRecordEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ShapeFilterRecordEventArgsDescriptionMetadata.b = function (a) {
        if (ShapeFilterRecordEventArgsDescriptionMetadata.a == null) {
            ShapeFilterRecordEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ShapeFilterRecordEventArgsDescriptionMetadata.c(a, ShapeFilterRecordEventArgsDescriptionMetadata.a);
            ShapefileRecordDescriptionMetadata.d(a);
        }
    };
    ShapeFilterRecordEventArgsDescriptionMetadata.c = function (a, b) {
        b.item("Record", "ExportedType:ShapefileRecord");
        b.item("ShouldInclude", "Boolean");
    };
    ShapeFilterRecordEventArgsDescriptionMetadata.d = function (a) {
        ShapeFilterRecordEventArgsDescriptionMetadata.b(a);
        a.n("ShapeFilterRecordEventArgs", function () { return new ShapeFilterRecordEventArgsDescription(); });
        a.m("ShapeFilterRecordEventArgs", ShapeFilterRecordEventArgsDescriptionMetadata.a);
    };
    ShapeFilterRecordEventArgsDescriptionMetadata.$t = markType(ShapeFilterRecordEventArgsDescriptionMetadata, 'ShapeFilterRecordEventArgsDescriptionMetadata');
    ShapeFilterRecordEventArgsDescriptionMetadata.a = null;
    return ShapeFilterRecordEventArgsDescriptionMetadata;
}(Base));
export { ShapeFilterRecordEventArgsDescriptionMetadata };
//# sourceMappingURL=ShapeFilterRecordEventArgsDescriptionMetadata.js.map
