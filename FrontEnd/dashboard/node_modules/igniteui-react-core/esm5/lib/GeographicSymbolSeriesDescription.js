/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { GeographicMapSeriesHostDescription } from "./GeographicMapSeriesHostDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var GeographicSymbolSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GeographicSymbolSeriesDescription, _super);
    function GeographicSymbolSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.b6 = null;
        _this.b7 = null;
        _this.cc = null;
        _this.b9 = null;
        _this.cb = null;
        _this.b8 = null;
        _this.ca = null;
        _this.b4 = 0;
        _this.b2 = 0;
        return _this;
    }
    GeographicSymbolSeriesDescription.prototype.get_type = function () {
        return "GeographicSymbolSeries";
    };
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "latitudeMemberPath", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.e("LatitudeMemberPath");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "longitudeMemberPath", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
            this.e("LongitudeMemberPath");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "markerType", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.e("MarkerType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "markerCollisionAvoidance", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            this.b9 = a;
            this.e("MarkerCollisionAvoidance");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "markerTemplateRef", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            this.cb = a;
            this.e("MarkerTemplateRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "markerBrush", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.e("MarkerBrush");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "markerOutline", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
            this.e("MarkerOutline");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "maximumMarkers", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.e("MaximumMarkers");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "markerThickness", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.e("MarkerThickness");
        },
        enumerable: true,
        configurable: true
    });
    GeographicSymbolSeriesDescription.$t = markType(GeographicSymbolSeriesDescription, 'GeographicSymbolSeriesDescription', GeographicMapSeriesHostDescription.$);
    return GeographicSymbolSeriesDescription;
}(GeographicMapSeriesHostDescription));
export { GeographicSymbolSeriesDescription };
//# sourceMappingURL=GeographicSymbolSeriesDescription.js.map
