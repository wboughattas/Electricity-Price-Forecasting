/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, INotifyPropertyChanged_$type, PropertyChangedEventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let LinearGraphNeedleParameters = /*@__PURE__*/ (() => {
    class LinearGraphNeedleParameters extends Base {
        constructor() {
            super(...arguments);
            this.d = 0;
            this.e = false;
            this.k = NaN;
            this.j = NaN;
            this.g = NaN;
            this.l = NaN;
            this.i = NaN;
            this.n = NaN;
            this.h = NaN;
            this.m = NaN;
            this.f = NaN;
            this.b = 3;
            this.propertyChanged = null;
        }
        get u() {
            return this.k;
        }
        set u(a) {
            if (this.k != a) {
                this.k = a;
                this.x("OuterExtent");
            }
        }
        get q() {
            return this.j;
        }
        set q(a) {
            if (this.j != a) {
                this.j = a;
                this.x("InnerExtent");
            }
        }
        get p() {
            return this.g;
        }
        set p(a) {
            if (this.g != a) {
                this.g = a;
                this.x("InnerBaseWidth");
            }
        }
        get t() {
            return this.l;
        }
        set t(a) {
            if (this.l != a) {
                this.l = a;
                this.x("OuterBaseWidth");
            }
        }
        get s() {
            return this.i;
        }
        set s(a) {
            if (this.i != a) {
                this.i = a;
                this.x("InnerPointWidth");
            }
        }
        get w() {
            return this.n;
        }
        set w(a) {
            if (this.n != a) {
                this.n = a;
                this.x("OuterPointWidth");
            }
        }
        get r() {
            return this.h;
        }
        set r(a) {
            if (this.h != a) {
                this.h = a;
                this.x("InnerPointExtent");
            }
        }
        get v() {
            return this.m;
        }
        set v(a) {
            if (this.m != a) {
                this.m = a;
                this.x("OuterPointExtent");
            }
        }
        get o() {
            return this.f;
        }
        set o(a) {
            if (this.f != a) {
                this.f = a;
                this.x("DefaultWidth");
            }
        }
        get c() {
            return this.b;
        }
        set c(a) {
            if (this.b != a) {
                this.b = a;
                this.x("NeedleShape");
            }
        }
        a() {
            let a = new LinearGraphNeedleParameters();
            a.u = this.u;
            a.q = this.q;
            a.p = this.p;
            a.t = this.t;
            a.r = this.r;
            a.v = this.v;
            a.s = this.s;
            a.w = this.w;
            a.c = this.c;
            a.o = this.o;
            return a;
        }
        x(a) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new PropertyChangedEventArgs(a));
            }
        }
    }
    LinearGraphNeedleParameters.$t = /*@__PURE__*/ markType(LinearGraphNeedleParameters, 'LinearGraphNeedleParameters', Base.$, [INotifyPropertyChanged_$type]);
    return LinearGraphNeedleParameters;
})();
//# sourceMappingURL=LinearGraphNeedleParameters.js.map
