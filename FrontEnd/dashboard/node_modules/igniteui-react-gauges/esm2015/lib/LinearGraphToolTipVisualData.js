/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
/**
 * @hidden
 */
export let LinearGraphToolTipVisualData = /*@__PURE__*/ (() => {
    class LinearGraphToolTipVisualData extends Base {
        constructor() {
            super(...arguments);
            this._item = null;
            this._outline = null;
            this._itemBrush = null;
            this._thickness = 0;
        }
        get item() {
            return this._item;
        }
        set item(a) {
            this._item = a;
        }
        get outline() {
            return this._outline;
        }
        set outline(a) {
            this._outline = a;
        }
        get itemBrush() {
            return this._itemBrush;
        }
        set itemBrush(a) {
            this._itemBrush = a;
        }
        get thickness() {
            return this._thickness;
        }
        set thickness(a) {
            this._thickness = a;
        }
        serialize() {
            let a = new StringBuilder(0);
            a.l("{ item: ");
            if (this.item != null) {
                a.l(this.item.serialize());
            }
            a.l(", ");
            a.l("outline: ");
            a.l(this.outline.serialize());
            a.l(", ");
            a.l("itemBrush: ");
            a.l(this.itemBrush.serialize());
            a.l(", ");
            a.l("thickness: ");
            a.l(this.thickness.toString());
            a.l("}");
            return a.toString();
        }
    }
    LinearGraphToolTipVisualData.$t = /*@__PURE__*/ markType(LinearGraphToolTipVisualData, 'LinearGraphToolTipVisualData');
    return LinearGraphToolTipVisualData;
})();
//# sourceMappingURL=LinearGraphToolTipVisualData.js.map
