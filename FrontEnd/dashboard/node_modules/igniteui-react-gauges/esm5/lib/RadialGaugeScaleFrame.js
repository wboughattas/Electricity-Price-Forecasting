/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, markType } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { RadialGaugeRangeFrame } from "./RadialGaugeRangeFrame";
import { BrushUtil } from "igniteui-react-core";
import { InterpolationUtil } from "igniteui-react-core";
/**
 * @hidden
 */
var RadialGaugeScaleFrame = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(RadialGaugeScaleFrame, _super);
    function RadialGaugeScaleFrame() {
        var _this = _super.call(this) || this;
        _this.j = null;
        _this.i = null;
        _this.c = null;
        _this.e = null;
        _this.f = null;
        _this.d = null;
        _this.g = null;
        _this.h = null;
        _this.t = 0;
        _this.q = 0;
        _this.l = 0;
        _this.v = 0;
        _this.u = 0;
        _this.n = 0;
        _this.m = 0;
        _this.s = 0;
        _this.p = 0;
        _this.ac = null;
        _this.w = 0;
        _this.o = 0;
        _this.aa = null;
        _this.ab = null;
        _this.z = null;
        _this.r = 0;
        _this.k = null;
        _this.k = new List$1(RadialGaugeRangeFrame.$, 0);
        _this.j = new Array(0);
        _this.i = new Array(0);
        _this.c = new Array(0);
        _this.e = new Array(0);
        _this.f = new Array(0);
        _this.d = new Array(0);
        _this.g = new Array(0);
        _this.h = new Array(0);
        return _this;
    }
    RadialGaugeScaleFrame.prototype.a = function (a, b, c, d) {
        var e = Math.max(c.length, d.length);
        var f = Math.min(c.length, d.length);
        if (b.length != e) {
            b = new Array(e);
        }
        var g = 0;
        if (c.length > 0) {
            g = c[c.length - 1];
        }
        var h = 0;
        if (d.length > 0) {
            h = d[d.length - 1];
        }
        var i = c.length > d.length;
        var j = 0;
        for (j = 0; j < f; j++) {
            b[j] = c[j] + (d[j] - c[j]) * a;
        }
        var k;
        var l;
        for (j = f; j < e; j++) {
            if (i) {
                k = c[j];
                l = h;
            }
            else {
                k = g;
                l = d[j];
            }
            b[j] = k + (l - k) * a;
        }
        return b;
    };
    RadialGaugeScaleFrame.prototype.b = function (a, b, c, d) {
        var e = Math.max(c.length, d.length);
        var f = Math.min(c.length, d.length);
        if (b.length != e) {
            b = new Array(e);
        }
        var g = null;
        if (c.length > 0) {
            g = c[c.length - 1];
        }
        var h = null;
        if (d.length > 0) {
            h = d[d.length - 1];
        }
        var i = c.length > d.length;
        var j = 0;
        for (j = 0; j < f; j++) {
            b[j] = d[j];
        }
        var k;
        var l;
        for (j = f; j < e; j++) {
            if (i) {
                k = c[j];
                l = h;
            }
            else {
                k = g;
                l = d[j];
            }
            if (l != null) {
                b[j] = l;
            }
            else {
                b[j] = k;
            }
        }
        return b;
    };
    RadialGaugeScaleFrame.prototype.x = function (a, b, c) {
        this.ab = BrushUtil.k(b.ab, a, c.ab, 0);
        this.ac = BrushUtil.k(b.ac, a, c.ac, 0);
        this.aa = BrushUtil.k(b.aa, a, c.aa, 0);
        if (b.z == null && c.z == null) {
            this.z = null;
        }
        else {
            this.z = BrushUtil.k(b.z, a, c.z, 0);
        }
        this.t = b.t + (c.t - b.t) * a;
        this.q = b.q + (c.q - b.q) * a;
        this.s = b.s + (c.s - b.s) * a;
        this.p = b.p + (c.p - b.p) * a;
        this.r = b.r + (c.r - b.r) * a;
        this.l = b.l + (c.l - b.l) * a;
        this.v = b.v + (c.v - b.v) * a;
        this.u = b.u + (c.u - b.u) * a;
        this.n = b.n + (c.n - b.n) * a;
        this.m = b.m + (c.m - b.m) * a;
        this.w = b.w + (c.w - b.w) * a;
        this.o = b.o + (c.o - b.o) * a;
        this.j = this.a(a, this.j, b.j, c.j);
        this.i = this.a(a, this.i, b.i, c.i);
        this.c = this.a(a, this.c, b.c, c.c);
        this.f = this.a(a, this.f, b.f, c.f);
        this.d = this.a(a, this.d, b.d, c.d);
        this.g = this.a(a, this.g, b.g, c.g);
        this.h = this.a(a, this.h, b.h, c.h);
        this.e = this.b(a, this.e, b.e, c.e);
        this.y(a, this.k, b.k, c.k);
    };
    RadialGaugeScaleFrame.prototype.y = function (a, b, c, d) {
        InterpolationUtil.c(RadialGaugeRangeFrame.$, b, a, c, d, function () { return new RadialGaugeRangeFrame(); }, RadialGaugeRangeFrame.a);
    };
    RadialGaugeScaleFrame.$t = markType(RadialGaugeScaleFrame, 'RadialGaugeScaleFrame');
    return RadialGaugeScaleFrame;
}(Base));
export { RadialGaugeScaleFrame };
//# sourceMappingURL=RadialGaugeScaleFrame.js.map
