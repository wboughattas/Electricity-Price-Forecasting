/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Control } from "igniteui-react-core";
import { INotifyPropertyChanged_$type, Base, PropertyChangedEventArgs, runOn, delegateCombine, enumGetBox, Number_$type, String_$type, Array_$type, Point_$type, delegateRemove, fromEn, markType, markDep, typeCast, fromEnum, TypeRegistrar } from "igniteui-react-core";
import { DoubleAnimator } from "igniteui-react-core";
import { BulletGraphFrame } from "./BulletGraphFrame";
import { LinearGraphScaler } from "./LinearGraphScaler";
import { LinearScaleOrientation_$type } from "./LinearScaleOrientation";
import { DependencyProperty } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { LinearGraphRangeCollection } from "./LinearGraphRangeCollection";
import { BrushCollection } from "igniteui-react-core";
import { BindingFormatter } from "igniteui-react-core";
import { StackPool$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { TextBlock } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { XamLinearGraphRange } from "./XamLinearGraphRange";
import { FormatLinearGraphLabelEventArgs } from "./FormatLinearGraphLabelEventArgs";
import { AlignLinearGraphLabelEventArgs } from "./AlignLinearGraphLabelEventArgs";
import { BulletGraphVisualData } from "./BulletGraphVisualData";
import { ToolTipInfo } from "./ToolTipInfo";
import { RectData } from "igniteui-react-core";
import { LinearGraphScaleLabelVisualDataList } from "./LinearGraphScaleLabelVisualDataList";
import { LinearGraphScaleTickmarkVisualDataList } from "./LinearGraphScaleTickmarkVisualDataList";
import { LinearGraphRangeVisualDataList } from "./LinearGraphRangeVisualDataList";
import { ValueVisualData } from "./ValueVisualData";
import { BulletGraphTargetValueVisualData } from "./BulletGraphTargetValueVisualData";
import { LinearGraphRangeVisualData } from "./LinearGraphRangeVisualData";
import { LinearGraphToolTipVisualData } from "./LinearGraphToolTipVisualData";
import { LinearGraphTooltipDataContext } from "./LinearGraphTooltipDataContext";
import { AppearanceHelper } from "igniteui-react-core";
import { PointData } from "igniteui-react-core";
import { PathVisualData } from "igniteui-react-core";
import { GetPointsSettings } from "igniteui-react-core";
import { PolygonUtil } from "igniteui-react-core";
import { LinearGraphRectFrame } from "./LinearGraphRectFrame";
import { Size } from "igniteui-react-core";
import { Tuple$2 } from "igniteui-react-core";
import { PathGeometry } from "igniteui-react-core";
import { PathFigure } from "igniteui-react-core";
import { LineSegment } from "igniteui-react-core";
import { DeviceUtils } from "igniteui-react-core";
import { FontUtil } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_, intDivide, truncate } from "igniteui-react-core";
import { EventProxy } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { CanvasViewRenderer } from "igniteui-react-core";
import { CanvasGestureDOMEventProxy } from "igniteui-react-core";
import { LinearGraphScaleLabelVisualData } from "./LinearGraphScaleLabelVisualData";
import { LinearGraphScaleTickmarkVisualData } from "./LinearGraphScaleTickmarkVisualData";
import { SizeData } from "igniteui-react-core";
import { arrayCopy1 } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var XamBulletGraph = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(XamBulletGraph, _super);
    function XamBulletGraph() {
        var _this = _super.call(this) || this;
        _this.propertyChanged = null;
        _this.av = null;
        _this.bj = 0;
        _this.formatLabel = null;
        _this.alignLabel = null;
        _this.an = null;
        _this.am = null;
        _this.al = null;
        _this.aq = null;
        _this.au = null;
        _this.bg = 0;
        _this.bf = 100;
        _this.aj = null;
        _this.a8 = false;
        _this.a0 = null;
        _this.ay = null;
        _this.ax = null;
        _this.a1 = null;
        _this.az = null;
        _this._view = null;
        _this.ht = null;
        _this.hs = null;
        _this.hr = null;
        _this.bi = NaN;
        _this.bh = 1;
        _this.ba = new List$1(TextBlock.$, 0);
        _this.bd = new List$1(TextBlock.$, 0);
        _this.bc = new List$1(Path.$, 0);
        _this.bb = new List$1(Path.$, 0);
        _this.a3 = false;
        _this.bi = NaN;
        _this.bh = 1;
        _this.au = new XamLinearGraphRange();
        var a = _this.au;
        a.propertyChanged = delegateCombine(a.propertyChanged, runOn(_this, _this.ff));
        _this.view = new XamBulletGraphView(_this);
        _this.view.a9();
        _this.ht = Rect.empty;
        _this.hs = Rect.empty;
        _this.hr = Rect.empty;
        _this.an = new BulletGraphFrame();
        _this.am = new BulletGraphFrame();
        _this.al = new BulletGraphFrame();
        _this.ranges = new LinearGraphRangeCollection();
        _this.a3 = true;
        _this.av = new DoubleAnimator(0, 1, _this.cy);
        var b = _this.av;
        b.propertyChanged = delegateCombine(b.propertyChanged, runOn(_this, _this.ev));
        _this.ab = XamBulletGraph.$;
        _this.az = ((function () {
            var $ret = new StackPool$1(Path.$);
            $ret.b = runOn(_this.view, _this.view.bj);
            $ret.c = runOn(_this.view, _this.view.bk);
            $ret.d = runOn(_this.view, _this.view.bl);
            $ret.j = runOn(_this.view, _this.view.cq);
            return $ret;
        })());
        _this.a0 = ((function () {
            var $ret = new StackPool$1(Path.$);
            $ret.b = runOn(_this.view, _this.view.bc);
            $ret.c = runOn(_this.view, _this.view.bd);
            $ret.d = runOn(_this.view, _this.view.be);
            $ret.j = runOn(_this.view, _this.view.cp);
            return $ret;
        })());
        _this.ay = ((function () {
            var $ret = new StackPool$1(Path.$);
            $ret.b = runOn(_this.view, _this.view.bc);
            $ret.c = runOn(_this.view, _this.view.bd);
            $ret.d = runOn(_this.view, _this.view.be);
            $ret.j = runOn(_this.view, _this.view.cp);
            return $ret;
        })());
        _this.ax = ((function () {
            var $ret = new StackPool$1(TextBlock.$);
            $ret.b = runOn(_this.view, _this.view.a1);
            $ret.c = runOn(_this.view, _this.view.a2);
            $ret.d = runOn(_this.view, _this.view.a3);
            $ret.j = runOn(_this.view, _this.view.b0);
            return $ret;
        })());
        _this.a1 = ((function () {
            var $ret = new StackPool$1(TextBlock.$);
            $ret.b = runOn(_this.view, _this.view.bt);
            $ret.c = runOn(_this.view, _this.view.bu);
            $ret.d = runOn(_this.view, _this.view.bv);
            $ret.j = runOn(_this.view, _this.view.b1);
            return $ret;
        })());
        return _this;
    }
    XamBulletGraph.prototype.e6 = function (a) {
        this.fd(a);
    };
    XamBulletGraph.prototype.fd = function (a) {
        var b = this.propertyChanged;
        if (b != null) {
            b(this, new PropertyChangedEventArgs(a));
        }
    };
    XamBulletGraph.prototype.onDetachedFromUI = function () {
        this.view.a8();
    };
    XamBulletGraph.prototype.onAttachedToUI = function () {
        this.view.a4();
    };
    XamBulletGraph.prototype.ev = function (a, b) {
        this.cq = this.av.o;
    };
    Object.defineProperty(XamBulletGraph.prototype, "a2", {
        get: function () {
            return this.av.f();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "cq", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            var b = this.bj;
            this.bj = a;
            this.e5("TransitionProgress", b, this.bj);
        },
        enumerable: true,
        configurable: true
    });
    XamBulletGraph.prototype.fq = function () {
        this.bj = 0;
        this.av.w();
        this.av.v();
    };
    Object.defineProperty(XamBulletGraph.prototype, "a7", {
        get: function () {
            return this.cy > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "hj", {
        get: function () {
            return this.c(XamBulletGraph.gl);
        },
        set: function (a) {
            this.h(XamBulletGraph.gl, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "hk", {
        get: function () {
            return this.c(XamBulletGraph.gm);
        },
        set: function (a) {
            this.h(XamBulletGraph.gm, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "b8", {
        get: function () {
            return this.c(XamBulletGraph.gn);
        },
        set: function (a) {
            this.h(XamBulletGraph.gn, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "bl", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "bk", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
        },
        enumerable: true,
        configurable: true
    });
    XamBulletGraph.prototype.br = function (a) {
        var b = 0;
        var c = a.x;
        if (this.ar == 1) {
            b = a.y;
            c = this.hw.height;
        }
        return this.aq.k(c - b);
    };
    XamBulletGraph.prototype.as = function () {
        var _this = this;
        var a = new BulletGraphVisualData();
        a.viewport = new RectData(this.hw.left, this.hw.top, this.hw.width, this.hw.height);
        a.scaleLabels = new LinearGraphScaleLabelVisualDataList();
        a.scaleTickmarks = new LinearGraphScaleTickmarkVisualDataList();
        a.ranges = new LinearGraphRangeVisualDataList();
        a.value = ((function () {
            var $ret = new ValueVisualData();
            $ret.value = _this.cr;
            return $ret;
        })());
        a.targetValue = ((function () {
            var $ret = new BulletGraphTargetValueVisualData();
            $ret.value = _this.ce;
            return $ret;
        })());
        this.view.aw(a);
        var b = this.view.l();
        if (b != null) {
            var c_1;
            switch (b.c) {
                case "range":
                    c_1 = a.ranges._inner[b.b];
                    break;
                case "value":
                    c_1 = a.value;
                    break;
                default:
                    c_1 = a.targetValue;
                    break;
            }
            a.toolTip = ((function () {
                var $ret = new LinearGraphToolTipVisualData();
                $ret.item = c_1;
                $ret.itemBrush = AppearanceHelper.b(b.a.brush);
                $ret.outline = AppearanceHelper.b(b.a.outline);
                $ret.thickness = b.a.thickness;
                return $ret;
            })());
        }
        return a;
    };
    XamBulletGraph.prototype.c6 = function () {
        var a = this.as();
        a.scaleByViewport();
        return a.serialize();
    };
    XamBulletGraph.prototype.destroy = function () {
        this.provideContainer(null);
    };
    XamBulletGraph.prototype.provideContainer = function (a) {
        this.view.a6(a);
    };
    XamBulletGraph.prototype.onMouseOver = function (a, b, c) {
        if (this.a8) {
            this.fp(a, null);
        }
    };
    XamBulletGraph.prototype.onMouseLeave = function () {
        if (this.a8) {
            this.fp({ $type: Point_$type, x: -10000, y: -10000 }, null);
        }
    };
    XamBulletGraph.prototype.containerResized = function () {
        this.view.a7();
    };
    XamBulletGraph.prototype.fr = function () {
        this.view.bs();
    };
    XamBulletGraph.prototype.ez = function () {
        this.view.flush();
    };
    XamBulletGraph.prototype.be = function (a) {
        var b = new List$1(Point_$type, 0);
        for (var c = 0; c < a.count; c++) {
            b.add({ $type: Point_$type, x: a._inner[c].x, y: a._inner[c].y });
        }
        return b;
    };
    XamBulletGraph.prototype.fp = function (a, b) {
        var c = new PathVisualData(1, "targetValue", this.view.cn());
        var d = c.getPoints(new GetPointsSettings());
        if (d.count > 0) {
            var e = PolygonUtil.a(this.be(d._inner[0]), a);
            if (e == true) {
                this.view.br(a, b, -1, "targetvalue");
                return;
            }
        }
        var f = new PathVisualData(1, "value", this.view.co());
        var g = f.getPoints(new GetPointsSettings());
        if (g.count > 0) {
            var h = PolygonUtil.a(this.be(g._inner[0]), a);
            if (h == true) {
                this.view.br(a, b, -1, "value");
                return;
            }
        }
        for (var i = 0; i < this.bb.count; i++) {
            var j = new PathVisualData(1, "range", this.bb._inner[i]);
            var k = j.getPoints(new GetPointsSettings());
            if (k.count > 0) {
                var l = PolygonUtil.a(this.be(k._inner[0]), a);
                if (l == true) {
                    this.view.br(a, b, i, "range");
                    return;
                }
            }
        }
        this.view.az();
    };
    XamBulletGraph.prototype.fi = function () {
        if (!this.a3) {
            return;
        }
        var a = this.am.c;
        if (this.ar == 0) {
            var b = 0;
            for (var c = 0; c < a.c.length; c++) {
                b = Math.max(b, a.c[c]);
            }
            var d = this.hw.height >= b ? this.hw.height - b : this.hw.height;
            this.hv = new Rect(0, 0, 0, this.hw.width, d);
        }
        else {
            var e = 0;
            for (var f = 0; f < a.f.length; f++) {
                e = Math.max(e, a.f[f]);
            }
            var g = this.hw.width >= e ? this.hw.width - e : this.hw.width;
            this.hv = new Rect(0, e, 0, g, this.hw.height);
        }
    };
    Object.defineProperty(XamBulletGraph.prototype, "view", {
        get: function () {
            return this._view;
        },
        set: function (a) {
            this._view = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "hw", {
        get: function () {
            return this.ht;
        },
        set: function (a) {
            var b = this.ht;
            this.ht = a;
            if (!b.equals1(this.ht)) {
                this.e7(b, this.ht);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "hv", {
        get: function () {
            return this.hs;
        },
        set: function (a) {
            this.hs = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "hu", {
        get: function () {
            return this.hr;
        },
        set: function (a) {
            this.hr = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "b5", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            var b = this.bi;
            this.bi = a;
            this.e5("PixelScalingRatio", b, this.bi);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XamBulletGraph.prototype, "bm", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            var b = this.bh;
            this.bh = a;
            this.e5("ActualPixelScalingRatio", b, this.bh);
        },
        enumerable: true,
        configurable: true
    });
    XamBulletGraph.prototype.a5 = function () {
        return !isNaN_(this.bl) && !isNaN_(this.bk) && !this.hw.isEmpty && this.view.s();
    };
    XamBulletGraph.prototype.ew = function () {
        if (!this.a5()) {
            return;
        }
        var a = this.cc();
        this.aq = new LinearGraphScaler(this.bl, this.bk, a, a + this.cb(), this.a4);
        if (this.a3) {
            if (this.a2) {
                if (this.av.g) {
                    this.av.t();
                }
                var b = this.an;
                this.an = this.al;
                this.al = b;
            }
            else {
                var c = this.an;
                this.an = this.am;
                this.am = c;
            }
        }
        else if (this.a2) {
            this.al.d(this.cq, this.an, this.am);
            this.fj(this.al);
            this.fl(this.al);
            this.fm(this.al);
            this.fo(this.al);
        }
        if (this.a3) {
            this.e9();
            this.fi();
            this.fb();
            this.fc();
            this.fa();
            this.e8();
        }
        if (this.a3 && this.a7) {
            this.fq();
            this.al.d(this.cq, this.an, this.am);
            this.fj(this.al);
            this.fl(this.al);
            this.fm(this.al);
            this.fo(this.al);
            this.fn(this.al);
            this.fk(this.al);
        }
        else {
            if (this.a3) {
                this.fj(this.am);
                this.fl(this.am);
                this.fm(this.am);
                this.fo(this.am);
                this.fn(this.am);
                this.fk(this.am);
            }
        }
        this.a3 = false;
        this.view.as();
    };
    XamBulletGraph.prototype.fa = function () {
        var a = this.am;
        var b = a.c;
        var c = this.aq;
        var d = this.bz;
        var e = this.hv;
        if (isNaN_(d)) {
            d = 3;
        }
        b.u = this.cd;
        b.r = this.ca;
        b.s = 0;
        b.t = 1;
        b.m.clear();
        for (var f = 0; f < this.ranges.count; f++) {
            var g = this.ranges._inner[f];
            if (g.j <= this.bl || g.o > this.bk) {
                continue;
            }
            var h = g.o;
            var i = g.j;
            if (h < this.bl) {
                h = this.bl;
            }
            if (i > this.bk) {
                i = this.bk;
            }
            var j = new LinearGraphRectFrame();
            j.i = g.an != null ? g.an : this.hh(f, this.ah);
            j.j = g.ao != null ? g.ao : this.hh(f, this.ai);
            j.h = g.p;
            j.g = c.i(h);
            j.d = c.i(i);
            j.e = g.l;
            j.b = g.k;
            j.f = g.n;
            j.c = g.m;
            if (isNaN_(j.e)) {
                j.e = this.b6;
            }
            j.b = g.k;
            if (isNaN_(j.b)) {
                j.b = this.b6;
            }
            j.f = g.n;
            if (isNaN_(j.f)) {
                j.f = this.b7;
            }
            j.c = g.m;
            if (isNaN_(j.c)) {
                j.c = this.b7;
            }
            b.m.add(j);
        }
        b.l.i = this.hj;
        b.l.j = this.hk;
        b.l.h = this.b8;
        b.l.g = c.i(this.bl);
        b.l.d = c.i(this.bk);
        b.l.e = this.b6;
        b.l.b = this.b6;
        b.l.f = this.b7;
        b.l.c = this.b7;
        b.ab = this.hg;
        b.ad = this.hn;
        b.x = this.cp;
        b.w = this.cn;
        b.v = this.cj;
        b.ac = this.hi;
        b.q = this.b4;
        b.p = this.b2;
        b.o = this.b0;
        var k = this.bs;
        if (isNaN_(k)) {
            k = (this.bk - this.bl) / 10;
        }
        if (k == 0) {
            k = this.bk - this.bl;
        }
        var l = new List$1(Number_$type, 0);
        var m = new List$1(Number_$type, 0);
        if (k > 0) {
            var n = this.bl + this.cl;
            var o = this.bk - this.cm;
            var p = 100000;
            var q = Math.abs(o - n) / p;
            if (k >= q) {
                for (var r = n; r <= o || this.a9(r, o, k); r = r + k) {
                    l.add(c.i(r));
                    for (var s = 0; s < d; s++) {
                        var t = (k / (d + 1)) * (s + 1);
                        if (t + r > o) {
                            continue;
                        }
                        m.add(c.i(t + r));
                    }
                }
            }
        }
        if (b.j.length != l.count || b.i.length != m.count) {
            b.j = new Array(l.count);
            b.i = new Array(m.count);
        }
        for (var u = 0; u < l.count; u++) {
            b.j[u] = l._inner[u];
        }
        for (var v = 0; v < m.count; v++) {
            b.i[v] = m._inner[v];
        }
    };
    XamBulletGraph.prototype.hx = function () {
        var a = this.bs;
        var b = this.bu;
        if (isNaN_(a)) {
            a = (this.bk - this.bl) / 10;
        }
        if (isNaN_(b)) {
            b = a;
        }
        if (b == 0) {
            b = this.bk - this.bl;
        }
        var c = new List$1(Number_$type, 0);
        if (b > 0) {
            var d = this.bv + this.bl;
            var e = this.bk - this.bw;
            var f = 100000;
            var g = Math.abs(e - d) / f;
            if (b >= g) {
                for (var h = d; h <= e || this.a9(h, e, a); h += b) {
                    c.add(h);
                }
            }
        }
        var i = new Array(c.count);
        var j = new Array(c.count);
        var _loop_1 = function (k) {
            var l = c._inner[k];
            if (this_1.formatLabel == null && this_1.aj == null) {
                l = (Math.round(l * 100) / 100);
            }
            var m = l.toString();
            if (this_1.aj != null) {
                m = this_1.aj.i(l);
            }
            var n = new FormatLinearGraphLabelEventArgs();
            n.value = l;
            n.label = m;
            if (this_1.formatLabel != null) {
                this_1.formatLabel(this_1, n);
            }
            m = n.label;
            var o = this_1.view.cr(((function () {
                var $ret = new TextBlock();
                $ret.ak = m;
                return $ret;
            })()));
            i[k] = o.width;
            j[k] = o.height;
        };
        var this_1 = this;
        for (var k = 0; k < c.count; k++) {
            _loop_1(k);
        }
        var p = 0;
        var q = 0;
        var r = 1 - this.ca + this.cd;
        if (this.ar == 0) {
            for (var s = 0; s < j.length; s++) {
                q = Math.max(q, j[s]);
            }
            for (var t = 0; t < i.length; t++) {
                p += i[t];
            }
            if (i.length > 0) {
                p += i[0] / 2;
            }
            if (i.length > 1) {
                p += i[i.length - 1] / 2;
            }
            if (i.length > 0) {
                p += (i.length - 1) * 5;
            }
            if (r > 0) {
                p = p / Math.abs(1 - r);
            }
        }
        else {
            for (var u = 0; u < i.length; u++) {
                p = Math.max(p, i[u]);
            }
            for (var v = 0; v < j.length; v++) {
                q += j[v];
            }
            if (j.length > 0) {
                q -= j[0] / 2;
            }
            if (j.length > 1) {
                q -= j[j.length - 1] / 2;
            }
            if (r > 0) {
                q = q / Math.abs(1 - r);
            }
            if (j.length > 0) {
                q += (j.length - 1) * 5;
            }
        }
        return new Size(1, p, q);
    };
    XamBulletGraph.prototype.e9 = function () {
        var a = this.am;
        var b = a.c;
        var c = this.aq;
        var d = this.bs;
        var e = this.bu;
        var f = this.bz;
        if (isNaN_(d)) {
            d = (this.bk - this.bl) / 10;
        }
        if (isNaN_(e)) {
            e = d;
        }
        if (e == 0) {
            e = this.bk - this.bl;
        }
        var g = new List$1(Tuple$2.$.specialize(Number_$type, Number_$type), 0);
        if (e > 0) {
            var h = this.bv + this.bl;
            var i = this.bk - this.bw;
            var j = 100000;
            var k = Math.abs(i - h) / j;
            if (e >= k) {
                for (var l = h; l <= i || this.a9(l, i, e); l = l + e) {
                    g.add(new Tuple$2(Number_$type, Number_$type, l, c.i(l)));
                }
            }
        }
        if (b.d.length != g.count) {
            b.e = new Array(g.count);
            b.d = new Array(g.count);
            b.f = new Array(g.count);
            b.c = new Array(g.count);
            b.g = new Array(g.count);
            b.h = new Array(g.count);
        }
        b.n = this.bt;
        var m = new FormatLinearGraphLabelEventArgs();
        m.actualMinimumValue = this.bl;
        m.actualMaximumValue = this.bk;
        var n = new AlignLinearGraphLabelEventArgs();
        n.actualMinimumValue = this.bl;
        n.actualMaximumValue = this.bk;
        var _loop_2 = function (o) {
            var p = g._inner[o].c;
            if (this_2.formatLabel == null) {
                p = (Math.round(p * 100) / 100);
            }
            var q = (p).toString();
            if (this_2.aj != null) {
                q = this_2.aj.i(p);
            }
            m.value = p;
            n.value = p;
            m.label = q;
            if (this_2.formatLabel != null) {
                this_2.formatLabel(this_2, m);
            }
            q = m.label;
            n.label = q;
            var r = this_2.view.cr(((function () {
                var $ret = new TextBlock();
                $ret.ak = q;
                return $ret;
            })()));
            n.width = r.width;
            n.height = r.height;
            if (this_2.ar == 0) {
                n.offsetX = -1 * (r.width / 2);
                n.offsetY = -1 * (r.height);
            }
            else {
                n.offsetX = -1 * r.width;
                n.offsetY = -1 * (r.height / 2);
            }
            if (this_2.alignLabel != null) {
                this_2.alignLabel(this_2, n);
            }
            b.f[o] = n.width;
            b.c[o] = n.height;
            b.g[o] = n.offsetX;
            ;
            b.h[o] = n.offsetY;
            b.d[o] = q;
            b.e[o] = g._inner[o].d;
        };
        var this_2 = this;
        for (var o = 0; o < g.count; o++) {
            _loop_2(o);
        }
    };
    XamBulletGraph.prototype.a9 = function (a, b, c) {
        var d = c / 10000;
        if (isNaN_(d)) {
            d = 1E-05;
        }
        var e = Math.abs(a - b);
        if (e < d) {
            return true;
        }
        return false;
    };
    XamBulletGraph.prototype.e8 = function () {
        var a = this.am;
        var b = a.a;
        b.e = this.he;
        b.f = this.hf;
        b.c = this.bp;
        b.a = this.bn;
        b.b = this.bo;
    };
    XamBulletGraph.prototype.fb = function () {
        var a = this.am;
        var b = a.b;
        var c = this.aq;
        b.e = this.cg;
        b.b = this.cg;
        b.f = this.ch;
        b.c = this.ch;
        b.i = this.hl;
        b.j = this.hm;
        b.h = this.ci;
        if (isNaN_(this.ce)) {
            return;
        }
        var d = c.i(this.ce);
        var e = (this.cf / 2);
        b.g = d - e;
        b.d = d + e;
    };
    XamBulletGraph.prototype.fc = function () {
        var a = this.am.c;
        var b = this.aq;
        var c = this.cr;
        if (isNaN_(c)) {
            return;
        }
        var d = this.bl;
        if (isNaN_(d)) {
            d = this.bl;
        }
        var e = this.cr;
        var f = new LinearGraphRectFrame();
        f.i = this.ho;
        f.j = this.hp;
        f.h = this.cu;
        f.g = b.i(d);
        f.d = b.i(e);
        f.e = this.cs;
        f.b = this.cs;
        f.f = this.ct;
        f.c = this.ct;
        a.af = f;
    };
    XamBulletGraph.prototype.hh = function (a, b) {
        if (b != null && b.count > 0) {
            return b.item(a % b.count);
        }
        else {
            return null;
        }
    };
    XamBulletGraph.prototype.fn = function (a) {
        var b = this.hv;
        var c = a.c;
        var d = this.a0;
        var e = c.j;
        var f = c.w;
        var g = c.v;
        var h = c.ad;
        var i = c.x;
        var j = this.ay;
        var k = c.i;
        var l = c.p;
        var m = c.o;
        var n = c.ac;
        var o = c.q;
        d.f = true;
        for (var p = 0; p < this.bc.count; p++) {
            d.n(this.bc._inner[p]);
        }
        this.bc.clear();
        var q = this.b9();
        var r = this.cw();
        var _loop_3 = function (s) {
            var t = void 0, u = void 0, v, w;
            if (this_3.ar == 1) {
                t = b.left + q * f;
                u = r - e[s];
                v = b.left + q * g;
                w = u;
            }
            else {
                t = b.left + e[s];
                u = q * (1 - f);
                v = t;
                w = q * (1 - g);
            }
            var x = d.a();
            var y = new PathGeometry();
            var z = new PathFigure();
            z._startPoint = { $type: Point_$type, x: t, y: u };
            z._segments.add(((function () {
                var $ret = new LineSegment(1);
                $ret.c = { $type: Point_$type, x: v, y: w };
                return $ret;
            })()));
            y.c.add(z);
            x.ak = y;
            x._stroke = h;
            x.ac = i;
            this_3.bc.add(x);
        };
        var this_3 = this;
        for (var s = 0; s < e.length; s++) {
            _loop_3(s);
        }
        var _loop_4 = function (aa) {
            var ab = void 0, ac = void 0, ad, ae;
            if (this_4.ar == 1) {
                ab = b.left + q * l;
                ac = r - k[aa];
                ad = b.left + q * m;
                ae = ac;
            }
            else {
                ab = k[aa];
                ac = q * (1 - l);
                ad = ab;
                ae = q * (1 - m);
            }
            var af = d.a();
            var ag = new PathGeometry();
            var ah = new PathFigure();
            ah._startPoint = { $type: Point_$type, x: ab, y: ac };
            ah._segments.add(((function () {
                var $ret = new LineSegment(1);
                $ret.c = { $type: Point_$type, x: ad, y: ae };
                return $ret;
            })()));
            ag.c.add(ah);
            af.ak = ag;
            af._stroke = n;
            af.ac = o;
            this_4.bc.add(af);
        };
        var this_4 = this;
        for (var aa = 0; aa < k.length; aa++) {
            _loop_4(aa);
        }
        d.f = false;
    };
    XamBulletGraph.prototype.fk = function (a) {
        var b = this.hv;
        var c = a.c;
        var d = c.e;
        var e = c.d;
        var f = c.g;
        var g = c.h;
        var h = c.f;
        var i = c.c;
        var j = c.n;
        var k = this.ax;
        k.f = true;
        for (var l = 0; l < this.ba.count; l++) {
            k.n(this.ba._inner[l]);
        }
        this.ba.clear();
        var m = c.ab;
        var n = this.cv();
        var o = this.cw();
        for (var p = 0; p < e.length; p++) {
            var q = void 0, r = void 0;
            if (this.ar == 1) {
                q = b.left + n * j;
                r = b.top + o - d[p];
            }
            else {
                q = b.left + d[p];
                r = b.top + n * (1 - j);
            }
            var s = k.a();
            s.ak = e[p];
            this.view.bq(s, m);
            var t = h[p];
            var u = i[p];
            var v = f[p];
            var w = g[p];
            this.view.bh(s, q + v, r + w);
            this.ba.add(s);
        }
        k.f = false;
    };
    XamBulletGraph.prototype.fl = function (a) {
        var b = a.c;
        var c = this.az;
        c.f = true;
        for (var d = 0; d < this.bb.count; d++) {
            c.n(this.bb._inner[d]);
        }
        this.bb.clear();
        var e = this.b9();
        var f = this.cw();
        var g = this.hq();
        var h = this.view.cm();
        h.ak = b.ae(g, e, f, this.ar);
        for (var i = 0; i < b.m.count; i++) {
            var j = b.m._inner[i];
            var k = c.a();
            k.ak = j.k(g, e, f, this.ar);
            k._fill = j.i;
            k._stroke = j.j;
            k.ac = j.h;
            this.bb.add(k);
        }
        this.view.bp(this.bb);
        c.f = false;
        var l = this.view.cl();
        l.ak = b.l.k(g, e, f, this.ar);
        l._fill = b.l.i;
        l._stroke = b.l.j;
        l.ac = b.l.h;
    };
    XamBulletGraph.prototype.fj = function (a) {
        var b = this.hu;
        var c = this.view.ck();
        var d = a.a;
        var e = this.ar == 0 ? b.height : b.width;
        var f = this.ar == 0 ? b.width : b.height;
        var g = d.g(e, f, this.ar);
        c.ak = g;
        c._fill = d.e;
        c._stroke = d.f;
        c.ac = d.c;
    };
    XamBulletGraph.prototype.fm = function (a) {
        var b = this.view.cn();
        if (isNaN_(this.ce) || this.ce < this.bl || this.ce > this.bk) {
            b.ak = null;
            return;
        }
        var c = a.b;
        var d = this.b9();
        var e = this.cw();
        var f = this.hq();
        var g = c.k(f, d, e, this.ar);
        b.ak = g;
        b._fill = c.i;
        b._stroke = c.j;
        b.ac = c.h;
    };
    XamBulletGraph.prototype.fo = function (a) {
        var b = this.view.co();
        var c = this.cr;
        if (c <= this.bl || c > this.bk || isNaN_(c)) {
            b.ak = null;
            return;
        }
        var d = a.c;
        var e = this.b9();
        var f = this.cw();
        var g = this.hq();
        var h = d.af;
        b.ak = h.k(g, e, f, this.ar);
        b._fill = h.i;
        b._stroke = h.j;
        b.ac = h.h;
    };
    XamBulletGraph.prototype.e7 = function (a, b) {
        this.a3 = true;
        this.view.bo();
    };
    XamBulletGraph.prototype.e2 = function (a, b) {
        this.a3 = true;
        this.view.bo();
    };
    XamBulletGraph.prototype.b9 = function () {
        if (this.ar == 0) {
            return this.a6 ? this.hw.height : this.hv.height;
        }
        return this.a6 ? this.hw.width : this.hv.width;
    };
    XamBulletGraph.prototype.cb = function () {
        if (this.ar == 0) {
            return this.hw.width * (this.ca - this.cd);
        }
        return this.hw.height * (this.ca - this.cd);
    };
    XamBulletGraph.prototype.cv = function () {
        if (this.ar == 0) {
            return this.hw.height;
        }
        return this.hw.width;
    };
    XamBulletGraph.prototype.cw = function () {
        if (this.ar == 0) {
            return this.hw.width;
        }
        return this.hw.height;
    };
    XamBulletGraph.prototype.cc = function () {
        var a = this.cd;
        if (this.ar == 0) {
            if (this.a4) {
                a = 1 - this.ca;
            }
            return this.hw.left + this.hw.width * a;
        }
        if (this.a4) {
            a = 1 - this.ca;
        }
        return this.hw.top + this.hw.height * a;
    };
    XamBulletGraph.prototype.hq = function () {
        var a = this.hv.left;
        if (this.a6) {
            a = 0;
        }
        var b = this.cd;
        if (this.ar == 0) {
            if (this.a4) {
                b = 1 - this.ca;
            }
            return { $type: Point_$type, x: a + this.hv.width * b, y: this.hv.top };
        }
        if (!this.a4) {
            b = 1 - this.ca;
        }
        return { $type: Point_$type, x: a, y: this.hv.top + this.hv.height * b };
    };
    XamBulletGraph.prototype.e5 = function (a, b, c) {
        switch (a) {
            case XamBulletGraph.$$p[48]:
            case XamBulletGraph.$$p[33]:
            case XamBulletGraph.$$p[37]:
            case XamBulletGraph.$$p[0]:
            case XamBulletGraph.$$p[3]:
            case XamBulletGraph.$$p[52]:
            case XamBulletGraph.$$p[40]:
            case XamBulletGraph.$$p[18]:
                this.view.a5(a, b, c);
                break;
            case XamBulletGraph.$$p[24]:
                this.view.ba(b, c);
                break;
            case XamBulletGraph.$$p[27]:
                this.view.bb(b, c);
                break;
        }
        switch (a) {
            case XamBulletGraph.$$p[10]:
            case XamBulletGraph.$$p[11]:
                if (this.dd != null) {
                    this.aj = new BindingFormatter();
                    this.aj.j = this.dd;
                    this.aj.d = this.ag;
                }
                else {
                    this.aj = null;
                }
                this.a3 = true;
                this.view.bo();
                break;
            case XamBulletGraph.$$p[47]:
                this.av.r = this.cy;
                this.view.bo();
                break;
            case "TransitionProgress":
                if (this.cq >= 1) {
                    this.av.w();
                    var d = this.am;
                    this.am = this.an;
                    this.an = d;
                    this.e9();
                    this.fb();
                    this.fc();
                    this.fa();
                    this.e8();
                    this.fj(this.am);
                    this.fl(this.am);
                    this.fm(this.am);
                    this.fo(this.am);
                    this.fn(this.am);
                    this.fk(this.am);
                }
                this.al.d(this.cq, this.an, this.am);
                this.fj(this.al);
                this.fl(this.al);
                this.fm(this.al);
                this.fo(this.al);
                this.fn(this.al);
                this.fk(this.al);
                this.view.as();
                break;
            case XamBulletGraph.$$p[53]:
            case XamBulletGraph.$$p[49]:
            case XamBulletGraph.$$p[51]:
            case XamBulletGraph.$$p[48]:
            case XamBulletGraph.$$p[52]:
            case XamBulletGraph.$$p[54]:
            case XamBulletGraph.$$p[33]:
            case XamBulletGraph.$$p[37]:
            case XamBulletGraph.$$p[39]:
            case XamBulletGraph.$$p[32]:
            case XamBulletGraph.$$p[34]:
            case XamBulletGraph.$$p[36]:
            case XamBulletGraph.$$p[0]:
            case XamBulletGraph.$$p[3]:
            case XamBulletGraph.$$p[40]:
            case XamBulletGraph.$$p[18]:
            case XamBulletGraph.$$p[24]:
            case XamBulletGraph.$$p[27]:
            case XamBulletGraph.$$p[16]:
            case XamBulletGraph.$$p[38]:
            case XamBulletGraph.$$p[35]:
            case XamBulletGraph.$$p[25]:
            case XamBulletGraph.$$p[26]:
            case XamBulletGraph.$$p[4]:
            case XamBulletGraph.$$p[1]:
            case XamBulletGraph.$$p[2]:
            case XamBulletGraph.$$p[7]:
            case XamBulletGraph.$$p[12]:
            case XamBulletGraph.$$p[9]:
            case XamBulletGraph.$$p[13]:
            case XamBulletGraph.$$p[14]:
            case XamBulletGraph.$$p[42]:
            case XamBulletGraph.$$p[43]:
            case XamBulletGraph.$$p[44]:
            case XamBulletGraph.$$p[41]:
            case XamBulletGraph.$$p[45]:
            case XamBulletGraph.$$p[21]:
            case XamBulletGraph.$$p[20]:
            case XamBulletGraph.$$p[19]:
            case XamBulletGraph.$$p[22]:
            case "ScaleBackgroundBrush":
            case "ScaleBackgroundOutline":
            case "ScaleBackgroundThickness":
                this.a3 = true;
                this.view.bo();
                break;
            case XamBulletGraph.$$p[28]:
                var e = b;
                var f = c;
                if (e != null) {
                    var g = e;
                    g.collectionChanged = delegateRemove(g.collectionChanged, runOn(this, this.fg));
                }
                if (f != null) {
                    var h = f;
                    h.collectionChanged = delegateCombine(h.collectionChanged, runOn(this, this.fg));
                }
                this.a3 = true;
                this.view.bo();
                break;
            case XamBulletGraph.$$p[23]:
            case XamBulletGraph.$$p[8]:
            case XamBulletGraph.$$p[17]:
            case XamBulletGraph.$$p[15]:
            case XamBulletGraph.$$p[29]:
            case XamBulletGraph.$$p[30]:
                this.bl = Math.min(this.by, this.bx);
                this.bk = Math.max(this.by, this.bx);
                var i = this.cc();
                this.aq = new LinearGraphScaler(this.bl, this.bk, i, i + this.cb(), this.a4);
                this.a3 = true;
                this.view.bo();
                break;
            case XamBulletGraph.$$p[5]:
            case XamBulletGraph.$$p[6]:
                this.view.by();
                this.a3 = true;
                this.view.bo();
                break;
            case "PixelScalingRatio":
                if (isNaN_(DeviceUtils.a(this.b5))) {
                    this.bm = 1;
                }
                else {
                    this.bm = DeviceUtils.a(this.b5);
                }
                break;
            case "ActualPixelScalingRatio":
                this.view.bf();
                break;
        }
        this.e6(a);
    };
    XamBulletGraph.prototype.fg = function (a, b) {
        var e_1, _a, e_2, _b;
        if (b.oldItems != null) {
            try {
                for (var _c = tslib_1.__values(fromEn(b.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var c = _d.value;
                    c.propertyChanged = delegateRemove(c.propertyChanged, runOn(this, this.ff));
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        }
        if (b.newItems != null) {
            try {
                for (var _e = tslib_1.__values(fromEn(b.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var d = _f.value;
                    d.propertyChanged = delegateCombine(d.propertyChanged, runOn(this, this.ff));
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        }
        this.a3 = true;
        this.view.bo();
    };
    XamBulletGraph.prototype.ff = function (a, b) {
        this.a3 = true;
        this.view.bo();
    };
    XamBulletGraph.prototype.refresh = function () {
        this.a3 = true;
        this.view.bo();
    };
    XamBulletGraph.prototype.aw = function () {
        return FontUtil.toFontInfo(this.view.ag, this.c7);
    };
    XamBulletGraph.$t = markType(XamBulletGraph, 'XamBulletGraph', Control.$, [INotifyPropertyChanged_$type]);
    XamBulletGraph.gl = DependencyProperty.i("ScaleBackgroundBrush", Brush.$, XamBulletGraph.$, new PropertyMetadata(2, null, function (a, b) { return a.e5("ScaleBackgroundBrush", b.oldValue, b.newValue); }));
    XamBulletGraph.gm = DependencyProperty.i("ScaleBackgroundOutline", Brush.$, XamBulletGraph.$, new PropertyMetadata(2, null, function (a, b) { return a.e5("ScaleBackgroundOutline", b.oldValue, b.newValue); }));
    XamBulletGraph.gn = DependencyProperty.i("ScaleBackgroundThickness", Number_$type, XamBulletGraph.$, new PropertyMetadata(2, 1, function (a, b) { return a.e5("ScaleBackgroundThickness", b.oldValue, b.newValue); }));
    XamBulletGraph.$$p = markDep(DependencyProperty, PropertyMetadata, XamBulletGraph, 'e5', ['BackingBrush:he:fs', [Brush.$, null], 'BackingInnerExtent:bn:ft', [1, 0], 'BackingOuterExtent:bo:fu', [1, 1], 'BackingOutline:hf:fv', [Brush.$, null], 'BackingStrokeThickness:bp:fw', [1, 2], 'FontBrush:hg:fx', [Brush.$, null], 'Font:c7:fy', [2, null], 'Interval:bs:fz', [1, NaN], 'IsScaleInverted:a4:f0', [0, false], 'LabelExtent:bt:f1', [1, 0], 'LabelFormat:dd:f2', [2, null], 'LabelFormatSpecifiers:ag:f3', [Array_$type, null], 'LabelInterval:bu:f4', [1, NaN], 'LabelsPostInitial:bv:f5', [1, 0], 'LabelsPreTerminal:bw:f6', [1, 0], 'MaximumValue:bx:f7', [1, 100], 'MergeViewPorts:a6:f8', [0, false], 'MinimumValue:by:f9', [1, 0], 'MinorTickBrush:hi:ga', [Brush.$, null], 'MinorTickCount:bz:gb', [1, 3], 'MinorTickEndExtent:b0:gc', [1, 0.2], 'MinorTickStartExtent:b2:gd', [1, 0.1], 'MinorTickStrokeThickness:b4:ge', [1, 1], 'Orientation:ar:gf', [LinearScaleOrientation_$type, enumGetBox(LinearScaleOrientation_$type, 0)], 'RangeBrushes:ah:gg', [BrushCollection.$, null], 'RangeInnerExtent:b6:gh', [1, 0.2], 'RangeOuterExtent:b7:gi', [1, 0.95], 'RangeOutlines:ai:gj', [BrushCollection.$, null], 'Ranges::gk', [LinearGraphRangeCollection.$, null], 'ScaleEndExtent:ca:go', [1, 0.95], 'ScaleStartExtent:cd:gp', [1, 0.05], 'ShowToolTipTimeout:cx:gq', [1, 500], 'TargetValueBreadth:cf:gr', [1, 3], 'TargetValueBrush:hl:gs', [Brush.$, null], 'TargetValueInnerExtent:cg:gt', [1, 0.3], 'TargetValueName:d8:gu', [2, null], 'TargetValueOuterExtent:ch:gv', [1, 0.85], 'TargetValueOutline:hm:gw', [Brush.$, null], 'TargetValue:ce:gx', [1, NaN], 'TargetValueStrokeThickness:ci:gy', [1, 1], 'TickBrush:hn:gz', [Brush.$, null], 'TickEndExtent:cj:g0', [1, 0.2], 'TicksPostInitial:cl:g1', [1, 0], 'TicksPreTerminal:cm:g2', [1, 0], 'TickStartExtent:cn:g3', [1, 0.06], 'TickStrokeThickness:cp:g4', [1, 2], 'ToolTip::g5', [4, null], 'TransitionDuration:cy:g6', [1, 0], 'ValueBrush:ho:g7', [Brush.$, null], 'ValueInnerExtent:cs:g8', [1, 0.5], 'ValueName:ep:g9', [2, null], 'ValueOuterExtent:ct:ha', [1, 0.65], 'ValueOutline:hp:hb', [Brush.$, null], 'Value:cr:hc', [1, NaN], 'ValueStrokeThickness:cu:hd', [1, 1]]);
    return XamBulletGraph;
}(Control));
export { XamBulletGraph };
/**
 * @hidden
 */
var XamBulletGraphView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(XamBulletGraphView, _super);
    function XamBulletGraphView(a) {
        var _this = _super.call(this) || this;
        _this.ao = 0;
        _this.an = 0;
        _this.ap = 0;
        _this.m = null;
        _this.i = null;
        _this.ai = null;
        _this.p = null;
        _this.ag = null;
        _this.aa = null;
        _this.z = null;
        _this.y = null;
        _this.ab = null;
        _this.cj = null;
        _this.ci = null;
        _this.ch = null;
        _this.cf = null;
        _this.cg = null;
        _this.b7 = null;
        _this.b8 = null;
        _this.b4 = null;
        _this.b5 = null;
        _this.b9 = null;
        _this.ca = null;
        _this.b6 = null;
        _this.c = null;
        _this.d = null;
        _this.e = null;
        _this.f = null;
        _this.cb = null;
        _this.cc = null;
        _this.q = false;
        _this.v = null;
        _this.a = ["value", "targetvalue", "backing", "scale", "tick", "minortick", "label"];
        _this.u = false;
        _this.t = false;
        _this.ah = null;
        _this.k = null;
        _this.aj = 0;
        _this.al = 0;
        _this.aq = null;
        _this.am = -1;
        _this.cd = null;
        _this.ak = 0;
        _this.x = null;
        _this.b3 = ((function () {
            var $ret = new Brush();
            $ret.fill = "black";
            return $ret;
        })());
        _this.r = false;
        _this.n = null;
        _this.b2 = null;
        _this.ac = 0;
        _this.m = a;
        _this.v = new Dictionary$2(String_$type, Dictionary$2.$.specialize(String_$type, Brush.$), 0);
        _this.ci = new Path();
        _this.cj = new Path();
        _this.ch = new Path();
        _this.cf = new Path();
        _this.cg = new Path();
        _this.aa = new List$1(Path.$, 0);
        _this.z = new List$1(Path.$, 0);
        _this.y = new List$1(TextBlock.$, 0);
        _this.ab = new List$1(TextBlock.$, 0);
        return _this;
    }
    XamBulletGraphView.prototype.a4 = function () {
        this.a0();
        if (this.i != null) {
            this.i.ap(this.ag.rootWrapper, "");
        }
    };
    XamBulletGraphView.prototype.a8 = function () {
        if (this.i != null) {
            this.i.bb(this.ag.rootWrapper, "");
        }
    };
    XamBulletGraphView.prototype.a9 = function () {
        this.k = new LinearGraphTooltipDataContext();
        this.ak = this.m.cx;
        this.a0();
    };
    XamBulletGraphView.prototype.a0 = function () {
        var a = this.m.b5;
        var b = this.m.bm;
        if (!isNaN_(a) && a != 0) {
            return;
        }
        if (window.devicePixelRatio != undefined && window.devicePixelRatio != b) {
            this.m.bm = window.devicePixelRatio;
        }
    };
    XamBulletGraphView.prototype.s = function () {
        return true;
    };
    XamBulletGraphView.prototype.cn = function () {
        return this.ci;
    };
    XamBulletGraphView.prototype.co = function () {
        return this.cj;
    };
    XamBulletGraphView.prototype.cm = function () {
        return this.ch;
    };
    XamBulletGraphView.prototype.ck = function () {
        return this.cf;
    };
    XamBulletGraphView.prototype.cl = function () {
        return this.cg;
    };
    XamBulletGraphView.prototype.ay = function () {
        this.q = true;
        var a = ["#778899", "black", "#EBEDEF", "#617583", "#617583", "rgba(100,107,114,.74)", "rgba(100,107,114,.74)"];
        var b = ["#778899", "black", "#B2B9C0", "#B2B9C0", null, null, null];
        var c = ((function () {
            var $ret = new List$1(Array_$type, 0);
            $ret.add(a);
            $ret.add(b);
            return $ret;
        })());
        this.v.clear();
        var d = this.a.length;
        var _loop_5 = function (e) {
            var f = this_5.a[e];
            var g = "ui-bulletgraph-" + f;
            var h = "ui-bulletgraph-" + f + "-fill";
            var i = "ui-bulletgraph-" + f + "-outline";
            var j;
            if (!((function () { var k = XamBulletGraphView.w.tryGetValue(h, j); j = k.p1; return k.ret; })())) {
                j = BrushUtil.j(h, g, "background-color", this_5.ag, a[e]);
                XamBulletGraphView.w.addItem(h, j);
            }
            var k;
            if (!((function () { var l = XamBulletGraphView.w.tryGetValue(i, k); k = l.p1; return l.ret; })())) {
                k = BrushUtil.j(i, g, "border-top-color", this_5.ag, b[e]);
                XamBulletGraphView.w.addItem(i, k);
            }
            var l = new Dictionary$2(String_$type, Brush.$, 0);
            l.item("fill", j);
            l.item("outline", k);
            this_5.v.item(this_5.a[e], l);
        };
        var this_5 = this;
        for (var e = 0; e < d; e++) {
            _loop_5(e);
        }
        this.bx();
        if (XamBulletGraphView.g == null || XamBulletGraphView.h == null) {
            var m = BrushUtil.f("ui-bulletgraph-range-fill-palette-", "ui-bulletgraph-range-outline-palette-", "ui-bulletgraph-range-palette-", this.ag, XamBulletGraphView.g, XamBulletGraphView.h, ["#216E99", "#216E99", "#44acd6", "#44acd6", "#cecece", "#cecece"]);
            XamBulletGraphView.g = m.p4;
            XamBulletGraphView.h = m.p5;
        }
        this.c = XamBulletGraphView.g;
        this.d = XamBulletGraphView.h;
        if (this.e == null) {
            this.m.ah = this.c;
        }
        if (this.f == null) {
            this.m.ai = this.d;
        }
        this.q = false;
    };
    XamBulletGraphView.prototype.bx = function () {
        this.q = true;
        var a = this.a.length;
        for (var b = 0; b < a; b++) {
            var c = this.a[b];
            this.bw(c, this.v.item(c));
        }
        this.q = false;
    };
    XamBulletGraphView.prototype.bw = function (a, b) {
        var c = b.item("fill");
        var d = b.item("outline");
        switch (a) {
            case "targetvalue":
                if (this.b7 == null) {
                    this.m.hl = c;
                }
                if (this.b8 == null) {
                    this.m.hm = d;
                }
                break;
            case "value":
                if (this.cb == null) {
                    this.m.ho = c;
                }
                if (this.cc == null) {
                    this.m.hp = d;
                }
                break;
            case "backing":
                if (this.b4 == null) {
                    this.m.he = c;
                }
                if (this.b5 == null) {
                    this.m.hf = d;
                }
                break;
            case "tick":
                if (this.ca == null) {
                    this.m.hn = c;
                }
                break;
            case "minortick":
                if (this.b6 == null) {
                    this.m.hi = c;
                }
                break;
            case "label":
                this.b3 = c;
                break;
        }
    };
    XamBulletGraphView.prototype.a5 = function (a, b, c) {
        var d = b;
        var e = c;
        if (!this.q) {
            switch (a) {
                case XamBulletGraph.$$p[33]:
                    this.b7 = e;
                    break;
                case XamBulletGraph.$$p[37]:
                    this.b8 = e;
                    break;
                case XamBulletGraph.$$p[0]:
                    this.b4 = e;
                    break;
                case XamBulletGraph.$$p[3]:
                    this.b5 = e;
                    break;
                case XamBulletGraph.$$p[48]:
                    this.cb = e;
                    break;
                case XamBulletGraph.$$p[52]:
                    this.cc = e;
                    break;
                case XamBulletGraph.$$p[40]:
                    this.ca = e;
                    break;
                case XamBulletGraph.$$p[18]:
                    this.b6 = e;
                    break;
            }
            if (e == null) {
                this.bx();
            }
        }
    };
    XamBulletGraphView.prototype.ba = function (a, b) {
        if (!this.q) {
            this.e = b;
            if (this.e == null) {
                this.m.ah = this.c;
            }
        }
    };
    XamBulletGraphView.prototype.bb = function (a, b) {
        if (!this.q) {
            this.f = b;
            if (this.f == null) {
                this.m.ai = this.d;
            }
        }
    };
    XamBulletGraphView.prototype.b = function (a, b) {
        this.ag.startCSSQuery();
        for (var c = 0; c < b.length; c++) {
            b[c] = this.ag.getCssDefaultPropertyValue(a, b[c]);
        }
        this.ag.endCSSQuery();
        return b;
    };
    XamBulletGraphView.prototype.bs = function () {
        this.ay();
        this.by();
        this.bo();
    };
    XamBulletGraphView.prototype.ce = function (a) {
        var b = CanvasGestureDOMEventProxy.cy(this.ag.rootWrapper);
        return { $type: Point_$type, x: a.x - b.left, y: a.y - b.top };
    };
    XamBulletGraphView.prototype.br = function (a, b, c, d) {
        this.cd = a;
        this.am = c;
        this.aq = d;
        this.bn();
        this.al = window.setTimeout(runOn(this, this.bz), this.ak);
        this.t = true;
    };
    XamBulletGraphView.prototype.az = function () {
        if (this.t) {
            window.clearTimeout(this.al);
            this.t = false;
        }
        if (this.u) {
            var a = this.m.toolTip;
            window.clearTimeout(this.aj);
            a.hide();
            this.u = false;
            this.k = null;
        }
        this.ak = this.m.cx;
    };
    XamBulletGraphView.prototype.bn = function () {
        if (this.t) {
            window.clearTimeout(this.al);
        }
        if (this.u) {
            var a = this.m.toolTip;
            window.clearTimeout(this.aj);
            a.hide();
            this.u = false;
            this.ak = intDivide(this.m.cx, 2);
        }
    };
    XamBulletGraphView.prototype.bz = function () {
        var _this = this;
        if (this.t) {
            window.clearTimeout(this.al);
            this.t = false;
        }
        var a = this.am;
        var b = this.aq;
        var c = this.cd;
        if (this.ag != null) {
            this.aj = this.ag.setTimeout(runOn(this, this.az), 10 * this.m.cx);
        }
        else {
            this.aj = window.setTimeout(runOn(this, this.az), 10 * this.m.cx);
        }
        var d = this.m.ranges._inner[a];
        if (this.ah != this.m.toolTip) {
            if (this.ah != null) {
                this.ah.remove();
            }
            this.ah = this.m.toolTip;
            this.ah.setStyleProperty("z-index", "10000");
            this.ah.setStyleProperty("position", "absolute");
            this.ag.append(this.ah);
        }
        this.k = this.j(b, a);
        var context_ = this.k;
        var tooltip_ = this.ah;
        var tooltipType_ = b;
        if (tooltip_.updateToolTip) {
            tooltip_.updateToolTip(context_, tooltipType_);
        }
        ;
        var e = this.ah.findByClass(".ui-tooltip-container");
        if (e != null && e.length > 0) {
            e[0].setAttribute("style", null);
        }
        var f = "ui-simple-default-tooltip-content";
        var g = this.ah.findByClass("." + f);
        if (g != null && g.length > 0) {
            var h = ["border-top-color", "border-top-width", "border-top-style", "border-top-left-radius", "background-color", "padding-top", "font-weight"];
            var i = ["border-color", "border-width", "border-style", "border-radius", "background-color", "padding", "font-weight"];
            var j = ((function () {
                var $ret = new List$1(String_$type, 0);
                $ret.add(_this.k.brush.color.colorString);
                $ret.add("2px");
                $ret.add("solid");
                $ret.add("4px");
                $ret.add("rgba(230, 230, 230, 0.74)");
                $ret.add("4px");
                $ret.add("bold");
                return $ret;
            })());
            var k = new Dictionary$2(String_$type, String_$type, 0);
            var l = new Array(h.length);
            arrayCopy1(h, 0, l, 0, h.length);
            this.b(f, l);
            for (var m = 0; m < l.length; m++) {
                this.ah.setStyleProperty(i[m], (l[m] == null) ? j._inner[m] : l[m]);
            }
        }
        this.ah.setStyleProperty("top", (c.y + 15).toString() + "px").setStyleProperty("left", (c.x + 15).toString() + "px");
        this.ah.show();
        this.u = true;
    };
    XamBulletGraphView.prototype.j = function (a, b) {
        var c = new LinearGraphTooltipDataContext();
        switch (a) {
            case "range":
                var d = this.m.ranges._inner[b];
                c.item = d;
                c.itemName = d.u;
                c.label = d.u + ": " + d.o.toString() + "-" + d.j.toString();
                var e = d.an;
                var f = d.ao;
                c.brush = e != null ? e : this.m.hh(b, this.c);
                c.outline = f != null ? f : this.m.hh(b, this.d);
                c.thickness = d.p;
                break;
            case "value":
                c.item = this.m.cr;
                c.itemName = this.m.ep;
                c.label = this.m.ep != null ? this.m.ep + ": " + this.m.cr.toString() : this.m.cr.toString();
                c.brush = this.m.ho;
                c.outline = this.m.hp;
                c.thickness = this.m.cu;
                break;
            case "targetvalue":
                c.item = this.m.ce;
                c.itemName = this.m.d8;
                c.label = this.m.d8 != null ? this.m.d8 + ": " + this.m.ce.toString() : this.m.ce.toString();
                c.brush = this.m.hl;
                c.outline = this.m.hm;
                c.thickness = this.m.ci;
                break;
        }
        return c;
    };
    XamBulletGraphView.prototype.a6 = function (a) {
        if (a == null) {
            this.ai = null;
            this.ag = null;
            this.ah = null;
            this.p = null;
            this.at();
            return;
        }
        var b = a;
        this.ag = b;
        this.m.av.u(this.ag);
        this.ag.rootWrapper.addClass("ui-bulletgraph-container");
        this.ap = (isNaN_(this.m.b5) ? this.m.bm : this.m.b5);
        var c = this.ap;
        var d = Math.round(b.rootWrapper.width());
        var e = Math.round(b.rootWrapper.height());
        var f = d * c;
        var g = e * c;
        this.ag.rootWrapper.setStyleProperty("position", "relative");
        var h = this.ag.createElement("canvas");
        h.setStyleProperty("position", "absolute");
        this.ag.append(h);
        this.ao = f;
        this.an = g;
        h.setAttribute("width", f.toString());
        h.setAttribute("height", g.toString());
        h.setStyleProperty("width", d.toString());
        h.setStyleProperty("height", e.toString());
        this.m.hw = new Rect(0, 0, 0, d, e);
        this.m.hu = new Rect(0, 0, 0, d, e);
        this.ai = h;
        var i = this.ag.get2DCanvasContext(this.ai);
        this.p = new RenderingContext(new CanvasViewRenderer(), i);
        this.ay();
        this.by();
        this.p.ac(this.n);
        this.at();
        if (TypeRegistrar.isRegistered("CanvasGestureDOMEventProxy")) {
            this.i = typeCast(EventProxy.$, TypeRegistrar.create("CanvasGestureDOMEventProxy", this.ag.rootWrapper, this.ag, false));
        }
        if (this.i != null) {
            var j = this.i;
            j.onMouseOver = delegateCombine(j.onMouseOver, runOn(this, this.av));
            var k = this.i;
            k.onMouseLeave = delegateCombine(k.onMouseLeave, runOn(this, this.au));
        }
        this.bm();
    };
    XamBulletGraphView.prototype.at = function () {
        if (this.i != null) {
            var a = this.i;
            a.onMouseOver = delegateRemove(a.onMouseOver, runOn(this, this.av));
            var b = this.i;
            b.onMouseLeave = delegateRemove(b.onMouseLeave, runOn(this, this.au));
            this.i.aq();
        }
    };
    XamBulletGraphView.prototype.av = function (a, b, c) {
        if (this.m != null) {
            this.m.onMouseOver(a, b, c);
        }
    };
    XamBulletGraphView.prototype.au = function (a) {
        if (this.m != null) {
            this.m.onMouseLeave();
        }
    };
    XamBulletGraphView.prototype.a7 = function () {
        this.a0();
        var a = Math.round(this.ag.rootWrapper.width());
        var b = Math.round(this.ag.rootWrapper.height());
        this.m.hw = new Rect(0, 0, 0, a, b);
        this.m.hu = new Rect(0, 0, 0, a, b);
        if (this.i != null) {
            this.i.bf = this.m.hw;
        }
    };
    XamBulletGraphView.prototype.as = function () {
        this.bm();
    };
    XamBulletGraphView.prototype.bp = function (a) {
        this.x = a;
    };
    XamBulletGraphView.prototype.bm = function () {
        var a = this.m.hw.width;
        var b = this.m.hw.height;
        var c = a * this.ap;
        var d = b * this.ap;
        if (this.ao != c || this.an != d) {
            this.ai.setAttribute("width", c.toString());
            this.ai.setAttribute("height", d.toString());
            this.ai.setStyleProperty("width", a.toString() + "px");
            this.ai.setStyleProperty("height", b.toString() + "px");
            this.ao = truncate(Math.round(c));
            this.an = truncate(Math.round(d));
        }
        if (this.p.d && this.ap != 1) {
            this.p.z();
            this.p.aa(this.ap, this.ap);
        }
        this.p.k(this.m.hw.left, this.m.hw.top, this.m.hw.width, this.m.hw.height);
        this.p.s(this.cf);
        this.p.s(this.cg);
        if (this.x != null) {
            for (var e = 0; e < this.x.count; e++) {
                this.p.s(this.x._inner[e]);
            }
        }
        for (var f = 0; f < this.y.count; f++) {
            this.p.ac(this.n);
            this.p.w(this.y._inner[f]);
        }
        for (var g = 0; g < this.z.count; g++) {
            this.p.s(this.z._inner[g]);
        }
        this.p.s(this.cj);
        this.p.s(this.ci);
        if (this.p.d && this.ap != 1) {
            this.p.y();
        }
    };
    XamBulletGraphView.prototype.by = function () {
        if (this.m.c7 != null) {
            this.n = this.m.aw();
        }
        else {
            this.n = FontUtil.getFont(this.ag);
        }
        this.ac = this.ad(this.n);
        if (this.m.hg == null) {
            var a = this.ag.rootWrapper.getStyleProperty("color");
            if (stringIsNullOrEmpty(a) == false) {
                this.b2 = new Brush();
                this.b2._fill = a;
                this.m.hg = this.b2;
            }
        }
        if (this.p != null) {
            this.p.ac(this.n);
        }
    };
    XamBulletGraphView.prototype.ae = function (a) {
        var b = typeCast(TextBlock.$, a);
        if (b != null && b.ak != null) {
            return this.p.e(b) + 0;
        }
        return 0;
    };
    XamBulletGraphView.prototype.cr = function (a) {
        if (isNaN_(this.ac)) {
            this.ac = this.ad(null);
        }
        var b = this.ae(a);
        var c = this.ac;
        return new Size(1, b, c);
    };
    XamBulletGraphView.prototype.bq = function (a, b) {
        if (b != null) {
            a.am = b;
        }
        else {
            a.am = this.b3;
        }
    };
    XamBulletGraphView.prototype.bh = function (a, b, c) {
        a.n = b;
        a.o = c;
    };
    XamBulletGraphView.prototype.bg = function (a, b) {
    };
    XamBulletGraphView.prototype.bi = function (a, b) {
    };
    XamBulletGraphView.prototype.ad = function (a) {
        return FontUtil.getCurrentFontHeight(this.ag, a);
    };
    XamBulletGraphView.prototype.bo = function () {
        if (!this.r) {
            this.r = true;
            if (this.ag != null) {
                this.ag.setTimeout(runOn(this, this.ar), 0);
            }
            else {
                window.setTimeout(runOn(this, this.ar), 0);
            }
        }
    };
    XamBulletGraphView.prototype.ar = function () {
        if (this.r) {
            this.r = false;
            this.m.ew();
        }
    };
    XamBulletGraphView.prototype.flush = function () {
        if (this.r) {
            this.ar();
        }
    };
    XamBulletGraphView.prototype.o = function (a, b) {
        return FontUtil.getFontInfo(this.ag, a, b);
    };
    XamBulletGraphView.prototype.aw = function (a) {
        var e_3, _a, e_4, _b, e_5, _c;
        a.scalePath = new PathVisualData(1, "Scale", this.ch);
        a.targetValuePath = new PathVisualData(1, "TargetValue", this.ci);
        a.valuePath = new PathVisualData(1, "Value", this.cj);
        a.backingPath = new PathVisualData(1, "Backing", this.cf);
        a.scaleBackgroundPath = new PathVisualData(1, "ScaleBackground", this.cg);
        var b = this.n;
        try {
            for (var _d = tslib_1.__values(fromEnum(this.y)), _e = _d.next(); !_e.done; _e = _d.next()) {
                var c = _e.value;
                if (c._visibility == 0) {
                    var d = this.o(c, b);
                    var e = new LinearGraphScaleLabelVisualData();
                    e.labelValue = c.ak;
                    e.labelPosition = PointData.b({ $type: Point_$type, x: c.n, y: c.o });
                    e.labelSize = SizeData.b(this.cr(c));
                    e.appearance = AppearanceHelper.c(c, d);
                    a.scaleLabels.add(e);
                }
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return))
                    _a.call(_d);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        try {
            for (var _f = tslib_1.__values(fromEnum(this.z)), _g = _f.next(); !_g.done; _g = _f.next()) {
                var f = _g.value;
                if (f._visibility == 0) {
                    var g = new LinearGraphScaleTickmarkVisualData();
                    g.tickPath = new PathVisualData(1, "tickmarks", f);
                    a.scaleTickmarks.add(g);
                }
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return))
                    _b.call(_f);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
        try {
            for (var _h = tslib_1.__values(fromEnum(this.x)), _j = _h.next(); !_j.done; _j = _h.next()) {
                var h = _j.value;
                if (h._visibility == 0) {
                    var i = new LinearGraphRangeVisualData();
                    var j = new PathVisualData(1, "range", h);
                    i.rangePath = j;
                    a.ranges.add(i);
                }
            }
        }
        catch (e_5_1) {
            e_5 = { error: e_5_1 };
        }
        finally {
            try {
                if (_j && !_j.done && (_c = _h.return))
                    _c.call(_h);
            }
            finally {
                if (e_5)
                    throw e_5.error;
            }
        }
    };
    XamBulletGraphView.prototype.bj = function (a) {
        a._visibility = 0;
    };
    XamBulletGraphView.prototype.bk = function (a) {
        a._visibility = 1;
    };
    XamBulletGraphView.prototype.bl = function (a) {
        this.aa.remove(a);
    };
    XamBulletGraphView.prototype.cq = function () {
        var a = new Path();
        this.aa.add(a);
        return a;
    };
    XamBulletGraphView.prototype.bt = function (a) {
        a._visibility = 0;
    };
    XamBulletGraphView.prototype.bu = function (a) {
        a._visibility = 1;
    };
    XamBulletGraphView.prototype.bv = function (a) {
        this.ab.remove(a);
    };
    XamBulletGraphView.prototype.b1 = function () {
        var a = new TextBlock();
        this.ab.add(a);
        return a;
    };
    XamBulletGraphView.prototype.bc = function (a) {
        a._visibility = 0;
    };
    XamBulletGraphView.prototype.bd = function (a) {
        a._visibility = 1;
    };
    XamBulletGraphView.prototype.be = function (a) {
        this.z.remove(a);
    };
    XamBulletGraphView.prototype.cp = function () {
        var a = new Path();
        this.z.add(a);
        return a;
    };
    XamBulletGraphView.prototype.a1 = function (a) {
        a._visibility = 0;
    };
    XamBulletGraphView.prototype.a2 = function (a) {
        a._visibility = 1;
    };
    XamBulletGraphView.prototype.a3 = function (a) {
        this.y.remove(a);
    };
    XamBulletGraphView.prototype.b0 = function () {
        var a = new TextBlock();
        this.y.add(a);
        return a;
    };
    XamBulletGraphView.prototype.l = function () {
        var _this = this;
        if (this.k == null) {
            return null;
        }
        return ((function () {
            var $ret = new ToolTipInfo();
            $ret.b = _this.am;
            $ret.d = _this.cd;
            $ret.c = _this.aq;
            $ret.a = _this.k;
            return $ret;
        })());
    };
    XamBulletGraphView.prototype.bf = function () {
        this.ap = this.m.bm;
    };
    XamBulletGraphView.$t = markType(XamBulletGraphView, 'XamBulletGraphView');
    XamBulletGraphView.w = new Dictionary$2(String_$type, Brush.$, 0);
    XamBulletGraphView.g = null;
    XamBulletGraphView.h = null;
    return XamBulletGraphView;
}(Base));
export { XamBulletGraphView };
//# sourceMappingURL=XamBulletGraph_combined.js.map
