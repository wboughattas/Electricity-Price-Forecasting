/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, Point_$type, markType } from "igniteui-react-core";
import { PathGeometry } from "igniteui-react-core";
import { PathFigure } from "igniteui-react-core";
import { LineSegment } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
/**
 * @hidden
 */
var LinearGraphBackingFrame = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(LinearGraphBackingFrame, _super);
    function LinearGraphBackingFrame() {
        var _this = _super.call(this) || this;
        _this.e = null;
        _this.f = null;
        _this.c = 0;
        _this.b = 0;
        _this.a = 0;
        return _this;
    }
    LinearGraphBackingFrame.prototype.g = function (a, b, c) {
        var _this = this;
        var d = new PathGeometry();
        var e = new PathFigure();
        var f, g, h, i;
        if (c == 1) {
            f = ((function () {
                var $ret = new LineSegment(1);
                $ret.c = { $type: Point_$type, x: a * _this.a, y: 0 };
                return $ret;
            })());
            g = ((function () {
                var $ret = new LineSegment(1);
                $ret.c = { $type: Point_$type, x: a * _this.b, y: 0 };
                return $ret;
            })());
            h = ((function () {
                var $ret = new LineSegment(1);
                $ret.c = { $type: Point_$type, x: a * _this.b, y: b };
                return $ret;
            })());
            i = ((function () {
                var $ret = new LineSegment(1);
                $ret.c = { $type: Point_$type, x: a * _this.a, y: b };
                return $ret;
            })());
        }
        else {
            f = ((function () {
                var $ret = new LineSegment(1);
                $ret.c = { $type: Point_$type, x: 0, y: a * (1 - _this.b) };
                return $ret;
            })());
            g = ((function () {
                var $ret = new LineSegment(1);
                $ret.c = { $type: Point_$type, x: b, y: a * (1 - _this.b) };
                return $ret;
            })());
            h = ((function () {
                var $ret = new LineSegment(1);
                $ret.c = { $type: Point_$type, x: b, y: a * (1 - _this.a) };
                return $ret;
            })());
            i = ((function () {
                var $ret = new LineSegment(1);
                $ret.c = { $type: Point_$type, x: 0, y: a * (1 - _this.a) };
                return $ret;
            })());
        }
        e._startPoint = f.c;
        e._segments.add(g);
        e._segments.add(h);
        e._segments.add(i);
        e._isClosed = true;
        d.c.add(e);
        return d;
    };
    LinearGraphBackingFrame.prototype.d = function (a, b, c) {
        this.c = b.c + (c.c - b.c) * a;
        this.e = BrushUtil.k(b.e, a, c.e, 0);
        this.f = BrushUtil.k(b.f, a, c.f, 0);
        this.b = b.b + (c.b - b.b) * a;
        this.a = b.a + (c.a - b.a) * a;
    };
    LinearGraphBackingFrame.$t = markType(LinearGraphBackingFrame, 'LinearGraphBackingFrame');
    return LinearGraphBackingFrame;
}(Base));
export { LinearGraphBackingFrame };
//# sourceMappingURL=LinearGraphBackingFrame.js.map
