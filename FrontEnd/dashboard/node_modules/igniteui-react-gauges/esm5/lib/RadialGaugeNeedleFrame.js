/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, Point_$type, markType } from "igniteui-react-core";
import { MorphSegment } from "./MorphSegment";
import { BrushUtil } from "igniteui-react-core";
import { PathGeometry } from "igniteui-react-core";
import { PathFigure } from "igniteui-react-core";
/**
 * @hidden
 */
var RadialGaugeNeedleFrame = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(RadialGaugeNeedleFrame, _super);
    function RadialGaugeNeedleFrame() {
        var _this = _super.call(this) || this;
        _this.ad = 0;
        _this.ac = 0;
        _this.af = 0;
        _this.ab = 0;
        _this.aj = null;
        _this.ak = null;
        _this.aa = 0;
        _this.ae = 0;
        _this.ai = null;
        _this.ah = null;
        _this.d = null;
        _this.b = null;
        _this.t = null;
        _this.e = null;
        _this.f = null;
        _this.x = null;
        _this.v = null;
        _this.w = null;
        _this.z = null;
        _this.y = null;
        _this.u = null;
        _this.h = null;
        _this.g = null;
        _this.c = null;
        _this.s = null;
        _this.a = null;
        _this.q = null;
        _this.r = null;
        _this.i = null;
        _this.l = null;
        _this.m = null;
        _this.p = null;
        _this.j = null;
        _this.k = null;
        _this.n = null;
        _this.o = null;
        _this.d = new MorphSegment();
        _this.b = new MorphSegment();
        _this.t = new MorphSegment();
        _this.e = new MorphSegment();
        _this.f = new MorphSegment();
        _this.x = new MorphSegment();
        _this.v = new MorphSegment();
        _this.w = new MorphSegment();
        _this.z = new MorphSegment();
        _this.y = new MorphSegment();
        _this.u = new MorphSegment();
        _this.h = new MorphSegment();
        _this.g = new MorphSegment();
        _this.c = new MorphSegment();
        _this.s = new MorphSegment();
        _this.a = new MorphSegment();
        _this.q = new MorphSegment();
        _this.r = new MorphSegment();
        _this.i = new MorphSegment();
        _this.l = new MorphSegment();
        _this.m = new MorphSegment();
        _this.p = new MorphSegment();
        _this.j = new MorphSegment();
        _this.k = new MorphSegment();
        _this.n = new MorphSegment();
        _this.o = new MorphSegment();
        return _this;
    }
    RadialGaugeNeedleFrame.prototype.ag = function (a, b, c) {
        this.ad = b.ad + (c.ad - b.ad) * a;
        this.ac = b.ac + (c.ac - b.ac) * a;
        this.af = b.af + (c.af - b.af) * a;
        this.ab = b.ab + (c.ab - b.ab) * a;
        this.aj = BrushUtil.k(b.aj, a, c.aj, 0);
        this.ak = BrushUtil.k(b.ak, a, c.ak, 0);
        this.ae = b.ae + (c.ae - b.ae) * a;
        this.aa = b.aa + (c.aa - b.aa) * a;
        this.ah = BrushUtil.k(b.ah, a, c.ah, 0);
        this.ai = BrushUtil.k(b.ai, a, c.ai, 0);
        this.d.j(a, b.d, c.d);
        this.b.j(a, b.b, c.b);
        this.t.j(a, b.t, c.t);
        this.e.j(a, b.e, c.e);
        this.f.j(a, b.f, c.f);
        this.x.j(a, b.x, c.x);
        this.v.j(a, b.v, c.v);
        this.w.j(a, b.w, c.w);
        this.z.j(a, b.z, c.z);
        this.y.j(a, b.y, c.y);
        this.u.j(a, b.u, c.u);
        this.h.j(a, b.h, c.h);
        this.g.j(a, b.g, c.g);
        this.c.j(a, b.c, c.c);
        this.s.j(a, b.s, c.s);
        this.a.j(a, b.a, c.a);
        this.q.j(a, b.q, c.q);
        this.r.j(a, b.r, c.r);
        this.i.j(a, b.i, c.i);
        this.l.j(a, b.l, c.l);
        this.m.j(a, b.m, c.m);
        this.p.j(a, b.p, c.p);
        this.j.j(a, b.j, c.j);
        this.k.j(a, b.k, c.k);
        this.n.j(a, b.n, c.n);
        this.o.j(a, b.o, c.o);
    };
    RadialGaugeNeedleFrame.prototype.am = function (a, b, c) {
        var d = new PathGeometry();
        var e = new PathFigure();
        var f = { $type: Point_$type, x: NaN, y: NaN };
        f = this.d.l(f, e, a, b, c);
        f = this.b.l(f, e, a, b, c);
        f = this.t.l(f, e, a, b, c);
        f = this.e.l(f, e, a, b, c);
        f = this.f.l(f, e, a, b, c);
        f = this.x.l(f, e, a, b, c);
        f = this.v.l(f, e, a, b, c);
        f = this.w.l(f, e, a, b, c);
        f = this.z.l(f, e, a, b, c);
        f = this.y.l(f, e, a, b, c);
        f = this.u.l(f, e, a, b, c);
        f = this.h.l(f, e, a, b, c);
        f = this.g.l(f, e, a, b, c);
        f = this.c.l(f, e, a, b, c);
        f = this.s.l(f, e, a, b, c);
        f = this.a.l(f, e, a, b, c);
        e._isClosed = true;
        d.c.add(e);
        var g = new PathFigure();
        if (this.q.f.count > 0 || this.r.f.count > 0) {
            f = this.q.l(f, g, a, b, c);
            f = this.r.l(f, g, a, b, c);
            g._isClosed = true;
            d.c.add(g);
        }
        return d;
    };
    RadialGaugeNeedleFrame.prototype.an = function (a, b, c) {
        var d = new PathGeometry();
        var e = { $type: Point_$type, x: NaN, y: NaN };
        var f = new PathFigure();
        if (this.m.f.count > 0 || this.p.f.count > 0) {
            e = this.m.l(e, f, a, b, c);
            e = this.p.l(e, f, a, b, c);
            f._isClosed = true;
            d.c.add(f);
        }
        var g = new PathFigure();
        if (this.n.f.count > 0 || this.o.f.count > 0) {
            e = this.n.l(e, g, a, b, c);
            e = this.o.l(e, g, a, b, c);
            g._isClosed = true;
            d.c.add(g);
        }
        return d;
    };
    RadialGaugeNeedleFrame.prototype.al = function (a, b, c) {
        var d = new PathGeometry();
        var e = { $type: Point_$type, x: NaN, y: NaN };
        var f = new PathFigure();
        if (this.i.f.count > 0 || this.l.f.count > 0) {
            e = this.i.l(e, f, a, b, c);
            e = this.l.l(e, f, a, b, c);
            f._isClosed = true;
            d.c.add(f);
        }
        var g = new PathFigure();
        if (this.j.f.count > 0 || this.k.f.count > 0) {
            e = this.j.l(e, g, a, b, c);
            e = this.k.l(e, g, a, b, c);
            g._isClosed = true;
            d.c.add(g);
        }
        return d;
    };
    RadialGaugeNeedleFrame.$t = markType(RadialGaugeNeedleFrame, 'RadialGaugeNeedleFrame');
    return RadialGaugeNeedleFrame;
}(Base));
export { RadialGaugeNeedleFrame };
//# sourceMappingURL=RadialGaugeNeedleFrame.js.map
