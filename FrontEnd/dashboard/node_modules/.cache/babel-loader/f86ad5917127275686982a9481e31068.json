{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StackedSeriesCreatedEventArgsDescriptionMetadata } from \"./StackedSeriesCreatedEventArgsDescriptionMetadata\";\nimport { CategorySeriesDescriptionMetadata } from \"./CategorySeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar StackedSeriesBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(StackedSeriesBaseDescriptionMetadata, _super);\n\n  function StackedSeriesBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StackedSeriesBaseDescriptionMetadata.b = function (a) {\n    if (StackedSeriesBaseDescriptionMetadata.a == null) {\n      StackedSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      StackedSeriesBaseDescriptionMetadata.c(a, StackedSeriesBaseDescriptionMetadata.a);\n      StackedSeriesCreatedEventArgsDescriptionMetadata.d(a);\n    }\n  };\n\n  StackedSeriesBaseDescriptionMetadata.c = function (a, b) {\n    CategorySeriesDescriptionMetadata.c(a, b);\n    b.item(\"Series\", \"Collection:StackedFragmentSeries:StackedSeriesCollection:StackedFragmentSeries\");\n    b.item(\"AutoGenerateSeries\", \"Boolean\");\n    b.item(\"ReverseLegendOrder\", \"Boolean\");\n    b.item(\"SeriesCreatedRef\", \"EventRef::seriesCreated\");\n    StackedSeriesBaseDescriptionMetadata.e(a, b);\n  };\n\n  StackedSeriesBaseDescriptionMetadata.d = function (a) {\n    StackedSeriesBaseDescriptionMetadata.b(a);\n    a.m(\"StackedSeriesBase\", StackedSeriesBaseDescriptionMetadata.a);\n  };\n\n  StackedSeriesBaseDescriptionMetadata.e = function (a, b) {};\n\n  StackedSeriesBaseDescriptionMetadata.$t = markType(StackedSeriesBaseDescriptionMetadata, 'StackedSeriesBaseDescriptionMetadata');\n  StackedSeriesBaseDescriptionMetadata.a = null;\n  return StackedSeriesBaseDescriptionMetadata;\n}(Base);\n\nexport { StackedSeriesBaseDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/StackedSeriesBaseDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,gDAAT,QAAiE,oDAAjE;AACA,SAAS,iCAAT,QAAkD,qCAAlD;AAEA;;AAEG;;AACH,IAAA,oCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0D,EAAA,OAAA,CAAA,SAAA,CAAA,oCAAA,EAAA,MAAA;;AAA1D,WAAA,oCAAA,GAAA;;AAwBC;;AArBe,EAAA,oCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,oCAAoC,CAAC,CAArC,IAA0C,IAA9C,EAAoD;AACnD,MAAA,oCAAoC,CAAC,CAArC,GAAyC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAzC;AACA,MAAA,oCAAoC,CAAC,CAArC,CAAuC,CAAvC,EAA0C,oCAAoC,CAAC,CAA/E;AACA,MAAA,gDAAgD,CAAC,CAAjD,CAAmD,CAAnD;AACA;AACD,GANc;;AAOR,EAAA,oCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,iCAAiC,CAAC,CAAlC,CAAoC,CAApC,EAAuC,CAAvC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,gFAAjB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,SAA7B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,SAA7B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,yBAA3B;AACA,IAAA,oCAAoC,CAAC,CAArC,CAAuC,CAAvC,EAA0C,CAA1C;AACA,GAPM;;AAQA,EAAA,oCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,oCAAoC,CAAC,CAArC,CAAuC,CAAvC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,mBAAJ,EAAyB,oCAAoC,CAAC,CAA9D;AACA,GAHM;;AAIQ,EAAA,oCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA4C,CAA5C,EAA2E,CAC1E,CADc;;AArBR,EAAA,oCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,oCAAD,EAAuC,sCAAvC,CAAnB;AACQ,EAAA,oCAAA,CAAA,CAAA,GAAkC,IAAlC;AAsBhB,SAAA,oCAAA;AAAC,CAxBD,CAA0D,IAA1D,CAAA;;SAAa,oC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StackedSeriesCreatedEventArgsDescriptionMetadata } from \"./StackedSeriesCreatedEventArgsDescriptionMetadata\";\nimport { CategorySeriesDescriptionMetadata } from \"./CategorySeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar StackedSeriesBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(StackedSeriesBaseDescriptionMetadata, _super);\n    function StackedSeriesBaseDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StackedSeriesBaseDescriptionMetadata.b = function (a) {\n        if (StackedSeriesBaseDescriptionMetadata.a == null) {\n            StackedSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            StackedSeriesBaseDescriptionMetadata.c(a, StackedSeriesBaseDescriptionMetadata.a);\n            StackedSeriesCreatedEventArgsDescriptionMetadata.d(a);\n        }\n    };\n    StackedSeriesBaseDescriptionMetadata.c = function (a, b) {\n        CategorySeriesDescriptionMetadata.c(a, b);\n        b.item(\"Series\", \"Collection:StackedFragmentSeries:StackedSeriesCollection:StackedFragmentSeries\");\n        b.item(\"AutoGenerateSeries\", \"Boolean\");\n        b.item(\"ReverseLegendOrder\", \"Boolean\");\n        b.item(\"SeriesCreatedRef\", \"EventRef::seriesCreated\");\n        StackedSeriesBaseDescriptionMetadata.e(a, b);\n    };\n    StackedSeriesBaseDescriptionMetadata.d = function (a) {\n        StackedSeriesBaseDescriptionMetadata.b(a);\n        a.m(\"StackedSeriesBase\", StackedSeriesBaseDescriptionMetadata.a);\n    };\n    StackedSeriesBaseDescriptionMetadata.e = function (a, b) {\n    };\n    StackedSeriesBaseDescriptionMetadata.$t = markType(StackedSeriesBaseDescriptionMetadata, 'StackedSeriesBaseDescriptionMetadata');\n    StackedSeriesBaseDescriptionMetadata.a = null;\n    return StackedSeriesBaseDescriptionMetadata;\n}(Base));\nexport { StackedSeriesBaseDescriptionMetadata };\n//# sourceMappingURL=StackedSeriesBaseDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}