{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, IEqualityComparer_$type, IEqualityComparer$1_$type, typeCast, String_$type, markType } from \"./type\";\nimport { IComparer_$type } from \"./IComparer\";\nimport { IComparer$1_$type } from \"./IComparer$1\";\nimport { CultureInfo } from \"./culture\";\nimport { stringCompare1 } from \"./stringExtended\";\n/**\n * @hidden\n */\n\nvar StringComparer =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(StringComparer, _super);\n\n  function StringComparer(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.h = 0;\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          _this.h = c;\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  StringComparer.prototype.compareObject = function (a, b) {\n    return stringCompare1(typeCast(String_$type, a), typeCast(String_$type, b), this.h);\n  };\n\n  StringComparer.prototype.compare = function (a, b) {\n    return stringCompare1(a, b, this.h);\n  };\n\n  StringComparer.a = function (a, b) {\n    if (a.name == CultureInfo.invariantCulture.name) {\n      return b ? StringComparer.e : StringComparer.d;\n    }\n\n    return b ? StringComparer.c : StringComparer.b;\n  };\n\n  StringComparer.prototype.equalsC = function (a, b) {\n    return this.compare(a, b) == 0;\n  };\n\n  StringComparer.prototype.getHashCodeC = function (a) {\n    if (a == null) {\n      return 0;\n    }\n\n    switch (this.h) {\n      case 0:\n      case 2:\n      case 4:\n        return Base.getHashCodeStatic(a);\n\n      case 1:\n        return Base.getHashCodeStatic(a.toLowerCase());\n\n      case 3:\n      case 5:\n        return Base.getHashCodeStatic(a.toLowerCase());\n\n      default:\n        return 0;\n    }\n  };\n\n  StringComparer.$t = markType(StringComparer, 'StringComparer', Base.$, [IComparer_$type, IEqualityComparer_$type, IComparer$1_$type.specialize(String_$type), IEqualityComparer$1_$type.specialize(String_$type)]);\n  StringComparer.b = new StringComparer(1, 0);\n  StringComparer.c = new StringComparer(1, 1);\n  StringComparer.d = new StringComparer(1, 2);\n  StringComparer.e = new StringComparer(1, 3);\n  StringComparer.f = new StringComparer(1, 4);\n  StringComparer.g = new StringComparer(1, 5);\n  return StringComparer;\n}(Base);\n\nexport { StringComparer };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/StringComparer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, IEqualityComparer_$type, IEqualityComparer$1_$type, typeCast, String_$type, markType } from \"./type\";\nimport { IComparer_$type } from \"./IComparer\";\nimport { IComparer$1_$type } from \"./IComparer$1\";\nimport { CultureInfo } from \"./culture\";\nimport { stringCompare1 } from \"./stringExtended\";\n/**\n * @hidden\n */\nvar StringComparer = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(StringComparer, _super);\n    function StringComparer(a) {\n        var _rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _rest[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this.h = 0;\n        a = (a == void 0) ? 0 : a;\n        switch (a) {\n            case 0: break;\n            case 1:\n                {\n                    var c = _rest[0];\n                    _this.h = c;\n                }\n                break;\n        }\n        return _this;\n    }\n    StringComparer.prototype.compareObject = function (a, b) {\n        return stringCompare1(typeCast(String_$type, a), typeCast(String_$type, b), this.h);\n    };\n    StringComparer.prototype.compare = function (a, b) {\n        return stringCompare1(a, b, this.h);\n    };\n    StringComparer.a = function (a, b) {\n        if (a.name == CultureInfo.invariantCulture.name) {\n            return b ? StringComparer.e : StringComparer.d;\n        }\n        return b ? StringComparer.c : StringComparer.b;\n    };\n    StringComparer.prototype.equalsC = function (a, b) {\n        return this.compare(a, b) == 0;\n    };\n    StringComparer.prototype.getHashCodeC = function (a) {\n        if (a == null) {\n            return 0;\n        }\n        switch (this.h) {\n            case 0:\n            case 2:\n            case 4: return Base.getHashCodeStatic(a);\n            case 1: return Base.getHashCodeStatic(a.toLowerCase());\n            case 3:\n            case 5: return Base.getHashCodeStatic(a.toLowerCase());\n            default: return 0;\n        }\n    };\n    StringComparer.$t = markType(StringComparer, 'StringComparer', Base.$, [IComparer_$type, IEqualityComparer_$type, IComparer$1_$type.specialize(String_$type), IEqualityComparer$1_$type.specialize(String_$type)]);\n    StringComparer.b = new StringComparer(1, 0);\n    StringComparer.c = new StringComparer(1, 1);\n    StringComparer.d = new StringComparer(1, 2);\n    StringComparer.e = new StringComparer(1, 3);\n    StringComparer.f = new StringComparer(1, 4);\n    StringComparer.g = new StringComparer(1, 5);\n    return StringComparer;\n}(Base));\nexport { StringComparer };\n//# sourceMappingURL=StringComparer.js.map\n"]},"metadata":{},"sourceType":"module"}