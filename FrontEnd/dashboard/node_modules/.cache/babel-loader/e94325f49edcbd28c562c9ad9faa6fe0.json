{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { InputGroupItemDescriptionMetadata } from \"./InputGroupItemDescriptionMetadata\";\nimport { SuffixDescription } from \"./SuffixDescription\";\n/**\n * @hidden\n */\n\nvar SuffixDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SuffixDescriptionMetadata, _super);\n\n  function SuffixDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SuffixDescriptionMetadata.b = function (a) {\n    if (SuffixDescriptionMetadata.a == null) {\n      SuffixDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      SuffixDescriptionMetadata.c(a, SuffixDescriptionMetadata.a);\n    }\n  };\n\n  SuffixDescriptionMetadata.c = function (a, b) {\n    InputGroupItemDescriptionMetadata.c(a, b);\n    b.item(\"Id\", \"String\");\n    b.item(\"AriaLabel\", \"String\");\n    b.item(\"IsHover\", \"Boolean\");\n    b.item(\"Disabled\", \"(w:IsDisabled,wf:IsDisabled)Boolean\");\n  };\n\n  SuffixDescriptionMetadata.d = function (a) {\n    SuffixDescriptionMetadata.b(a);\n    a.n(\"Suffix\", function () {\n      return new SuffixDescription();\n    });\n    a.m(\"Suffix\", SuffixDescriptionMetadata.a);\n  };\n\n  SuffixDescriptionMetadata.$t = markType(SuffixDescriptionMetadata, 'SuffixDescriptionMetadata');\n  SuffixDescriptionMetadata.a = null;\n  return SuffixDescriptionMetadata;\n}(Base);\n\nexport { SuffixDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/SuffixDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,iCAAT,QAAkD,qCAAlD;AACA,SAAS,iBAAT,QAAkC,qBAAlC;AAEA;;AAEG;;AACH,IAAA,yBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+C,EAAA,OAAA,CAAA,SAAA,CAAA,yBAAA,EAAA,MAAA;;AAA/C,WAAA,yBAAA,GAAA;;AAqBC;;AAlBe,EAAA,yBAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,yBAAyB,CAAC,CAA1B,IAA+B,IAAnC,EAAyC;AACxC,MAAA,yBAAyB,CAAC,CAA1B,GAA8B,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA9B;AACA,MAAA,yBAAyB,CAAC,CAA1B,CAA4B,CAA5B,EAA+B,yBAAyB,CAAC,CAAzD;AACA;AACD,GALc;;AAMR,EAAA,yBAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,iCAAiC,CAAC,CAAlC,CAAoC,CAApC,EAAuC,CAAvC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,IAAP,EAAa,QAAb;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,QAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,SAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,qCAAnB;AACA,GANM;;AAOA,EAAA,yBAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,yBAAyB,CAAC,CAA1B,CAA4B,CAA5B;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,QAAJ,EAAc,YAAA;AAAM,aAAA,IAAA,iBAAA,EAAA;AAAuB,KAA3C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,QAAJ,EAAc,yBAAyB,CAAC,CAAxC;AACA,GAJM;;AAfA,EAAA,yBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,yBAAD,EAA4B,2BAA5B,CAAnB;AACQ,EAAA,yBAAA,CAAA,CAAA,GAAkC,IAAlC;AAmBhB,SAAA,yBAAA;AAAC,CArBD,CAA+C,IAA/C,CAAA;;SAAa,yB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { InputGroupItemDescriptionMetadata } from \"./InputGroupItemDescriptionMetadata\";\nimport { SuffixDescription } from \"./SuffixDescription\";\n/**\n * @hidden\n */\nvar SuffixDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SuffixDescriptionMetadata, _super);\n    function SuffixDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SuffixDescriptionMetadata.b = function (a) {\n        if (SuffixDescriptionMetadata.a == null) {\n            SuffixDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            SuffixDescriptionMetadata.c(a, SuffixDescriptionMetadata.a);\n        }\n    };\n    SuffixDescriptionMetadata.c = function (a, b) {\n        InputGroupItemDescriptionMetadata.c(a, b);\n        b.item(\"Id\", \"String\");\n        b.item(\"AriaLabel\", \"String\");\n        b.item(\"IsHover\", \"Boolean\");\n        b.item(\"Disabled\", \"(w:IsDisabled,wf:IsDisabled)Boolean\");\n    };\n    SuffixDescriptionMetadata.d = function (a) {\n        SuffixDescriptionMetadata.b(a);\n        a.n(\"Suffix\", function () { return new SuffixDescription(); });\n        a.m(\"Suffix\", SuffixDescriptionMetadata.a);\n    };\n    SuffixDescriptionMetadata.$t = markType(SuffixDescriptionMetadata, 'SuffixDescriptionMetadata');\n    SuffixDescriptionMetadata.a = null;\n    return SuffixDescriptionMetadata;\n}(Base));\nexport { SuffixDescriptionMetadata };\n//# sourceMappingURL=SuffixDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}