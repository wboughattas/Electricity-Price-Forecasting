{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { InvalidOperationException } from \"./InvalidOperationException\";\n/**\r\n * @hidden\r\n */\n\nvar FilterExpressionVisitor =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(FilterExpressionVisitor, _super);\n\n  function FilterExpressionVisitor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FilterExpressionVisitor.prototype.visit = function (a) {\n    if (a == null) {\n      throw new InvalidOperationException(1, \"Expected an expression but found none\");\n    }\n\n    if (a.isOperation) {\n      this.visitOperationExpression(a);\n    } else if (a.isFunction) {\n      this.visitFunctionExpression(a);\n    } else if (a.isLiteral) {\n      this.visitLiteralExpression(a);\n    } else if (a.isPropertyReference) {\n      this.visitPropertyReferenceExpression(a);\n    }\n  };\n\n  FilterExpressionVisitor.prototype.visitOperationExpression = function (a) {\n    if (a.left != null) {\n      this.visit(a.left);\n    }\n\n    if (a.right != null) {\n      this.visit(a.right);\n    }\n  };\n\n  FilterExpressionVisitor.prototype.visitFunctionExpression = function (a) {\n    for (var b = 0; b < a.functionArguments.j.count; b++) {\n      this.visit(a.functionArguments.j.item(b));\n    }\n  };\n\n  FilterExpressionVisitor.prototype.visitLiteralExpression = function (a) {};\n\n  FilterExpressionVisitor.prototype.visitPropertyReferenceExpression = function (a) {};\n\n  FilterExpressionVisitor.$t = markType(FilterExpressionVisitor, 'FilterExpressionVisitor');\n  return FilterExpressionVisitor;\n}(Base);\n\nexport { FilterExpressionVisitor };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FilterExpressionVisitor.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAiF,QAAjF,QAAiG,QAAjG;AAEA,SAAS,yBAAT,QAA0C,6BAA1C;AAOA;;AAEG;;AACH,IAAA,uBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,OAAA,CAAA,SAAA,CAAA,uBAAA,EAAA,MAAA;;AAA7C,WAAA,uBAAA,GAAA;;AAiCC;;AA/BA,EAAA,uBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,CAAN,EAA0B;AACzB,QAAI,CAAC,IAAI,IAAT,EAAe;AACd,YAAM,IAAI,yBAAJ,CAA8B,CAA9B,EAAiC,uCAAjC,CAAN;AACA;;AACD,QAAI,CAAC,CAAC,WAAN,EAAmB;AAClB,WAAK,wBAAL,CAA+D,CAA/D;AACA,KAFD,MAEO,IAAI,CAAC,CAAC,UAAN,EAAkB;AACxB,WAAK,uBAAL,CAA6D,CAA7D;AACA,KAFM,MAEA,IAAI,CAAC,CAAC,SAAN,EAAiB;AACvB,WAAK,sBAAL,CAA2D,CAA3D;AACA,KAFM,MAEA,IAAI,CAAC,CAAC,mBAAN,EAA2B;AACjC,WAAK,gCAAL,CAA+E,CAA/E;AACA;AACD,GAbD;;AAcA,EAAA,uBAAA,CAAA,SAAA,CAAA,wBAAA,GAAA,UAAyB,CAAzB,EAAsD;AACrD,QAAI,CAAC,CAAC,IAAF,IAAU,IAAd,EAAoB;AACnB,WAAK,KAAL,CAAW,CAAC,CAAC,IAAb;AACA;;AACD,QAAI,CAAC,CAAC,KAAF,IAAW,IAAf,EAAqB;AACpB,WAAK,KAAL,CAAW,CAAC,CAAC,KAAb;AACA;AACD,GAPD;;AAQA,EAAA,uBAAA,CAAA,SAAA,CAAA,uBAAA,GAAA,UAAwB,CAAxB,EAAoD;AACnD,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,iBAAF,CAAoB,CAApB,CAAsB,KAA1C,EAAiD,CAAC,EAAlD,EAAsD;AACrD,WAAK,KAAL,CAAW,CAAC,CAAC,iBAAF,CAAoB,CAApB,CAAsB,IAAtB,CAA2B,CAA3B,CAAX;AACA;AACD,GAJD;;AAKA,EAAA,uBAAA,CAAA,SAAA,CAAA,sBAAA,GAAA,UAAuB,CAAvB,EAAkD,CACjD,CADD;;AAEA,EAAA,uBAAA,CAAA,SAAA,CAAA,gCAAA,GAAA,UAAiC,CAAjC,EAAsE,CACrE,CADD;;AA9BO,EAAA,uBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uBAAD,EAA0B,yBAA1B,CAAnB;AAgCR,SAAA,uBAAA;AAAC,CAjCD,CAA6C,IAA7C,CAAA;;SAAa,uB","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, markType } from \"./type\";\r\nimport { InvalidOperationException } from \"./InvalidOperationException\";\r\n/**\r\n * @hidden\r\n */\r\nvar FilterExpressionVisitor = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(FilterExpressionVisitor, _super);\r\n    function FilterExpressionVisitor() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FilterExpressionVisitor.prototype.visit = function (a) {\r\n        if (a == null) {\r\n            throw new InvalidOperationException(1, \"Expected an expression but found none\");\r\n        }\r\n        if (a.isOperation) {\r\n            this.visitOperationExpression(a);\r\n        }\r\n        else if (a.isFunction) {\r\n            this.visitFunctionExpression(a);\r\n        }\r\n        else if (a.isLiteral) {\r\n            this.visitLiteralExpression(a);\r\n        }\r\n        else if (a.isPropertyReference) {\r\n            this.visitPropertyReferenceExpression(a);\r\n        }\r\n    };\r\n    FilterExpressionVisitor.prototype.visitOperationExpression = function (a) {\r\n        if (a.left != null) {\r\n            this.visit(a.left);\r\n        }\r\n        if (a.right != null) {\r\n            this.visit(a.right);\r\n        }\r\n    };\r\n    FilterExpressionVisitor.prototype.visitFunctionExpression = function (a) {\r\n        for (var b = 0; b < a.functionArguments.j.count; b++) {\r\n            this.visit(a.functionArguments.j.item(b));\r\n        }\r\n    };\r\n    FilterExpressionVisitor.prototype.visitLiteralExpression = function (a) {\r\n    };\r\n    FilterExpressionVisitor.prototype.visitPropertyReferenceExpression = function (a) {\r\n    };\r\n    FilterExpressionVisitor.$t = markType(FilterExpressionVisitor, 'FilterExpressionVisitor');\r\n    return FilterExpressionVisitor;\r\n}(Base));\r\nexport { FilterExpressionVisitor };\r\n//# sourceMappingURL=FilterExpressionVisitor.js.map\r\n"]},"metadata":{},"sourceType":"module"}