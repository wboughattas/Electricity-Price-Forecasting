{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalStackedSeriesBaseDescriptionMetadata } from \"./HorizontalStackedSeriesBaseDescriptionMetadata\";\nimport { StackedSplineSeriesDescription } from \"./StackedSplineSeriesDescription\";\n/**\r\n * @hidden\r\n */\n\nvar StackedSplineSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(StackedSplineSeriesDescriptionMetadata, _super);\n\n  function StackedSplineSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StackedSplineSeriesDescriptionMetadata.b = function (a) {\n    if (StackedSplineSeriesDescriptionMetadata.a == null) {\n      StackedSplineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      StackedSplineSeriesDescriptionMetadata.c(a, StackedSplineSeriesDescriptionMetadata.a);\n    }\n  };\n\n  StackedSplineSeriesDescriptionMetadata.c = function (a, b) {\n    HorizontalStackedSeriesBaseDescriptionMetadata.c(a, b);\n  };\n\n  StackedSplineSeriesDescriptionMetadata.d = function (a) {\n    StackedSplineSeriesDescriptionMetadata.b(a);\n    a.n(\"StackedSplineSeries\", function () {\n      return new StackedSplineSeriesDescription();\n    });\n    a.m(\"StackedSplineSeries\", StackedSplineSeriesDescriptionMetadata.a);\n  };\n\n  StackedSplineSeriesDescriptionMetadata.$t = markType(StackedSplineSeriesDescriptionMetadata, 'StackedSplineSeriesDescriptionMetadata');\n  StackedSplineSeriesDescriptionMetadata.a = null;\n  return StackedSplineSeriesDescriptionMetadata;\n}(Base);\n\nexport { StackedSplineSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/StackedSplineSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,8CAAT,QAA+D,kDAA/D;AACA,SAAS,8BAAT,QAA+C,kCAA/C;AAEA;;AAEG;;AACH,IAAA,sCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4D,EAAA,OAAA,CAAA,SAAA,CAAA,sCAAA,EAAA,MAAA;;AAA5D,WAAA,sCAAA,GAAA;;AAiBC;;AAde,EAAA,sCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,sCAAsC,CAAC,CAAvC,IAA4C,IAAhD,EAAsD;AACrD,MAAA,sCAAsC,CAAC,CAAvC,GAA2C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA3C;AACA,MAAA,sCAAsC,CAAC,CAAvC,CAAyC,CAAzC,EAA4C,sCAAsC,CAAC,CAAnF;AACA;AACD,GALc;;AAMR,EAAA,sCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,8CAA8C,CAAC,CAA/C,CAAiD,CAAjD,EAAoD,CAApD;AACA,GAFM;;AAGA,EAAA,sCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,sCAAsC,CAAC,CAAvC,CAAyC,CAAzC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,qBAAJ,EAA2B,YAAA;AAAM,aAAA,IAAA,8BAAA,EAAA;AAAoC,KAArE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,qBAAJ,EAA2B,sCAAsC,CAAC,CAAlE;AACA,GAJM;;AAXA,EAAA,sCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,sCAAD,EAAyC,wCAAzC,CAAnB;AACQ,EAAA,sCAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,sCAAA;AAAC,CAjBD,CAA4D,IAA5D,CAAA;;SAAa,sC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { HorizontalStackedSeriesBaseDescriptionMetadata } from \"./HorizontalStackedSeriesBaseDescriptionMetadata\";\r\nimport { StackedSplineSeriesDescription } from \"./StackedSplineSeriesDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar StackedSplineSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(StackedSplineSeriesDescriptionMetadata, _super);\r\n    function StackedSplineSeriesDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    StackedSplineSeriesDescriptionMetadata.b = function (a) {\r\n        if (StackedSplineSeriesDescriptionMetadata.a == null) {\r\n            StackedSplineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            StackedSplineSeriesDescriptionMetadata.c(a, StackedSplineSeriesDescriptionMetadata.a);\r\n        }\r\n    };\r\n    StackedSplineSeriesDescriptionMetadata.c = function (a, b) {\r\n        HorizontalStackedSeriesBaseDescriptionMetadata.c(a, b);\r\n    };\r\n    StackedSplineSeriesDescriptionMetadata.d = function (a) {\r\n        StackedSplineSeriesDescriptionMetadata.b(a);\r\n        a.n(\"StackedSplineSeries\", function () { return new StackedSplineSeriesDescription(); });\r\n        a.m(\"StackedSplineSeries\", StackedSplineSeriesDescriptionMetadata.a);\r\n    };\r\n    StackedSplineSeriesDescriptionMetadata.$t = markType(StackedSplineSeriesDescriptionMetadata, 'StackedSplineSeriesDescriptionMetadata');\r\n    StackedSplineSeriesDescriptionMetadata.a = null;\r\n    return StackedSplineSeriesDescriptionMetadata;\r\n}(Base));\r\nexport { StackedSplineSeriesDescriptionMetadata };\r\n//# sourceMappingURL=StackedSplineSeriesDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}