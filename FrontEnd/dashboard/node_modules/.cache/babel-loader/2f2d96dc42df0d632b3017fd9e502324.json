{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { GeometryData } from \"./GeometryData\";\nimport { markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\n/**\r\n * @hidden\r\n */\n\nvar EllipseGeometryData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(EllipseGeometryData, _super);\n\n  function EllipseGeometryData() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._centerX = 0;\n    _this._centerY = 0;\n    _this._radiusX = 0;\n    _this._radiusY = 0;\n    return _this;\n  }\n\n  EllipseGeometryData.prototype.get_type = function () {\n    return \"Ellipse\";\n  };\n\n  Object.defineProperty(EllipseGeometryData.prototype, \"type\", {\n    get: function () {\n      return this.get_type();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(EllipseGeometryData.prototype, \"centerX\", {\n    get: function () {\n      return this._centerX;\n    },\n    set: function (a) {\n      this._centerX = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(EllipseGeometryData.prototype, \"centerY\", {\n    get: function () {\n      return this._centerY;\n    },\n    set: function (a) {\n      this._centerY = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(EllipseGeometryData.prototype, \"radiusX\", {\n    get: function () {\n      return this._radiusX;\n    },\n    set: function (a) {\n      this._radiusX = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(EllipseGeometryData.prototype, \"radiusY\", {\n    get: function () {\n      return this._radiusY;\n    },\n    set: function (a) {\n      this._radiusY = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  EllipseGeometryData.prototype.a = function () {\n    return \"centerX: \" + this.centerX + \", centerY: \" + this.centerY + \", radiusX: \" + this.radiusX + \", radiusY: \" + this.radiusY;\n  };\n\n  EllipseGeometryData.prototype.scaleByViewport = function (a) {\n    this.centerX = (this.centerX - a.left) / a.width;\n    this.centerY = (this.centerY - a.top) / a.height;\n    this.radiusX = this.radiusX / a.width;\n    this.radiusY = this.radiusY / a.height;\n  };\n\n  EllipseGeometryData.prototype.getPointsOverride = function (a, b) {\n    var c = new List$1(PointData.$, 0);\n    a.add(c);\n    c.add(new PointData(this.centerX, this.centerY));\n  };\n\n  EllipseGeometryData.$t = markType(EllipseGeometryData, 'EllipseGeometryData', GeometryData.$);\n  return EllipseGeometryData;\n}(GeometryData);\n\nexport { EllipseGeometryData };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/EllipseGeometryData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { GeometryData } from \"./GeometryData\";\r\nimport { markType } from \"./type\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { PointData } from \"./PointData\";\r\n/**\r\n * @hidden\r\n */\r\nvar EllipseGeometryData = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(EllipseGeometryData, _super);\r\n    function EllipseGeometryData() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._centerX = 0;\r\n        _this._centerY = 0;\r\n        _this._radiusX = 0;\r\n        _this._radiusY = 0;\r\n        return _this;\r\n    }\r\n    EllipseGeometryData.prototype.get_type = function () {\r\n        return \"Ellipse\";\r\n    };\r\n    Object.defineProperty(EllipseGeometryData.prototype, \"type\", {\r\n        get: function () {\r\n            return this.get_type();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EllipseGeometryData.prototype, \"centerX\", {\r\n        get: function () {\r\n            return this._centerX;\r\n        },\r\n        set: function (a) {\r\n            this._centerX = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EllipseGeometryData.prototype, \"centerY\", {\r\n        get: function () {\r\n            return this._centerY;\r\n        },\r\n        set: function (a) {\r\n            this._centerY = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EllipseGeometryData.prototype, \"radiusX\", {\r\n        get: function () {\r\n            return this._radiusX;\r\n        },\r\n        set: function (a) {\r\n            this._radiusX = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EllipseGeometryData.prototype, \"radiusY\", {\r\n        get: function () {\r\n            return this._radiusY;\r\n        },\r\n        set: function (a) {\r\n            this._radiusY = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    EllipseGeometryData.prototype.a = function () {\r\n        return \"centerX: \" + this.centerX + \", centerY: \" + this.centerY + \", radiusX: \" + this.radiusX + \", radiusY: \" + this.radiusY;\r\n    };\r\n    EllipseGeometryData.prototype.scaleByViewport = function (a) {\r\n        this.centerX = (this.centerX - a.left) / a.width;\r\n        this.centerY = (this.centerY - a.top) / a.height;\r\n        this.radiusX = this.radiusX / a.width;\r\n        this.radiusY = this.radiusY / a.height;\r\n    };\r\n    EllipseGeometryData.prototype.getPointsOverride = function (a, b) {\r\n        var c = new List$1(PointData.$, 0);\r\n        a.add(c);\r\n        c.add(new PointData(this.centerX, this.centerY));\r\n    };\r\n    EllipseGeometryData.$t = markType(EllipseGeometryData, 'EllipseGeometryData', GeometryData.$);\r\n    return EllipseGeometryData;\r\n}(GeometryData));\r\nexport { EllipseGeometryData };\r\n//# sourceMappingURL=EllipseGeometryData.js.map\r\n"]},"metadata":{},"sourceType":"module"}