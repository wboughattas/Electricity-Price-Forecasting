{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { SegmentData } from \"./SegmentData\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\nimport { markType } from \"./type\";\nimport { StringBuilder } from \"./StringBuilder\";\n/**\n * @hidden\n */\n\nvar PolyBezierSegmentData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolyBezierSegmentData, _super);\n\n  function PolyBezierSegmentData(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this._points = null;\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        {\n          _this.points = new List$1(PointData.$, 0);\n        }\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          _this.points = new List$1(PointData.$, 0);\n\n          for (var d = 0; d < c.b.count; d++) {\n            _this.points.add(PointData.b(c.b._inner[d]));\n          }\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  PolyBezierSegmentData.prototype.get_type = function () {\n    return \"PolyBezierSpline\";\n  };\n\n  Object.defineProperty(PolyBezierSegmentData.prototype, \"type\", {\n    get: function () {\n      return this.get_type();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PolyBezierSegmentData.prototype, \"points\", {\n    get: function () {\n      return this._points;\n    },\n    set: function (a) {\n      this._points = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PolyBezierSegmentData.prototype.a = function () {\n    var a = new StringBuilder(0);\n    a.u(\"points: [\");\n\n    for (var b = 0; b < this.points.count; b++) {\n      if (b != 0) {\n        a.l(\", \");\n      }\n\n      a.l(\"{ x: \" + this.points._inner[b].x + \", y: \" + this.points._inner[b].y + \"}\");\n    }\n\n    a.u(\"]\");\n    return a.toString();\n  };\n\n  PolyBezierSegmentData.prototype.scaleByViewport = function (a) {\n    for (var b = 0; b < this.points.count; b++) {\n      this.points._inner[b] = new PointData((this.points._inner[b].x - a.left) / a.width, (this.points._inner[b].y - a.top) / a.height);\n    }\n  };\n\n  PolyBezierSegmentData.prototype.getPointsOverride = function (a, b) {\n    for (var c = 0; c < this.points.count; c++) {\n      a.add(new PointData(this.points._inner[c].x, this.points._inner[c].y));\n    }\n  };\n\n  PolyBezierSegmentData.$t = markType(PolyBezierSegmentData, 'PolyBezierSegmentData', SegmentData.$);\n  return PolyBezierSegmentData;\n}(SegmentData);\n\nexport { PolyBezierSegmentData };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PolyBezierSegmentData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { SegmentData } from \"./SegmentData\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\nimport { markType } from \"./type\";\nimport { StringBuilder } from \"./StringBuilder\";\n/**\n * @hidden\n */\nvar PolyBezierSegmentData = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolyBezierSegmentData, _super);\n    function PolyBezierSegmentData(a) {\n        var _rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _rest[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this._points = null;\n        a = (a == void 0) ? 0 : a;\n        switch (a) {\n            case 0:\n                {\n                    _this.points = new List$1(PointData.$, 0);\n                }\n                break;\n            case 1:\n                {\n                    var c = _rest[0];\n                    _this.points = new List$1(PointData.$, 0);\n                    for (var d = 0; d < c.b.count; d++) {\n                        _this.points.add(PointData.b(c.b._inner[d]));\n                    }\n                }\n                break;\n        }\n        return _this;\n    }\n    PolyBezierSegmentData.prototype.get_type = function () {\n        return \"PolyBezierSpline\";\n    };\n    Object.defineProperty(PolyBezierSegmentData.prototype, \"type\", {\n        get: function () {\n            return this.get_type();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PolyBezierSegmentData.prototype, \"points\", {\n        get: function () {\n            return this._points;\n        },\n        set: function (a) {\n            this._points = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PolyBezierSegmentData.prototype.a = function () {\n        var a = new StringBuilder(0);\n        a.u(\"points: [\");\n        for (var b = 0; b < this.points.count; b++) {\n            if (b != 0) {\n                a.l(\", \");\n            }\n            a.l(\"{ x: \" + this.points._inner[b].x + \", y: \" + this.points._inner[b].y + \"}\");\n        }\n        a.u(\"]\");\n        return a.toString();\n    };\n    PolyBezierSegmentData.prototype.scaleByViewport = function (a) {\n        for (var b = 0; b < this.points.count; b++) {\n            this.points._inner[b] = new PointData((this.points._inner[b].x - a.left) / a.width, (this.points._inner[b].y - a.top) / a.height);\n        }\n    };\n    PolyBezierSegmentData.prototype.getPointsOverride = function (a, b) {\n        for (var c = 0; c < this.points.count; c++) {\n            a.add(new PointData(this.points._inner[c].x, this.points._inner[c].y));\n        }\n    };\n    PolyBezierSegmentData.$t = markType(PolyBezierSegmentData, 'PolyBezierSegmentData', SegmentData.$);\n    return PolyBezierSegmentData;\n}(SegmentData));\nexport { PolyBezierSegmentData };\n//# sourceMappingURL=PolyBezierSegmentData.js.map\n"]},"metadata":{},"sourceType":"module"}