{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { CellInfoDescription } from \"./CellInfoDescription\";\nimport { markType } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar DateTimeCellInfoDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DateTimeCellInfoDescription, _super);\n\n  function DateTimeCellInfoDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.fe = new Date();\n    _this.fj = null;\n    _this.e9 = null;\n    _this.fi = null;\n    _this.fh = null;\n    _this.fc = false;\n    return _this;\n  }\n\n  DateTimeCellInfoDescription.prototype.get_type = function () {\n    return \"DateTimeCellInfo\";\n  };\n\n  Object.defineProperty(DateTimeCellInfoDescription.prototype, \"dateTimeValue\", {\n    get: function () {\n      return this.fe;\n    },\n    set: function (a) {\n      this.fe = a;\n      this.e(\"DateTimeValue\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateTimeCellInfoDescription.prototype, \"formatStringOverride\", {\n    get: function () {\n      return this.fj;\n    },\n    set: function (a) {\n      this.fj = a;\n      this.e(\"FormatStringOverride\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateTimeCellInfoDescription.prototype, \"formatSpecifiers\", {\n    get: function () {\n      return this.e9;\n    },\n    set: function (a) {\n      this.e9 = a;\n      this.e(\"FormatSpecifiers\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateTimeCellInfoDescription.prototype, \"formatOverrideRef\", {\n    get: function () {\n      return this.fi;\n    },\n    set: function (a) {\n      this.fi = a;\n      this.e(\"FormatOverrideRef\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateTimeCellInfoDescription.prototype, \"dateTimeFormat\", {\n    get: function () {\n      return this.fh;\n    },\n    set: function (a) {\n      this.fh = a;\n      this.e(\"DateTimeFormat\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateTimeCellInfoDescription.prototype, \"isOffsetValue\", {\n    get: function () {\n      return this.fc;\n    },\n    set: function (a) {\n      this.fc = a;\n      this.e(\"IsOffsetValue\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  DateTimeCellInfoDescription.$t = markType(DateTimeCellInfoDescription, 'DateTimeCellInfoDescription', CellInfoDescription.$);\n  DateTimeCellInfoDescription.__marshalByValue1 = true;\n  DateTimeCellInfoDescription.__marshalByValueAlias1 = \"DateTimeCellModel\";\n  return DateTimeCellInfoDescription;\n}(CellInfoDescription);\n\nexport { DateTimeCellInfoDescription };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DateTimeCellInfoDescription.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { CellInfoDescription } from \"./CellInfoDescription\";\r\nimport { markType } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar DateTimeCellInfoDescription = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(DateTimeCellInfoDescription, _super);\r\n    function DateTimeCellInfoDescription() {\r\n        var _this = _super.call(this) || this;\r\n        _this.fe = new Date();\r\n        _this.fj = null;\r\n        _this.e9 = null;\r\n        _this.fi = null;\r\n        _this.fh = null;\r\n        _this.fc = false;\r\n        return _this;\r\n    }\r\n    DateTimeCellInfoDescription.prototype.get_type = function () {\r\n        return \"DateTimeCellInfo\";\r\n    };\r\n    Object.defineProperty(DateTimeCellInfoDescription.prototype, \"dateTimeValue\", {\r\n        get: function () {\r\n            return this.fe;\r\n        },\r\n        set: function (a) {\r\n            this.fe = a;\r\n            this.e(\"DateTimeValue\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateTimeCellInfoDescription.prototype, \"formatStringOverride\", {\r\n        get: function () {\r\n            return this.fj;\r\n        },\r\n        set: function (a) {\r\n            this.fj = a;\r\n            this.e(\"FormatStringOverride\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateTimeCellInfoDescription.prototype, \"formatSpecifiers\", {\r\n        get: function () {\r\n            return this.e9;\r\n        },\r\n        set: function (a) {\r\n            this.e9 = a;\r\n            this.e(\"FormatSpecifiers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateTimeCellInfoDescription.prototype, \"formatOverrideRef\", {\r\n        get: function () {\r\n            return this.fi;\r\n        },\r\n        set: function (a) {\r\n            this.fi = a;\r\n            this.e(\"FormatOverrideRef\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateTimeCellInfoDescription.prototype, \"dateTimeFormat\", {\r\n        get: function () {\r\n            return this.fh;\r\n        },\r\n        set: function (a) {\r\n            this.fh = a;\r\n            this.e(\"DateTimeFormat\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateTimeCellInfoDescription.prototype, \"isOffsetValue\", {\r\n        get: function () {\r\n            return this.fc;\r\n        },\r\n        set: function (a) {\r\n            this.fc = a;\r\n            this.e(\"IsOffsetValue\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DateTimeCellInfoDescription.$t = markType(DateTimeCellInfoDescription, 'DateTimeCellInfoDescription', CellInfoDescription.$);\r\n    DateTimeCellInfoDescription.__marshalByValue1 = true;\r\n    DateTimeCellInfoDescription.__marshalByValueAlias1 = \"DateTimeCellModel\";\r\n    return DateTimeCellInfoDescription;\r\n}(CellInfoDescription));\r\nexport { DateTimeCellInfoDescription };\r\n//# sourceMappingURL=DateTimeCellInfoDescription.js.map\r\n"]},"metadata":{},"sourceType":"module"}