{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StyleShapeEventArgsDescriptionMetadata } from \"./StyleShapeEventArgsDescriptionMetadata\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\n/**\r\n * @hidden\r\n */\n\nvar ShapeSeriesBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ShapeSeriesBaseDescriptionMetadata, _super);\n\n  function ShapeSeriesBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ShapeSeriesBaseDescriptionMetadata.b = function (a) {\n    if (ShapeSeriesBaseDescriptionMetadata.a == null) {\n      ShapeSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ShapeSeriesBaseDescriptionMetadata.c(a, ShapeSeriesBaseDescriptionMetadata.a);\n      StyleShapeEventArgsDescriptionMetadata.d(a);\n    }\n  };\n\n  ShapeSeriesBaseDescriptionMetadata.c = function (a, b) {\n    SeriesDescriptionMetadata.c(a, b);\n    b.item(\"ShapeMemberPath\", \"String\");\n    b.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\n    b.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\n    b.item(\"ShapeFilterResolution\", \"Number:double\");\n    b.item(\"StyleShapeRef\", \"EventRef::styleShape\");\n  };\n\n  ShapeSeriesBaseDescriptionMetadata.d = function (a) {\n    ShapeSeriesBaseDescriptionMetadata.b(a);\n    a.m(\"ShapeSeriesBase\", ShapeSeriesBaseDescriptionMetadata.a);\n  };\n\n  ShapeSeriesBaseDescriptionMetadata.$t = markType(ShapeSeriesBaseDescriptionMetadata, 'ShapeSeriesBaseDescriptionMetadata');\n  ShapeSeriesBaseDescriptionMetadata.a = null;\n  return ShapeSeriesBaseDescriptionMetadata;\n}(Base);\n\nexport { ShapeSeriesBaseDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ShapeSeriesBaseDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,sCAAT,QAAuD,0CAAvD;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AAEA;;AAEG;;AACH,IAAA,kCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwD,EAAA,OAAA,CAAA,SAAA,CAAA,kCAAA,EAAA,MAAA;;AAAxD,WAAA,kCAAA,GAAA;;AAsBC;;AAnBe,EAAA,kCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,kCAAkC,CAAC,CAAnC,IAAwC,IAA5C,EAAkD;AACjD,MAAA,kCAAkC,CAAC,CAAnC,GAAuC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAvC;AACA,MAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC,EAAwC,kCAAkC,CAAC,CAA3E;AACA,MAAA,sCAAsC,CAAC,CAAvC,CAAyC,CAAzC;AACA;AACD,GANc;;AAOR,EAAA,kCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,yBAAyB,CAAC,CAA1B,CAA4B,CAA5B,EAA+B,CAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,QAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,mCAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,mCAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,uBAAP,EAAgC,eAAhC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,sBAAxB;AACA,GAPM;;AAQA,EAAA,kCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,iBAAJ,EAAuB,kCAAkC,CAAC,CAA1D;AACA,GAHM;;AAjBA,EAAA,kCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,kCAAD,EAAqC,oCAArC,CAAnB;AACQ,EAAA,kCAAA,CAAA,CAAA,GAAkC,IAAlC;AAoBhB,SAAA,kCAAA;AAAC,CAtBD,CAAwD,IAAxD,CAAA;;SAAa,kC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { StyleShapeEventArgsDescriptionMetadata } from \"./StyleShapeEventArgsDescriptionMetadata\";\r\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\r\n/**\r\n * @hidden\r\n */\r\nvar ShapeSeriesBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(ShapeSeriesBaseDescriptionMetadata, _super);\r\n    function ShapeSeriesBaseDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ShapeSeriesBaseDescriptionMetadata.b = function (a) {\r\n        if (ShapeSeriesBaseDescriptionMetadata.a == null) {\r\n            ShapeSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            ShapeSeriesBaseDescriptionMetadata.c(a, ShapeSeriesBaseDescriptionMetadata.a);\r\n            StyleShapeEventArgsDescriptionMetadata.d(a);\r\n        }\r\n    };\r\n    ShapeSeriesBaseDescriptionMetadata.c = function (a, b) {\r\n        SeriesDescriptionMetadata.c(a, b);\r\n        b.item(\"ShapeMemberPath\", \"String\");\r\n        b.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\r\n        b.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\r\n        b.item(\"ShapeFilterResolution\", \"Number:double\");\r\n        b.item(\"StyleShapeRef\", \"EventRef::styleShape\");\r\n    };\r\n    ShapeSeriesBaseDescriptionMetadata.d = function (a) {\r\n        ShapeSeriesBaseDescriptionMetadata.b(a);\r\n        a.m(\"ShapeSeriesBase\", ShapeSeriesBaseDescriptionMetadata.a);\r\n    };\r\n    ShapeSeriesBaseDescriptionMetadata.$t = markType(ShapeSeriesBaseDescriptionMetadata, 'ShapeSeriesBaseDescriptionMetadata');\r\n    ShapeSeriesBaseDescriptionMetadata.a = null;\r\n    return ShapeSeriesBaseDescriptionMetadata;\r\n}(Base));\r\nexport { ShapeSeriesBaseDescriptionMetadata };\r\n//# sourceMappingURL=ShapeSeriesBaseDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}