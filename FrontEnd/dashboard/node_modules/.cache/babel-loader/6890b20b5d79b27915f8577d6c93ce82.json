{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ValueBrushScaleDescriptionMetadata } from \"./ValueBrushScaleDescriptionMetadata\";\nimport { ContourValueResolverDescriptionMetadata } from \"./ContourValueResolverDescriptionMetadata\";\nimport { TriangulationStatusEventArgsDescriptionMetadata } from \"./TriangulationStatusEventArgsDescriptionMetadata\";\nimport { GeographicXYTriangulatingSeriesDescriptionMetadata } from \"./GeographicXYTriangulatingSeriesDescriptionMetadata\";\nimport { GeographicContourLineSeriesDescription } from \"./GeographicContourLineSeriesDescription\";\n/**\r\n * @hidden\r\n */\n\nvar GeographicContourLineSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(GeographicContourLineSeriesDescriptionMetadata, _super);\n\n  function GeographicContourLineSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GeographicContourLineSeriesDescriptionMetadata.b = function (a) {\n    if (GeographicContourLineSeriesDescriptionMetadata.a == null) {\n      GeographicContourLineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GeographicContourLineSeriesDescriptionMetadata.c(a, GeographicContourLineSeriesDescriptionMetadata.a);\n      ValueBrushScaleDescriptionMetadata.d(a);\n      ContourValueResolverDescriptionMetadata.d(a);\n      TriangulationStatusEventArgsDescriptionMetadata.d(a);\n    }\n  };\n\n  GeographicContourLineSeriesDescriptionMetadata.c = function (a, b) {\n    GeographicXYTriangulatingSeriesDescriptionMetadata.c(a, b);\n    b.item(\"ValueMemberPath\", \"String\");\n    b.item(\"FillScale\", \"ExportedType:ValueBrushScale\");\n    b.item(\"ValueResolver\", \"ExportedType:ContourValueResolver\");\n    b.item(\"TriangulationStatusChangedRef\", \"EventRef::triangulationStatusChanged\");\n  };\n\n  GeographicContourLineSeriesDescriptionMetadata.d = function (a) {\n    GeographicContourLineSeriesDescriptionMetadata.b(a);\n    a.n(\"GeographicContourLineSeries\", function () {\n      return new GeographicContourLineSeriesDescription();\n    });\n    a.m(\"GeographicContourLineSeries\", GeographicContourLineSeriesDescriptionMetadata.a);\n  };\n\n  GeographicContourLineSeriesDescriptionMetadata.$t = markType(GeographicContourLineSeriesDescriptionMetadata, 'GeographicContourLineSeriesDescriptionMetadata');\n  GeographicContourLineSeriesDescriptionMetadata.a = null;\n  return GeographicContourLineSeriesDescriptionMetadata;\n}(Base);\n\nexport { GeographicContourLineSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/GeographicContourLineSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,kCAAT,QAAmD,sCAAnD;AACA,SAAS,uCAAT,QAAwD,2CAAxD;AACA,SAAS,+CAAT,QAAgE,mDAAhE;AACA,SAAS,kDAAT,QAAmE,sDAAnE;AACA,SAAS,sCAAT,QAAuD,0CAAvD;AAEA;;AAEG;;AACH,IAAA,8CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoE,EAAA,OAAA,CAAA,SAAA,CAAA,8CAAA,EAAA,MAAA;;AAApE,WAAA,8CAAA,GAAA;;AAwBC;;AArBe,EAAA,8CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,8CAA8C,CAAC,CAA/C,IAAoD,IAAxD,EAA8D;AAC7D,MAAA,8CAA8C,CAAC,CAA/C,GAAmD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAnD;AACA,MAAA,8CAA8C,CAAC,CAA/C,CAAiD,CAAjD,EAAoD,8CAA8C,CAAC,CAAnG;AACA,MAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC;AACA,MAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C;AACA,MAAA,+CAA+C,CAAC,CAAhD,CAAkD,CAAlD;AACA;AACD,GARc;;AASR,EAAA,8CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,kDAAkD,CAAC,CAAnD,CAAqD,CAArD,EAAwD,CAAxD;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,QAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,8BAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,mCAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,+BAAP,EAAwC,sCAAxC;AACA,GANM;;AAOA,EAAA,8CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,8CAA8C,CAAC,CAA/C,CAAiD,CAAjD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,6BAAJ,EAAmC,YAAA;AAAM,aAAA,IAAA,sCAAA,EAAA;AAA4C,KAArF;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,6BAAJ,EAAmC,8CAA8C,CAAC,CAAlF;AACA,GAJM;;AAlBA,EAAA,8CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,8CAAD,EAAiD,gDAAjD,CAAnB;AACQ,EAAA,8CAAA,CAAA,CAAA,GAAkC,IAAlC;AAsBhB,SAAA,8CAAA;AAAC,CAxBD,CAAoE,IAApE,CAAA;;SAAa,8C","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { ValueBrushScaleDescriptionMetadata } from \"./ValueBrushScaleDescriptionMetadata\";\r\nimport { ContourValueResolverDescriptionMetadata } from \"./ContourValueResolverDescriptionMetadata\";\r\nimport { TriangulationStatusEventArgsDescriptionMetadata } from \"./TriangulationStatusEventArgsDescriptionMetadata\";\r\nimport { GeographicXYTriangulatingSeriesDescriptionMetadata } from \"./GeographicXYTriangulatingSeriesDescriptionMetadata\";\r\nimport { GeographicContourLineSeriesDescription } from \"./GeographicContourLineSeriesDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar GeographicContourLineSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(GeographicContourLineSeriesDescriptionMetadata, _super);\r\n    function GeographicContourLineSeriesDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    GeographicContourLineSeriesDescriptionMetadata.b = function (a) {\r\n        if (GeographicContourLineSeriesDescriptionMetadata.a == null) {\r\n            GeographicContourLineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            GeographicContourLineSeriesDescriptionMetadata.c(a, GeographicContourLineSeriesDescriptionMetadata.a);\r\n            ValueBrushScaleDescriptionMetadata.d(a);\r\n            ContourValueResolverDescriptionMetadata.d(a);\r\n            TriangulationStatusEventArgsDescriptionMetadata.d(a);\r\n        }\r\n    };\r\n    GeographicContourLineSeriesDescriptionMetadata.c = function (a, b) {\r\n        GeographicXYTriangulatingSeriesDescriptionMetadata.c(a, b);\r\n        b.item(\"ValueMemberPath\", \"String\");\r\n        b.item(\"FillScale\", \"ExportedType:ValueBrushScale\");\r\n        b.item(\"ValueResolver\", \"ExportedType:ContourValueResolver\");\r\n        b.item(\"TriangulationStatusChangedRef\", \"EventRef::triangulationStatusChanged\");\r\n    };\r\n    GeographicContourLineSeriesDescriptionMetadata.d = function (a) {\r\n        GeographicContourLineSeriesDescriptionMetadata.b(a);\r\n        a.n(\"GeographicContourLineSeries\", function () { return new GeographicContourLineSeriesDescription(); });\r\n        a.m(\"GeographicContourLineSeries\", GeographicContourLineSeriesDescriptionMetadata.a);\r\n    };\r\n    GeographicContourLineSeriesDescriptionMetadata.$t = markType(GeographicContourLineSeriesDescriptionMetadata, 'GeographicContourLineSeriesDescriptionMetadata');\r\n    GeographicContourLineSeriesDescriptionMetadata.a = null;\r\n    return GeographicContourLineSeriesDescriptionMetadata;\r\n}(Base));\r\nexport { GeographicContourLineSeriesDescriptionMetadata };\r\n//# sourceMappingURL=GeographicContourLineSeriesDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}