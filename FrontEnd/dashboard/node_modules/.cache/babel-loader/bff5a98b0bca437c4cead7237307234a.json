{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { List$1 } from \"./List$1\";\nimport { LabelAppearanceData } from \"./LabelAppearanceData\";\nimport { IVisualData_$type } from \"./IVisualData\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { markType } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar LabelAppearanceDataList =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(LabelAppearanceDataList, _super);\n\n  function LabelAppearanceDataList() {\n    return _super.call(this, LabelAppearanceData.$, 0) || this;\n  }\n\n  LabelAppearanceDataList.prototype.serialize = function () {\n    var a = new StringBuilder(0);\n    a.l(\"{ items: [\");\n\n    for (var b = 0; b < this.count; b++) {\n      if (b != 0) {\n        a.l(\", \");\n      }\n\n      a.l(this._inner[b].serialize());\n    }\n\n    return a.toString();\n  };\n\n  LabelAppearanceDataList.$t = markType(LabelAppearanceDataList, 'LabelAppearanceDataList', List$1.$.specialize(LabelAppearanceData.$), [IVisualData_$type]);\n  return LabelAppearanceDataList;\n}(List$1);\n\nexport { LabelAppearanceDataList };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/LabelAppearanceDataList.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,MAAT,QAAuB,UAAvB;AACA,SAAS,mBAAT,QAAoC,uBAApC;AACA,SAAsB,iBAAtB,QAA+C,eAA/C;AACA,SAAS,aAAT,QAA8B,iBAA9B;AACA,SAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,uBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,OAAA,CAAA,SAAA,CAAA,uBAAA,EAAA,MAAA;;AAE5C,WAAA,uBAAA,GAAA;WACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAY,mBAAoB,CAAC,CAAjC,EAAoC,CAApC,KAAsC,I;AACtC;;AACD,EAAA,uBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACC,QAAI,CAAC,GAAG,IAAI,aAAJ,CAAkB,CAAlB,CAAR;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,YAAJ;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,KAAzB,EAAgC,CAAC,EAAjC,EAAqC;AACpC,UAAI,CAAC,IAAI,CAAT,EAAY;AACX,QAAA,CAAC,CAAC,CAAF,CAAI,IAAJ;AACA;;AACD,MAAA,CAAC,CAAC,CAAF,CAAI,KAAK,MAAL,CAAY,CAAZ,EAAe,SAAf,EAAJ;AACA;;AACD,WAAO,CAAC,CAAC,QAAF,EAAP;AACA,GAVD;;AAJO,EAAA,uBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uBAAD,EAA0B,yBAA1B,EAA2D,MAAO,CAAC,CAAR,CAAU,UAAV,CAA2B,mBAAoB,CAAC,CAAhD,CAA3D,EAA+G,CAAC,iBAAD,CAA/G,CAAnB;AAeR,SAAA,uBAAA;AAAC,CAhBD,CAA6C,MAA7C,CAAA;;SAAa,uB","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { LabelAppearanceData } from \"./LabelAppearanceData\";\r\nimport { IVisualData_$type } from \"./IVisualData\";\r\nimport { StringBuilder } from \"./StringBuilder\";\r\nimport { markType } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar LabelAppearanceDataList = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(LabelAppearanceDataList, _super);\r\n    function LabelAppearanceDataList() {\r\n        return _super.call(this, LabelAppearanceData.$, 0) || this;\r\n    }\r\n    LabelAppearanceDataList.prototype.serialize = function () {\r\n        var a = new StringBuilder(0);\r\n        a.l(\"{ items: [\");\r\n        for (var b = 0; b < this.count; b++) {\r\n            if (b != 0) {\r\n                a.l(\", \");\r\n            }\r\n            a.l(this._inner[b].serialize());\r\n        }\r\n        return a.toString();\r\n    };\r\n    LabelAppearanceDataList.$t = markType(LabelAppearanceDataList, 'LabelAppearanceDataList', List$1.$.specialize(LabelAppearanceData.$), [IVisualData_$type]);\r\n    return LabelAppearanceDataList;\r\n}(List$1));\r\nexport { LabelAppearanceDataList };\r\n//# sourceMappingURL=LabelAppearanceDataList.js.map\r\n"]},"metadata":{},"sourceType":"module"}