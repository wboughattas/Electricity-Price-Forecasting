{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { stringStartsWith, stringEndsWith, stringContains, stringReplace } from \"./string\";\n/**\r\n * @hidden\r\n */\n\nvar Matcher =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(Matcher, _super);\n\n  function Matcher(a) {\n    var _this = _super.call(this) || this;\n\n    _this.c = null;\n    var patt_ = Matcher.d(a);\n    _this.c = new RegExp(patt_);\n    return _this;\n  }\n\n  Matcher.prototype.b = function (a) {\n    return this.c.test(a);\n  };\n\n  Matcher.a = function (a) {\n    return Matcher.d(a) != null;\n  };\n\n  Matcher.d = function (a) {\n    if (a == null) {\n      return null;\n    }\n\n    if (stringStartsWith(a, \"/\") && stringEndsWith(a, \"/\")) {\n      return a.substr(1, a.length - 2);\n    }\n\n    if (stringStartsWith(a, \"Regex(\") && stringEndsWith(a, \")\")) {\n      return a.substr(6, a.length - 7);\n    }\n\n    if (stringStartsWith(a, \"RegExp(\") && stringEndsWith(a, \")\")) {\n      return a.substr(7, a.length - 8);\n    }\n\n    if (stringContains(a, \"*\") || stringContains(a, \"#\") || stringContains(a, \"?\")) {\n      a = stringReplace(a, \".\", \"\\\\.\");\n      a = stringReplace(a, \"*\", \".*\");\n      a = stringReplace(a, \"#\", \"\\\\d+\");\n      a = stringReplace(a, \"?\", \".+\");\n      a = stringReplace(a, \"[\", \"\\\\[\");\n      a = stringReplace(a, \"]\", \"\\\\]\");\n      return \"^\" + a + \"$\";\n    }\n\n    return null;\n  };\n\n  Matcher.$t = markType(Matcher, 'Matcher');\n  return Matcher;\n}(Base);\n\nexport { Matcher };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/Matcher.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAqB,QAArB,QAAqC,QAArC;AACA,SAAS,gBAAT,EAA2B,cAA3B,EAA2C,cAA3C,EAA2D,aAA3D,QAAgF,UAAhF;AAEA;;AAEG;;AACH,IAAA,OAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,OAAA,CAAA,SAAA,CAAA,OAAA,EAAA,MAAA;;AAG5B,WAAA,OAAA,CAAY,CAAZ,EAAqB;AAArB,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AADU,IAAA,KAAA,CAAA,CAAA,GAAY,IAAZ;AAGT,QAAI,KAAK,GAAG,OAAO,CAAC,CAAR,CAAU,CAAV,CAAZ;AACA,IAAA,KAAI,CAAC,CAAL,GAAkB,IAAI,MAAJ,CAAW,KAAX,CAAlB;;AACA;;AACD,EAAA,OAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAW;AACV,WAAO,KAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,CAAP;AACA,GAFD;;AAGO,EAAA,OAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkB;AACjB,WAAO,OAAO,CAAC,CAAR,CAAU,CAAV,KAAgB,IAAvB;AACA,GAFM;;AAGA,EAAA,OAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkB;AACjB,QAAI,CAAC,IAAI,IAAT,EAAe;AACd,aAAO,IAAP;AACA;;AACD,QAAI,gBAAgB,CAAC,CAAD,EAAI,GAAJ,CAAhB,IAA4B,cAAc,CAAC,CAAD,EAAI,GAAJ,CAA9C,EAAwD;AACvD,aAAO,CAAC,CAAC,MAAF,CAAS,CAAT,EAAY,CAAC,CAAC,MAAF,GAAW,CAAvB,CAAP;AACA;;AACD,QAAI,gBAAgB,CAAC,CAAD,EAAI,QAAJ,CAAhB,IAAiC,cAAc,CAAC,CAAD,EAAI,GAAJ,CAAnD,EAA6D;AAC5D,aAAO,CAAC,CAAC,MAAF,CAAS,CAAT,EAAY,CAAC,CAAC,MAAF,GAAW,CAAvB,CAAP;AACA;;AACD,QAAI,gBAAgB,CAAC,CAAD,EAAI,SAAJ,CAAhB,IAAkC,cAAc,CAAC,CAAD,EAAI,GAAJ,CAApD,EAA8D;AAC7D,aAAO,CAAC,CAAC,MAAF,CAAS,CAAT,EAAY,CAAC,CAAC,MAAF,GAAW,CAAvB,CAAP;AACA;;AACD,QAAI,cAAc,CAAC,CAAD,EAAI,GAAJ,CAAd,IAA0B,cAAc,CAAC,CAAD,EAAI,GAAJ,CAAxC,IAAoD,cAAc,CAAC,CAAD,EAAI,GAAJ,CAAtE,EAAgF;AAC/E,MAAA,CAAC,GAAG,aAAa,CAAC,CAAD,EAAI,GAAJ,EAAS,KAAT,CAAjB;AACA,MAAA,CAAC,GAAG,aAAa,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,CAAjB;AACA,MAAA,CAAC,GAAG,aAAa,CAAC,CAAD,EAAI,GAAJ,EAAS,MAAT,CAAjB;AACA,MAAA,CAAC,GAAG,aAAa,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,CAAjB;AACA,MAAA,CAAC,GAAG,aAAa,CAAC,CAAD,EAAI,GAAJ,EAAS,KAAT,CAAjB;AACA,MAAA,CAAC,GAAG,aAAa,CAAC,CAAD,EAAI,GAAJ,EAAS,KAAT,CAAjB;AACA,aAAO,MAAM,CAAN,GAAU,GAAjB;AACA;;AACD,WAAO,IAAP;AACA,GAvBM;;AAbA,EAAA,OAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,OAAD,EAAU,SAAV,CAAnB;AAqCR,SAAA,OAAA;AAAC,CAtCD,CAA6B,IAA7B,CAAA;;SAAa,O","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, markType } from \"./type\";\r\nimport { stringStartsWith, stringEndsWith, stringContains, stringReplace } from \"./string\";\r\n/**\r\n * @hidden\r\n */\r\nvar Matcher = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(Matcher, _super);\r\n    function Matcher(a) {\r\n        var _this = _super.call(this) || this;\r\n        _this.c = null;\r\n        var patt_ = Matcher.d(a);\r\n        _this.c = (new RegExp(patt_));\r\n        return _this;\r\n    }\r\n    Matcher.prototype.b = function (a) {\r\n        return this.c.test(a);\r\n    };\r\n    Matcher.a = function (a) {\r\n        return Matcher.d(a) != null;\r\n    };\r\n    Matcher.d = function (a) {\r\n        if (a == null) {\r\n            return null;\r\n        }\r\n        if (stringStartsWith(a, \"/\") && stringEndsWith(a, \"/\")) {\r\n            return a.substr(1, a.length - 2);\r\n        }\r\n        if (stringStartsWith(a, \"Regex(\") && stringEndsWith(a, \")\")) {\r\n            return a.substr(6, a.length - 7);\r\n        }\r\n        if (stringStartsWith(a, \"RegExp(\") && stringEndsWith(a, \")\")) {\r\n            return a.substr(7, a.length - 8);\r\n        }\r\n        if (stringContains(a, \"*\") || stringContains(a, \"#\") || stringContains(a, \"?\")) {\r\n            a = stringReplace(a, \".\", \"\\\\.\");\r\n            a = stringReplace(a, \"*\", \".*\");\r\n            a = stringReplace(a, \"#\", \"\\\\d+\");\r\n            a = stringReplace(a, \"?\", \".+\");\r\n            a = stringReplace(a, \"[\", \"\\\\[\");\r\n            a = stringReplace(a, \"]\", \"\\\\]\");\r\n            return \"^\" + a + \"$\";\r\n        }\r\n        return null;\r\n    };\r\n    Matcher.$t = markType(Matcher, 'Matcher');\r\n    return Matcher;\r\n}(Base));\r\nexport { Matcher };\r\n//# sourceMappingURL=Matcher.js.map\r\n"]},"metadata":{},"sourceType":"module"}