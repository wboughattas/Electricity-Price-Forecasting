{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { LinearGraphVisualData } from \"./LinearGraphVisualData\";\nimport { StringBuilder } from \"igniteui-react-core\";\nimport { markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar LinearGaugeVisualData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(LinearGaugeVisualData, _super);\n\n  function LinearGaugeVisualData() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._needlePath = null;\n    _this._needle = null;\n    return _this;\n  }\n\n  Object.defineProperty(LinearGaugeVisualData.prototype, \"needlePath\", {\n    get: function () {\n      return this._needlePath;\n    },\n    set: function (a) {\n      this._needlePath = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LinearGaugeVisualData.prototype, \"needle\", {\n    get: function () {\n      return this._needle;\n    },\n    set: function (a) {\n      this._needle = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LinearGaugeVisualData.prototype.scaleByViewport = function () {\n    _super.prototype.scaleByViewport.call(this);\n\n    if (this.needlePath != null) {\n      this.needlePath.scaleByViewport(this.viewport);\n    }\n  };\n\n  LinearGaugeVisualData.prototype.serialize = function () {\n    var a = _super.prototype.serialize.call(this);\n\n    var b = new StringBuilder(0);\n    var c = a.length == 0;\n\n    if (this.needlePath != null) {\n      if (c) {\n        c = false;\n      } else {\n        b.l(\", \");\n      }\n\n      b.l(\"needlePath: \");\n      b.u(this.needlePath.serialize());\n    }\n\n    if (this.needle != null) {\n      if (c) {\n        c = false;\n      } else {\n        b.l(\", \");\n      }\n\n      b.l(\"needle: \");\n      b.u(this.needle.serialize());\n    }\n\n    if (c) {\n      return a;\n    }\n\n    b.l(\"}\");\n    return a.substr(0, a.length - 1) + b.toString();\n  };\n\n  LinearGaugeVisualData.$t = markType(LinearGaugeVisualData, 'LinearGaugeVisualData', LinearGraphVisualData.$);\n  return LinearGaugeVisualData;\n}(LinearGraphVisualData);\n\nexport { LinearGaugeVisualData };","map":{"version":3,"sources":["../../../../src/igniteui-gauges/lib/LinearGaugeVisualData.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,qBAAT,QAAsC,yBAAtC;AAGA,SAAS,aAAT,QAA8B,qBAA9B;AAEA,SAAqB,QAArB,QAAqC,qBAArC;AAEA;;AAEG;;AACH,IAAA,qBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2C,EAAA,OAAA,CAAA,SAAA,CAAA,qBAAA,EAAA,MAAA;;AAA3C,WAAA,qBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAES,IAAA,KAAA,CAAA,WAAA,GAAmC,IAAnC;AAOA,IAAA,KAAA,CAAA,OAAA,GAAkC,IAAlC;;AAyCR;;AA/CA,EAAA,MAAA,CAAA,cAAA,CAAI,qBAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;SAAd,YAAA;AACC,aAAO,KAAK,WAAZ;AACA,KAFa;SAGd,UAAe,CAAf,EAAqC;AACpC,WAAK,WAAL,GAAmB,CAAnB;AACA,KALa;oBAAA;;AAAA,GAAd;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,qBAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;SAAV,YAAA;AACC,aAAO,KAAK,OAAZ;AACA,KAFS;SAGV,UAAW,CAAX,EAAoC;AACnC,WAAK,OAAL,GAAe,CAAf;AACA,KALS;oBAAA;;AAAA,GAAV;;AAMA,EAAA,qBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,eAAN,CAAqB,IAArB,CAAqB,IAArB;;AACA,QAAI,KAAK,UAAL,IAAmB,IAAvB,EAA6B;AAC5B,WAAK,UAAL,CAAgB,eAAhB,CAAgC,KAAK,QAArC;AACA;AACD,GALD;;AAMA,EAAA,qBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACC,QAAI,CAAC,GAAW,MAAA,CAAA,SAAA,CAAM,SAAN,CAAe,IAAf,CAAe,IAAf,CAAhB;;AACA,QAAI,CAAC,GAAkB,IAAI,aAAJ,CAAkB,CAAlB,CAAvB;AACA,QAAI,CAAC,GAAY,CAAC,CAAC,MAAF,IAAY,CAA7B;;AACA,QAAI,KAAK,UAAL,IAAmB,IAAvB,EAA6B;AAC5B,UAAI,CAAJ,EAAO;AACN,QAAA,CAAC,GAAG,KAAJ;AACA,OAFD,MAEO;AACN,QAAA,CAAC,CAAC,CAAF,CAAI,IAAJ;AACA;;AACD,MAAA,CAAC,CAAC,CAAF,CAAI,cAAJ;AACA,MAAA,CAAC,CAAC,CAAF,CAAI,KAAK,UAAL,CAAgB,SAAhB,EAAJ;AACA;;AACD,QAAI,KAAK,MAAL,IAAe,IAAnB,EAAyB;AACxB,UAAI,CAAJ,EAAO;AACN,QAAA,CAAC,GAAG,KAAJ;AACA,OAFD,MAEO;AACN,QAAA,CAAC,CAAC,CAAF,CAAI,IAAJ;AACA;;AACD,MAAA,CAAC,CAAC,CAAF,CAAI,UAAJ;AACA,MAAA,CAAC,CAAC,CAAF,CAAI,KAAK,MAAL,CAAY,SAAZ,EAAJ;AACA;;AACD,QAAI,CAAJ,EAAO;AACN,aAAO,CAAP;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,GAAJ;AACA,WAAO,CAAC,CAAC,MAAF,CAAS,CAAT,EAAY,CAAC,CAAC,MAAF,GAAW,CAAvB,IAA4B,CAAC,CAAC,QAAF,EAAnC;AACA,GA3BD;;AArBO,EAAA,qBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,qBAAD,EAAwB,uBAAxB,EAAuD,qBAAsB,CAAC,CAA9E,CAAnB;AAiDR,SAAA,qBAAA;AAAC,CAlDD,CAA2C,qBAA3C,CAAA;;SAAa,qB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { LinearGraphVisualData } from \"./LinearGraphVisualData\";\nimport { StringBuilder } from \"igniteui-react-core\";\nimport { markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar LinearGaugeVisualData = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(LinearGaugeVisualData, _super);\n    function LinearGaugeVisualData() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._needlePath = null;\n        _this._needle = null;\n        return _this;\n    }\n    Object.defineProperty(LinearGaugeVisualData.prototype, \"needlePath\", {\n        get: function () {\n            return this._needlePath;\n        },\n        set: function (a) {\n            this._needlePath = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LinearGaugeVisualData.prototype, \"needle\", {\n        get: function () {\n            return this._needle;\n        },\n        set: function (a) {\n            this._needle = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinearGaugeVisualData.prototype.scaleByViewport = function () {\n        _super.prototype.scaleByViewport.call(this);\n        if (this.needlePath != null) {\n            this.needlePath.scaleByViewport(this.viewport);\n        }\n    };\n    LinearGaugeVisualData.prototype.serialize = function () {\n        var a = _super.prototype.serialize.call(this);\n        var b = new StringBuilder(0);\n        var c = a.length == 0;\n        if (this.needlePath != null) {\n            if (c) {\n                c = false;\n            }\n            else {\n                b.l(\", \");\n            }\n            b.l(\"needlePath: \");\n            b.u(this.needlePath.serialize());\n        }\n        if (this.needle != null) {\n            if (c) {\n                c = false;\n            }\n            else {\n                b.l(\", \");\n            }\n            b.l(\"needle: \");\n            b.u(this.needle.serialize());\n        }\n        if (c) {\n            return a;\n        }\n        b.l(\"}\");\n        return a.substr(0, a.length - 1) + b.toString();\n    };\n    LinearGaugeVisualData.$t = markType(LinearGaugeVisualData, 'LinearGaugeVisualData', LinearGraphVisualData.$);\n    return LinearGaugeVisualData;\n}(LinearGraphVisualData));\nexport { LinearGaugeVisualData };\n//# sourceMappingURL=LinearGaugeVisualData.js.map\n"]},"metadata":{},"sourceType":"module"}