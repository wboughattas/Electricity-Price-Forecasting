{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\nimport { HighlightingInfoDescription } from \"./HighlightingInfoDescription\";\n/**\n * @hidden\n */\n\nvar HighlightingInfoDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(HighlightingInfoDescriptionMetadata, _super);\n\n  function HighlightingInfoDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HighlightingInfoDescriptionMetadata.b = function (a) {\n    if (HighlightingInfoDescriptionMetadata.a == null) {\n      HighlightingInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      HighlightingInfoDescriptionMetadata.c(a, HighlightingInfoDescriptionMetadata.a);\n      SeriesDescriptionMetadata.d(a);\n    }\n  };\n\n  HighlightingInfoDescriptionMetadata.c = function (a, b) {\n    b.item(\"StartIndex\", \"Number:int\");\n    b.item(\"EndIndex\", \"Number:int\");\n    b.item(\"State\", \"ExportedType:string:HighlightingState\");\n    b.item(\"Progress\", \"Number:double\");\n    b.item(\"IsMarker\", \"Boolean\");\n    b.item(\"Series\", \"ExportedType:Series\");\n  };\n\n  HighlightingInfoDescriptionMetadata.d = function (a) {\n    HighlightingInfoDescriptionMetadata.b(a);\n    a.n(\"HighlightingInfo\", function () {\n      return new HighlightingInfoDescription();\n    });\n    a.m(\"HighlightingInfo\", HighlightingInfoDescriptionMetadata.a);\n  };\n\n  HighlightingInfoDescriptionMetadata.$t = markType(HighlightingInfoDescriptionMetadata, 'HighlightingInfoDescriptionMetadata');\n  HighlightingInfoDescriptionMetadata.a = null;\n  return HighlightingInfoDescriptionMetadata;\n}(Base);\n\nexport { HighlightingInfoDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/HighlightingInfoDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AACA,SAAS,2BAAT,QAA4C,+BAA5C;AAEA;;AAEG;;AACH,IAAA,mCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyD,EAAA,OAAA,CAAA,SAAA,CAAA,mCAAA,EAAA,MAAA;;AAAzD,WAAA,mCAAA,GAAA;;AAuBC;;AApBe,EAAA,mCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,mCAAmC,CAAC,CAApC,IAAyC,IAA7C,EAAmD;AAClD,MAAA,mCAAmC,CAAC,CAApC,GAAwC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAxC;AACA,MAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC,EAAyC,mCAAmC,CAAC,CAA7E;AACA,MAAA,yBAAyB,CAAC,CAA1B,CAA4B,CAA5B;AACA;AACD,GANc;;AAOR,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,YAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,YAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,uCAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,eAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,SAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,qBAAjB;AACA,GAPM;;AAQA,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,YAAA;AAAM,aAAA,IAAA,2BAAA,EAAA;AAAiC,KAA/D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,mCAAmC,CAAC,CAA5D;AACA,GAJM;;AAjBA,EAAA,mCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,mCAAD,EAAsC,qCAAtC,CAAnB;AACQ,EAAA,mCAAA,CAAA,CAAA,GAAkC,IAAlC;AAqBhB,SAAA,mCAAA;AAAC,CAvBD,CAAyD,IAAzD,CAAA;;SAAa,mC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\nimport { HighlightingInfoDescription } from \"./HighlightingInfoDescription\";\n/**\n * @hidden\n */\nvar HighlightingInfoDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(HighlightingInfoDescriptionMetadata, _super);\n    function HighlightingInfoDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HighlightingInfoDescriptionMetadata.b = function (a) {\n        if (HighlightingInfoDescriptionMetadata.a == null) {\n            HighlightingInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            HighlightingInfoDescriptionMetadata.c(a, HighlightingInfoDescriptionMetadata.a);\n            SeriesDescriptionMetadata.d(a);\n        }\n    };\n    HighlightingInfoDescriptionMetadata.c = function (a, b) {\n        b.item(\"StartIndex\", \"Number:int\");\n        b.item(\"EndIndex\", \"Number:int\");\n        b.item(\"State\", \"ExportedType:string:HighlightingState\");\n        b.item(\"Progress\", \"Number:double\");\n        b.item(\"IsMarker\", \"Boolean\");\n        b.item(\"Series\", \"ExportedType:Series\");\n    };\n    HighlightingInfoDescriptionMetadata.d = function (a) {\n        HighlightingInfoDescriptionMetadata.b(a);\n        a.n(\"HighlightingInfo\", function () { return new HighlightingInfoDescription(); });\n        a.m(\"HighlightingInfo\", HighlightingInfoDescriptionMetadata.a);\n    };\n    HighlightingInfoDescriptionMetadata.$t = markType(HighlightingInfoDescriptionMetadata, 'HighlightingInfoDescriptionMetadata');\n    HighlightingInfoDescriptionMetadata.a = null;\n    return HighlightingInfoDescriptionMetadata;\n}(Base));\nexport { HighlightingInfoDescriptionMetadata };\n//# sourceMappingURL=HighlightingInfoDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}