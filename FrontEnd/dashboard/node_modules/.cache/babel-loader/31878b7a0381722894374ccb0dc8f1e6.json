{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { TypeDescriptionMetadata } from \"./TypeDescriptionMetadata\";\nimport { stringEndsWith } from \"./string\";\n/**\r\n * @hidden\r\n */\n\nvar DescriptionTreeAction =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DescriptionTreeAction, _super);\n\n  function DescriptionTreeAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.a = 0;\n    _this.b = null;\n    _this.c = null;\n    _this.i = null;\n    _this.g = null;\n    _this.f = null;\n    _this.e = 0;\n    _this.d = 0;\n    return _this;\n  }\n\n  DescriptionTreeAction.prototype.h = function (a) {\n    var b = this.i;\n\n    if (this.c != null) {\n      b = this.c.g(a);\n    } else {\n      if (TypeDescriptionMetadata.shouldCamelize(a)) {\n        b = TypeDescriptionMetadata.camelize(this.i);\n      }\n    }\n\n    if (stringEndsWith(b, \"Ref\")) {\n      b = b.substr(0, b.length - \"Ref\".length);\n    }\n\n    return b;\n  };\n\n  DescriptionTreeAction.$t = markType(DescriptionTreeAction, 'DescriptionTreeAction');\n  return DescriptionTreeAction;\n}(Base);\n\nexport { DescriptionTreeAction };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DescriptionTreeAction.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAqB,QAArB,QAAqC,QAArC;AAGA,SAAS,uBAAT,QAAwC,2BAAxC;AAEA,SAAS,cAAT,QAA+B,UAA/B;AAEA;;AAEG;;AACH,IAAA,qBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2C,EAAA,OAAA,CAAA,SAAA,CAAA,qBAAA,EAAA,MAAA;;AAA3C,WAAA,qBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAEC,IAAA,KAAA,CAAA,CAAA,GAA0D,CAA1D;AACA,IAAA,KAAA,CAAA,CAAA,GAAyB,IAAzB;AACA,IAAA,KAAA,CAAA,CAAA,GAA6B,IAA7B;AACA,IAAA,KAAA,CAAA,CAAA,GAAY,IAAZ;AAeA,IAAA,KAAA,CAAA,CAAA,GAAS,IAAT;AACA,IAAA,KAAA,CAAA,CAAA,GAAS,IAAT;AACA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AACA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;;AACA;;AAlBA,EAAA,qBAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAA4B;AAC3B,QAAI,CAAC,GAAG,KAAK,CAAb;;AACA,QAAI,KAAK,CAAL,IAAU,IAAd,EAAoB;AACnB,MAAA,CAAC,GAAG,KAAK,CAAL,CAAO,CAAP,CAAS,CAAT,CAAJ;AACA,KAFD,MAEO;AACN,UAAI,uBAAuB,CAAC,cAAxB,CAAuC,CAAvC,CAAJ,EAA+C;AAC9C,QAAA,CAAC,GAAG,uBAAuB,CAAC,QAAxB,CAAiC,KAAK,CAAtC,CAAJ;AACA;AACD;;AACD,QAAI,cAAc,CAAC,CAAD,EAAI,KAAJ,CAAlB,EAA8B;AAC7B,MAAA,CAAC,GAAG,CAAC,CAAC,MAAF,CAAS,CAAT,EAAY,CAAC,CAAC,MAAF,GAAY,KAAD,CAAQ,MAA/B,CAAJ;AACA;;AACD,WAAO,CAAP;AACA,GAbD;;AALO,EAAA,qBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,qBAAD,EAAwB,uBAAxB,CAAnB;AAuBR,SAAA,qBAAA;AAAC,CAxBD,CAA2C,IAA3C,CAAA;;SAAa,qB","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, markType } from \"./type\";\r\nimport { TypeDescriptionMetadata } from \"./TypeDescriptionMetadata\";\r\nimport { stringEndsWith } from \"./string\";\r\n/**\r\n * @hidden\r\n */\r\nvar DescriptionTreeAction = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(DescriptionTreeAction, _super);\r\n    function DescriptionTreeAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.a = 0;\r\n        _this.b = null;\r\n        _this.c = null;\r\n        _this.i = null;\r\n        _this.g = null;\r\n        _this.f = null;\r\n        _this.e = 0;\r\n        _this.d = 0;\r\n        return _this;\r\n    }\r\n    DescriptionTreeAction.prototype.h = function (a) {\r\n        var b = this.i;\r\n        if (this.c != null) {\r\n            b = this.c.g(a);\r\n        }\r\n        else {\r\n            if (TypeDescriptionMetadata.shouldCamelize(a)) {\r\n                b = TypeDescriptionMetadata.camelize(this.i);\r\n            }\r\n        }\r\n        if (stringEndsWith(b, \"Ref\")) {\r\n            b = b.substr(0, b.length - (\"Ref\").length);\r\n        }\r\n        return b;\r\n    };\r\n    DescriptionTreeAction.$t = markType(DescriptionTreeAction, 'DescriptionTreeAction');\r\n    return DescriptionTreeAction;\r\n}(Base));\r\nexport { DescriptionTreeAction };\r\n//# sourceMappingURL=DescriptionTreeAction.js.map\r\n"]},"metadata":{},"sourceType":"module"}