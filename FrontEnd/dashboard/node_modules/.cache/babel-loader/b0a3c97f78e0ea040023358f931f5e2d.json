{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, ICollection$1_$type, IEnumerable$1_$type, IEnumerable_$type, fromEnum, typeCastObjTo$t, markType, String_$type, getEnumeratorObject } from \"./type\";\nimport { EqualityComparer$1 } from \"./EqualityComparer$1\";\nimport { NotImplementedException } from \"./NotImplementedException\";\nimport { arrayRemoveItem } from \"./array\";\n/**\r\n * @hidden\r\n */\n\nvar HashSet$1 =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(HashSet$1, _super);\n\n  function HashSet$1($t, a) {\n    var e_1, _a, e_2, _b;\n\n    var _rest = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      _rest[_i - 2] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.$t = null;\n    _this.k = null;\n    _this.n = 0;\n    _this._values = null;\n    _this.c = false;\n    _this._stringPlaceholder = null;\n    _this.b = false;\n    _this.$t = $t;\n    _this.$type = _this.$type.specialize(_this.$t);\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        {\n          var c = [null];\n          {\n            var e = c[0];\n            _this._values = {};\n            _this.k = e || EqualityComparer$1.defaultEqualityComparerValue(_this.$t);\n            _this.c = e == null && $t === String_$type;\n            _this.b = $t === Base.$type || $t.InstanceConstructor && !$t.InstanceConstructor.prototype.getHashCode;\n            _this._stringPlaceholder = {};\n          }\n        }\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          var d = [c, null];\n          {\n            var f = d[0];\n            var g = d[1];\n            var h = [g];\n            {\n              var j = h[0];\n              _this._values = {};\n              _this.k = j || EqualityComparer$1.defaultEqualityComparerValue(_this.$t);\n              _this.c = j == null && $t === String_$type;\n              _this.b = $t === Base.$type || $t.InstanceConstructor && !$t.InstanceConstructor.prototype.getHashCode;\n              _this._stringPlaceholder = {};\n            }\n\n            try {\n              for (var _c = tslib_1.__values(fromEnum(f)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var i = _d.value;\n\n                _this.add_1(i);\n              }\n            } catch (e_1_1) {\n              e_1 = {\n                error: e_1_1\n              };\n            } finally {\n              try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n            }\n          }\n        }\n        break;\n\n      case 2:\n        {\n          var c = _rest[0];\n          _this._values = {};\n          _this.k = c || EqualityComparer$1.defaultEqualityComparerValue(_this.$t);\n          _this.c = c == null && $t === String_$type;\n          _this.b = $t === Base.$type || $t.InstanceConstructor && !$t.InstanceConstructor.prototype.getHashCode;\n          _this._stringPlaceholder = {};\n        }\n        break;\n\n      case 3:\n        {\n          var c = _rest[0];\n          var d = _rest[1];\n          var e = [d];\n          {\n            var g = e[0];\n            _this._values = {};\n            _this.k = g || EqualityComparer$1.defaultEqualityComparerValue(_this.$t);\n            _this.c = g == null && $t === String_$type;\n            _this.b = $t === Base.$type || $t.InstanceConstructor && !$t.InstanceConstructor.prototype.getHashCode;\n            _this._stringPlaceholder = {};\n          }\n\n          try {\n            for (var _e = tslib_1.__values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {\n              var f = _f.value;\n\n              _this.add_1(f);\n            }\n          } catch (e_2_1) {\n            e_2 = {\n              error: e_2_1\n            };\n          } finally {\n            try {\n              if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n          }\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  HashSet$1.prototype.add = function (a) {\n    this.add_1(a);\n  };\n\n  Object.defineProperty(HashSet$1.prototype, \"isReadOnly\", {\n    get: function () {\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  HashSet$1.prototype.getEnumeratorObject = function () {\n    return this.getEnumerator();\n  };\n\n  Object.defineProperty(HashSet$1.prototype, \"l\", {\n    get: function () {\n      return this.k;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HashSet$1.prototype, \"count\", {\n    get: function () {\n      return this.n;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  HashSet$1.prototype.add_1 = function (item_) {\n    if (this.c) {\n      if (this._values[item_]) {\n        return false;\n      }\n\n      this._values[item_] = this._stringPlaceholder;\n      this.n++;\n      return true;\n    }\n\n    var a = this.k.getHashCodeC(item_);\n    var current_ = this._values[a];\n\n    if (current_) {\n      if (current_.$isHashSetBucket) {\n        var b = current_;\n\n        for (var d = 0; d < b.length; d++) {\n          var c = b[d];\n\n          if (this.k.equalsC(c, item_)) {\n            return false;\n          }\n        }\n\n        current_.push(item_);\n      } else {\n        if (this.k.equalsC(current_, item_)) {\n          return false;\n        }\n\n        var bucket_ = typeCastObjTo$t(this.$t, [current_, item_]);\n        bucket_.$isHashSetBucket = true;\n        ;\n        this._values[a] = bucket_;\n      }\n    } else {\n      this._values[a] = item_;\n    }\n\n    this.n++;\n    return true;\n  };\n\n  HashSet$1.prototype.clear = function () {\n    this.n = 0;\n    this._values = {};\n  };\n\n  HashSet$1.prototype.contains = function (item_) {\n    if (this.c) {\n      return !!this._values[item_];\n    }\n\n    var a = this.k.getHashCodeC(item_);\n    var current_ = this._values[a];\n\n    if (current_ !== undefined) {\n      if (current_.$isHashSetBucket) {\n        var b = current_;\n\n        for (var d = 0; d < b.length; d++) {\n          var c = b[d];\n\n          if (this.k.equalsC(c, item_)) {\n            return true;\n          }\n        }\n      } else {\n        if (this.k.equalsC(current_, item_)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  HashSet$1.prototype.copyTo1 = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.copyTo = function (a, b) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.copyTo2 = function (a, b, c) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.m = function ($t) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.r = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.getEnumerator = function () {\n    if (this.c) {\n      var a = Base.getArrayOfProperties(this._values);\n      return getEnumeratorObject(a);\n    }\n\n    var result_ = new Array(0);\n    var b = Base.getArrayOfValues(this._values);\n\n    for (var c = 0; c < b.length; c++) {\n      var item_ = b[c];\n\n      if (item_.$isHashSetBucket) {\n        var d = item_;\n\n        for (var e = 0; e < d.length; e++) {\n          var subItem_ = d[e];\n          result_.push(subItem_);\n        }\n      } else {\n        result_.push(item_);\n      }\n    }\n\n    return getEnumeratorObject(result_);\n  };\n\n  HashSet$1.prototype.s = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.e = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.f = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.g = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.h = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.t = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.i = function (a) {\n    var e_3, _a;\n\n    if (this.count > 0) {\n      try {\n        for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var b = _c.value;\n\n          if (this.contains(b)) {\n            return true;\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  HashSet$1.prototype.remove = function (item_) {\n    if (this.c) {\n      if (this._values[item_]) {\n        return false;\n      }\n\n      delete this._values[item_];\n      this.n--;\n      return true;\n    }\n\n    var hashCode_ = this.k.getHashCodeC(item_);\n    var current_ = this._values[hashCode_];\n\n    if (current_) {\n      if (current_.$isHashSetBucket) {\n        var a = current_;\n\n        for (var b = 0; b < a.length; b++) {\n          var currentItem_ = a[b];\n\n          if (this.k.equalsC(currentItem_, item_)) {\n            arrayRemoveItem(current_, currentItem_);\n\n            if (current_.length == 1) {\n              this._values[hashCode_] = current_[0];\n            }\n\n            this.n--;\n            return true;\n          }\n        }\n      } else {\n        if (this.k.equalsC(current_, item_)) {\n          delete this._values[hashCode_];\n          this.n--;\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  HashSet$1.prototype.j = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.u = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  HashSet$1.prototype.v = function () {};\n\n  HashSet$1.prototype.w = function (a) {\n    var e_4, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var b = _c.value;\n        this.add_1(b);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  };\n\n  HashSet$1.$t = markType(HashSet$1, 'HashSet$1', Base.$, [ICollection$1_$type.specialize(0), IEnumerable$1_$type.specialize(0), IEnumerable_$type]);\n  return HashSet$1;\n}(Base);\n\nexport { HashSet$1 };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/HashSet$1.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, ICollection$1_$type, IEnumerable$1_$type, IEnumerable_$type, fromEnum, typeCastObjTo$t, markType, String_$type, getEnumeratorObject } from \"./type\";\r\nimport { EqualityComparer$1 } from \"./EqualityComparer$1\";\r\nimport { NotImplementedException } from \"./NotImplementedException\";\r\nimport { arrayRemoveItem } from \"./array\";\r\n/**\r\n * @hidden\r\n */\r\nvar HashSet$1 = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(HashSet$1, _super);\r\n    function HashSet$1($t, a) {\r\n        var e_1, _a, e_2, _b;\r\n        var _rest = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            _rest[_i - 2] = arguments[_i];\r\n        }\r\n        var _this = _super.call(this) || this;\r\n        _this.$t = null;\r\n        _this.k = null;\r\n        _this.n = 0;\r\n        _this._values = null;\r\n        _this.c = false;\r\n        _this._stringPlaceholder = null;\r\n        _this.b = false;\r\n        _this.$t = $t;\r\n        _this.$type = _this.$type.specialize(_this.$t);\r\n        a = (a == void 0) ? 0 : a;\r\n        switch (a) {\r\n            case 0:\r\n                {\r\n                    var c = [null];\r\n                    {\r\n                        var e = c[0];\r\n                        _this._values = ({});\r\n                        _this.k = e || EqualityComparer$1.defaultEqualityComparerValue(_this.$t);\r\n                        _this.c = e == null && (($t === String_$type));\r\n                        _this.b = ($t === Base.$type || ($t.InstanceConstructor && !$t.InstanceConstructor.prototype.getHashCode));\r\n                        _this._stringPlaceholder = ({});\r\n                    }\r\n                }\r\n                break;\r\n            case 1:\r\n                {\r\n                    var c = _rest[0];\r\n                    var d = [c, null];\r\n                    {\r\n                        var f = d[0];\r\n                        var g = d[1];\r\n                        var h = [g];\r\n                        {\r\n                            var j = h[0];\r\n                            _this._values = ({});\r\n                            _this.k = j || EqualityComparer$1.defaultEqualityComparerValue(_this.$t);\r\n                            _this.c = j == null && (($t === String_$type));\r\n                            _this.b = ($t === Base.$type || ($t.InstanceConstructor && !$t.InstanceConstructor.prototype.getHashCode));\r\n                            _this._stringPlaceholder = ({});\r\n                        }\r\n                        try {\r\n                            for (var _c = tslib_1.__values(fromEnum(f)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                                var i = _d.value;\r\n                                _this.add_1(i);\r\n                            }\r\n                        }\r\n                        catch (e_1_1) {\r\n                            e_1 = { error: e_1_1 };\r\n                        }\r\n                        finally {\r\n                            try {\r\n                                if (_d && !_d.done && (_a = _c.return))\r\n                                    _a.call(_c);\r\n                            }\r\n                            finally {\r\n                                if (e_1)\r\n                                    throw e_1.error;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case 2:\r\n                {\r\n                    var c = _rest[0];\r\n                    _this._values = ({});\r\n                    _this.k = c || EqualityComparer$1.defaultEqualityComparerValue(_this.$t);\r\n                    _this.c = c == null && (($t === String_$type));\r\n                    _this.b = ($t === Base.$type || ($t.InstanceConstructor && !$t.InstanceConstructor.prototype.getHashCode));\r\n                    _this._stringPlaceholder = ({});\r\n                }\r\n                break;\r\n            case 3:\r\n                {\r\n                    var c = _rest[0];\r\n                    var d = _rest[1];\r\n                    var e = [d];\r\n                    {\r\n                        var g = e[0];\r\n                        _this._values = ({});\r\n                        _this.k = g || EqualityComparer$1.defaultEqualityComparerValue(_this.$t);\r\n                        _this.c = g == null && (($t === String_$type));\r\n                        _this.b = ($t === Base.$type || ($t.InstanceConstructor && !$t.InstanceConstructor.prototype.getHashCode));\r\n                        _this._stringPlaceholder = ({});\r\n                    }\r\n                    try {\r\n                        for (var _e = tslib_1.__values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                            var f = _f.value;\r\n                            _this.add_1(f);\r\n                        }\r\n                    }\r\n                    catch (e_2_1) {\r\n                        e_2 = { error: e_2_1 };\r\n                    }\r\n                    finally {\r\n                        try {\r\n                            if (_f && !_f.done && (_b = _e.return))\r\n                                _b.call(_e);\r\n                        }\r\n                        finally {\r\n                            if (e_2)\r\n                                throw e_2.error;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return _this;\r\n    }\r\n    HashSet$1.prototype.add = function (a) {\r\n        this.add_1(a);\r\n    };\r\n    Object.defineProperty(HashSet$1.prototype, \"isReadOnly\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    HashSet$1.prototype.getEnumeratorObject = function () {\r\n        return this.getEnumerator();\r\n    };\r\n    Object.defineProperty(HashSet$1.prototype, \"l\", {\r\n        get: function () {\r\n            return this.k;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HashSet$1.prototype, \"count\", {\r\n        get: function () {\r\n            return this.n;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    HashSet$1.prototype.add_1 = function (item_) {\r\n        if (this.c) {\r\n            if ((this._values[item_])) {\r\n                return false;\r\n            }\r\n            this._values[item_] = this._stringPlaceholder;\r\n            this.n++;\r\n            return true;\r\n        }\r\n        var a = this.k.getHashCodeC(item_);\r\n        var current_ = this._values[a];\r\n        if ((current_)) {\r\n            if ((current_.$isHashSetBucket)) {\r\n                var b = (current_);\r\n                for (var d = 0; d < b.length; d++) {\r\n                    var c = b[d];\r\n                    if (this.k.equalsC(c, item_)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                current_.push(item_);\r\n            }\r\n            else {\r\n                if (this.k.equalsC(current_, item_)) {\r\n                    return false;\r\n                }\r\n                var bucket_ = typeCastObjTo$t(this.$t, ([current_, item_]));\r\n                bucket_.$isHashSetBucket = true;\r\n                ;\r\n                this._values[a] = bucket_;\r\n            }\r\n        }\r\n        else {\r\n            this._values[a] = item_;\r\n        }\r\n        this.n++;\r\n        return true;\r\n    };\r\n    HashSet$1.prototype.clear = function () {\r\n        this.n = 0;\r\n        this._values = ({});\r\n    };\r\n    HashSet$1.prototype.contains = function (item_) {\r\n        if (this.c) {\r\n            return (!!this._values[item_]);\r\n        }\r\n        var a = this.k.getHashCodeC(item_);\r\n        var current_ = this._values[a];\r\n        if ((current_ !== undefined)) {\r\n            if ((current_.$isHashSetBucket)) {\r\n                var b = (current_);\r\n                for (var d = 0; d < b.length; d++) {\r\n                    var c = b[d];\r\n                    if (this.k.equalsC(c, item_)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (this.k.equalsC(current_, item_)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    HashSet$1.prototype.copyTo1 = function (a) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.copyTo = function (a, b) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.copyTo2 = function (a, b, c) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.m = function ($t) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.r = function (a) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.getEnumerator = function () {\r\n        if (this.c) {\r\n            var a = (Base.getArrayOfProperties(this._values));\r\n            return getEnumeratorObject(a);\r\n        }\r\n        var result_ = new Array(0);\r\n        var b = (Base.getArrayOfValues(this._values));\r\n        for (var c = 0; c < b.length; c++) {\r\n            var item_ = b[c];\r\n            if ((item_.$isHashSetBucket)) {\r\n                var d = (item_);\r\n                for (var e = 0; e < d.length; e++) {\r\n                    var subItem_ = d[e];\r\n                    result_.push(subItem_);\r\n                }\r\n            }\r\n            else {\r\n                result_.push(item_);\r\n            }\r\n        }\r\n        return getEnumeratorObject(result_);\r\n    };\r\n    HashSet$1.prototype.s = function (a) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.e = function (a) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.f = function (a) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.g = function (a) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.h = function (a) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.t = function (a) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.i = function (a) {\r\n        var e_3, _a;\r\n        if (this.count > 0) {\r\n            try {\r\n                for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var b = _c.value;\r\n                    if (this.contains(b)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            catch (e_3_1) {\r\n                e_3 = { error: e_3_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return))\r\n                        _a.call(_b);\r\n                }\r\n                finally {\r\n                    if (e_3)\r\n                        throw e_3.error;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    HashSet$1.prototype.remove = function (item_) {\r\n        if (this.c) {\r\n            if ((this._values[item_])) {\r\n                return false;\r\n            }\r\n            delete this._values[item_];\r\n            this.n--;\r\n            return true;\r\n        }\r\n        var hashCode_ = this.k.getHashCodeC(item_);\r\n        var current_ = this._values[hashCode_];\r\n        if ((current_)) {\r\n            if ((current_.$isHashSetBucket)) {\r\n                var a = (current_);\r\n                for (var b = 0; b < a.length; b++) {\r\n                    var currentItem_ = a[b];\r\n                    if (this.k.equalsC(currentItem_, item_)) {\r\n                        arrayRemoveItem(current_, currentItem_);\r\n                        if ((current_.length) == 1) {\r\n                            this._values[hashCode_] = (current_[0]);\r\n                        }\r\n                        this.n--;\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (this.k.equalsC(current_, item_)) {\r\n                    delete this._values[hashCode_];\r\n                    this.n--;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    HashSet$1.prototype.j = function (a) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.u = function (a) {\r\n        throw new NotImplementedException(0);\r\n    };\r\n    HashSet$1.prototype.v = function () {\r\n    };\r\n    HashSet$1.prototype.w = function (a) {\r\n        var e_4, _a;\r\n        try {\r\n            for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var b = _c.value;\r\n                this.add_1(b);\r\n            }\r\n        }\r\n        catch (e_4_1) {\r\n            e_4 = { error: e_4_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return))\r\n                    _a.call(_b);\r\n            }\r\n            finally {\r\n                if (e_4)\r\n                    throw e_4.error;\r\n            }\r\n        }\r\n    };\r\n    HashSet$1.$t = markType(HashSet$1, 'HashSet$1', Base.$, [ICollection$1_$type.specialize(0), IEnumerable$1_$type.specialize(0), IEnumerable_$type]);\r\n    return HashSet$1;\r\n}(Base));\r\nexport { HashSet$1 };\r\n//# sourceMappingURL=HashSet$1.js.map\r\n"]},"metadata":{},"sourceType":"module"}