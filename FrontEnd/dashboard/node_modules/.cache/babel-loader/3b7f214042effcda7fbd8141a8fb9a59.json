{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar Thickness =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(Thickness, _super);\n\n  function Thickness(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.b = 0;\n    _this.c = 0;\n    _this.d = 0;\n    _this.e = 0;\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        {\n          var c = _rest[0];\n          _this.b = _this.c = _this.d = _this.e = c;\n        }\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          var d = _rest[1];\n          var e = _rest[2];\n          var f = _rest[3];\n          _this.c = c;\n          _this.e = d;\n          _this.d = e;\n          _this.b = f;\n        }\n        break;\n\n      case 2:\n        {\n          _this.b = NaN;\n          _this.c = NaN;\n          _this.d = NaN;\n          _this.e = NaN;\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  Thickness.prototype.a = function (a) {\n    return this.b == a.b && this.e == a.e && this.c == a.c && this.d == a.d;\n  };\n\n  Thickness.prototype.toString = function () {\n    var a = this.c.toString() + \",\" + this.e.toString() + \",\" + this.d.toString() + \",\" + this.b.toString();\n    return a;\n  };\n\n  Thickness.$t = markType(Thickness, 'Thickness');\n  return Thickness;\n}(Base);\n\nexport { Thickness };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/Thickness.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,SAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,OAAA,CAAA,SAAA,CAAA,SAAA,EAAA,MAAA;;AAM9B,WAAA,SAAA,CAAY,CAAZ,EAAqB;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAe;AAAf,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAvB,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAoCA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AACA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AACA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AACA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AArCC,IAAA,CAAC,GAAI,CAAC,IAAI,KAAK,CAAX,GAAgB,CAAhB,GAAoB,CAAxB;;AACA,YAAQ,CAAR;AACC,WAAK,CAAL;AACA;AACC,cAAI,CAAC,GAAmB,KAAK,CAAC,CAAD,CAA7B;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,KAAI,CAAC,CAAL,GAAS,KAAI,CAAC,CAAL,GAAS,KAAI,CAAC,CAAL,GAAS,CAApC;AACA;AACD;;AAEA,WAAK,CAAL;AACA;AACC,cAAI,CAAC,GAAmB,KAAK,CAAC,CAAD,CAA7B;AACA,cAAI,CAAC,GAAmB,KAAK,CAAC,CAAD,CAA7B;AACA,cAAI,CAAC,GAAmB,KAAK,CAAC,CAAD,CAA7B;AACA,cAAI,CAAC,GAAmB,KAAK,CAAC,CAAD,CAA7B;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,CAAT;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,CAAT;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,CAAT;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,CAAT;AACA;AACD;;AAEA,WAAK,CAAL;AACA;AACC,UAAA,KAAI,CAAC,CAAL,GAAS,GAAT;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,GAAT;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,GAAT;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,GAAT;AACA;AACD;AA5BD;;;AAgCA;;AAKD,EAAA,SAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAc;AACb,WAAO,KAAK,CAAL,IAAU,CAAC,CAAC,CAAZ,IAAiB,KAAK,CAAL,IAAU,CAAC,CAAC,CAA7B,IAAkC,KAAK,CAAL,IAAU,CAAC,CAAC,CAA9C,IAAmD,KAAK,CAAL,IAAU,CAAC,CAAC,CAAtE;AACA,GAFD;;AAGA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACC,QAAI,CAAC,GAAG,KAAK,CAAL,CAAO,QAAP,KAAoB,GAApB,GAA0B,KAAK,CAAL,CAAO,QAAP,EAA1B,GAA8C,GAA9C,GAAoD,KAAK,CAAL,CAAO,QAAP,EAApD,GAAwE,GAAxE,GAA8E,KAAK,CAAL,CAAO,QAAP,EAAtF;AACA,WAAO,CAAP;AACA,GAHD;;AAhDO,EAAA,SAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,SAAD,EAAY,WAAZ,CAAnB;AAoDR,SAAA,SAAA;AAAC,CArDD,CAA+B,IAA/B,CAAA;;SAAa,S","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\nvar Thickness = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Thickness, _super);\n    function Thickness(a) {\n        var _rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _rest[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this.b = 0;\n        _this.c = 0;\n        _this.d = 0;\n        _this.e = 0;\n        a = (a == void 0) ? 0 : a;\n        switch (a) {\n            case 0:\n                {\n                    var c = _rest[0];\n                    _this.b = _this.c = _this.d = _this.e = c;\n                }\n                break;\n            case 1:\n                {\n                    var c = _rest[0];\n                    var d = _rest[1];\n                    var e = _rest[2];\n                    var f = _rest[3];\n                    _this.c = c;\n                    _this.e = d;\n                    _this.d = e;\n                    _this.b = f;\n                }\n                break;\n            case 2:\n                {\n                    _this.b = NaN;\n                    _this.c = NaN;\n                    _this.d = NaN;\n                    _this.e = NaN;\n                }\n                break;\n        }\n        return _this;\n    }\n    Thickness.prototype.a = function (a) {\n        return this.b == a.b && this.e == a.e && this.c == a.c && this.d == a.d;\n    };\n    Thickness.prototype.toString = function () {\n        var a = this.c.toString() + \",\" + this.e.toString() + \",\" + this.d.toString() + \",\" + this.b.toString();\n        return a;\n    };\n    Thickness.$t = markType(Thickness, 'Thickness');\n    return Thickness;\n}(Base));\nexport { Thickness };\n//# sourceMappingURL=Thickness.js.map\n"]},"metadata":{},"sourceType":"module"}