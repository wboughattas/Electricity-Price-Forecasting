{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TriangulationStatusEventArgsDescriptionMetadata } from \"./TriangulationStatusEventArgsDescriptionMetadata\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\n/**\r\n * @hidden\r\n */\n\nvar ScatterTriangulationSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ScatterTriangulationSeriesDescriptionMetadata, _super);\n\n  function ScatterTriangulationSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ScatterTriangulationSeriesDescriptionMetadata.b = function (a) {\n    if (ScatterTriangulationSeriesDescriptionMetadata.a == null) {\n      ScatterTriangulationSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ScatterTriangulationSeriesDescriptionMetadata.c(a, ScatterTriangulationSeriesDescriptionMetadata.a);\n      TriangulationStatusEventArgsDescriptionMetadata.d(a);\n    }\n  };\n\n  ScatterTriangulationSeriesDescriptionMetadata.c = function (a, b) {\n    SeriesDescriptionMetadata.c(a, b);\n    b.item(\"XMemberPath\", \"String\");\n    b.item(\"YMemberPath\", \"String\");\n    b.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\n    b.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\n    b.item(\"TrianglesSourceRef\", \"(w:TrianglesSource,wf:TrianglesSource)DataRef::object\");\n    b.item(\"TriangleVertexMemberPath1\", \"String\");\n    b.item(\"TriangleVertexMemberPath2\", \"String\");\n    b.item(\"TriangleVertexMemberPath3\", \"String\");\n    b.item(\"TriangulationStatusChangedRef\", \"EventRef::triangulationStatusChanged\");\n  };\n\n  ScatterTriangulationSeriesDescriptionMetadata.d = function (a) {\n    ScatterTriangulationSeriesDescriptionMetadata.b(a);\n    a.m(\"ScatterTriangulationSeries\", ScatterTriangulationSeriesDescriptionMetadata.a);\n  };\n\n  ScatterTriangulationSeriesDescriptionMetadata.$t = markType(ScatterTriangulationSeriesDescriptionMetadata, 'ScatterTriangulationSeriesDescriptionMetadata');\n  ScatterTriangulationSeriesDescriptionMetadata.a = null;\n  return ScatterTriangulationSeriesDescriptionMetadata;\n}(Base);\n\nexport { ScatterTriangulationSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ScatterTriangulationSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,+CAAT,QAAgE,mDAAhE;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AAEA;;AAEG;;AACH,IAAA,6CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmE,EAAA,OAAA,CAAA,SAAA,CAAA,6CAAA,EAAA,MAAA;;AAAnE,WAAA,6CAAA,GAAA;;AA0BC;;AAvBe,EAAA,6CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,6CAA6C,CAAC,CAA9C,IAAmD,IAAvD,EAA6D;AAC5D,MAAA,6CAA6C,CAAC,CAA9C,GAAkD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAlD;AACA,MAAA,6CAA6C,CAAC,CAA9C,CAAgD,CAAhD,EAAmD,6CAA6C,CAAC,CAAjG;AACA,MAAA,+CAA+C,CAAC,CAAhD,CAAkD,CAAlD;AACA;AACD,GANc;;AAOR,EAAA,6CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,yBAAyB,CAAC,CAA1B,CAA4B,CAA5B,EAA+B,CAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,QAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,QAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,mCAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,mCAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,uDAA7B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,2BAAP,EAAoC,QAApC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,2BAAP,EAAoC,QAApC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,2BAAP,EAAoC,QAApC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,+BAAP,EAAwC,sCAAxC;AACA,GAXM;;AAYA,EAAA,6CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,6CAA6C,CAAC,CAA9C,CAAgD,CAAhD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,4BAAJ,EAAkC,6CAA6C,CAAC,CAAhF;AACA,GAHM;;AArBA,EAAA,6CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,6CAAD,EAAgD,+CAAhD,CAAnB;AACQ,EAAA,6CAAA,CAAA,CAAA,GAAkC,IAAlC;AAwBhB,SAAA,6CAAA;AAAC,CA1BD,CAAmE,IAAnE,CAAA;;SAAa,6C","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { TriangulationStatusEventArgsDescriptionMetadata } from \"./TriangulationStatusEventArgsDescriptionMetadata\";\r\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\r\n/**\r\n * @hidden\r\n */\r\nvar ScatterTriangulationSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(ScatterTriangulationSeriesDescriptionMetadata, _super);\r\n    function ScatterTriangulationSeriesDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ScatterTriangulationSeriesDescriptionMetadata.b = function (a) {\r\n        if (ScatterTriangulationSeriesDescriptionMetadata.a == null) {\r\n            ScatterTriangulationSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            ScatterTriangulationSeriesDescriptionMetadata.c(a, ScatterTriangulationSeriesDescriptionMetadata.a);\r\n            TriangulationStatusEventArgsDescriptionMetadata.d(a);\r\n        }\r\n    };\r\n    ScatterTriangulationSeriesDescriptionMetadata.c = function (a, b) {\r\n        SeriesDescriptionMetadata.c(a, b);\r\n        b.item(\"XMemberPath\", \"String\");\r\n        b.item(\"YMemberPath\", \"String\");\r\n        b.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\r\n        b.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\r\n        b.item(\"TrianglesSourceRef\", \"(w:TrianglesSource,wf:TrianglesSource)DataRef::object\");\r\n        b.item(\"TriangleVertexMemberPath1\", \"String\");\r\n        b.item(\"TriangleVertexMemberPath2\", \"String\");\r\n        b.item(\"TriangleVertexMemberPath3\", \"String\");\r\n        b.item(\"TriangulationStatusChangedRef\", \"EventRef::triangulationStatusChanged\");\r\n    };\r\n    ScatterTriangulationSeriesDescriptionMetadata.d = function (a) {\r\n        ScatterTriangulationSeriesDescriptionMetadata.b(a);\r\n        a.m(\"ScatterTriangulationSeries\", ScatterTriangulationSeriesDescriptionMetadata.a);\r\n    };\r\n    ScatterTriangulationSeriesDescriptionMetadata.$t = markType(ScatterTriangulationSeriesDescriptionMetadata, 'ScatterTriangulationSeriesDescriptionMetadata');\r\n    ScatterTriangulationSeriesDescriptionMetadata.a = null;\r\n    return ScatterTriangulationSeriesDescriptionMetadata;\r\n}(Base));\r\nexport { ScatterTriangulationSeriesDescriptionMetadata };\r\n//# sourceMappingURL=ScatterTriangulationSeriesDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}