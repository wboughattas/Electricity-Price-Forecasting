{"ast":null,"code":"import * as tslib_1 from \"tslib\";\n/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\n\nimport * as React from 'react';\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { brushToString, stringToBrush, isValidProp, getModifiedProps, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-react-core\";\nimport { XamRadialGaugeRange } from \"./XamRadialGaugeRange\";\n\nvar IgrRadialGaugeRange =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrRadialGaugeRange, _super);\n\n  function IgrRadialGaugeRange(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._renderer = null;\n    _this.__p = null;\n    _this._hasUserValues = new Set();\n    _this._stylingContainer = null;\n    _this._stylingParent = null;\n    _this._inStyling = false;\n\n    if (_this._styling) {\n      NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n    }\n\n    _this._implementation = _this.createImplementation();\n    _this._implementation.externalObject = _this;\n\n    _this.onImplementationCreated();\n\n    return _this;\n  }\n\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRadialGaugeRange.prototype.onImplementationCreated = function () {};\n\n  IgrRadialGaugeRange.prototype.componentDidMount = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          {\n            this[p] = this.props[p];\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  IgrRadialGaugeRange.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var e_2, _a;\n\n    var mod = getModifiedProps(this.props, nextProps);\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = mod[p];\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return true;\n  };\n\n  IgrRadialGaugeRange.prototype.render = function () {\n    return null;\n  };\n\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"rangeInternal\", {\n    get: function () {\n      return this.i;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRadialGaugeRange.prototype.createImplementation = function () {\n    return new XamRadialGaugeRange();\n  };\n\n  IgrRadialGaugeRange.prototype._provideRenderer = function (renderer) {\n    this._renderer = renderer;\n  };\n\n  IgrRadialGaugeRange._createFromInternal = function (internal) {\n    if (!internal) {\n      return null;\n    }\n\n    if (!internal.$type) {\n      return null;\n    }\n\n    var name = internal.$type.name;\n    var externalName = \"Igr\" + name;\n\n    if (!TypeRegistrar.isRegistered(externalName)) {\n      return null;\n    }\n\n    return TypeRegistrar.create(externalName);\n  };\n\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"name\", {\n    /**\r\n    * Gets or sets the name of the range.\r\n    */\n    get: function () {\n      return this.i.v;\n    },\n    set: function (v) {\n      this.i.v = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"brush\", {\n    /**\r\n     * Gets or sets the brush to use to fill the range.\r\n    */\n    get: function () {\n      return brushToString(this.i.ao);\n    },\n    set: function (v) {\n      this.i.ao = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"outline\", {\n    /**\r\n     * Gets or sets the outline to use when rendering the range.\r\n    */\n    get: function () {\n      return brushToString(this.i.ap);\n    },\n    set: function (v) {\n      this.i.ap = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"startValue\", {\n    /**\r\n     * Gets or sets the value at which the range starts along the scale.\r\n    */\n    get: function () {\n      return this.i.o;\n    },\n    set: function (v) {\n      this.i.o = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"endValue\", {\n    /**\r\n     * Gets or sets the value at which the range ends along the scale.\r\n    */\n    get: function () {\n      return this.i.j;\n    },\n    set: function (v) {\n      this.i.j = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"innerStartExtent\", {\n    /**\r\n     * Gets or sets the distance from the center of the gauge (from 0 to 1) at which to start rendering the inner sweep of the range.\r\n     * Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge.\r\n    */\n    get: function () {\n      return this.i.l;\n    },\n    set: function (v) {\n      this.i.l = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"innerEndExtent\", {\n    /**\r\n     * Gets or sets the distance from the center of the gauge (from 0 to 1) at which to end rendering the inner sweep of the range.\r\n     * Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge.\r\n    */\n    get: function () {\n      return this.i.k;\n    },\n    set: function (v) {\n      this.i.k = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"outerStartExtent\", {\n    /**\r\n     * Gets or sets the distance from the center of the gauge (from 0 to 1) at which to start rendering the outer sweep of the range.\r\n     * Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge.\r\n    */\n    get: function () {\n      return this.i.n;\n    },\n    set: function (v) {\n      this.i.n = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"outerEndExtent\", {\n    /**\r\n     * Gets or sets the distance from the center of the gauge (from 0 to 1) at which to end rendering the outer sweep of the range.\r\n     * Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge.\r\n    */\n    get: function () {\n      return this.i.m;\n    },\n    set: function (v) {\n      this.i.m = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"strokeThickness\", {\n    /**\r\n     * Gets or sets the stroke thickness to use when rendering this range's outline.\r\n    */\n    get: function () {\n      return this.i.p;\n    },\n    set: function (v) {\n      this.i.p = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRadialGaugeRange.prototype.findByName = function (name) {\n    return null;\n  };\n\n  Object.defineProperty(IgrRadialGaugeRange.prototype, \"hasUserValues\", {\n    get: function () {\n      return this._hasUserValues;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRadialGaugeRange.prototype.__m = function (propertyName) {\n    if (!this._inStyling) {\n      this._hasUserValues.add(propertyName);\n    }\n  };\n\n  IgrRadialGaugeRange.prototype._styling = function (container, component, parent) {\n    if (this._inStyling) {\n      return;\n    }\n\n    this._inStyling = true;\n    this._stylingContainer = container;\n    this._stylingParent = component;\n    var genericPrefix = \"\";\n    var typeName = this.i.$type.name;\n\n    if (typeName.indexOf(\"Xam\") === 0) {\n      typeName = typeName.substring(3);\n    }\n\n    genericPrefix = toSpinal(\"RadialGaugeRange\");\n    var additionalPrefixes = [];\n    var prefix = toSpinal(typeName);\n    additionalPrefixes.push(prefix + \"-\");\n    var b = this.i.$type.baseType;\n\n    while (b && b.name != \"Object\" && b.name != \"Base\" && b.name != \"Control\" && b.Name != \"DependencyObject\" && b.Name != \"FrameworkElement\") {\n      typeName = b.name;\n\n      if (typeName.indexOf(\"Xam\") === 0) {\n        typeName = typeName.substring(3);\n      }\n\n      var basePrefix = toSpinal(typeName);\n      additionalPrefixes.push(basePrefix + \"-\");\n      b = b.baseType;\n    }\n\n    if (parent) {\n      var parentTypeName = parent.i.$type.name;\n\n      if (parentTypeName.indexOf(\"Xam\") === 0) {\n        parentTypeName = parentTypeName.substring(3);\n      }\n\n      var parentPrefix = toSpinal(parentTypeName);\n      additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n      additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n    }\n\n    initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n\n    if (this._otherStyling) {\n      this._otherStyling(container, component, parent);\n    }\n\n    this._inStyling = false;\n  };\n\n  return IgrRadialGaugeRange;\n}(React.Component);\n\nexport { IgrRadialGaugeRange };","map":{"version":3,"sources":["../../../../src/igniteui-gauges/lib/igr-radial-gauge-range.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\r\n/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as React from 'react';\r\nimport { TypeRegistrar } from \"igniteui-react-core\";\r\nimport { brushToString, stringToBrush, isValidProp, getModifiedProps, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-react-core\";\r\nimport { XamRadialGaugeRange } from \"./XamRadialGaugeRange\";\r\nvar IgrRadialGaugeRange = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(IgrRadialGaugeRange, _super);\r\n    function IgrRadialGaugeRange(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._renderer = null;\r\n        _this.__p = null;\r\n        _this._hasUserValues = new Set();\r\n        _this._stylingContainer = null;\r\n        _this._stylingParent = null;\r\n        _this._inStyling = false;\r\n        if (_this._styling) {\r\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\r\n        }\r\n        _this._implementation = _this.createImplementation();\r\n        _this._implementation.externalObject = _this;\r\n        _this.onImplementationCreated();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"i\", {\r\n        get: function () {\r\n            return this._implementation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IgrRadialGaugeRange.prototype.onImplementationCreated = function () {\r\n    };\r\n    IgrRadialGaugeRange.prototype.componentDidMount = function () {\r\n        var e_1, _a;\r\n        try {\r\n            for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var p = _c.value;\r\n                if (isValidProp(this, p)) {\r\n                    {\r\n                        this[p] = this.props[p];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) {\r\n            e_1 = { error: e_1_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return))\r\n                    _a.call(_b);\r\n            }\r\n            finally {\r\n                if (e_1)\r\n                    throw e_1.error;\r\n            }\r\n        }\r\n    };\r\n    IgrRadialGaugeRange.prototype.shouldComponentUpdate = function (nextProps, nextState) {\r\n        var e_2, _a;\r\n        var mod = getModifiedProps(this.props, nextProps);\r\n        try {\r\n            for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var p = _c.value;\r\n                if (isValidProp(this, p)) {\r\n                    this[p] = mod[p];\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) {\r\n            e_2 = { error: e_2_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return))\r\n                    _a.call(_b);\r\n            }\r\n            finally {\r\n                if (e_2)\r\n                    throw e_2.error;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    IgrRadialGaugeRange.prototype.render = function () {\r\n        return null;\r\n    };\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"rangeInternal\", {\r\n        get: function () {\r\n            return this.i;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IgrRadialGaugeRange.prototype.createImplementation = function () {\r\n        return new XamRadialGaugeRange();\r\n    };\r\n    IgrRadialGaugeRange.prototype._provideRenderer = function (renderer) {\r\n        this._renderer = renderer;\r\n    };\r\n    IgrRadialGaugeRange._createFromInternal = function (internal) {\r\n        if (!internal) {\r\n            return null;\r\n        }\r\n        if (!internal.$type) {\r\n            return null;\r\n        }\r\n        var name = internal.$type.name;\r\n        var externalName = \"Igr\" + name;\r\n        if (!TypeRegistrar.isRegistered(externalName)) {\r\n            return null;\r\n        }\r\n        return TypeRegistrar.create(externalName);\r\n    };\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"name\", {\r\n        /**\r\n     * Gets or sets the name of the range.\r\n    */\r\n        get: function () {\r\n            return this.i.v;\r\n        },\r\n        set: function (v) {\r\n            this.i.v = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"brush\", {\r\n        /**\r\n         * Gets or sets the brush to use to fill the range.\r\n        */\r\n        get: function () {\r\n            return brushToString(this.i.ao);\r\n        },\r\n        set: function (v) {\r\n            this.i.ao = stringToBrush(v);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"outline\", {\r\n        /**\r\n         * Gets or sets the outline to use when rendering the range.\r\n        */\r\n        get: function () {\r\n            return brushToString(this.i.ap);\r\n        },\r\n        set: function (v) {\r\n            this.i.ap = stringToBrush(v);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"startValue\", {\r\n        /**\r\n         * Gets or sets the value at which the range starts along the scale.\r\n        */\r\n        get: function () {\r\n            return this.i.o;\r\n        },\r\n        set: function (v) {\r\n            this.i.o = +v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"endValue\", {\r\n        /**\r\n         * Gets or sets the value at which the range ends along the scale.\r\n        */\r\n        get: function () {\r\n            return this.i.j;\r\n        },\r\n        set: function (v) {\r\n            this.i.j = +v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"innerStartExtent\", {\r\n        /**\r\n         * Gets or sets the distance from the center of the gauge (from 0 to 1) at which to start rendering the inner sweep of the range.\r\n         * Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge.\r\n        */\r\n        get: function () {\r\n            return this.i.l;\r\n        },\r\n        set: function (v) {\r\n            this.i.l = +v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"innerEndExtent\", {\r\n        /**\r\n         * Gets or sets the distance from the center of the gauge (from 0 to 1) at which to end rendering the inner sweep of the range.\r\n         * Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge.\r\n        */\r\n        get: function () {\r\n            return this.i.k;\r\n        },\r\n        set: function (v) {\r\n            this.i.k = +v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"outerStartExtent\", {\r\n        /**\r\n         * Gets or sets the distance from the center of the gauge (from 0 to 1) at which to start rendering the outer sweep of the range.\r\n         * Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge.\r\n        */\r\n        get: function () {\r\n            return this.i.n;\r\n        },\r\n        set: function (v) {\r\n            this.i.n = +v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"outerEndExtent\", {\r\n        /**\r\n         * Gets or sets the distance from the center of the gauge (from 0 to 1) at which to end rendering the outer sweep of the range.\r\n         * Values further from zero than 1 can be used to make this extend further than the normal radius of the gauge.\r\n        */\r\n        get: function () {\r\n            return this.i.m;\r\n        },\r\n        set: function (v) {\r\n            this.i.m = +v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"strokeThickness\", {\r\n        /**\r\n         * Gets or sets the stroke thickness to use when rendering this range's outline.\r\n        */\r\n        get: function () {\r\n            return this.i.p;\r\n        },\r\n        set: function (v) {\r\n            this.i.p = +v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IgrRadialGaugeRange.prototype.findByName = function (name) {\r\n        return null;\r\n    };\r\n    Object.defineProperty(IgrRadialGaugeRange.prototype, \"hasUserValues\", {\r\n        get: function () {\r\n            return this._hasUserValues;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IgrRadialGaugeRange.prototype.__m = function (propertyName) {\r\n        if (!this._inStyling) {\r\n            this._hasUserValues.add(propertyName);\r\n        }\r\n    };\r\n    IgrRadialGaugeRange.prototype._styling = function (container, component, parent) {\r\n        if (this._inStyling) {\r\n            return;\r\n        }\r\n        this._inStyling = true;\r\n        this._stylingContainer = container;\r\n        this._stylingParent = component;\r\n        var genericPrefix = \"\";\r\n        var typeName = this.i.$type.name;\r\n        if (typeName.indexOf(\"Xam\") === 0) {\r\n            typeName = typeName.substring(3);\r\n        }\r\n        genericPrefix = toSpinal(\"RadialGaugeRange\");\r\n        var additionalPrefixes = [];\r\n        var prefix = toSpinal(typeName);\r\n        additionalPrefixes.push(prefix + \"-\");\r\n        var b = this.i.$type.baseType;\r\n        while (b && b.name != \"Object\" &&\r\n            b.name != \"Base\" &&\r\n            b.name != \"Control\" &&\r\n            b.Name != \"DependencyObject\" &&\r\n            b.Name != \"FrameworkElement\") {\r\n            typeName = b.name;\r\n            if (typeName.indexOf(\"Xam\") === 0) {\r\n                typeName = typeName.substring(3);\r\n            }\r\n            var basePrefix = toSpinal(typeName);\r\n            additionalPrefixes.push(basePrefix + \"-\");\r\n            b = b.baseType;\r\n        }\r\n        if (parent) {\r\n            var parentTypeName = parent.i.$type.name;\r\n            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n                parentTypeName = parentTypeName.substring(3);\r\n            }\r\n            var parentPrefix = toSpinal(parentTypeName);\r\n            additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n            additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n        }\r\n        initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n        if (this._otherStyling) {\r\n            this._otherStyling(container, component, parent);\r\n        }\r\n        this._inStyling = false;\r\n    };\r\n    return IgrRadialGaugeRange;\r\n}(React.Component));\r\nexport { IgrRadialGaugeRange };\r\n//# sourceMappingURL=igr-radial-gauge-range.js.map\r\n"]},"metadata":{},"sourceType":"module"}