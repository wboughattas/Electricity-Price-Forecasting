{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Number_$type, markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\nimport { Stack$1 } from \"./Stack$1\";\nimport { SpiralTodo } from \"./SpiralTodo\";\nimport { isNaN_ } from \"./number\";\n/**\n * @hidden\n */\n\nvar SpiralFlattener =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SpiralFlattener, _super);\n\n  function SpiralFlattener() {\n    return _super.call(this) || this;\n  }\n\n  SpiralFlattener.a = function (a, b, c, d, e) {\n    if (isNaN_(e) || e <= 0) {\n      e = 1;\n    }\n\n    var f = new List$1(Number_$type, 0);\n    var g = new Stack$1(SpiralTodo.$);\n    var h = (d - b) / (c - a);\n    var i = b - h * a;\n    var j = h * h;\n    var k = i * i;\n    var l = i * h;\n    g.h(function () {\n      var $ret = new SpiralTodo();\n      $ret.a = 0;\n      $ret.b = 1;\n      return $ret;\n    }());\n\n    var _loop_1 = function () {\n      var m = g.e();\n      var n = b + m.a * (d - b);\n      var o = a + m.a * (c - a);\n      var p = o * o;\n      var q = p * o;\n      var r = b + m.b * (d - b);\n      var s = a + m.b * (c - a);\n      var t = s * s;\n      var u = t * s;\n      var v = void 0;\n\n      if (h == 0) {\n        v = k * (s - o) / 2 + l * (t - p) / 2 + j * (u - q) / 6;\n      } else {\n        v = (Math.pow(i + h * s, 3) - Math.pow(i + h * o, 3)) / (6 * h);\n      }\n\n      var w = 0.5 * n * r * Math.sin(s - o);\n\n      if (v - w > e) {\n        var x_1 = 0.5 * (m.a + m.b);\n        g.h(function () {\n          var $ret = new SpiralTodo();\n          $ret.a = x_1;\n          $ret.b = m.b;\n          return $ret;\n        }());\n        g.h(function () {\n          var $ret = new SpiralTodo();\n          $ret.a = m.a;\n          $ret.b = x_1;\n          return $ret;\n        }());\n      } else {\n        f.add(m.a);\n      }\n    };\n\n    while (g.f != 0) {\n      _loop_1();\n    }\n\n    f.add(1);\n    return f;\n  };\n\n  SpiralFlattener.$t = markType(SpiralFlattener, 'SpiralFlattener');\n  return SpiralFlattener;\n}(Base);\n\nexport { SpiralFlattener };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/SpiralFlattener.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AACA,SAAS,MAAT,QAAuB,UAAvB;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,UAAT,QAA2B,cAA3B;AACA,SAAS,MAAT,QAAuB,UAAvB;AAEA;;AAEG;;AACH,IAAA,eAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,OAAA,CAAA,SAAA,CAAA,eAAA,EAAA,MAAA;;AAEpC,WAAA,eAAA,GAAA;WACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,I;AACP;;AACM,EAAA,eAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoB,CAApB,EAA+B,CAA/B,EAA0C,CAA1C,EAAqD,CAArD,EAA8D;AAC7D,QAAI,MAAM,CAAC,CAAD,CAAN,IAAa,CAAC,IAAI,CAAtB,EAAyB;AACxB,MAAA,CAAC,GAAG,CAAJ;AACA;;AACD,QAAI,CAAC,GAAmB,IAAI,MAAJ,CAAmB,YAAnB,EAAiC,CAAjC,CAAxB;AACA,QAAI,CAAC,GAAwB,IAAI,OAAJ,CAA8B,UAAW,CAAC,CAA1C,CAA7B;AACA,QAAI,CAAC,GAAW,CAAC,CAAC,GAAG,CAAL,KAAW,CAAC,GAAG,CAAf,CAAhB;AACA,QAAI,CAAC,GAAW,CAAC,GAAG,CAAC,GAAG,CAAxB;AACA,QAAI,CAAC,GAAW,CAAC,GAAG,CAApB;AACA,QAAI,CAAC,GAAW,CAAC,GAAG,CAApB;AACA,QAAI,CAAC,GAAW,CAAC,GAAG,CAApB;AACA,IAAA,CAAC,CAAC,CAAF,CAAM,YAAA;AACL,UAAI,IAAI,GAAG,IAAI,UAAJ,EAAX;AACA,MAAA,IAAI,CAAC,CAAL,GAAS,CAAT;AACA,MAAA,IAAI,CAAC,CAAL,GAAS,CAAT;AACA,aAAO,IAAP;AACA,KALI,EAAL;;;AAOC,UAAI,CAAC,GAAe,CAAC,CAAC,CAAF,EAApB;AACA,UAAI,CAAC,GAAW,CAAC,GAAG,CAAC,CAAC,CAAF,IAAO,CAAC,GAAG,CAAX,CAApB;AACA,UAAI,CAAC,GAAW,CAAC,GAAG,CAAC,CAAC,CAAF,IAAO,CAAC,GAAG,CAAX,CAApB;AACA,UAAI,CAAC,GAAW,CAAC,GAAG,CAApB;AACA,UAAI,CAAC,GAAW,CAAC,GAAG,CAApB;AACA,UAAI,CAAC,GAAW,CAAC,GAAG,CAAC,CAAC,CAAF,IAAO,CAAC,GAAG,CAAX,CAApB;AACA,UAAI,CAAC,GAAW,CAAC,GAAG,CAAC,CAAC,CAAF,IAAO,CAAC,GAAG,CAAX,CAApB;AACA,UAAI,CAAC,GAAW,CAAC,GAAG,CAApB;AACA,UAAI,CAAC,GAAW,CAAC,GAAG,CAApB;AACA,UAAI,CAAC,GAAA,KAAA,CAAL;;AACA,UAAI,CAAC,IAAI,CAAT,EAAY;AACX,QAAA,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAR,CAAD,GAAc,CAAd,GAAkB,CAAC,IAAI,CAAC,GAAG,CAAR,CAAD,GAAc,CAAhC,GAAoC,CAAC,IAAI,CAAC,GAAG,CAAR,CAAD,GAAc,CAAtD;AACA,OAFD,MAEO;AACN,QAAA,CAAC,GAAG,CAAC,IAAI,CAAC,GAAL,CAAS,CAAC,GAAG,CAAC,GAAG,CAAjB,EAAoB,CAApB,IAAyB,IAAI,CAAC,GAAL,CAAS,CAAC,GAAG,CAAC,GAAG,CAAjB,EAAoB,CAApB,CAA1B,KAAqD,IAAI,CAAzD,CAAJ;AACA;;AACD,UAAI,CAAC,GAAW,MAAM,CAAN,GAAU,CAAV,GAAc,IAAI,CAAC,GAAL,CAAS,CAAC,GAAG,CAAb,CAA9B;;AACA,UAAI,CAAC,GAAG,CAAJ,GAAQ,CAAZ,EAAe;AACd,YAAI,GAAC,GAAW,OAAO,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAf,CAAhB;AACA,QAAA,CAAC,CAAC,CAAF,CAAM,YAAA;AACL,cAAI,IAAI,GAAG,IAAI,UAAJ,EAAX;AACA,UAAA,IAAI,CAAC,CAAL,GAAS,GAAT;AACA,UAAA,IAAI,CAAC,CAAL,GAAS,CAAC,CAAC,CAAX;AACA,iBAAO,IAAP;AACA,SALI,EAAL;AAMA,QAAA,CAAC,CAAC,CAAF,CAAM,YAAA;AACL,cAAI,IAAI,GAAG,IAAI,UAAJ,EAAX;AACA,UAAA,IAAI,CAAC,CAAL,GAAS,CAAC,CAAC,CAAX;AACA,UAAA,IAAI,CAAC,CAAL,GAAS,GAAT;AACA,iBAAO,IAAP;AACA,SALI,EAAL;AAMA,OAdD,MAcO;AACN,QAAA,CAAC,CAAC,GAAF,CAAM,CAAC,CAAC,CAAR;AACA;;;AAjCF,WAAO,CAAC,CAAC,CAAF,IAAO,CAAd,EAAe;;AAkCd;;AACD,IAAA,CAAC,CAAC,GAAF,CAAM,CAAN;AACA,WAAO,CAAP;AACA,GAtDM;;AAJA,EAAA,eAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,eAAD,EAAkB,iBAAlB,CAAnB;AA2DR,SAAA,eAAA;AAAC,CA5DD,CAAqC,IAArC,CAAA;;SAAa,e","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Number_$type, markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\nimport { Stack$1 } from \"./Stack$1\";\nimport { SpiralTodo } from \"./SpiralTodo\";\nimport { isNaN_ } from \"./number\";\n/**\n * @hidden\n */\nvar SpiralFlattener = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SpiralFlattener, _super);\n    function SpiralFlattener() {\n        return _super.call(this) || this;\n    }\n    SpiralFlattener.a = function (a, b, c, d, e) {\n        if (isNaN_(e) || e <= 0) {\n            e = 1;\n        }\n        var f = new List$1(Number_$type, 0);\n        var g = new Stack$1(SpiralTodo.$);\n        var h = (d - b) / (c - a);\n        var i = b - h * a;\n        var j = h * h;\n        var k = i * i;\n        var l = i * h;\n        g.h(((function () {\n            var $ret = new SpiralTodo();\n            $ret.a = 0;\n            $ret.b = 1;\n            return $ret;\n        })()));\n        var _loop_1 = function () {\n            var m = g.e();\n            var n = b + m.a * (d - b);\n            var o = a + m.a * (c - a);\n            var p = o * o;\n            var q = p * o;\n            var r = b + m.b * (d - b);\n            var s = a + m.b * (c - a);\n            var t = s * s;\n            var u = t * s;\n            var v = void 0;\n            if (h == 0) {\n                v = k * (s - o) / 2 + l * (t - p) / 2 + j * (u - q) / 6;\n            }\n            else {\n                v = (Math.pow(i + h * s, 3) - Math.pow(i + h * o, 3)) / (6 * h);\n            }\n            var w = 0.5 * n * r * Math.sin(s - o);\n            if (v - w > e) {\n                var x_1 = 0.5 * (m.a + m.b);\n                g.h(((function () {\n                    var $ret = new SpiralTodo();\n                    $ret.a = x_1;\n                    $ret.b = m.b;\n                    return $ret;\n                })()));\n                g.h(((function () {\n                    var $ret = new SpiralTodo();\n                    $ret.a = m.a;\n                    $ret.b = x_1;\n                    return $ret;\n                })()));\n            }\n            else {\n                f.add(m.a);\n            }\n        };\n        while (g.f != 0) {\n            _loop_1();\n        }\n        f.add(1);\n        return f;\n    };\n    SpiralFlattener.$t = markType(SpiralFlattener, 'SpiralFlattener');\n    return SpiralFlattener;\n}(Base));\nexport { SpiralFlattener };\n//# sourceMappingURL=SpiralFlattener.js.map\n"]},"metadata":{},"sourceType":"module"}