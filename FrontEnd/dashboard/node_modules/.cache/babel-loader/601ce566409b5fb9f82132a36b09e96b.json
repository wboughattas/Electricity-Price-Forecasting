{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar FlattenerSettings =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(FlattenerSettings, _super);\n\n  function FlattenerSettings() {\n    var _this = _super.call(this) || this;\n\n    _this._chunkingAmount = 0;\n    _this.chunkingAmount = 3000;\n    return _this;\n  }\n\n  Object.defineProperty(FlattenerSettings, \"instance\", {\n    get: function () {\n      if (FlattenerSettings.a == null) {\n        FlattenerSettings.a = new FlattenerSettings();\n      }\n\n      return FlattenerSettings.a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FlattenerSettings.prototype, \"chunkingAmount\", {\n    get: function () {\n      return this._chunkingAmount;\n    },\n    set: function (a) {\n      this._chunkingAmount = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  FlattenerSettings.$t = markType(FlattenerSettings, 'FlattenerSettings');\n  FlattenerSettings.a = null;\n  return FlattenerSettings;\n}(Base);\n\nexport { FlattenerSettings };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FlattenerSettings.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,iBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,OAAA,CAAA,SAAA,CAAA,iBAAA,EAAA,MAAA;;AAEtC,WAAA,iBAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAWQ,IAAA,KAAA,CAAA,eAAA,GAA0B,CAA1B;AATP,IAAA,KAAI,CAAC,cAAL,GAAsB,IAAtB;;AACA;;AAED,EAAA,MAAA,CAAA,cAAA,CAAW,iBAAX,EAAW,UAAX,EAAmB;SAAnB,YAAA;AACC,UAAI,iBAAiB,CAAC,CAAlB,IAAuB,IAA3B,EAAiC;AAChC,QAAA,iBAAiB,CAAC,CAAlB,GAAsB,IAAI,iBAAJ,EAAtB;AACA;;AACD,aAAO,iBAAiB,CAAC,CAAzB;AACA,KALkB;oBAAA;;AAAA,GAAnB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,gBAAJ,EAAkB;SAAlB,YAAA;AACC,aAAO,KAAK,eAAZ;AACA,KAFiB;SAGlB,UAAmB,CAAnB,EAA4B;AAC3B,WAAK,eAAL,GAAuB,CAAvB;AACA,KALiB;oBAAA;;AAAA,GAAlB;AAbO,EAAA,iBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,iBAAD,EAAoB,mBAApB,CAAnB;AAKQ,EAAA,iBAAA,CAAA,CAAA,GAAuB,IAAvB;AAchB,SAAA,iBAAA;AAAC,CApBD,CAAuC,IAAvC,CAAA;;SAAa,iB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\nvar FlattenerSettings = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FlattenerSettings, _super);\n    function FlattenerSettings() {\n        var _this = _super.call(this) || this;\n        _this._chunkingAmount = 0;\n        _this.chunkingAmount = 3000;\n        return _this;\n    }\n    Object.defineProperty(FlattenerSettings, \"instance\", {\n        get: function () {\n            if (FlattenerSettings.a == null) {\n                FlattenerSettings.a = new FlattenerSettings();\n            }\n            return FlattenerSettings.a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlattenerSettings.prototype, \"chunkingAmount\", {\n        get: function () {\n            return this._chunkingAmount;\n        },\n        set: function (a) {\n            this._chunkingAmount = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FlattenerSettings.$t = markType(FlattenerSettings, 'FlattenerSettings');\n    FlattenerSettings.a = null;\n    return FlattenerSettings;\n}(Base));\nexport { FlattenerSettings };\n//# sourceMappingURL=FlattenerSettings.js.map\n"]},"metadata":{},"sourceType":"module"}