{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { CategoryAxisBaseDescriptionMetadata } from \"./CategoryAxisBaseDescriptionMetadata\";\nimport { CategoryXAxisDescription } from \"./CategoryXAxisDescription\";\n/**\n * @hidden\n */\n\nvar CategoryXAxisDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(CategoryXAxisDescriptionMetadata, _super);\n\n  function CategoryXAxisDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CategoryXAxisDescriptionMetadata.b = function (a) {\n    if (CategoryXAxisDescriptionMetadata.a == null) {\n      CategoryXAxisDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      CategoryXAxisDescriptionMetadata.c(a, CategoryXAxisDescriptionMetadata.a);\n    }\n  };\n\n  CategoryXAxisDescriptionMetadata.c = function (a, b) {\n    CategoryAxisBaseDescriptionMetadata.c(a, b);\n    b.item(\"Interval\", \"Number:double\");\n    b.item(\"ActualInterval\", \"Number:double\");\n    b.item(\"MinorInterval\", \"Number:double\");\n    b.item(\"ActualMinorInterval\", \"Number:double\");\n    b.item(\"ActualIntervalChangeRef\", \"EventRef::actualIntervalChange\");\n    b.item(\"ActualMinorIntervalChangeRef\", \"EventRef::actualMinorIntervalChange\");\n  };\n\n  CategoryXAxisDescriptionMetadata.d = function (a) {\n    CategoryXAxisDescriptionMetadata.b(a);\n    a.n(\"CategoryXAxis\", function () {\n      return new CategoryXAxisDescription();\n    });\n    a.m(\"CategoryXAxis\", CategoryXAxisDescriptionMetadata.a);\n  };\n\n  CategoryXAxisDescriptionMetadata.$t = markType(CategoryXAxisDescriptionMetadata, 'CategoryXAxisDescriptionMetadata');\n  CategoryXAxisDescriptionMetadata.a = null;\n  return CategoryXAxisDescriptionMetadata;\n}(Base);\n\nexport { CategoryXAxisDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/CategoryXAxisDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mCAAT,QAAoD,uCAApD;AACA,SAAS,wBAAT,QAAyC,4BAAzC;AAEA;;AAEG;;AACH,IAAA,gCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,OAAA,CAAA,SAAA,CAAA,gCAAA,EAAA,MAAA;;AAAtD,WAAA,gCAAA,GAAA;;AAuBC;;AApBe,EAAA,gCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,gCAAgC,CAAC,CAAjC,IAAsC,IAA1C,EAAgD;AAC/C,MAAA,gCAAgC,CAAC,CAAjC,GAAqC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAArC;AACA,MAAA,gCAAgC,CAAC,CAAjC,CAAmC,CAAnC,EAAsC,gCAAgC,CAAC,CAAvE;AACA;AACD,GALc;;AAMR,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC,EAAyC,CAAzC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,eAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,eAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,eAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,qBAAP,EAA8B,eAA9B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,yBAAP,EAAkC,gCAAlC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,8BAAP,EAAuC,qCAAvC;AACA,GARM;;AASA,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,gCAAgC,CAAC,CAAjC,CAAmC,CAAnC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,YAAA;AAAM,aAAA,IAAA,wBAAA,EAAA;AAA8B,KAAzD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,gCAAgC,CAAC,CAAtD;AACA,GAJM;;AAjBA,EAAA,gCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,gCAAD,EAAmC,kCAAnC,CAAnB;AACQ,EAAA,gCAAA,CAAA,CAAA,GAAkC,IAAlC;AAqBhB,SAAA,gCAAA;AAAC,CAvBD,CAAsD,IAAtD,CAAA;;SAAa,gC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { CategoryAxisBaseDescriptionMetadata } from \"./CategoryAxisBaseDescriptionMetadata\";\nimport { CategoryXAxisDescription } from \"./CategoryXAxisDescription\";\n/**\n * @hidden\n */\nvar CategoryXAxisDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CategoryXAxisDescriptionMetadata, _super);\n    function CategoryXAxisDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CategoryXAxisDescriptionMetadata.b = function (a) {\n        if (CategoryXAxisDescriptionMetadata.a == null) {\n            CategoryXAxisDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            CategoryXAxisDescriptionMetadata.c(a, CategoryXAxisDescriptionMetadata.a);\n        }\n    };\n    CategoryXAxisDescriptionMetadata.c = function (a, b) {\n        CategoryAxisBaseDescriptionMetadata.c(a, b);\n        b.item(\"Interval\", \"Number:double\");\n        b.item(\"ActualInterval\", \"Number:double\");\n        b.item(\"MinorInterval\", \"Number:double\");\n        b.item(\"ActualMinorInterval\", \"Number:double\");\n        b.item(\"ActualIntervalChangeRef\", \"EventRef::actualIntervalChange\");\n        b.item(\"ActualMinorIntervalChangeRef\", \"EventRef::actualMinorIntervalChange\");\n    };\n    CategoryXAxisDescriptionMetadata.d = function (a) {\n        CategoryXAxisDescriptionMetadata.b(a);\n        a.n(\"CategoryXAxis\", function () { return new CategoryXAxisDescription(); });\n        a.m(\"CategoryXAxis\", CategoryXAxisDescriptionMetadata.a);\n    };\n    CategoryXAxisDescriptionMetadata.$t = markType(CategoryXAxisDescriptionMetadata, 'CategoryXAxisDescriptionMetadata');\n    CategoryXAxisDescriptionMetadata.a = null;\n    return CategoryXAxisDescriptionMetadata;\n}(Base));\nexport { CategoryXAxisDescriptionMetadata };\n//# sourceMappingURL=CategoryXAxisDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}