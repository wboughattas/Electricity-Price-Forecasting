{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { MapTileSource } from \"./MapTileSource\";\nimport { DependencyProperty } from \"./DependencyProperty\";\nimport { String_$type, Boolean_$type, Number_$type, typeGetValue, typeCast, markType } from \"./type\";\nimport { Uri } from \"./Uri\";\nimport { PropertyMetadata } from \"./PropertyMetadata\";\nimport { truncate } from \"./number\";\nimport { stringIsNullOrEmpty } from \"./string\";\nimport { stringFormat1 } from \"./stringExtended\";\n/**\n * @hidden\n */\n\nvar ArcGISOnlineTileSource =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ArcGISOnlineTileSource, _super);\n\n  function ArcGISOnlineTileSource() {\n    return _super.call(this, 2097152, 2097152, 256, 256, 0) || this;\n  }\n\n  Object.defineProperty(ArcGISOnlineTileSource.prototype, \"mapServerUri\", {\n    get: function () {\n      return this.c(ArcGISOnlineTileSource.mapServerUriProperty);\n    },\n    set: function (a) {\n      this.h(ArcGISOnlineTileSource.mapServerUriProperty, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArcGISOnlineTileSource.prototype, \"isMapPublic\", {\n    get: function () {\n      return this.c(ArcGISOnlineTileSource.isMapPublicProperty);\n    },\n    set: function (a) {\n      this.h(ArcGISOnlineTileSource.isMapPublicProperty, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArcGISOnlineTileSource.prototype, \"levelOfDetail\", {\n    get: function () {\n      return typeGetValue(this.c(ArcGISOnlineTileSource.levelOfDetailProperty));\n    },\n    set: function (a) {\n      this.h(ArcGISOnlineTileSource.levelOfDetailProperty, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArcGISOnlineTileSource.prototype, \"userToken\", {\n    get: function () {\n      return this.c(ArcGISOnlineTileSource.userTokenProperty);\n    },\n    set: function (a) {\n      this.h(ArcGISOnlineTileSource.userTokenProperty, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ArcGISOnlineTileSource.prototype.v = function (a, b, c, d) {\n    var e = this.mapServerUri + \"/tile/{0}/{1}/{2}\";\n    var f = \"\";\n\n    if (stringIsNullOrEmpty(this.mapServerUri) || this.levelOfDetail < 1 || !Uri.isWellFormedUriString(this.mapServerUri, 1)) {\n      return;\n    }\n\n    if (!this.isMapPublic) {\n      if (!stringIsNullOrEmpty(this.userToken)) {\n        e += \"?token={3}\";\n        f = this.userToken.trim();\n      } else {\n        return;\n      }\n    }\n\n    var g = a - 8;\n\n    if (g > 0) {\n      var h = stringFormat1(e, g, c, b, f);\n      d.add(new Uri(0, h));\n    }\n  };\n\n  ArcGISOnlineTileSource.ab = function (a, b) {\n    var c = a;\n\n    if (b.f == ArcGISOnlineTileSource.mapServerUriProperty) {\n      if (c.mapServerUri != typeCast(String_$type, b.newValue)) {\n        c.mapServerUri = typeCast(String_$type, b.newValue);\n      }\n\n      c.w(0, 0, 0, 0);\n    }\n\n    if (b.f == ArcGISOnlineTileSource.userTokenProperty) {\n      if (c.userToken != typeCast(String_$type, b.newValue)) {\n        c.userToken = typeCast(String_$type, b.newValue);\n      }\n\n      c.w(0, 0, 0, 0);\n    }\n\n    if (b.f == ArcGISOnlineTileSource.levelOfDetailProperty) {\n      c.t = truncate(Math.pow(2, c.levelOfDetail - 1) * 256);\n      c.s = truncate(Math.pow(2, c.levelOfDetail - 1) * 256);\n    }\n\n    if (b.f == ArcGISOnlineTileSource.isMapPublicProperty) {\n      c.w(0, 0, 0, 0);\n    }\n  };\n\n  ArcGISOnlineTileSource.$t = markType(ArcGISOnlineTileSource, 'ArcGISOnlineTileSource', MapTileSource.$);\n  ArcGISOnlineTileSource.mapServerUriProperty = DependencyProperty.i(\"MapServerUri\", String_$type, ArcGISOnlineTileSource.$, new PropertyMetadata(2, null, ArcGISOnlineTileSource.ab));\n  ArcGISOnlineTileSource.isMapPublicProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, ArcGISOnlineTileSource.$, new PropertyMetadata(2, true, ArcGISOnlineTileSource.ab));\n  ArcGISOnlineTileSource.levelOfDetailProperty = DependencyProperty.i(\"LevelOfDetail\", Number_$type, ArcGISOnlineTileSource.$, new PropertyMetadata(2, -1, ArcGISOnlineTileSource.ab));\n  ArcGISOnlineTileSource.userTokenProperty = DependencyProperty.i(\"UserToken\", String_$type, ArcGISOnlineTileSource.$, new PropertyMetadata(2, null, ArcGISOnlineTileSource.ab));\n  return ArcGISOnlineTileSource;\n}(MapTileSource);\n\nexport { ArcGISOnlineTileSource };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ArcGISOnlineTileSource.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { MapTileSource } from \"./MapTileSource\";\nimport { DependencyProperty } from \"./DependencyProperty\";\nimport { String_$type, Boolean_$type, Number_$type, typeGetValue, typeCast, markType } from \"./type\";\nimport { Uri } from \"./Uri\";\nimport { PropertyMetadata } from \"./PropertyMetadata\";\nimport { truncate } from \"./number\";\nimport { stringIsNullOrEmpty } from \"./string\";\nimport { stringFormat1 } from \"./stringExtended\";\n/**\n * @hidden\n */\nvar ArcGISOnlineTileSource = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ArcGISOnlineTileSource, _super);\n    function ArcGISOnlineTileSource() {\n        return _super.call(this, 2097152, 2097152, 256, 256, 0) || this;\n    }\n    Object.defineProperty(ArcGISOnlineTileSource.prototype, \"mapServerUri\", {\n        get: function () {\n            return this.c(ArcGISOnlineTileSource.mapServerUriProperty);\n        },\n        set: function (a) {\n            this.h(ArcGISOnlineTileSource.mapServerUriProperty, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArcGISOnlineTileSource.prototype, \"isMapPublic\", {\n        get: function () {\n            return this.c(ArcGISOnlineTileSource.isMapPublicProperty);\n        },\n        set: function (a) {\n            this.h(ArcGISOnlineTileSource.isMapPublicProperty, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArcGISOnlineTileSource.prototype, \"levelOfDetail\", {\n        get: function () {\n            return typeGetValue(this.c(ArcGISOnlineTileSource.levelOfDetailProperty));\n        },\n        set: function (a) {\n            this.h(ArcGISOnlineTileSource.levelOfDetailProperty, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArcGISOnlineTileSource.prototype, \"userToken\", {\n        get: function () {\n            return this.c(ArcGISOnlineTileSource.userTokenProperty);\n        },\n        set: function (a) {\n            this.h(ArcGISOnlineTileSource.userTokenProperty, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ArcGISOnlineTileSource.prototype.v = function (a, b, c, d) {\n        var e = this.mapServerUri + \"/tile/{0}/{1}/{2}\";\n        var f = \"\";\n        if (stringIsNullOrEmpty(this.mapServerUri) || this.levelOfDetail < 1 || !Uri.isWellFormedUriString(this.mapServerUri, 1)) {\n            return;\n        }\n        if (!this.isMapPublic) {\n            if (!stringIsNullOrEmpty(this.userToken)) {\n                e += \"?token={3}\";\n                f = this.userToken.trim();\n            }\n            else {\n                return;\n            }\n        }\n        var g = a - 8;\n        if (g > 0) {\n            var h = stringFormat1(e, g, c, b, f);\n            d.add(new Uri(0, h));\n        }\n    };\n    ArcGISOnlineTileSource.ab = function (a, b) {\n        var c = a;\n        if (b.f == ArcGISOnlineTileSource.mapServerUriProperty) {\n            if (c.mapServerUri != typeCast(String_$type, b.newValue)) {\n                c.mapServerUri = typeCast(String_$type, b.newValue);\n            }\n            c.w(0, 0, 0, 0);\n        }\n        if (b.f == ArcGISOnlineTileSource.userTokenProperty) {\n            if (c.userToken != typeCast(String_$type, b.newValue)) {\n                c.userToken = typeCast(String_$type, b.newValue);\n            }\n            c.w(0, 0, 0, 0);\n        }\n        if (b.f == ArcGISOnlineTileSource.levelOfDetailProperty) {\n            c.t = truncate((Math.pow(2, c.levelOfDetail - 1) * 256));\n            c.s = truncate((Math.pow(2, c.levelOfDetail - 1) * 256));\n        }\n        if (b.f == ArcGISOnlineTileSource.isMapPublicProperty) {\n            c.w(0, 0, 0, 0);\n        }\n    };\n    ArcGISOnlineTileSource.$t = markType(ArcGISOnlineTileSource, 'ArcGISOnlineTileSource', MapTileSource.$);\n    ArcGISOnlineTileSource.mapServerUriProperty = DependencyProperty.i(\"MapServerUri\", String_$type, ArcGISOnlineTileSource.$, new PropertyMetadata(2, null, ArcGISOnlineTileSource.ab));\n    ArcGISOnlineTileSource.isMapPublicProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, ArcGISOnlineTileSource.$, new PropertyMetadata(2, true, ArcGISOnlineTileSource.ab));\n    ArcGISOnlineTileSource.levelOfDetailProperty = DependencyProperty.i(\"LevelOfDetail\", Number_$type, ArcGISOnlineTileSource.$, new PropertyMetadata(2, -1, ArcGISOnlineTileSource.ab));\n    ArcGISOnlineTileSource.userTokenProperty = DependencyProperty.i(\"UserToken\", String_$type, ArcGISOnlineTileSource.$, new PropertyMetadata(2, null, ArcGISOnlineTileSource.ab));\n    return ArcGISOnlineTileSource;\n}(MapTileSource));\nexport { ArcGISOnlineTileSource };\n//# sourceMappingURL=ArcGISOnlineTileSource.js.map\n"]},"metadata":{},"sourceType":"module"}