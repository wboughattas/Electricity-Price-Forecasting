{"ast":null,"code":"import { ShapefileRecord as ShapefileRecord_internal } from \"./ShapefileRecord\";\nimport { fromRect, toRect } from './componentUtil';\n/**\r\n * Represents a record of data from a Shapefile (.shp and .dbf).\r\n*/\n\nvar IgrShapefileRecord =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrShapefileRecord() {\n    this._implementation = this.createImplementation();\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  }\n\n  IgrShapefileRecord.prototype.createImplementation = function () {\n    return new ShapefileRecord_internal();\n  };\n\n  Object.defineProperty(IgrShapefileRecord.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrShapefileRecord.prototype.onImplementationCreated = function () {};\n\n  IgrShapefileRecord.prototype._provideImplementation = function (i) {\n    this._implementation = i;\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  };\n\n  Object.defineProperty(IgrShapefileRecord.prototype, \"shapeType\", {\n    /**\r\n     * Gets the shape type, as read from the header of the Shapefile.\r\n    */\n    get: function () {\n      return this.i.shapeType;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapefileRecord.prototype, \"fieldsNames\", {\n    /**\r\n     * Gets an array of field names and values for this record\r\n    */\n    get: function () {\n      return this.i.fieldsNames._inner;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapefileRecord.prototype, \"fieldsTypes\", {\n    /**\r\n     * Gets an arry of field types and values for this record\r\n    */\n    get: function () {\n      return this.i.fieldsTypes._inner;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapefileRecord.prototype, \"points\", {\n    /**\r\n     * Gets an array of arrays of points for this record\r\n    */\n    get: function () {\n      var ret = [];\n      var list = this.i.points;\n\n      for (var i = 0; i < list.count; i++) {\n        var innerlist = list.item(i);\n        ret.push(list.item(i)._inner);\n      }\n\n      return ret;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapefileRecord.prototype, \"fieldValues\", {\n    get: function () {\n      return this.i.fieldValues;\n    },\n    set: function (v) {\n      this.i.fieldValues = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapefileRecord.prototype, \"bounds\", {\n    /**\r\n     * Gets the bounds for the shapes\r\n    */\n    get: function () {\n      return fromRect(this.i.bounds);\n    },\n    set: function (v) {\n      this.i.bounds = toRect(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrShapefileRecord.prototype.findByName = function (name) {\n    return null;\n  };\n\n  IgrShapefileRecord.prototype.getFieldValue = function (fieldName) {\n    var iv = this.i.getFieldValue(fieldName);\n    return iv;\n  };\n\n  IgrShapefileRecord.prototype.setFieldValue = function (fieldName, value) {\n    this.i.setFieldValue(fieldName, value);\n  };\n\n  return IgrShapefileRecord;\n}();\n\nexport { IgrShapefileRecord };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/igr-shapefile-record.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { ShapefileRecord as ShapefileRecord_internal } from \"./ShapefileRecord\";\r\nimport { fromRect, toRect } from './componentUtil';\r\n/**\r\n * Represents a record of data from a Shapefile (.shp and .dbf).\r\n*/\r\nvar IgrShapefileRecord = /** @class */ /*@__PURE__*/ (function () {\r\n    function IgrShapefileRecord() {\r\n        this._implementation = this.createImplementation();\r\n        this._implementation.externalObject = this;\r\n        this.onImplementationCreated();\r\n    }\r\n    IgrShapefileRecord.prototype.createImplementation = function () {\r\n        return new ShapefileRecord_internal();\r\n    };\r\n    Object.defineProperty(IgrShapefileRecord.prototype, \"i\", {\r\n        get: function () {\r\n            return this._implementation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IgrShapefileRecord.prototype.onImplementationCreated = function () {\r\n    };\r\n    IgrShapefileRecord.prototype._provideImplementation = function (i) {\r\n        this._implementation = i;\r\n        this._implementation.externalObject = this;\r\n        this.onImplementationCreated();\r\n    };\r\n    Object.defineProperty(IgrShapefileRecord.prototype, \"shapeType\", {\r\n        /**\r\n         * Gets the shape type, as read from the header of the Shapefile.\r\n        */\r\n        get: function () {\r\n            return this.i.shapeType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrShapefileRecord.prototype, \"fieldsNames\", {\r\n        /**\r\n         * Gets an array of field names and values for this record\r\n        */\r\n        get: function () {\r\n            return this.i.fieldsNames._inner;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrShapefileRecord.prototype, \"fieldsTypes\", {\r\n        /**\r\n         * Gets an arry of field types and values for this record\r\n        */\r\n        get: function () {\r\n            return this.i.fieldsTypes._inner;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrShapefileRecord.prototype, \"points\", {\r\n        /**\r\n         * Gets an array of arrays of points for this record\r\n        */\r\n        get: function () {\r\n            var ret = [];\r\n            var list = this.i.points;\r\n            for (var i = 0; i < list.count; i++) {\r\n                var innerlist = list.item(i);\r\n                ret.push(list.item(i)._inner);\r\n            }\r\n            return ret;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrShapefileRecord.prototype, \"fieldValues\", {\r\n        get: function () {\r\n            return this.i.fieldValues;\r\n        },\r\n        set: function (v) {\r\n            this.i.fieldValues = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrShapefileRecord.prototype, \"bounds\", {\r\n        /**\r\n         * Gets the bounds for the shapes\r\n        */\r\n        get: function () {\r\n            return fromRect(this.i.bounds);\r\n        },\r\n        set: function (v) {\r\n            this.i.bounds = toRect(v);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IgrShapefileRecord.prototype.findByName = function (name) {\r\n        return null;\r\n    };\r\n    IgrShapefileRecord.prototype.getFieldValue = function (fieldName) {\r\n        var iv = this.i.getFieldValue(fieldName);\r\n        return (iv);\r\n    };\r\n    IgrShapefileRecord.prototype.setFieldValue = function (fieldName, value) {\r\n        this.i.setFieldValue(fieldName, value);\r\n    };\r\n    return IgrShapefileRecord;\r\n}());\r\nexport { IgrShapefileRecord };\r\n//# sourceMappingURL=igr-shapefile-record.js.map\r\n"]},"metadata":{},"sourceType":"module"}