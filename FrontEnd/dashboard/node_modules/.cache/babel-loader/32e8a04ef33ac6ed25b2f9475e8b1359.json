{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TreemapNodeStyleDescription } from \"./TreemapNodeStyleDescription\";\n/**\n * @hidden\n */\n\nvar TreemapNodeStyleDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TreemapNodeStyleDescriptionMetadata, _super);\n\n  function TreemapNodeStyleDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TreemapNodeStyleDescriptionMetadata.b = function (a) {\n    if (TreemapNodeStyleDescriptionMetadata.a == null) {\n      TreemapNodeStyleDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TreemapNodeStyleDescriptionMetadata.c(a, TreemapNodeStyleDescriptionMetadata.a);\n    }\n  };\n\n  TreemapNodeStyleDescriptionMetadata.c = function (a, b) {\n    b.item(\"HeaderHoverBackground\", \"Brush\");\n    b.item(\"HeaderBackground\", \"Brush\");\n    b.item(\"HeaderTextColor\", \"Brush\");\n    b.item(\"Label\", \"String\");\n    b.item(\"TextColor\", \"Brush\");\n    b.item(\"HeaderHoverTextColor\", \"Brush\");\n    b.item(\"HeaderLabelLeftMargin\", \"Number:double\");\n    b.item(\"HeaderLabelTopMargin\", \"Number:double\");\n    b.item(\"HeaderLabelRightMargin\", \"Number:double\");\n    b.item(\"HeaderLabelBottomMargin\", \"Number:double\");\n    b.item(\"LabelLeftMargin\", \"Number:double\");\n    b.item(\"LabelTopMargin\", \"Number:double\");\n    b.item(\"LabelRightMargin\", \"Number:double\");\n    b.item(\"LabelBottomMargin\", \"Number:double\");\n    b.item(\"HeaderHeight\", \"Number:double\");\n    b.item(\"LabelHorizontalAlignment\", \"ExportedType:string:HorizontalAlignment\");\n    b.item(\"LabelVerticalAlignment\", \"ExportedType:string:VerticalAlignment\");\n    b.item(\"Fill\", \"Brush\");\n    b.item(\"Outline\", \"Brush\");\n    b.item(\"StrokeThickness\", \"Number:double\");\n  };\n\n  TreemapNodeStyleDescriptionMetadata.d = function (a) {\n    TreemapNodeStyleDescriptionMetadata.b(a);\n    a.n(\"TreemapNodeStyle\", function () {\n      return new TreemapNodeStyleDescription();\n    });\n    a.m(\"TreemapNodeStyle\", TreemapNodeStyleDescriptionMetadata.a);\n  };\n\n  TreemapNodeStyleDescriptionMetadata.$t = markType(TreemapNodeStyleDescriptionMetadata, 'TreemapNodeStyleDescriptionMetadata');\n  TreemapNodeStyleDescriptionMetadata.a = null;\n  return TreemapNodeStyleDescriptionMetadata;\n}(Base);\n\nexport { TreemapNodeStyleDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TreemapNodeStyleDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,2BAAT,QAA4C,+BAA5C;AAEA;;AAEG;;AACH,IAAA,mCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyD,EAAA,OAAA,CAAA,SAAA,CAAA,mCAAA,EAAA,MAAA;;AAAzD,WAAA,mCAAA,GAAA;;AAoCC;;AAjCe,EAAA,mCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,mCAAmC,CAAC,CAApC,IAAyC,IAA7C,EAAmD;AAClD,MAAA,mCAAmC,CAAC,CAApC,GAAwC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAxC;AACA,MAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC,EAAyC,mCAAmC,CAAC,CAA7E;AACA;AACD,GALc;;AAMR,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,uBAAP,EAAgC,OAAhC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,OAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,OAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,QAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,OAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,sBAAP,EAA+B,OAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,uBAAP,EAAgC,eAAhC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,sBAAP,EAA+B,eAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,wBAAP,EAAiC,eAAjC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,yBAAP,EAAkC,eAAlC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,eAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,eAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,eAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,eAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,eAAvB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,0BAAP,EAAmC,yCAAnC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,wBAAP,EAAiC,uCAAjC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,MAAP,EAAe,OAAf;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,OAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,eAA1B;AACA,GArBM;;AAsBA,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,YAAA;AAAM,aAAA,IAAA,2BAAA,EAAA;AAAiC,KAA/D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,mCAAmC,CAAC,CAA5D;AACA,GAJM;;AA9BA,EAAA,mCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,mCAAD,EAAsC,qCAAtC,CAAnB;AACQ,EAAA,mCAAA,CAAA,CAAA,GAAkC,IAAlC;AAkChB,SAAA,mCAAA;AAAC,CApCD,CAAyD,IAAzD,CAAA;;SAAa,mC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TreemapNodeStyleDescription } from \"./TreemapNodeStyleDescription\";\n/**\n * @hidden\n */\nvar TreemapNodeStyleDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TreemapNodeStyleDescriptionMetadata, _super);\n    function TreemapNodeStyleDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TreemapNodeStyleDescriptionMetadata.b = function (a) {\n        if (TreemapNodeStyleDescriptionMetadata.a == null) {\n            TreemapNodeStyleDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            TreemapNodeStyleDescriptionMetadata.c(a, TreemapNodeStyleDescriptionMetadata.a);\n        }\n    };\n    TreemapNodeStyleDescriptionMetadata.c = function (a, b) {\n        b.item(\"HeaderHoverBackground\", \"Brush\");\n        b.item(\"HeaderBackground\", \"Brush\");\n        b.item(\"HeaderTextColor\", \"Brush\");\n        b.item(\"Label\", \"String\");\n        b.item(\"TextColor\", \"Brush\");\n        b.item(\"HeaderHoverTextColor\", \"Brush\");\n        b.item(\"HeaderLabelLeftMargin\", \"Number:double\");\n        b.item(\"HeaderLabelTopMargin\", \"Number:double\");\n        b.item(\"HeaderLabelRightMargin\", \"Number:double\");\n        b.item(\"HeaderLabelBottomMargin\", \"Number:double\");\n        b.item(\"LabelLeftMargin\", \"Number:double\");\n        b.item(\"LabelTopMargin\", \"Number:double\");\n        b.item(\"LabelRightMargin\", \"Number:double\");\n        b.item(\"LabelBottomMargin\", \"Number:double\");\n        b.item(\"HeaderHeight\", \"Number:double\");\n        b.item(\"LabelHorizontalAlignment\", \"ExportedType:string:HorizontalAlignment\");\n        b.item(\"LabelVerticalAlignment\", \"ExportedType:string:VerticalAlignment\");\n        b.item(\"Fill\", \"Brush\");\n        b.item(\"Outline\", \"Brush\");\n        b.item(\"StrokeThickness\", \"Number:double\");\n    };\n    TreemapNodeStyleDescriptionMetadata.d = function (a) {\n        TreemapNodeStyleDescriptionMetadata.b(a);\n        a.n(\"TreemapNodeStyle\", function () { return new TreemapNodeStyleDescription(); });\n        a.m(\"TreemapNodeStyle\", TreemapNodeStyleDescriptionMetadata.a);\n    };\n    TreemapNodeStyleDescriptionMetadata.$t = markType(TreemapNodeStyleDescriptionMetadata, 'TreemapNodeStyleDescriptionMetadata');\n    TreemapNodeStyleDescriptionMetadata.a = null;\n    return TreemapNodeStyleDescriptionMetadata;\n}(Base));\nexport { TreemapNodeStyleDescriptionMetadata };\n//# sourceMappingURL=TreemapNodeStyleDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}