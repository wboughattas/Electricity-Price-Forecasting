{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, Date_$type, markType, typeGetValue } from \"./type\";\nimport { CultureInfo } from \"./culture\";\nimport { NotImplementedException } from \"./NotImplementedException\";\nimport { truncate, isNaN_ } from \"./number\";\nimport { unwrapNullable } from \"./nullable\";\nimport { b64toUint8Array, uint8ArraytoB64 } from \"./stringExtended\";\nimport { ConvertUtil } from \"./convertUtil\";\nimport { dateMinValue, dateFromTicks } from \"./date\";\nimport { dateParse } from \"./dateExtended\";\nimport { parseNumber } from \"./numberExtended\";\n/**\n * @hidden\n */\n\nvar Convert =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(Convert, _super);\n\n  function Convert() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Convert.toDouble5 = function (a) {\n    return a;\n  };\n\n  Convert.toDouble1 = function (a) {\n    return a;\n  };\n\n  Convert.toDouble = function (a) {\n    return a;\n  };\n\n  Convert.toDouble2 = function (a) {\n    return a;\n  };\n\n  Convert.toDecimal = function (a) {\n    return a;\n  };\n\n  Convert.toDecimal3 = function (a) {\n    return a;\n  };\n\n  Convert.toDecimal1 = function (a) {\n    return a;\n  };\n\n  Convert.toInt32 = function (a) {\n    if (a >= 0) {\n      var b = truncate(Math.floor(a));\n\n      if (b != a) {\n        var c = a - b;\n        var d = Math.ceil(a) - a;\n\n        if (c > d || c == d && (b & 1) > 0) {\n          b++;\n        }\n      }\n\n      return b;\n    } else {\n      var e = truncate(Math.ceil(a));\n\n      if (e != a) {\n        var f = e - a;\n        var g = a - Math.floor(a);\n\n        if (f > g || f == g && (e & 1) > 0) {\n          e--;\n        }\n      }\n\n      return e;\n    }\n  };\n\n  Convert.toInt322 = function (a) {\n    return parseInt(a);\n  };\n\n  Convert.toDouble3 = function (a) {\n    return Convert.toDouble4(a, CultureInfo.currentCulture);\n  };\n\n  Convert.toDouble4 = function (a, b) {\n    var c = typeGetValue(unwrapNullable(a));\n\n    if (c == null) {\n      return 0;\n    }\n\n    var d = +c;\n\n    if (isNaN_(d)) {\n      return ConvertUtil.toDouble(c, b);\n    }\n\n    return d;\n  };\n\n  Convert.toInt321 = function (a) {\n    var b = typeGetValue(unwrapNullable(a));\n\n    if (b == null) {\n      return 0;\n    }\n\n    var c = +b;\n\n    if (isNaN_(c)) {\n      return ConvertUtil.toInt32(b, CultureInfo.currentCulture);\n    }\n\n    return c;\n  };\n\n  Convert.toInt64 = function (a) {\n    var b = typeGetValue(unwrapNullable(a));\n\n    if (b == null) {\n      return 0;\n    }\n\n    var c = +b;\n\n    if (isNaN_(c)) {\n      return ConvertUtil.toInt64(b, CultureInfo.currentCulture);\n    }\n\n    return c;\n  };\n\n  Convert.toDecimal2 = function (a) {\n    var b = typeGetValue(unwrapNullable(a));\n\n    if (b == null) {\n      return 0;\n    }\n\n    var c = +b;\n\n    if (isNaN_(c)) {\n      return ConvertUtil.toDecimal(b, CultureInfo.currentCulture);\n    }\n\n    return c;\n  };\n\n  Convert.toByte = function (a) {\n    return a ? 1 : 0;\n  };\n\n  Convert.toByte1 = function (a) {\n    var b = typeGetValue(unwrapNullable(a));\n\n    if (b == null) {\n      return 0;\n    }\n\n    var c = +b;\n\n    if (isNaN_(c)) {\n      return ConvertUtil.toByte(b, CultureInfo.currentCulture);\n    }\n\n    return c;\n  };\n\n  Convert.toBoolean = function (a) {\n    var b = typeGetValue(unwrapNullable(a));\n\n    if (b == null) {\n      return false;\n    }\n\n    return !!b;\n  };\n\n  Convert.toDateTime = function (a) {\n    var b = typeGetValue(unwrapNullable(a));\n\n    if (b == null) {\n      return dateMinValue();\n    }\n\n    if (typeCast(Date_$type, b) !== null) {\n      return b;\n    }\n\n    var c = +b;\n\n    if (!isNaN_(c)) {\n      return dateFromTicks(c);\n    }\n\n    return dateParse(b.toString());\n  };\n\n  Convert.toChar = function (a) {\n    return String.fromCharCode(a);\n  };\n\n  Convert.toChar1 = function (a) {\n    return String.fromCharCode(a);\n  };\n\n  Convert.toDouble6 = function (a, b) {\n    return parseNumber(a, b);\n  };\n\n  Convert.toUInt16 = function (a) {\n    return a ? 1 : 0;\n  };\n\n  Convert.toBoolean1 = function (a) {\n    return a != 0;\n  };\n\n  Convert.toUInt32 = function (a) {\n    return a;\n  };\n\n  Convert.fromBase64String = function (a) {\n    return b64toUint8Array(a);\n  };\n\n  Convert.toBase64String = function (a) {\n    return uint8ArraytoB64(a);\n  };\n\n  Convert.toByte2 = function (a, b) {\n    throw new NotImplementedException(0);\n  };\n\n  Convert.$t = markType(Convert, 'Convert');\n  return Convert;\n}(Base);\n\nexport { Convert };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/Convert.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, Date_$type, markType, typeGetValue } from \"./type\";\nimport { CultureInfo } from \"./culture\";\nimport { NotImplementedException } from \"./NotImplementedException\";\nimport { truncate, isNaN_ } from \"./number\";\nimport { unwrapNullable } from \"./nullable\";\nimport { b64toUint8Array, uint8ArraytoB64 } from \"./stringExtended\";\nimport { ConvertUtil } from \"./convertUtil\";\nimport { dateMinValue, dateFromTicks } from \"./date\";\nimport { dateParse } from \"./dateExtended\";\nimport { parseNumber } from \"./numberExtended\";\n/**\n * @hidden\n */\nvar Convert = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Convert, _super);\n    function Convert() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Convert.toDouble5 = function (a) {\n        return a;\n    };\n    Convert.toDouble1 = function (a) {\n        return a;\n    };\n    Convert.toDouble = function (a) {\n        return a;\n    };\n    Convert.toDouble2 = function (a) {\n        return a;\n    };\n    Convert.toDecimal = function (a) {\n        return a;\n    };\n    Convert.toDecimal3 = function (a) {\n        return a;\n    };\n    Convert.toDecimal1 = function (a) {\n        return a;\n    };\n    Convert.toInt32 = function (a) {\n        if (a >= 0) {\n            var b = truncate(Math.floor(a));\n            if (b != a) {\n                var c = a - b;\n                var d = Math.ceil(a) - a;\n                if (c > d || ((c == d) && (b & 1) > 0)) {\n                    b++;\n                }\n            }\n            return b;\n        }\n        else {\n            var e = truncate(Math.ceil(a));\n            if (e != a) {\n                var f = e - a;\n                var g = a - Math.floor(a);\n                if (f > g || ((f == g) && (e & 1) > 0)) {\n                    e--;\n                }\n            }\n            return e;\n        }\n    };\n    Convert.toInt322 = function (a) {\n        return parseInt(a);\n    };\n    Convert.toDouble3 = function (a) {\n        return Convert.toDouble4(a, CultureInfo.currentCulture);\n    };\n    Convert.toDouble4 = function (a, b) {\n        var c = (typeGetValue(unwrapNullable(a)));\n        if (c == null) {\n            return 0;\n        }\n        var d = (+c);\n        if (isNaN_(d)) {\n            return ConvertUtil.toDouble(c, b);\n        }\n        return d;\n    };\n    Convert.toInt321 = function (a) {\n        var b = (typeGetValue(unwrapNullable(a)));\n        if (b == null) {\n            return 0;\n        }\n        var c = (+b);\n        if (isNaN_(c)) {\n            return ConvertUtil.toInt32(b, CultureInfo.currentCulture);\n        }\n        return c;\n    };\n    Convert.toInt64 = function (a) {\n        var b = (typeGetValue(unwrapNullable(a)));\n        if (b == null) {\n            return 0;\n        }\n        var c = (+b);\n        if (isNaN_(c)) {\n            return ConvertUtil.toInt64(b, CultureInfo.currentCulture);\n        }\n        return c;\n    };\n    Convert.toDecimal2 = function (a) {\n        var b = (typeGetValue(unwrapNullable(a)));\n        if (b == null) {\n            return 0;\n        }\n        var c = (+b);\n        if (isNaN_(c)) {\n            return ConvertUtil.toDecimal(b, CultureInfo.currentCulture);\n        }\n        return c;\n    };\n    Convert.toByte = function (a) {\n        return (a ? 1 : 0);\n    };\n    Convert.toByte1 = function (a) {\n        var b = (typeGetValue(unwrapNullable(a)));\n        if (b == null) {\n            return 0;\n        }\n        var c = (+b);\n        if (isNaN_(c)) {\n            return ConvertUtil.toByte(b, CultureInfo.currentCulture);\n        }\n        return c;\n    };\n    Convert.toBoolean = function (a) {\n        var b = (typeGetValue(unwrapNullable(a)));\n        if (b == null) {\n            return false;\n        }\n        return (!!b);\n    };\n    Convert.toDateTime = function (a) {\n        var b = (typeGetValue(unwrapNullable(a)));\n        if (b == null) {\n            return dateMinValue();\n        }\n        if (typeCast(Date_$type, b) !== null) {\n            return b;\n        }\n        var c = (+b);\n        if (!isNaN_(c)) {\n            return dateFromTicks(c);\n        }\n        return dateParse(b.toString());\n    };\n    Convert.toChar = function (a) {\n        return String.fromCharCode(a);\n    };\n    Convert.toChar1 = function (a) {\n        return String.fromCharCode(a);\n    };\n    Convert.toDouble6 = function (a, b) {\n        return parseNumber(a, b);\n    };\n    Convert.toUInt16 = function (a) {\n        return (a ? 1 : 0);\n    };\n    Convert.toBoolean1 = function (a) {\n        return a != 0;\n    };\n    Convert.toUInt32 = function (a) {\n        return a;\n    };\n    Convert.fromBase64String = function (a) {\n        return (b64toUint8Array(a));\n    };\n    Convert.toBase64String = function (a) {\n        return (uint8ArraytoB64(a));\n    };\n    Convert.toByte2 = function (a, b) {\n        throw new NotImplementedException(0);\n    };\n    Convert.$t = markType(Convert, 'Convert');\n    return Convert;\n}(Base));\nexport { Convert };\n//# sourceMappingURL=Convert.js.map\n"]},"metadata":{},"sourceType":"module"}