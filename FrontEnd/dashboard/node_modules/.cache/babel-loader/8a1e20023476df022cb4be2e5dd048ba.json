{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TransactionStateDescription } from \"./TransactionStateDescription\";\n/**\r\n * @hidden\r\n */\n\nvar TransactionStateDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TransactionStateDescriptionMetadata, _super);\n\n  function TransactionStateDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TransactionStateDescriptionMetadata.b = function (a) {\n    if (TransactionStateDescriptionMetadata.a == null) {\n      TransactionStateDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TransactionStateDescriptionMetadata.c(a, TransactionStateDescriptionMetadata.a);\n    }\n  };\n\n  TransactionStateDescriptionMetadata.c = function (a, b) {\n    b.item(\"IdRef\", \"(w:ID,wf:ID)DataRef\");\n    b.item(\"TransactionType\", \"ExportedType:string:TransactionType\");\n    b.item(\"ValueRef\", \"(w:Value,wf:Value)DataRef\");\n    b.item(\"VersionRef\", \"(w:Version,wf:Version)DataRef\");\n  };\n\n  TransactionStateDescriptionMetadata.d = function (a) {\n    TransactionStateDescriptionMetadata.b(a);\n    a.n(\"TransactionState\", function () {\n      return new TransactionStateDescription();\n    });\n    a.m(\"TransactionState\", TransactionStateDescriptionMetadata.a);\n  };\n\n  TransactionStateDescriptionMetadata.$t = markType(TransactionStateDescriptionMetadata, 'TransactionStateDescriptionMetadata');\n  TransactionStateDescriptionMetadata.a = null;\n  return TransactionStateDescriptionMetadata;\n}(Base);\n\nexport { TransactionStateDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TransactionStateDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,2BAAT,QAA4C,+BAA5C;AAEA;;AAEG;;AACH,IAAA,mCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyD,EAAA,OAAA,CAAA,SAAA,CAAA,mCAAA,EAAA,MAAA;;AAAzD,WAAA,mCAAA,GAAA;;AAoBC;;AAjBe,EAAA,mCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,mCAAmC,CAAC,CAApC,IAAyC,IAA7C,EAAmD;AAClD,MAAA,mCAAmC,CAAC,CAApC,GAAwC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAxC;AACA,MAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC,EAAyC,mCAAmC,CAAC,CAA7E;AACA;AACD,GALc;;AAMR,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,qBAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,qCAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,2BAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,+BAArB;AACA,GALM;;AAMA,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,YAAA;AAAM,aAAA,IAAA,2BAAA,EAAA;AAAiC,KAA/D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,mCAAmC,CAAC,CAA5D;AACA,GAJM;;AAdA,EAAA,mCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,mCAAD,EAAsC,qCAAtC,CAAnB;AACQ,EAAA,mCAAA,CAAA,CAAA,GAAkC,IAAlC;AAkBhB,SAAA,mCAAA;AAAC,CApBD,CAAyD,IAAzD,CAAA;;SAAa,mC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { TransactionStateDescription } from \"./TransactionStateDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar TransactionStateDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(TransactionStateDescriptionMetadata, _super);\r\n    function TransactionStateDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TransactionStateDescriptionMetadata.b = function (a) {\r\n        if (TransactionStateDescriptionMetadata.a == null) {\r\n            TransactionStateDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            TransactionStateDescriptionMetadata.c(a, TransactionStateDescriptionMetadata.a);\r\n        }\r\n    };\r\n    TransactionStateDescriptionMetadata.c = function (a, b) {\r\n        b.item(\"IdRef\", \"(w:ID,wf:ID)DataRef\");\r\n        b.item(\"TransactionType\", \"ExportedType:string:TransactionType\");\r\n        b.item(\"ValueRef\", \"(w:Value,wf:Value)DataRef\");\r\n        b.item(\"VersionRef\", \"(w:Version,wf:Version)DataRef\");\r\n    };\r\n    TransactionStateDescriptionMetadata.d = function (a) {\r\n        TransactionStateDescriptionMetadata.b(a);\r\n        a.n(\"TransactionState\", function () { return new TransactionStateDescription(); });\r\n        a.m(\"TransactionState\", TransactionStateDescriptionMetadata.a);\r\n    };\r\n    TransactionStateDescriptionMetadata.$t = markType(TransactionStateDescriptionMetadata, 'TransactionStateDescriptionMetadata');\r\n    TransactionStateDescriptionMetadata.a = null;\r\n    return TransactionStateDescriptionMetadata;\r\n}(Base));\r\nexport { TransactionStateDescriptionMetadata };\r\n//# sourceMappingURL=TransactionStateDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}