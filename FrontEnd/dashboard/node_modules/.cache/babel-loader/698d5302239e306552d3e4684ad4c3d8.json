{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { BaseError, markType } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar NotImplementedException =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(NotImplementedException, _super);\n\n  function NotImplementedException(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = this;\n\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        {\n          _this = _super.call(this, 1, \"not implemented\") || this;\n        }\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          _this = _super.call(this, 1, c) || this;\n          throw new NotImplementedException(0);\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  NotImplementedException.$t = markType(NotImplementedException, 'NotImplementedException', BaseError.$);\n  return NotImplementedException;\n}(BaseError);\n\nexport { NotImplementedException };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/NotImplementedException.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,SAAT,EAAgC,QAAhC,QAAgD,QAAhD;AAEA;;AAEG;;AACH,IAAA,uBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,OAAA,CAAA,SAAA,CAAA,uBAAA,EAAA,MAAA;;AAK5C,WAAA,uBAAA,CAAY,CAAZ,EAAqB;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAe;AAAf,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAvB,QAAA,KAAA,GAAA,IAAA;;AACC,IAAA,CAAC,GAAI,CAAC,IAAI,KAAK,CAAX,GAAgB,CAAhB,GAAoB,CAAxB;;AACA,YAAQ,CAAR;AACC,WAAK,CAAL;AACA;AACC,UAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,CAAN,EAAS,iBAAT,KAA2B,IAA3B;AACA;AACD;;AAEA,WAAK,CAAL;AACA;AACC,cAAI,CAAC,GAAmB,KAAK,CAAC,CAAD,CAA7B;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,CAAN,EAAS,CAAT,KAAW,IAAX;AACA,gBAAM,IAAI,uBAAJ,CAA4B,CAA5B,CAAN;AACA;AACD;AAbD;;;AAiBA;;AAvBM,EAAA,uBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uBAAD,EAA0B,yBAA1B,EAA2D,SAAU,CAAC,CAAtE,CAAnB;AAwBR,SAAA,uBAAA;AAAC,CAzBD,CAA6C,SAA7C,CAAA;;SAAa,uB","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { BaseError, markType } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar NotImplementedException = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(NotImplementedException, _super);\r\n    function NotImplementedException(a) {\r\n        var _rest = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            _rest[_i - 1] = arguments[_i];\r\n        }\r\n        var _this = this;\r\n        a = (a == void 0) ? 0 : a;\r\n        switch (a) {\r\n            case 0:\r\n                {\r\n                    _this = _super.call(this, 1, \"not implemented\") || this;\r\n                }\r\n                break;\r\n            case 1:\r\n                {\r\n                    var c = _rest[0];\r\n                    _this = _super.call(this, 1, c) || this;\r\n                    throw new NotImplementedException(0);\r\n                }\r\n                break;\r\n        }\r\n        return _this;\r\n    }\r\n    NotImplementedException.$t = markType(NotImplementedException, 'NotImplementedException', BaseError.$);\r\n    return NotImplementedException;\r\n}(BaseError));\r\nexport { NotImplementedException };\r\n//# sourceMappingURL=NotImplementedException.js.map\r\n"]},"metadata":{},"sourceType":"module"}