{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TemplateCellUpdatingEventArgsDescriptionMetadata } from \"./TemplateCellUpdatingEventArgsDescriptionMetadata\";\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\nimport { TemplateColumnDescription } from \"./TemplateColumnDescription\";\n/**\r\n * @hidden\r\n */\n\nvar TemplateColumnDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TemplateColumnDescriptionMetadata, _super);\n\n  function TemplateColumnDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TemplateColumnDescriptionMetadata.e = function (a, b) {\n    b.item(\"TemplateRef\", \"(w:Template,wf:Template)DataRef:String\");\n  };\n\n  TemplateColumnDescriptionMetadata.b = function (a) {\n    if (TemplateColumnDescriptionMetadata.a == null) {\n      TemplateColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TemplateColumnDescriptionMetadata.c(a, TemplateColumnDescriptionMetadata.a);\n      TemplateCellUpdatingEventArgsDescriptionMetadata.d(a);\n    }\n  };\n\n  TemplateColumnDescriptionMetadata.c = function (a, b) {\n    ColumnDescriptionMetadata.c(a, b);\n    b.item(\"CellUpdatingRef\", \"EventRef::cellUpdating\");\n    TemplateColumnDescriptionMetadata.e(a, b);\n  };\n\n  TemplateColumnDescriptionMetadata.d = function (a) {\n    TemplateColumnDescriptionMetadata.b(a);\n    a.n(\"TemplateColumn\", function () {\n      return new TemplateColumnDescription();\n    });\n    a.m(\"TemplateColumn\", TemplateColumnDescriptionMetadata.a);\n  };\n\n  TemplateColumnDescriptionMetadata.$t = markType(TemplateColumnDescriptionMetadata, 'TemplateColumnDescriptionMetadata');\n  TemplateColumnDescriptionMetadata.a = null;\n  return TemplateColumnDescriptionMetadata;\n}(Base);\n\nexport { TemplateColumnDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TemplateColumnDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,gDAAT,QAAiE,oDAAjE;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AAEA;;AAEG;;AACH,IAAA,iCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuD,EAAA,OAAA,CAAA,SAAA,CAAA,iCAAA,EAAA,MAAA;;AAAvD,WAAA,iCAAA,GAAA;;AAuBC;;AArBe,EAAA,iCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA4C,CAA5C,EAA2E;AAC1E,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,wCAAtB;AACA,GAFc;;AAIA,EAAA,iCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,iCAAiC,CAAC,CAAlC,IAAuC,IAA3C,EAAiD;AAChD,MAAA,iCAAiC,CAAC,CAAlC,GAAsC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAtC;AACA,MAAA,iCAAiC,CAAC,CAAlC,CAAoC,CAApC,EAAuC,iCAAiC,CAAC,CAAzE;AACA,MAAA,gDAAgD,CAAC,CAAjD,CAAmD,CAAnD;AACA;AACD,GANc;;AAOR,EAAA,iCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,yBAAyB,CAAC,CAA1B,CAA4B,CAA5B,EAA+B,CAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,wBAA1B;AACA,IAAA,iCAAiC,CAAC,CAAlC,CAAoC,CAApC,EAAuC,CAAvC;AACA,GAJM;;AAKA,EAAA,iCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,iCAAiC,CAAC,CAAlC,CAAoC,CAApC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,gBAAJ,EAAsB,YAAA;AAAM,aAAA,IAAA,yBAAA,EAAA;AAA+B,KAA3D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,gBAAJ,EAAsB,iCAAiC,CAAC,CAAxD;AACA,GAJM;;AAjBA,EAAA,iCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,iCAAD,EAAoC,mCAApC,CAAnB;AAIQ,EAAA,iCAAA,CAAA,CAAA,GAAkC,IAAlC;AAkBhB,SAAA,iCAAA;AAAC,CAvBD,CAAuD,IAAvD,CAAA;;SAAa,iC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { TemplateCellUpdatingEventArgsDescriptionMetadata } from \"./TemplateCellUpdatingEventArgsDescriptionMetadata\";\r\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\r\nimport { TemplateColumnDescription } from \"./TemplateColumnDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar TemplateColumnDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(TemplateColumnDescriptionMetadata, _super);\r\n    function TemplateColumnDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TemplateColumnDescriptionMetadata.e = function (a, b) {\r\n        b.item(\"TemplateRef\", \"(w:Template,wf:Template)DataRef:String\");\r\n    };\r\n    TemplateColumnDescriptionMetadata.b = function (a) {\r\n        if (TemplateColumnDescriptionMetadata.a == null) {\r\n            TemplateColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            TemplateColumnDescriptionMetadata.c(a, TemplateColumnDescriptionMetadata.a);\r\n            TemplateCellUpdatingEventArgsDescriptionMetadata.d(a);\r\n        }\r\n    };\r\n    TemplateColumnDescriptionMetadata.c = function (a, b) {\r\n        ColumnDescriptionMetadata.c(a, b);\r\n        b.item(\"CellUpdatingRef\", \"EventRef::cellUpdating\");\r\n        TemplateColumnDescriptionMetadata.e(a, b);\r\n    };\r\n    TemplateColumnDescriptionMetadata.d = function (a) {\r\n        TemplateColumnDescriptionMetadata.b(a);\r\n        a.n(\"TemplateColumn\", function () { return new TemplateColumnDescription(); });\r\n        a.m(\"TemplateColumn\", TemplateColumnDescriptionMetadata.a);\r\n    };\r\n    TemplateColumnDescriptionMetadata.$t = markType(TemplateColumnDescriptionMetadata, 'TemplateColumnDescriptionMetadata');\r\n    TemplateColumnDescriptionMetadata.a = null;\r\n    return TemplateColumnDescriptionMetadata;\r\n}(Base));\r\nexport { TemplateColumnDescriptionMetadata };\r\n//# sourceMappingURL=TemplateColumnDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}