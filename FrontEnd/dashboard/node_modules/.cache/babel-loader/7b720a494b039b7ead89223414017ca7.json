{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"./type\";\nimport { PathFigureCollection } from \"./PathFigureCollection\";\nimport { PathFigure } from \"./PathFigure\";\nimport { PathSegmentCollection } from \"./PathSegmentCollection\";\nimport { ArcSegment } from \"./ArcSegment\";\nimport { LineSegment } from \"./LineSegment\";\nimport { PolyLineSegment } from \"./PolyLineSegment\";\n/**\r\n * @hidden\r\n */\n\nvar PathFigureUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PathFigureUtil, _super);\n\n  function PathFigureUtil() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PathFigureUtil.b = function (a) {\n    var e_1, _a;\n\n    var b = new PathFigureCollection();\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        b.add(PathFigureUtil.a(c));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return b;\n  };\n\n  PathFigureUtil.a = function (a) {\n    var e_2, _a, e_3, _b;\n\n    if (a == null) {\n      return null;\n    }\n\n    var b = new PathSegmentCollection();\n\n    try {\n      for (var _c = tslib_1.__values(fromEnum(a._segments)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var c = _d.value;\n\n        switch (c.a) {\n          case 4:\n            var d = c;\n            var e = new ArcSegment();\n            e.b = d.b;\n            e.e = d.e;\n            e.c = d.c;\n            e.f = d.f;\n            e.d = d.d;\n            b.add(e);\n            break;\n\n          case 0:\n            var f = c;\n            var g = new LineSegment(1);\n            g.c = f.c;\n            b.add(g);\n            break;\n\n          case 3:\n            var h = c;\n            var i = new PolyLineSegment();\n\n            try {\n              for (var _e = (e_3 = void 0, tslib_1.__values(fromEnum(h._points))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var j = _f.value;\n\n                i._points.add(j);\n              }\n            } catch (e_3_1) {\n              e_3 = {\n                error: e_3_1\n              };\n            } finally {\n              try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n              } finally {\n                if (e_3) throw e_3.error;\n              }\n            }\n\n            b.add(i);\n            break;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return function () {\n      var $ret = new PathFigure();\n      $ret.isClosed = a._isClosed;\n      $ret.isFilled = a._isFilled;\n      $ret.startPoint = a._startPoint;\n      $ret.segments = b;\n      return $ret;\n    }();\n  };\n\n  PathFigureUtil.$t = markType(PathFigureUtil, 'PathFigureUtil');\n  return PathFigureUtil;\n}(Base);\n\nexport { PathFigureUtil };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PathFigureUtil.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAA0H,QAA1H,EAA0I,QAA1I,QAA0J,QAA1J;AACA,SAAS,oBAAT,QAAqC,wBAArC;AACA,SAAS,UAAT,QAA2B,cAA3B;AAEA,SAAS,qBAAT,QAAsC,yBAAtC;AAGA,SAAS,UAAT,QAA2B,cAA3B;AACA,SAAS,WAAT,QAA4B,eAA5B;AACA,SAAS,eAAT,QAAgC,mBAAhC;AAEA;;AAEG;;AACH,IAAA,cAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA,EAAA,MAAA;;AAApC,WAAA,cAAA,GAAA;;AAuDC;;AArDO,EAAA,cAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAgC;;;AAC/B,QAAI,CAAC,GAAyB,IAAI,oBAAJ,EAA9B;;;AACA,WAAc,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,QAAQ,CAAa,CAAb,CAAR,CAAA,EAAuB,EAAA,GAAA,EAAA,CAAA,IAAA,EAArC,EAAqC,CAAA,EAAA,CAAA,IAArC,EAAqC,EAAA,GAAA,EAAA,CAAA,IAAA,EAArC,EAAuC;AAAlC,YAAI,CAAC,GAAA,EAAA,CAAA,KAAL;AACJ,QAAA,CAAC,CAAC,GAAF,CAAM,cAAc,CAAC,CAAf,CAAiB,CAAjB,CAAN;AACA;;;;;;;;AACD,O,SACA;AACM,YAAP,GAAO,E;AACD;AACJ;;AACA,WAAA,CAAA;AACD,GAXM;;;QAYN,G,EAAc,E,EAAA,G,EAAA,E;;SAAT,IAAA,I,EAAK;AACT,aAAA,IAAA;AACC;;gBACA,qB;;QACA;iBACA,GAAE,OAAO,CAAC,QAAR,CAAQ,QAAA,CAAA,CAAA,CAAA,SAAA,CAAR,C,EAAQ,EAAA,GAAA,EAAA,CAAA,IAAA,E,EAAA,CAAA,EAAA,CAAA,I,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,E,EAAA;gBACV,EAAE,CAAC,K;;gBACH,CAAC,CAAC,C;AACF,eAAC,CAAD;AACA,gBAAG,CAAA,GAAK,CAAR;AACA,gBAAE,CAAG,GAAG,IAAC,UAAD,EAAR;AACA,YAAA,CAAA,CAAA,CAAA,GAAM,CAAA,CAAA,CAAN;AAEA,YAAA,CAAK,CAAC,CAAN,GAAM,CAAA,CAAA,CAAN;AACA,YAAA,CAAA,CAAA,CAAA,GAAK,CAAA,CAAgB,CAArB;AACA,YAAA,CAAA,CAAA,CAAA,GAAK,CAAA,CAAG,CAAR;AACA,YAAA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAR;AACA,YAAA,CAAC,CAAC,GAAF,CAAM,CAAN;AACA;;AAEA,eAAK,CAAL;AACA,gBAAI,CAAC,GAAoB,CAAzB;AACA,gBAAI,CAAC,GAAG,IAAI,WAAJ,CAAI,CAAJ,CAAR;;cACA,G,CAAA,C;AAAK;;eACJ,C;iBACA,GAAA,C;;;;;;;;;;AACC,cAAA,GAAK,GAAE;AAAA,gBAAA,KAAA,EAAA;AAAA,eAAP;AACF,a,SAEA;AAED,kBAAA;;eAAA,S;;;;;AACQ,YAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AACG;;AAEX;AACA,K,CACA,OAAA,KAAA,EAAK;AACL,MAAA,GAAA,GAAA;AAAO,QAAA,KAAK,EAAA;AAAZ,OAAA;AACA,K,SACD;AArDM,UAAA;AAsDR,YAAA,EAAA,IAAC,CAAA,EAAA,CAAA,IAAD,KAAC,EAAA,GAAA,EAAA,CAAA,MAAD,CAAA,EAAC,EAAA,CAAA,IAAA,CAAA,EAAA;AAvDY,OACL,S;;;;;;;;;;;;;;;;;CADR,C,IAAA,CAAA","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, fromEnum, markType } from \"./type\";\r\nimport { PathFigureCollection } from \"./PathFigureCollection\";\r\nimport { PathFigure } from \"./PathFigure\";\r\nimport { PathSegmentCollection } from \"./PathSegmentCollection\";\r\nimport { ArcSegment } from \"./ArcSegment\";\r\nimport { LineSegment } from \"./LineSegment\";\r\nimport { PolyLineSegment } from \"./PolyLineSegment\";\r\n/**\r\n * @hidden\r\n */\r\nvar PathFigureUtil = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(PathFigureUtil, _super);\r\n    function PathFigureUtil() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PathFigureUtil.b = function (a) {\r\n        var e_1, _a;\r\n        var b = new PathFigureCollection();\r\n        try {\r\n            for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var c = _c.value;\r\n                b.add(PathFigureUtil.a(c));\r\n            }\r\n        }\r\n        catch (e_1_1) {\r\n            e_1 = { error: e_1_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return))\r\n                    _a.call(_b);\r\n            }\r\n            finally {\r\n                if (e_1)\r\n                    throw e_1.error;\r\n            }\r\n        }\r\n        return b;\r\n    };\r\n    PathFigureUtil.a = function (a) {\r\n        var e_2, _a, e_3, _b;\r\n        if (a == null) {\r\n            return null;\r\n        }\r\n        var b = new PathSegmentCollection();\r\n        try {\r\n            for (var _c = tslib_1.__values(fromEnum(a._segments)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var c = _d.value;\r\n                switch (c.a) {\r\n                    case 4:\r\n                        var d = c;\r\n                        var e = new ArcSegment();\r\n                        e.b = d.b;\r\n                        e.e = d.e;\r\n                        e.c = d.c;\r\n                        e.f = d.f;\r\n                        e.d = d.d;\r\n                        b.add(e);\r\n                        break;\r\n                    case 0:\r\n                        var f = c;\r\n                        var g = new LineSegment(1);\r\n                        g.c = f.c;\r\n                        b.add(g);\r\n                        break;\r\n                    case 3:\r\n                        var h = c;\r\n                        var i = new PolyLineSegment();\r\n                        try {\r\n                            for (var _e = (e_3 = void 0, tslib_1.__values(fromEnum(h._points))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                                var j = _f.value;\r\n                                i._points.add(j);\r\n                            }\r\n                        }\r\n                        catch (e_3_1) {\r\n                            e_3 = { error: e_3_1 };\r\n                        }\r\n                        finally {\r\n                            try {\r\n                                if (_f && !_f.done && (_b = _e.return))\r\n                                    _b.call(_e);\r\n                            }\r\n                            finally {\r\n                                if (e_3)\r\n                                    throw e_3.error;\r\n                            }\r\n                        }\r\n                        b.add(i);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) {\r\n            e_2 = { error: e_2_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return))\r\n                    _a.call(_c);\r\n            }\r\n            finally {\r\n                if (e_2)\r\n                    throw e_2.error;\r\n            }\r\n        }\r\n        return ((function () {\r\n            var $ret = new PathFigure();\r\n            $ret.isClosed = a._isClosed;\r\n            $ret.isFilled = a._isFilled;\r\n            $ret.startPoint = a._startPoint;\r\n            $ret.segments = b;\r\n            return $ret;\r\n        })());\r\n    };\r\n    PathFigureUtil.$t = markType(PathFigureUtil, 'PathFigureUtil');\r\n    return PathFigureUtil;\r\n}(Base));\r\nexport { PathFigureUtil };\r\n//# sourceMappingURL=PathFigureUtil.js.map\r\n"]},"metadata":{},"sourceType":"module"}