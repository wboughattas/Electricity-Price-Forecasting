{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar LinkedListNode$1 =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(LinkedListNode$1, _super);\n\n  function LinkedListNode$1($t, a) {\n    var _rest = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      _rest[_i - 2] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.$t = null;\n    _this.c = null;\n    _this.b = null;\n    _this.a = null;\n    _this.$t = $t;\n    _this.$type = _this.$type.specialize(_this.$t);\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          _this.c = c;\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  LinkedListNode$1.$t = markType(LinkedListNode$1, 'LinkedListNode$1');\n  return LinkedListNode$1;\n}(Base);\n\nexport { LinkedListNode$1 };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/LinkedListNode$1.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,gBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,OAAA,CAAA,SAAA,CAAA,gBAAA,EAAA,MAAA;;AASxC,WAAA,gBAAA,CAAY,EAAZ,EAAsB,CAAtB,EAA+B;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAe;AAAf,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAjC,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAPU,IAAA,KAAA,CAAA,EAAA,GAAW,IAAX;AACV,IAAA,KAAA,CAAA,CAAA,GAAO,IAAP;AACA,IAAA,KAAA,CAAA,CAAA,GAAyB,IAAzB;AACA,IAAA,KAAA,CAAA,CAAA,GAAyB,IAAzB;AAMC,IAAA,KAAI,CAAC,EAAL,GAAU,EAAV;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,KAAI,CAAC,KAAL,CAAW,UAAX,CAAsB,KAAI,CAAC,EAA3B,CAAb;AACA,IAAA,CAAC,GAAI,CAAC,IAAI,KAAK,CAAX,GAAgB,CAAhB,GAAoB,CAAxB;;AACA,YAAQ,CAAR;AACC,WAAK,CAAL;AAAQ;;AACR,WAAK,CAAL;AACA;AACC,cAAI,CAAC,GAAS,KAAK,CAAC,CAAD,CAAnB;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,CAAT;AACA;AACD;AAPD;;;AAWA;;AAxBM,EAAA,gBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,gBAAD,EAAmB,kBAAnB,CAAnB;AAyBR,SAAA,gBAAA;AAAC,CA1BD,CAAyC,IAAzC,CAAA;;SAAa,gB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\nvar LinkedListNode$1 = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(LinkedListNode$1, _super);\n    function LinkedListNode$1($t, a) {\n        var _rest = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            _rest[_i - 2] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this.$t = null;\n        _this.c = null;\n        _this.b = null;\n        _this.a = null;\n        _this.$t = $t;\n        _this.$type = _this.$type.specialize(_this.$t);\n        a = (a == void 0) ? 0 : a;\n        switch (a) {\n            case 0: break;\n            case 1:\n                {\n                    var c = _rest[0];\n                    _this.c = c;\n                }\n                break;\n        }\n        return _this;\n    }\n    LinkedListNode$1.$t = markType(LinkedListNode$1, 'LinkedListNode$1');\n    return LinkedListNode$1;\n}(Base));\nexport { LinkedListNode$1 };\n//# sourceMappingURL=LinkedListNode$1.js.map\n"]},"metadata":{},"sourceType":"module"}