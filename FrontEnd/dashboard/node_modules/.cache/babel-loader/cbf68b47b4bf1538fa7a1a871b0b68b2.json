{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { MarkerSeriesDescriptionMetadata } from \"./MarkerSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar PolarBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolarBaseDescriptionMetadata, _super);\n\n  function PolarBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PolarBaseDescriptionMetadata.b = function (a) {\n    if (PolarBaseDescriptionMetadata.a == null) {\n      PolarBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      PolarBaseDescriptionMetadata.c(a, PolarBaseDescriptionMetadata.a);\n    }\n  };\n\n  PolarBaseDescriptionMetadata.c = function (a, b) {\n    MarkerSeriesDescriptionMetadata.c(a, b);\n    b.item(\"AngleMemberPath\", \"String\");\n    b.item(\"RadiusMemberPath\", \"String\");\n    b.item(\"AngleAxisRef\", \"(w:AngleAxis,wf:AngleAxis)DataRef::object\");\n    b.item(\"RadiusAxisRef\", \"(w:RadiusAxis,wf:RadiusAxis)DataRef::object\");\n    b.item(\"UseCartesianInterpolation\", \"Boolean\");\n    b.item(\"MaximumMarkers\", \"Number:int\");\n    b.item(\"TrendLineType\", \"ExportedType:string:TrendLineType\");\n    b.item(\"TrendLineBrush\", \"Brush\");\n    b.item(\"ActualTrendLineBrush\", \"Brush\");\n    b.item(\"TrendLineThickness\", \"Number:double\");\n    b.item(\"TrendLinePeriod\", \"Number:int\");\n    b.item(\"TrendLineZIndex\", \"Number:int\");\n    b.item(\"ClipSeriesToBounds\", \"Boolean\");\n  };\n\n  PolarBaseDescriptionMetadata.d = function (a) {\n    PolarBaseDescriptionMetadata.b(a);\n    a.m(\"PolarBase\", PolarBaseDescriptionMetadata.a);\n  };\n\n  PolarBaseDescriptionMetadata.$t = markType(PolarBaseDescriptionMetadata, 'PolarBaseDescriptionMetadata');\n  PolarBaseDescriptionMetadata.a = null;\n  return PolarBaseDescriptionMetadata;\n}(Base);\n\nexport { PolarBaseDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PolarBaseDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,+BAAT,QAAgD,mCAAhD;AAEA;;AAEG;;AACH,IAAA,4BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkD,EAAA,OAAA,CAAA,SAAA,CAAA,4BAAA,EAAA,MAAA;;AAAlD,WAAA,4BAAA,GAAA;;AA6BC;;AA1Be,EAAA,4BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,4BAA4B,CAAC,CAA7B,IAAkC,IAAtC,EAA4C;AAC3C,MAAA,4BAA4B,CAAC,CAA7B,GAAiC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAjC;AACA,MAAA,4BAA4B,CAAC,CAA7B,CAA+B,CAA/B,EAAkC,4BAA4B,CAAC,CAA/D;AACA;AACD,GALc;;AAMR,EAAA,4BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,+BAA+B,CAAC,CAAhC,CAAkC,CAAlC,EAAqC,CAArC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,QAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,QAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,2CAAvB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,6CAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,2BAAP,EAAoC,SAApC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,YAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,mCAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,OAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,sBAAP,EAA+B,OAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,eAA7B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,YAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,YAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,SAA7B;AACA,GAfM;;AAgBA,EAAA,4BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,4BAA4B,CAAC,CAA7B,CAA+B,CAA/B;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,WAAJ,EAAiB,4BAA4B,CAAC,CAA9C;AACA,GAHM;;AAxBA,EAAA,4BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,4BAAD,EAA+B,8BAA/B,CAAnB;AACQ,EAAA,4BAAA,CAAA,CAAA,GAAkC,IAAlC;AA2BhB,SAAA,4BAAA;AAAC,CA7BD,CAAkD,IAAlD,CAAA;;SAAa,4B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { MarkerSeriesDescriptionMetadata } from \"./MarkerSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar PolarBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolarBaseDescriptionMetadata, _super);\n    function PolarBaseDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PolarBaseDescriptionMetadata.b = function (a) {\n        if (PolarBaseDescriptionMetadata.a == null) {\n            PolarBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            PolarBaseDescriptionMetadata.c(a, PolarBaseDescriptionMetadata.a);\n        }\n    };\n    PolarBaseDescriptionMetadata.c = function (a, b) {\n        MarkerSeriesDescriptionMetadata.c(a, b);\n        b.item(\"AngleMemberPath\", \"String\");\n        b.item(\"RadiusMemberPath\", \"String\");\n        b.item(\"AngleAxisRef\", \"(w:AngleAxis,wf:AngleAxis)DataRef::object\");\n        b.item(\"RadiusAxisRef\", \"(w:RadiusAxis,wf:RadiusAxis)DataRef::object\");\n        b.item(\"UseCartesianInterpolation\", \"Boolean\");\n        b.item(\"MaximumMarkers\", \"Number:int\");\n        b.item(\"TrendLineType\", \"ExportedType:string:TrendLineType\");\n        b.item(\"TrendLineBrush\", \"Brush\");\n        b.item(\"ActualTrendLineBrush\", \"Brush\");\n        b.item(\"TrendLineThickness\", \"Number:double\");\n        b.item(\"TrendLinePeriod\", \"Number:int\");\n        b.item(\"TrendLineZIndex\", \"Number:int\");\n        b.item(\"ClipSeriesToBounds\", \"Boolean\");\n    };\n    PolarBaseDescriptionMetadata.d = function (a) {\n        PolarBaseDescriptionMetadata.b(a);\n        a.m(\"PolarBase\", PolarBaseDescriptionMetadata.a);\n    };\n    PolarBaseDescriptionMetadata.$t = markType(PolarBaseDescriptionMetadata, 'PolarBaseDescriptionMetadata');\n    PolarBaseDescriptionMetadata.a = null;\n    return PolarBaseDescriptionMetadata;\n}(Base));\nexport { PolarBaseDescriptionMetadata };\n//# sourceMappingURL=PolarBaseDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}