{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { VerticalStackedSeriesBaseDescriptionMetadata } from \"./VerticalStackedSeriesBaseDescriptionMetadata\";\nimport { StackedBarSeriesDescription } from \"./StackedBarSeriesDescription\";\n/**\n * @hidden\n */\n\nvar StackedBarSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(StackedBarSeriesDescriptionMetadata, _super);\n\n  function StackedBarSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StackedBarSeriesDescriptionMetadata.b = function (a) {\n    if (StackedBarSeriesDescriptionMetadata.a == null) {\n      StackedBarSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      StackedBarSeriesDescriptionMetadata.c(a, StackedBarSeriesDescriptionMetadata.a);\n    }\n  };\n\n  StackedBarSeriesDescriptionMetadata.c = function (a, b) {\n    VerticalStackedSeriesBaseDescriptionMetadata.c(a, b);\n    b.item(\"RadiusX\", \"Number:double\");\n    b.item(\"RadiusY\", \"Number:double\");\n  };\n\n  StackedBarSeriesDescriptionMetadata.d = function (a) {\n    StackedBarSeriesDescriptionMetadata.b(a);\n    a.n(\"StackedBarSeries\", function () {\n      return new StackedBarSeriesDescription();\n    });\n    a.m(\"StackedBarSeries\", StackedBarSeriesDescriptionMetadata.a);\n  };\n\n  StackedBarSeriesDescriptionMetadata.$t = markType(StackedBarSeriesDescriptionMetadata, 'StackedBarSeriesDescriptionMetadata');\n  StackedBarSeriesDescriptionMetadata.a = null;\n  return StackedBarSeriesDescriptionMetadata;\n}(Base);\n\nexport { StackedBarSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/StackedBarSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,4CAAT,QAA6D,gDAA7D;AACA,SAAS,2BAAT,QAA4C,+BAA5C;AAEA;;AAEG;;AACH,IAAA,mCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyD,EAAA,OAAA,CAAA,SAAA,CAAA,mCAAA,EAAA,MAAA;;AAAzD,WAAA,mCAAA,GAAA;;AAmBC;;AAhBe,EAAA,mCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,mCAAmC,CAAC,CAApC,IAAyC,IAA7C,EAAmD;AAClD,MAAA,mCAAmC,CAAC,CAApC,GAAwC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAxC;AACA,MAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC,EAAyC,mCAAmC,CAAC,CAA7E;AACA;AACD,GALc;;AAMR,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,4CAA4C,CAAC,CAA7C,CAA+C,CAA/C,EAAkD,CAAlD;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,eAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,eAAlB;AACA,GAJM;;AAKA,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,YAAA;AAAM,aAAA,IAAA,2BAAA,EAAA;AAAiC,KAA/D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,mCAAmC,CAAC,CAA5D;AACA,GAJM;;AAbA,EAAA,mCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,mCAAD,EAAsC,qCAAtC,CAAnB;AACQ,EAAA,mCAAA,CAAA,CAAA,GAAkC,IAAlC;AAiBhB,SAAA,mCAAA;AAAC,CAnBD,CAAyD,IAAzD,CAAA;;SAAa,mC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { VerticalStackedSeriesBaseDescriptionMetadata } from \"./VerticalStackedSeriesBaseDescriptionMetadata\";\nimport { StackedBarSeriesDescription } from \"./StackedBarSeriesDescription\";\n/**\n * @hidden\n */\nvar StackedBarSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(StackedBarSeriesDescriptionMetadata, _super);\n    function StackedBarSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StackedBarSeriesDescriptionMetadata.b = function (a) {\n        if (StackedBarSeriesDescriptionMetadata.a == null) {\n            StackedBarSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            StackedBarSeriesDescriptionMetadata.c(a, StackedBarSeriesDescriptionMetadata.a);\n        }\n    };\n    StackedBarSeriesDescriptionMetadata.c = function (a, b) {\n        VerticalStackedSeriesBaseDescriptionMetadata.c(a, b);\n        b.item(\"RadiusX\", \"Number:double\");\n        b.item(\"RadiusY\", \"Number:double\");\n    };\n    StackedBarSeriesDescriptionMetadata.d = function (a) {\n        StackedBarSeriesDescriptionMetadata.b(a);\n        a.n(\"StackedBarSeries\", function () { return new StackedBarSeriesDescription(); });\n        a.m(\"StackedBarSeries\", StackedBarSeriesDescriptionMetadata.a);\n    };\n    StackedBarSeriesDescriptionMetadata.$t = markType(StackedBarSeriesDescriptionMetadata, 'StackedBarSeriesDescriptionMetadata');\n    StackedBarSeriesDescriptionMetadata.a = null;\n    return StackedBarSeriesDescriptionMetadata;\n}(Base));\nexport { StackedBarSeriesDescriptionMetadata };\n//# sourceMappingURL=StackedBarSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}