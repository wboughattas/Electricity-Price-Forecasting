{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Description } from \"./Description\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar DataGridExpansionIndicatorDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DataGridExpansionIndicatorDescription, _super);\n\n  function DataGridExpansionIndicatorDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.g = false;\n    _this.n = null;\n    _this.f = false;\n    _this.k = 0;\n    _this.j = 0;\n    return _this;\n  }\n\n  DataGridExpansionIndicatorDescription.prototype.get_type = function () {\n    return \"DataGridExpansionIndicator\";\n  };\n\n  Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"type\", {\n    get: function () {\n      return this.get_type();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"isExpanded\", {\n    get: function () {\n      return this.g;\n    },\n    set: function (a) {\n      this.g = a;\n      this.e(\"IsExpanded\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"iconColor\", {\n    get: function () {\n      return this.n;\n    },\n    set: function (a) {\n      this.n = a;\n      this.e(\"IconColor\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"isAnimationEnabled\", {\n    get: function () {\n      return this.f;\n    },\n    set: function (a) {\n      this.f = a;\n      this.e(\"IsAnimationEnabled\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"pixelScalingRatio\", {\n    get: function () {\n      return this.k;\n    },\n    set: function (a) {\n      this.k = a;\n      this.e(\"PixelScalingRatio\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"actualPixelScalingRatio\", {\n    get: function () {\n      return this.j;\n    },\n    set: function (a) {\n      this.j = a;\n      this.e(\"ActualPixelScalingRatio\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  DataGridExpansionIndicatorDescription.$t = markType(DataGridExpansionIndicatorDescription, 'DataGridExpansionIndicatorDescription', Description.$);\n  return DataGridExpansionIndicatorDescription;\n}(Description);\n\nexport { DataGridExpansionIndicatorDescription };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DataGridExpansionIndicatorDescription.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,WAAT,QAA4B,eAA5B;AACA,SAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,qCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2D,EAAA,OAAA,CAAA,SAAA,CAAA,qCAAA,EAAA,MAAA;;AAQ1D,WAAA,qCAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAGQ,IAAA,KAAA,CAAA,CAAA,GAAa,KAAb;AAQA,IAAA,KAAA,CAAA,CAAA,GAAY,IAAZ;AAQA,IAAA,KAAA,CAAA,CAAA,GAAa,KAAb;AAQA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AAQA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;;AAjCP;;AARS,EAAA,qCAAA,CAAA,SAAA,CAAA,QAAA,GAAV,YAAA;AACC,WAAO,4BAAP;AACA,GAFS;;AAGV,EAAA,MAAA,CAAA,cAAA,CAAI,qCAAA,CAAA,SAAJ,EAAI,MAAJ,EAAQ;SAAR,YAAA;AACC,aAAO,KAAK,QAAL,EAAP;AACA,KAFO;oBAAA;;AAAA,GAAR;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,qCAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;SAAd,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFa;SAGd,UAAe,CAAf,EAAyB;AACxB,WAAK,CAAL,GAAS,CAAT;AACA,WAAK,CAAL,CAAO,YAAP;AACA,KANa;oBAAA;;AAAA,GAAd;AAQA,EAAA,MAAA,CAAA,cAAA,CAAI,qCAAA,CAAA,SAAJ,EAAI,WAAJ,EAAa;SAAb,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFY;SAGb,UAAc,CAAd,EAAuB;AACtB,WAAK,CAAL,GAAS,CAAT;AACA,WAAK,CAAL,CAAO,WAAP;AACA,KANY;oBAAA;;AAAA,GAAb;AAQA,EAAA,MAAA,CAAA,cAAA,CAAI,qCAAA,CAAA,SAAJ,EAAI,oBAAJ,EAAsB;SAAtB,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFqB;SAGtB,UAAuB,CAAvB,EAAiC;AAChC,WAAK,CAAL,GAAS,CAAT;AACA,WAAK,CAAL,CAAO,oBAAP;AACA,KANqB;oBAAA;;AAAA,GAAtB;AAQA,EAAA,MAAA,CAAA,cAAA,CAAI,qCAAA,CAAA,SAAJ,EAAI,mBAAJ,EAAqB;SAArB,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFoB;SAGrB,UAAsB,CAAtB,EAA+B;AAC9B,WAAK,CAAL,GAAS,CAAT;AACA,WAAK,CAAL,CAAO,mBAAP;AACA,KANoB;oBAAA;;AAAA,GAArB;AAQA,EAAA,MAAA,CAAA,cAAA,CAAI,qCAAA,CAAA,SAAJ,EAAI,yBAAJ,EAA2B;SAA3B,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAF0B;SAG3B,UAA4B,CAA5B,EAAqC;AACpC,WAAK,CAAL,GAAS,CAAT;AACA,WAAK,CAAL,CAAO,yBAAP;AACA,KAN0B;oBAAA;;AAAA,GAA3B;AA3CO,EAAA,qCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,qCAAD,EAAwC,uCAAxC,EAAuF,WAAY,CAAC,CAApG,CAAnB;AAkDR,SAAA,qCAAA;AAAC,CAnDD,CAA2D,WAA3D,CAAA;;SAAa,qC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Description } from \"./Description\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar DataGridExpansionIndicatorDescription = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DataGridExpansionIndicatorDescription, _super);\n    function DataGridExpansionIndicatorDescription() {\n        var _this = _super.call(this) || this;\n        _this.g = false;\n        _this.n = null;\n        _this.f = false;\n        _this.k = 0;\n        _this.j = 0;\n        return _this;\n    }\n    DataGridExpansionIndicatorDescription.prototype.get_type = function () {\n        return \"DataGridExpansionIndicator\";\n    };\n    Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"type\", {\n        get: function () {\n            return this.get_type();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"isExpanded\", {\n        get: function () {\n            return this.g;\n        },\n        set: function (a) {\n            this.g = a;\n            this.e(\"IsExpanded\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"iconColor\", {\n        get: function () {\n            return this.n;\n        },\n        set: function (a) {\n            this.n = a;\n            this.e(\"IconColor\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"isAnimationEnabled\", {\n        get: function () {\n            return this.f;\n        },\n        set: function (a) {\n            this.f = a;\n            this.e(\"IsAnimationEnabled\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"pixelScalingRatio\", {\n        get: function () {\n            return this.k;\n        },\n        set: function (a) {\n            this.k = a;\n            this.e(\"PixelScalingRatio\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataGridExpansionIndicatorDescription.prototype, \"actualPixelScalingRatio\", {\n        get: function () {\n            return this.j;\n        },\n        set: function (a) {\n            this.j = a;\n            this.e(\"ActualPixelScalingRatio\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataGridExpansionIndicatorDescription.$t = markType(DataGridExpansionIndicatorDescription, 'DataGridExpansionIndicatorDescription', Description.$);\n    return DataGridExpansionIndicatorDescription;\n}(Description));\nexport { DataGridExpansionIndicatorDescription };\n//# sourceMappingURL=DataGridExpansionIndicatorDescription.js.map\n"]},"metadata":{},"sourceType":"module"}