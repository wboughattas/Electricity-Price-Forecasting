{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Control } from \"igniteui-react-core\";\nimport { INotifyPropertyChanged_$type, Base, PropertyChangedEventArgs, runOn, delegateCombine, Point_$type, Number_$type, enumGetBox, Delegate_$type, typeCast, String_$type, Array_$type, delegateRemove, fromEn, fromEnum, markType, markDep, TypeRegistrar } from \"igniteui-react-core\";\nimport { DoubleAnimator } from \"igniteui-react-core\";\nimport { BrushCollection } from \"igniteui-react-core\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { SweepDirection_$type } from \"igniteui-react-core\";\nimport { Brush } from \"igniteui-react-core\";\nimport { RadialGaugeNeedleShape_$type } from \"./RadialGaugeNeedleShape\";\nimport { RadialGaugePivotShape_$type } from \"./RadialGaugePivotShape\";\nimport { RadialGaugeScaleOversweepShape_$type } from \"./RadialGaugeScaleOversweepShape\";\nimport { RadialGaugeBackingShape_$type } from \"./RadialGaugeBackingShape\";\nimport { RadialGaugeRangeCollection } from \"./RadialGaugeRangeCollection\";\nimport { RadialGaugeDuplicateLabelOmissionStrategy_$type } from \"./RadialGaugeDuplicateLabelOmissionStrategy\";\nimport { BindingFormatter } from \"igniteui-react-core\";\nimport { RadialGaugeScaler } from \"./RadialGaugeScaler\";\nimport { Rect } from \"igniteui-react-core\";\nimport { RadialGaugeFrame } from \"./RadialGaugeFrame\";\nimport { StackPool$1 } from \"igniteui-react-core\";\nimport { Path } from \"igniteui-react-core\";\nimport { TextBlock } from \"igniteui-react-core\";\nimport { Size } from \"igniteui-react-core\";\nimport { Stack$1 } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { GeometryUtil } from \"igniteui-react-core\";\nimport { FormatRadialGaugeLabelEventArgs } from \"./FormatRadialGaugeLabelEventArgs\";\nimport { AlignRadialGaugeLabelEventArgs } from \"./AlignRadialGaugeLabelEventArgs\";\nimport { DoubleValueChangedEventArgs } from \"igniteui-react-core\";\nimport { DeviceUtils } from \"igniteui-react-core\";\nimport { XamRadialGaugeRange } from \"./XamRadialGaugeRange\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PolygonUtil } from \"igniteui-react-core\";\nimport { TransformGroup } from \"igniteui-react-core\";\nimport { RotateTransform } from \"igniteui-react-core\";\nimport { RadialGaugeNeedleParameters } from \"./RadialGaugeNeedleParameters\";\nimport { RadialGaugeNeedlePreparer } from \"./RadialGaugeNeedlePreparer\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { Tuple$2 } from \"igniteui-react-core\";\nimport { RadialGaugeRangeFrame } from \"./RadialGaugeRangeFrame\";\nimport { ArcSegment } from \"igniteui-react-core\";\nimport { LineSegment } from \"igniteui-react-core\";\nimport { GaugeVisualData } from \"./GaugeVisualData\";\nimport { RectData } from \"igniteui-react-core\";\nimport { ScaleLabelVisualDataList } from \"./ScaleLabelVisualDataList\";\nimport { ScaleTickmarkVisualDataList } from \"./ScaleTickmarkVisualDataList\";\nimport { RangeVisualDataList } from \"./RangeVisualDataList\";\nimport { NeedleVisualData } from \"./NeedleVisualData\";\nimport { FontUtil } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity, truncate } from \"igniteui-react-core\";\nimport { EventProxy } from \"igniteui-react-core\";\nimport { RenderingContext } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\nimport { BrushUtil } from \"igniteui-react-core\";\nimport { CanvasViewRenderer } from \"igniteui-react-core\";\nimport { ScaleLabelVisualData } from \"./ScaleLabelVisualData\";\nimport { ScaleTickmarkVisualData } from \"./ScaleTickmarkVisualData\";\nimport { RangeVisualData } from \"./RangeVisualData\";\nimport { PathVisualData } from \"igniteui-react-core\";\nimport { PointData } from \"igniteui-react-core\";\nimport { SizeData } from \"igniteui-react-core\";\nimport { AppearanceHelper } from \"igniteui-react-core\";\nimport { arrayCopy1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar XamRadialGauge =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(XamRadialGauge, _super);\n\n  function XamRadialGauge() {\n    var _this = _super.call(this) || this;\n\n    _this.propertyChanged = null;\n    _this._view = null;\n    _this.ay = null;\n    _this.bn = 0;\n    _this.bm = 100;\n    _this.a8 = false;\n    _this.formatLabel = null;\n    _this.aj = null;\n    _this.alignLabel = null;\n    _this.valueChanged = null;\n    _this.a7 = false;\n    _this.av = null;\n    _this.io = new Size(1, NaN, NaN);\n    _this.il = null;\n    _this.bj = null;\n    _this.bk = null;\n    _this.aq = null;\n    _this.ap = null;\n    _this.ao = null;\n    _this.bl = new Stack$1(TextBlock.$);\n    _this.bi = new List$1(Path.$, 0);\n    _this.bh = new List$1(Path.$, 0);\n    _this.bg = new List$1(Path.$, 0);\n    _this.bq = 0;\n    _this.a5 = null;\n    _this.a3 = null;\n    _this.a2 = null;\n    _this.a4 = null;\n    _this.bp = NaN;\n    _this.bo = 1;\n    _this.view = new XamRadialGaugeView(_this);\n\n    _this.view.av();\n\n    _this.il = Rect.empty;\n    _this.aq = new RadialGaugeFrame();\n    _this.ap = new RadialGaugeFrame();\n    _this.ao = new RadialGaugeFrame();\n    _this.ranges = new RadialGaugeRangeCollection();\n    _this.a7 = true;\n    _this.ay = new DoubleAnimator(0, 1, _this.dn);\n    var a = _this.ay;\n    a.propertyChanged = delegateCombine(a.propertyChanged, runOn(_this, _this.fn));\n    _this.ab = XamRadialGauge.$;\n\n    _this.a2 = function () {\n      var $ret = new StackPool$1(TextBlock.$);\n      $ret.b = runOn(_this.view, _this.view.an);\n      $ret.c = runOn(_this.view, _this.view.ao);\n      $ret.d = runOn(_this.view, _this.view.ap);\n      $ret.j = runOn(_this.view, _this.view.be);\n      return $ret;\n    }();\n\n    _this.a5 = function () {\n      var $ret = new StackPool$1(Path.$);\n      $ret.b = runOn(_this.view, _this.view.ay);\n      $ret.c = runOn(_this.view, _this.view.az);\n      $ret.d = runOn(_this.view, _this.view.a0);\n      $ret.j = runOn(_this.view, _this.view.b0);\n      return $ret;\n    }();\n\n    _this.a3 = function () {\n      var $ret = new StackPool$1(Path.$);\n      $ret.b = runOn(_this.view, _this.view.ay);\n      $ret.c = runOn(_this.view, _this.view.az);\n      $ret.d = runOn(_this.view, _this.view.a0);\n      $ret.j = runOn(_this.view, _this.view.b0);\n      return $ret;\n    }();\n\n    _this.a4 = function () {\n      var $ret = new StackPool$1(Path.$);\n      $ret.b = runOn(_this.view, _this.view.a3);\n      $ret.c = runOn(_this.view, _this.view.a4);\n      $ret.d = runOn(_this.view, _this.view.a5);\n      $ret.j = runOn(_this.view, _this.view.b1);\n      return $ret;\n    }();\n\n    _this.av = new RadialGaugeScaler(_this.bs, _this.br, _this.da, _this.c5, _this.ii);\n    return _this;\n  }\n\n  XamRadialGauge.prototype.fz = function (a) {\n    this.f4(a);\n  };\n\n  XamRadialGauge.prototype.f4 = function (a) {\n    var b = this.propertyChanged;\n\n    if (b != null) {\n      b(this, new PropertyChangedEventArgs(a));\n    }\n  };\n\n  XamRadialGauge.prototype.onDetachedFromUI = function () {\n    this.view.au();\n  };\n\n  XamRadialGauge.prototype.onAttachedToUI = function () {\n    this.view.aq();\n  };\n\n  XamRadialGauge.prototype.dd = function (a) {\n    return this.av.h(a);\n  };\n\n  XamRadialGauge.prototype.dl = function (a) {\n    return this.av.j(a);\n  };\n\n  XamRadialGauge.prototype.b5 = function (a) {\n    var b = this.im;\n    var c = Math.min(b.width / 2, b.height / 2) * this.c0;\n    var d = this.ij();\n    var e = d.x;\n    var f = d.y;\n    var g = GeometryUtil.e({\n      $type: Point_$type,\n      x: e,\n      y: f\n    }, a);\n\n    if (this.av != null && g < this.av.i) {\n      g += Math.PI * 2;\n    }\n\n    if (this.av != null && g > this.av.g) {\n      g -= Math.PI * 2;\n    }\n\n    var h = this.dl(g);\n    return h;\n  };\n\n  XamRadialGauge.prototype.ik = function (a, b) {\n    var c = this.dd(a);\n    var d = Math.min(this.im.width / 2, this.im.height / 2) * this.c0 * b;\n    var e = this.ij();\n    var f = e.x + Math.cos(c) * d;\n    var g = e.y + Math.sin(c) * d;\n    return {\n      $type: Point_$type,\n      x: f,\n      y: g\n    };\n  };\n\n  XamRadialGauge.prototype.h9 = function (a, b) {\n    if (b != null && b.count > 0) {\n      return b.item(a % b.count);\n    } else {\n      return null;\n    }\n  };\n\n  Object.defineProperty(XamRadialGauge.prototype, \"view\", {\n    get: function () {\n      return this._view;\n    },\n    set: function (a) {\n      this._view = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XamRadialGauge.prototype.fn = function (a, b) {\n    this.dk = this.ay.o;\n  };\n\n  Object.defineProperty(XamRadialGauge.prototype, \"bs\", {\n    get: function () {\n      return this.bn;\n    },\n    set: function (a) {\n      this.bn = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XamRadialGauge.prototype, \"br\", {\n    get: function () {\n      return this.bm;\n    },\n    set: function (a) {\n      this.bm = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XamRadialGauge.prototype, \"cw\", {\n    get: function () {\n      return this.c(XamRadialGauge.hl);\n    },\n    set: function (a) {\n      this.h(XamRadialGauge.hl, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XamRadialGauge.prototype.refresh = function () {\n    this.a7 = true;\n    this.view.a7();\n  };\n\n  XamRadialGauge.prototype.fy = function (a, b, c) {\n    switch (a) {\n      case XamRadialGauge.$$p[29]:\n      case XamRadialGauge.$$p[32]:\n      case XamRadialGauge.$$p[33]:\n      case XamRadialGauge.$$p[35]:\n      case XamRadialGauge.$$p[0]:\n      case XamRadialGauge.$$p[4]:\n      case XamRadialGauge.$$p[48]:\n      case XamRadialGauge.$$p[56]:\n      case XamRadialGauge.$$p[22]:\n        this.view.ar(a, b, c);\n        break;\n\n      case XamRadialGauge.$$p[45]:\n        this.view.aw(b, c);\n        break;\n\n      case XamRadialGauge.$$p[46]:\n        this.view.ax(b, c);\n        break;\n\n      case \"PixelScalingRatio\":\n        if (isNaN_(DeviceUtils.a(this.cz))) {\n          this.bt = 1;\n        } else {\n          this.bt = DeviceUtils.a(this.cz);\n        }\n\n        break;\n\n      case \"ActualPixelScalingRatio\":\n        this.view.a1();\n        break;\n    }\n\n    switch (a) {\n      case XamRadialGauge.$$p[17]:\n      case XamRadialGauge.$$p[18]:\n        if (this.d9 != null) {\n          this.aj = new BindingFormatter();\n          this.aj.j = this.d9;\n          this.aj.d = this.ag;\n        } else {\n          this.aj = null;\n        }\n\n        this.a7 = true;\n        this.view.a7();\n        break;\n\n      case XamRadialGauge.$$p[62]:\n        if (this.valueChanged != null) {\n          this.valueChanged(this, new DoubleValueChangedEventArgs(b, c));\n        }\n\n        this.a7 = true;\n        this.view.a7();\n        break;\n\n      case XamRadialGauge.$$p[0]:\n      case XamRadialGauge.$$p[4]:\n      case XamRadialGauge.$$p[7]:\n      case XamRadialGauge.$$p[6]:\n      case XamRadialGauge.$$p[2]:\n      case XamRadialGauge.$$p[3]:\n      case XamRadialGauge.$$p[5]:\n      case XamRadialGauge.$$p[1]:\n        this.a7 = true;\n        this.view.a7();\n        break;\n\n      case XamRadialGauge.$$p[55]:\n      case XamRadialGauge.$$p[53]:\n      case XamRadialGauge.$$p[49]:\n      case XamRadialGauge.$$p[51]:\n      case XamRadialGauge.$$p[52]:\n        this.av = new RadialGaugeScaler(this.bs, this.br, this.da, this.c5, this.ii);\n        this.a7 = true;\n        this.view.a7();\n        break;\n\n      case XamRadialGauge.$$p[21]:\n      case XamRadialGauge.$$p[20]:\n        var d = this.cc;\n        var e = this.ca;\n\n        if (isInfinity(d) || isNaN_(d)) {\n          d = 0;\n        }\n\n        if (isInfinity(e) || isNaN_(e)) {\n          e = 100;\n        }\n\n        this.bs = Math.min(d, e);\n        this.br = Math.max(d, e);\n        this.av = new RadialGaugeScaler(this.bs, this.br, this.da, this.c5, this.ii);\n        this.a7 = true;\n        this.view.a7();\n        break;\n\n      case XamRadialGauge.$$p[13]:\n      case XamRadialGauge.$$p[54]:\n      case XamRadialGauge.$$p[50]:\n      case XamRadialGauge.$$p[16]:\n      case XamRadialGauge.$$p[58]:\n      case XamRadialGauge.$$p[57]:\n      case XamRadialGauge.$$p[56]:\n      case XamRadialGauge.$$p[48]:\n      case XamRadialGauge.$$p[19]:\n      case XamRadialGauge.$$p[23]:\n      case XamRadialGauge.$$p[59]:\n      case XamRadialGauge.$$p[26]:\n      case XamRadialGauge.$$p[22]:\n      case XamRadialGauge.$$p[25]:\n      case XamRadialGauge.$$p[24]:\n      case XamRadialGauge.$$p[8]:\n      case XamRadialGauge.$$p[9]:\n      case XamRadialGauge.$$p[44]:\n      case XamRadialGauge.$$p[10]:\n        this.av = new RadialGaugeScaler(this.bs, this.br, this.da, this.c5, this.ii);\n        this.a7 = true;\n        this.view.a7();\n        break;\n\n      case XamRadialGauge.$$p[42]:\n      case XamRadialGauge.$$p[30]:\n      case XamRadialGauge.$$p[29]:\n      case XamRadialGauge.$$p[32]:\n      case \"NeedleStartWidth\":\n      case XamRadialGauge.$$p[31]:\n      case XamRadialGauge.$$p[33]:\n      case XamRadialGauge.$$p[35]:\n      case XamRadialGauge.$$p[43]:\n      case XamRadialGauge.$$p[37]:\n      case XamRadialGauge.$$p[27]:\n      case XamRadialGauge.$$p[28]:\n      case XamRadialGauge.$$p[39]:\n      case XamRadialGauge.$$p[40]:\n      case XamRadialGauge.$$p[38]:\n      case XamRadialGauge.$$p[34]:\n      case XamRadialGauge.$$p[36]:\n      case XamRadialGauge.$$p[41]:\n        this.a7 = true;\n        this.view.a7();\n        break;\n\n      case XamRadialGauge.$$p[60]:\n        this.ay.r = this.dn;\n        this.view.a7();\n        break;\n\n      case XamRadialGauge.$$p[61]:\n        this.ay.b = this.a0;\n        break;\n\n      case \"TransitionProgress\":\n        if (this.dk >= 1) {\n          this.ay.w();\n          var f = this.ap;\n          this.ap = this.aq;\n          this.aq = f;\n          this.f1();\n          this.f2();\n          this.f3();\n          this.f9(this.ap);\n          this.ga(this.ap);\n          this.gb(this.ap);\n          this.view.ae();\n          return;\n        }\n\n        this.ao.e(this.dk, this.aq, this.ap);\n        this.f9(this.ao);\n        this.ga(this.ao);\n        this.gb(this.ao);\n        this.view.ae();\n        break;\n\n      case XamRadialGauge.$$p[47]:\n        var g = b;\n        var h = c;\n\n        if (g != null) {\n          var i = g;\n          i.collectionChanged = delegateRemove(i.collectionChanged, runOn(this, this.f7));\n        }\n\n        if (h != null) {\n          var j = h;\n          j.collectionChanged = delegateCombine(j.collectionChanged, runOn(this, this.f7));\n        }\n\n        this.a7 = true;\n        this.view.a7();\n        break;\n\n      case XamRadialGauge.$$p[46]:\n      case XamRadialGauge.$$p[45]:\n        this.a7 = true;\n        this.view.a7();\n        break;\n\n      case XamRadialGauge.$$p[11]:\n      case XamRadialGauge.$$p[12]:\n        this.a7 = true;\n        this.view.bd();\n        this.view.a7();\n        break;\n    }\n\n    this.fz(a);\n  };\n\n  XamRadialGauge.prototype.gd = function () {\n    this.view.ba();\n  };\n\n  XamRadialGauge.prototype.f7 = function (a, b) {\n    var e_1, _a, e_2, _b;\n\n    if (b.oldItems != null) {\n      try {\n        for (var _c = tslib_1.__values(fromEn(b.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var c = _d.value;\n          c.propertyChanged = delegateRemove(c.propertyChanged, runOn(this, this.f6));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    if (b.newItems != null) {\n      try {\n        for (var _e = tslib_1.__values(fromEn(b.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var d = _f.value;\n          d.propertyChanged = delegateCombine(d.propertyChanged, runOn(this, this.f6));\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    this.a7 = true;\n    this.view.a7();\n  };\n\n  XamRadialGauge.prototype.f6 = function (a, b) {\n    this.a7 = true;\n    this.view.a7();\n  };\n\n  Object.defineProperty(XamRadialGauge.prototype, \"im\", {\n    get: function () {\n      return this.il;\n    },\n    set: function (a) {\n      var b = this.il;\n      this.il = a;\n\n      if (!b.equals1(this.il)) {\n        this.f0(b, this.il);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XamRadialGauge.prototype.f0 = function (a, b) {\n    this.a7 = true;\n    this.view.a7();\n  };\n\n  XamRadialGauge.prototype.bb = function () {\n    return !isNaN_(this.bs) && !isNaN_(this.br) && !isNaN_(this.dm) && !this.im.isEmpty && this.view.n();\n  };\n\n  XamRadialGauge.prototype.fo = function () {\n    if (!this.bb()) {\n      return;\n    }\n\n    if (this.a7) {\n      if (this.a6) {\n        if (this.ay.g) {\n          this.ay.t();\n        }\n\n        var a = this.aq;\n        this.aq = this.ao;\n        this.ao = a;\n      } else {\n        var b = this.aq;\n        this.aq = this.ap;\n        this.ap = b;\n      }\n    } else if (this.a6) {\n      this.ao.e(this.dk, this.aq, this.ap);\n      this.f9(this.ao);\n      this.ga(this.ao);\n      this.gb(this.ao);\n    }\n\n    if (this.a7) {\n      this.f2();\n      this.f3();\n      this.f1();\n    }\n\n    if (this.a7 && this.be) {\n      this.gc();\n      this.ao.e(this.dk, this.aq, this.ap);\n      this.f9(this.ao);\n      this.ga(this.ao);\n      this.gb(this.ao);\n    } else {\n      if (this.a7) {\n        this.f9(this.ap);\n        this.ga(this.ap);\n        this.gb(this.ap);\n      }\n    }\n\n    this.a7 = false;\n    this.view.ae();\n  };\n\n  XamRadialGauge.prototype.gc = function () {\n    this.bq = 0;\n    this.ay.w();\n    this.ay.v();\n  };\n\n  Object.defineProperty(XamRadialGauge.prototype, \"be\", {\n    get: function () {\n      return this.dn > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XamRadialGauge.prototype.f9 = function (a) {\n    var b = this.im;\n    var c = this.view.bv();\n    var d = a.a;\n    var e = Math.min(b.width / 2, b.height / 2) * a.d;\n    var f = this.ij();\n    var g = f.x;\n    var h = f.y;\n    var i = d.n(e, g, h);\n    c.ak = i;\n    c._fill = d.l;\n    c._stroke = d.m;\n    c.ac = d.h;\n  };\n\n  XamRadialGauge.prototype.bc = function (a) {\n    if (this.bj == null) {\n      return false;\n    }\n\n    return PolygonUtil.a(this.bj, a);\n  };\n\n  XamRadialGauge.prototype.needleContainsPoint = function (a, b) {\n    if (this.bj == null) {\n      return false;\n    }\n\n    return b ? PolygonUtil.a(this.bk, a) : PolygonUtil.a(this.bj, a);\n  };\n\n  XamRadialGauge.prototype.ga = function (a) {\n    var b = this.im;\n    var c = a.b.ab;\n    var d = a.b.aj;\n    var e = a.b.ak;\n    var f = a.b.ae;\n    var g = a.b.ah;\n    var h = a.b.ai;\n    var i = a.b.aa;\n    var j = this.view.bw();\n    var k = this.view.bz();\n    var l = this.view.bx();\n    var m = a.b;\n    var n = Math.min(b.width / 2, b.height / 2) * a.d;\n    var o = this.ij();\n    var p = o.x;\n    var q = o.y;\n    var r = m.am(n, p, q);\n    var s = c * 180 / Math.PI;\n    j.ak = r;\n    var t = new TransformGroup();\n    t.j.add(function () {\n      var $ret = new RotateTransform();\n      $ret.k = p;\n      $ret.l = q;\n      $ret.j = s;\n      return $ret;\n    }());\n    j.j = t;\n    j._fill = d;\n    j._stroke = e;\n    j.ac = f;\n    k.ak = m.an(n, p, q);\n    l.ak = m.al(n, p, q);\n    k._fill = g;\n    k._stroke = h;\n    k.ac = i;\n    l._fill = g;\n    l._stroke = h;\n    l.ac = i;\n    var u = new List$1(Point_$type, 0);\n    var v = Math.cos(c);\n    var w = Math.sin(c);\n    var x = m.af / 2;\n    var y = {\n      $type: Point_$type,\n      x: m.ad * n,\n      y: x * n\n    };\n    var z = {\n      $type: Point_$type,\n      x: m.ac * n,\n      y: x * n\n    };\n    var aa = {\n      $type: Point_$type,\n      x: m.ac * n,\n      y: -x * n\n    };\n    var ab = {\n      $type: Point_$type,\n      x: m.ad * n,\n      y: -x * n\n    };\n    y = {\n      $type: Point_$type,\n      x: y.x * v - y.y * w + p,\n      y: y.y * v + y.x * w + q\n    };\n    z = {\n      $type: Point_$type,\n      x: z.x * v - z.y * w + p,\n      y: z.y * v + z.x * w + q\n    };\n    aa = {\n      $type: Point_$type,\n      x: aa.x * v - aa.y * w + p,\n      y: aa.y * v + aa.x * w + q\n    };\n    ab = {\n      $type: Point_$type,\n      x: ab.x * v - ab.y * w + p,\n      y: ab.y * v + ab.x * w + q\n    };\n    u.add(y);\n    u.add(z);\n    u.add(aa);\n    u.add(ab);\n    this.bj = u;\n    x = m.af / 2 * n;\n    var ac = {\n      $type: Point_$type,\n      x: m.ad * n,\n      y: x\n    };\n    var ad = {\n      $type: Point_$type,\n      x: m.ac * n,\n      y: x\n    };\n    var ae = {\n      $type: Point_$type,\n      x: m.ac * n,\n      y: -x\n    };\n    var af = {\n      $type: Point_$type,\n      x: m.ad * n,\n      y: -x\n    };\n    ac = {\n      $type: Point_$type,\n      x: ac.x * v - ac.y * w + p,\n      y: ac.y * v + ac.x * w + q\n    };\n    ad = {\n      $type: Point_$type,\n      x: ad.x * v - ad.y * w + p,\n      y: ad.y * v + ad.x * w + q\n    };\n    ae = {\n      $type: Point_$type,\n      x: ae.x * v - ae.y * w + p,\n      y: ae.y * v + ae.x * w + q\n    };\n    af = {\n      $type: Point_$type,\n      x: af.x * v - af.y * w + p,\n      y: af.y * v + af.x * w + q\n    };\n    this.bk = new List$1(Point_$type, 0);\n    this.bk.add(ac);\n    this.bk.add(ad);\n    this.bk.add(ae);\n    this.bk.add(af);\n  };\n\n  XamRadialGauge.prototype.ij = function () {\n    var a = this.im;\n    var b = isNaN_(this.b3) ? 0.5 : this.b3;\n    var c = isNaN_(this.b4) ? 0.5 : this.b4;\n    var d = a.left + b * a.width;\n    var e = a.top + c * a.height;\n    return {\n      $type: Point_$type,\n      x: d,\n      y: e\n    };\n  };\n\n  XamRadialGauge.prototype.c2 = function (a) {\n    if (isInfinity(a)) {\n      return NaN;\n    }\n\n    return a;\n  };\n\n  XamRadialGauge.prototype.f2 = function () {\n    var a = this.ap;\n    a.d = this.c0;\n    var b = this.im;\n    var c = this.av;\n    var d = this.c4(this.dm, 0);\n    var e = this.av.h(d);\n    var f = new RadialGaugeNeedlePreparer();\n    var g = new RadialGaugeNeedleParameters();\n    g.b = this.ar;\n    g.o = this.c2(this.cx);\n    g.t = this.ib;\n    g.u = this.ic;\n    g.m = this.c2(this.cv);\n    g.k = this.c2(this.cn);\n    g.d = this.c2(this.cl);\n    g.e = this.c2(this.cm);\n    g.p = this.c2(this.ct);\n    g.q = this.c2(this.cu);\n    g.i = this.c2(this.cs);\n    g.f = this.c2(this.cp);\n    g.r = this.id;\n    g.s = this.ie;\n    g.c = this.as;\n    g.h = this.c2(this.cq);\n    g.n = this.c2(this.cw);\n    g.l = this.c2(this.co);\n\n    if (isNaN_(g.o)) {\n      g.o = XamRadialGauge.cy;\n    }\n\n    if (isNaN_(g.h)) {\n      g.h = XamRadialGauge.cr;\n    }\n\n    f.b = g;\n    f.e(a.b);\n    a.b.ab = e;\n  };\n\n  XamRadialGauge.prototype.gb = function (a) {\n    var e_3, _a;\n\n    var b = this.im;\n    var c = a.c;\n    var d = c.c;\n    var e = c.e;\n    var f = c.g;\n    var g = c.h;\n    var h = c.f;\n    var i = c.d;\n    var j = c.l;\n    var k = c.t;\n    var l = c.q;\n    var m = c.j;\n    var n = c.i;\n    var o = c.v;\n    var p = c.u;\n    var q = c.s;\n    var r = c.p;\n    var s = c.ab;\n    var t = c.ac;\n    var u = c.w;\n    var v = c.aa;\n    var w = c.n;\n    var x = c.m;\n    var y = c.o;\n    var z = this.view.by();\n    var aa = c.r;\n    k = Math.max(0, k);\n    l = Math.max(0, l);\n    var ab = true;\n\n    if (this.au == 1 || this.au == 0 && this.am == 0) {\n      ab = false;\n    }\n\n    var ac = Math.min(b.width / 2, b.height / 2) * a.d;\n    var ad = this.ij();\n    var ae = ad.x;\n    var af = ad.y;\n    var ag = q;\n    var ah = r;\n    q -= aa;\n    r += aa;\n    var ai = false;\n\n    if (r - q >= 2 * Math.PI) {\n      ai = true;\n      q = 0;\n      r = Math.PI;\n    }\n\n    var aj = new PathGeometry();\n    var ak = new PathFigure();\n    var al = Math.cos(q);\n    var am = Math.sin(q);\n    var an = Math.cos(r);\n    var ao = Math.sin(r);\n    var ap = ae + ac * k * al;\n    var aq = af + ac * k * am;\n    var ar = ae + ac * l * al;\n    var as = af + ac * l * am;\n    var at = ae + ac * k * an;\n    var au = af + ac * k * ao;\n    var av = ae + ac * l * an;\n    var aw = af + ac * l * ao;\n    var ax = ai;\n\n    if (aa != 0 && !ai && ab) {\n      var ay = Math.cos(ag);\n      var az = Math.sin(ag);\n      var a0 = Math.cos(ah);\n      var a1 = Math.sin(ah);\n      var a2 = ae + ac * k * ay;\n      var a3 = af + ac * k * az;\n      var a4 = ae + ac * l * ay;\n      var a5 = af + ac * l * az;\n      var a6 = ae + ac * k * a0;\n      var a7 = af + ac * k * a1;\n      var a8 = ae + ac * l * a0;\n      var a9 = af + ac * l * a1;\n      var ba = aq;\n      var bb = ar;\n\n      if (a4 - a2 != 0) {\n        bb = ae;\n        var bc = (a5 - a3) / (a4 - a2);\n        ba = bc * (ae - ar) + as;\n      }\n\n      var bd = {\n        $type: Point_$type,\n        x: bb,\n        y: ba\n      };\n      var be = GeometryUtil.i(bd, {\n        $type: Point_$type,\n        x: ar,\n        y: as\n      }, {\n        $type: Point_$type,\n        x: ae,\n        y: af\n      }, ac * k);\n      var bf = au;\n      var bg = av;\n\n      if (a8 - a6 != 0) {\n        bg = ae;\n        var bh = (a9 - a7) / (a8 - a6);\n        bf = bh * (ae - av) + aw;\n      }\n\n      var bi = {\n        $type: Point_$type,\n        x: bg,\n        y: bf\n      };\n      var bj = GeometryUtil.i(bi, {\n        $type: Point_$type,\n        x: av,\n        y: aw\n      }, {\n        $type: Point_$type,\n        x: ae,\n        y: af\n      }, ac * k);\n\n      if (isNaN_(be.c.x) || isNaN_(be.c.y) || isNaN_(be.d.x) || isNaN_(be.d.y) || isNaN_(bj.c.x) || isNaN_(bj.c.y) || isNaN_(bj.d.x) || isNaN_(bj.d.y)) {\n        ai = true;\n        q = 0;\n        r = Math.PI;\n      } else {\n        var bk = void 0;\n        var bl = void 0;\n\n        if (Math.pow(be.c.x - ar, 2) + Math.pow(be.c.y - as, 2) < Math.pow(be.d.x - ar, 2) + Math.pow(be.d.y - as, 2)) {\n          bk = be.c;\n        } else {\n          bk = be.d;\n        }\n\n        if (Math.pow(bj.c.x - av, 2) + Math.pow(bj.c.y - aw, 2) < Math.pow(bj.d.x - av, 2) + Math.pow(bj.d.y - aw, 2)) {\n          bl = bj.c;\n        } else {\n          bl = bj.d;\n        }\n\n        if (Math.pow(bl.x - ar, 2) + Math.pow(bl.y - as, 2) <= Math.pow(bk.x - ar, 2) + Math.pow(bk.y - as, 2)) {\n          ai = true;\n          q = 0;\n          r = Math.PI;\n        } else {\n          var bm = GeometryUtil.e({\n            $type: Point_$type,\n            x: ae,\n            y: af\n          }, bk);\n          var bn = GeometryUtil.e({\n            $type: Point_$type,\n            x: ae,\n            y: af\n          }, bl);\n          var bo = q;\n          var bp = r;\n\n          while (bo > Math.PI * 2) {\n            bo -= Math.PI * 2;\n          }\n\n          while (bp > Math.PI * 2) {\n            bp -= Math.PI * 2;\n          }\n\n          var bq = Math.min(Math.abs(bm - bo), Math.abs(Math.PI * 2 - bm - bo));\n          var br = Math.min(Math.abs(bn - bp), Math.abs(Math.PI * 2 - bn - bp));\n\n          if (r - q + bq + br >= 2 * Math.PI) {\n            ai = true;\n            q = 0;\n            r = Math.PI;\n          } else {\n            ap = bk.x;\n            aq = bk.y;\n            at = bl.x;\n            au = bl.y;\n          }\n        }\n      }\n    }\n\n    if (ai && !ax) {\n      al = Math.cos(q);\n      am = Math.sin(q);\n      an = Math.cos(r);\n      ao = Math.sin(r);\n      ap = ae + ac * k * al;\n      aq = af + ac * k * am;\n      ar = ae + ac * l * al;\n      as = af + ac * l * am;\n      at = ae + ac * k * an;\n      au = af + ac * k * ao;\n      av = ae + ac * l * an;\n      aw = af + ac * l * ao;\n    }\n\n    if (ai) {\n      ak._startPoint = {\n        $type: Point_$type,\n        x: ar,\n        y: as\n      };\n\n      ak._segments.add(function () {\n        var $ret = new ArcSegment();\n        $ret.e = {\n          $type: Point_$type,\n          x: av,\n          y: aw\n        };\n        $ret.b = false;\n        $ret.d = 1;\n        $ret.f = new Size(1, ac * l, ac * l);\n        return $ret;\n      }());\n\n      ak._segments.add(function () {\n        var $ret = new ArcSegment();\n        $ret.e = {\n          $type: Point_$type,\n          x: ar,\n          y: as\n        };\n        $ret.b = false;\n        $ret.d = 1;\n        $ret.f = new Size(1, ac * l, ac * l);\n        return $ret;\n      }());\n\n      var bs = new PathFigure();\n      bs._startPoint = {\n        $type: Point_$type,\n        x: ap,\n        y: aq\n      };\n\n      bs._segments.add(function () {\n        var $ret = new ArcSegment();\n        $ret.e = {\n          $type: Point_$type,\n          x: at,\n          y: au\n        };\n        $ret.b = false;\n        $ret.d = 0;\n        $ret.f = new Size(1, ac * k, ac * k);\n        return $ret;\n      }());\n\n      bs._segments.add(function () {\n        var $ret = new ArcSegment();\n        $ret.e = {\n          $type: Point_$type,\n          x: ap,\n          y: aq\n        };\n        $ret.b = false;\n        $ret.d = 0;\n        $ret.f = new Size(1, ac * k, ac * k);\n        return $ret;\n      }());\n\n      aj.c.add(ak);\n      aj.c.add(bs);\n    } else {\n      ak._startPoint = {\n        $type: Point_$type,\n        x: ap,\n        y: aq\n      };\n\n      ak._segments.add(function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: ar,\n          y: as\n        };\n        return $ret;\n      }());\n\n      ak._segments.add(function () {\n        var $ret = new ArcSegment();\n        $ret.e = {\n          $type: Point_$type,\n          x: av,\n          y: aw\n        };\n        $ret.b = r - q > Math.PI;\n        $ret.d = 1;\n        $ret.f = new Size(1, ac * l, ac * l);\n        return $ret;\n      }());\n\n      ak._segments.add(function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: at,\n          y: au\n        };\n        return $ret;\n      }());\n\n      ak._segments.add(function () {\n        var $ret = new ArcSegment();\n        $ret.e = {\n          $type: Point_$type,\n          x: ap,\n          y: aq\n        };\n        $ret.b = r - q > Math.PI;\n        $ret.d = 0;\n        $ret.f = new Size(1, ac * k, ac * k);\n        return $ret;\n      }());\n\n      aj.c.add(ak);\n    }\n\n    z.ak = aj;\n    z._fill = s;\n    var bt = this.a2;\n    bt.f = true;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.bl)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var bu = _c.value;\n        bt.n(bu);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    this.bl.g();\n    var bv = c.z;\n\n    for (var bw = 0; bw < d.length; bw++) {\n      var bx = ae + ac * j * Math.cos(d[bw]);\n      var by = af + ac * j * Math.sin(d[bw]);\n      var bz = bt.a();\n\n      if (bz.ak != e[bw]) {\n        bz.ak = e[bw];\n      }\n\n      this.view.a9(bz, bv);\n      var b0 = h[bw];\n      var b1 = i[bw];\n      var b2 = f[bw];\n      var b3 = g[bw];\n      this.view.a2(bz, bx + b2, by + b3);\n      this.bl.h(bz);\n    }\n\n    bt.f = false;\n    var b4 = this.a5;\n    b4.f = true;\n\n    for (var b5 = 0; b5 < this.bi.count; b5++) {\n      b4.n(this.bi._inner[b5]);\n    }\n\n    this.bi.clear();\n\n    var _loop_1 = function (b6) {\n      var b7 = ae + ac * o * Math.cos(m[b6]);\n      var b8 = af + ac * o * Math.sin(m[b6]);\n      var b9 = ae + ac * p * Math.cos(m[b6]);\n      var ca = af + ac * p * Math.sin(m[b6]);\n      var cb = b4.a();\n      var cc = new PathGeometry();\n      var cd = new PathFigure();\n      cd._startPoint = {\n        $type: Point_$type,\n        x: b7,\n        y: b8\n      };\n\n      cd._segments.add(function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: b9,\n          y: ca\n        };\n        return $ret;\n      }());\n\n      cc.c.add(cd);\n      cb.ak = cc;\n      cb._stroke = t;\n      cb.ac = u;\n      this_1.bi.add(cb);\n    };\n\n    var this_1 = this;\n\n    for (var b6 = 0; b6 < m.length; b6++) {\n      _loop_1(b6);\n    }\n\n    b4.f = false;\n    var ce = this.a3;\n    ce.f = true;\n\n    for (var cf = 0; cf < this.bg.count; cf++) {\n      ce.n(this.bg._inner[cf]);\n    }\n\n    this.bg.clear();\n\n    var _loop_2 = function (cg) {\n      var ch = ae + ac * w * Math.cos(n[cg]);\n      var ci = af + ac * w * Math.sin(n[cg]);\n      var cj = ae + ac * x * Math.cos(n[cg]);\n      var ck = af + ac * x * Math.sin(n[cg]);\n      var cl = ce.a();\n      var cm = new PathGeometry();\n      var cn = new PathFigure();\n      cn._startPoint = {\n        $type: Point_$type,\n        x: ch,\n        y: ci\n      };\n\n      cn._segments.add(function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: cj,\n          y: ck\n        };\n        return $ret;\n      }());\n\n      cm.c.add(cn);\n      cl.ak = cm;\n      cl._stroke = v;\n      cl.ac = y;\n      this_2.bg.add(cl);\n    };\n\n    var this_2 = this;\n\n    for (var cg = 0; cg < n.length; cg++) {\n      _loop_2(cg);\n    }\n\n    ce.f = false;\n    var co = this.a4;\n    co.f = true;\n\n    for (var cp = this.bh.count - 1; cp >= 0; cp--) {\n      co.n(this.bh._inner[cp]);\n    }\n\n    this.bh.clear();\n\n    for (var cq = 0; cq < c.k.count; cq++) {\n      var cr = c.k._inner[cq];\n      var cs = co.a();\n      cs.ak = cr.m(ac, ae, af);\n      cs._fill = cr.k;\n      cs._stroke = cr.l;\n      cs.ac = cr.h;\n      this.bh.add(cs);\n    }\n\n    this.view.a8(this.bh);\n    co.f = false;\n  };\n\n  XamRadialGauge.prototype.bf = function (a, b, c) {\n    var d = c / 10000;\n\n    if (isNaN_(d)) {\n      d = 1E-05;\n    }\n\n    var e = Math.abs(a - b);\n\n    if (e < d) {\n      return true;\n    }\n\n    return false;\n  };\n\n  XamRadialGauge.prototype.c3 = function (a) {\n    if (isInfinity(a)) {\n      return NaN;\n    }\n\n    return a;\n  };\n\n  XamRadialGauge.prototype.c1 = function (a, b) {\n    if (isInfinity(a)) {\n      return b;\n    }\n\n    return a;\n  };\n\n  XamRadialGauge.prototype.c4 = function (a, b) {\n    if (isInfinity(a) || isNaN_(a)) {\n      return b;\n    }\n\n    return a;\n  };\n\n  XamRadialGauge.prototype.f3 = function () {\n    var a = this.ap;\n    a.d = this.c3(this.c0);\n\n    if (isNaN_(a.d)) {\n      a.d = 1;\n    }\n\n    var b = this.im;\n    var c = this.av;\n    var d = this.c3(this.b6);\n    var e = this.c3(this.b9);\n    var f = this.c3(this.ce);\n\n    if (isNaN_(d)) {\n      d = (this.br - this.bs) / 10;\n    }\n\n    if (isNaN_(e)) {\n      e = d;\n    }\n\n    if (isNaN_(f)) {\n      f = 3;\n    }\n\n    var g = new List$1(Tuple$2.$.specialize(Number_$type, Number_$type), 0);\n    var h = c.i;\n    var i = c.g;\n\n    while (h >= Math.PI * 2) {\n      h -= Math.PI * 2;\n    }\n\n    while (i >= Math.PI * 2) {\n      i -= Math.PI * 2;\n    }\n\n    var j = Math.abs(i - h) < 0.0001;\n    var k = this.an == 1 || this.an == 3;\n    var l = this.an == 0 || this.an == 3;\n\n    for (var m = this.bs; m <= this.br || this.bf(m, this.br, e); m += e) {\n      if (j && this.bf(m, this.bs, e) && k) {\n        continue;\n      }\n\n      if (j && this.bf(m, this.br, e) && l) {\n        continue;\n      }\n\n      g.add(new Tuple$2(Number_$type, Number_$type, m, c.h(m)));\n\n      if (e == 0) {\n        break;\n      }\n    }\n\n    var n = new List$1(Number_$type, 0);\n    var o = new List$1(Number_$type, 0);\n\n    for (var p = this.bs; p <= this.br || this.bf(p, this.br, d); p += d) {\n      n.add(c.h(p));\n\n      for (var q = 0; q < f; q++) {\n        var r = d / (f + 1) * (q + 1);\n\n        if (r + p > this.br) {\n          continue;\n        }\n\n        o.add(c.h(r + p));\n      }\n\n      if (d == 0) {\n        break;\n      }\n    }\n\n    if (a.c.c.length != g.count) {\n      a.c.c = new Array(g.count);\n      a.c.e = new Array(g.count);\n      a.c.f = new Array(g.count);\n      a.c.d = new Array(g.count);\n      a.c.g = new Array(g.count);\n      a.c.h = new Array(g.count);\n    }\n\n    if (a.c.j.length != n.count || a.c.i.length != o.count) {\n      a.c.j = new Array(n.count);\n      a.c.i = new Array(o.count);\n    }\n\n    var s = new FormatRadialGaugeLabelEventArgs();\n    s.startAngle = this.av.i;\n    s.endAngle = this.av.g;\n    s.actualMinimumValue = this.bs;\n    s.actualMaximumValue = this.br;\n    var t = new AlignRadialGaugeLabelEventArgs();\n    t.startAngle = s.startAngle;\n    t.endAngle = s.endAngle;\n    t.actualMinimumValue = s.actualMinimumValue;\n    t.actualMaximumValue = s.actualMaximumValue;\n\n    var _loop_3 = function (u) {\n      s.angle = g._inner[u].d;\n      t.angle = s.angle;\n      a.c.c[u] = g._inner[u].d;\n      var v = g._inner[u].c;\n      s.value = v;\n      var w = v;\n\n      if (this_3.aj == null) {\n        w = Math.round(v * 100) / 100;\n      }\n\n      s.label = w.toString();\n\n      if (this_3.aj != null) {\n        s.label = this_3.aj.i(w);\n      }\n\n      if (this_3.formatLabel != null) {\n        this_3.formatLabel(this_3, s);\n      }\n\n      t.value = s.value;\n      t.label = s.label;\n      var x = s.label;\n      var y = this_3.view.b2(function () {\n        var $ret = new TextBlock();\n        $ret.ak = x;\n        return $ret;\n      }());\n      t.width = y.width;\n      t.height = y.height;\n      t.offsetX = -1 * (y.width / 2);\n      t.offsetY = -1 * (y.height / 2);\n\n      if (this_3.alignLabel != null) {\n        this_3.alignLabel(this_3, t);\n      }\n\n      a.c.f[u] = t.width;\n      a.c.d[u] = t.height;\n      a.c.g[u] = t.offsetX;\n      a.c.h[u] = t.offsetY;\n      a.c.e[u] = t.label;\n    };\n\n    var this_3 = this;\n\n    for (var u = 0; u < g.count; u++) {\n      _loop_3(u);\n    }\n\n    for (var z = 0; z < n.count; z++) {\n      a.c.j[z] = n._inner[z];\n    }\n\n    for (var aa = 0; aa < o.count; aa++) {\n      a.c.i[aa] = o._inner[aa];\n    }\n\n    a.c.t = this.c4(this.db, 0.5);\n    a.c.q = this.c4(this.c6, 0.57);\n    a.c.l = this.c4(this.b7, 0.65);\n    a.c.v = this.c4(this.dg, 0.5);\n    a.c.u = this.c4(this.de, 0.57);\n    a.c.n = this.c4(this.ch, 0.54);\n    a.c.m = this.c4(this.cf, 0.57);\n    a.c.s = c.i;\n    a.c.p = c.g;\n    var ab = this.c8;\n\n    if (isNaN_(ab)) {\n      ab = 2.8;\n    }\n\n    var ac = ab * Math.PI / 180;\n\n    if (ac < 0) {\n      ac = 0;\n    }\n\n    a.c.r = ac;\n    a.c.ac = this.ih;\n    a.c.z = this.h8;\n    a.c.aa = this.ia;\n    a.c.ab = this.ig;\n    a.c.w = this.c3(this.di);\n    a.c.o = this.c3(this.cj);\n\n    if (isNaN_(a.c.w)) {\n      a.c.w = XamRadialGauge.dj;\n    }\n\n    if (isNaN_(a.c.o)) {\n      a.c.o = XamRadialGauge.ck;\n    }\n\n    a.c.k.clear();\n\n    for (var ad = 0; ad < this.ranges.count; ad++) {\n      var ae = this.ranges._inner[ad];\n      var af = this.c3(Math.min(ae.o, ae.j));\n      var ag = this.c3(Math.max(ae.o, ae.j));\n\n      if (isNaN_(af) || isNaN_(ag)) {\n        continue;\n      }\n\n      var ah = c.h(af);\n      var ai = c.h(ag);\n      var aj = RadialGaugeScaler.k(ah, ai, this.ii);\n      ah = aj.c;\n      ai = aj.d;\n      var ak = new RadialGaugeRangeFrame();\n      ak.e = ah;\n      ak.b = ai;\n      ak.k = ae.ao != null ? ae.ao : this.h9(ad, this.ah);\n      ak.l = ae.ap != null ? ae.ap : this.h9(ad, this.ai);\n      ak.h = this.c4(ae.p, XamRadialGaugeRange.q);\n      ak.f = this.c3(ae.l);\n\n      if (isNaN_(ak.f)) {\n        ak.f = Math.max(0, this.db);\n      }\n\n      ak.c = this.c3(ae.k);\n\n      if (isNaN_(ak.c)) {\n        ak.c = Math.max(0, this.db);\n      }\n\n      ak.g = this.c3(ae.n);\n\n      if (isNaN_(ak.g)) {\n        ak.g = Math.max(0, this.c6);\n      }\n\n      ak.d = this.c3(ae.m);\n\n      if (isNaN_(ak.d)) {\n        ak.d = Math.max(0, this.c6);\n      }\n\n      if (this.ii == 0) {\n        var al = ak.f;\n        ak.f = ak.c;\n        ak.c = al;\n        al = ak.g;\n        ak.g = ak.d;\n        ak.d = al;\n      }\n\n      a.c.k.add(ak);\n    }\n  };\n\n  XamRadialGauge.prototype.f1 = function () {\n    var a = this.ap;\n    a.d = this.c0;\n    var b = a.a;\n    var c = this.h6;\n    var d = this.h7;\n    var e = this.c1(this.b1, XamRadialGauge.b2);\n    var f = this.am;\n    var g = this.by;\n    var h = this.bw;\n\n    if (isInfinity(h) || isNaN_(h)) {\n      h = 0.12;\n    }\n\n    if (isInfinity(g) || isNaN_(g)) {\n      g = 0.82;\n    }\n\n    var i = this.bu;\n\n    if (isInfinity(i) || isNaN_(i)) {\n      i = 4;\n    }\n\n    if (h > g) {\n      var j = g;\n      g = h;\n      h = j;\n    }\n\n    var k = this.av;\n    var l = k.i;\n    var m = k.g;\n    b.l = c;\n    b.m = d;\n    b.h = e;\n\n    if (f == 0) {\n      b.b = 0;\n      b.g = 0;\n      b.c = 0;\n      b.d = 0;\n      b.e = this.by;\n    } else {\n      b.b = i;\n      var n = this.b0 * Math.PI / 180;\n\n      if (n < 0) {\n        n = 0;\n      }\n\n      if (Math.PI * 2 - (m - l) < n) {\n        b.f = 0;\n        b.b = 0;\n        b.g = 0;\n        b.c = 0;\n        b.d = 0;\n        b.e = g;\n      } else {\n        b.f = n;\n        b.g = l;\n        b.c = m;\n        b.b = i;\n        b.d = h;\n        b.e = g;\n      }\n    }\n  };\n\n  Object.defineProperty(XamRadialGauge.prototype, \"a6\", {\n    get: function () {\n      return this.ay.f();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XamRadialGauge.prototype, \"dk\", {\n    get: function () {\n      return this.bq;\n    },\n    set: function (a) {\n      var b = this.bq;\n      this.bq = a;\n      this.fy(\"TransitionProgress\", b, this.bq);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XamRadialGauge.prototype.fr = function (a, b) {\n    var c = this.b5(a);\n\n    if (this.a9) {\n      var d = this.dl(this.av.g - Math.PI * 2);\n\n      switch (this.ii) {\n        case 1:\n          if (c < this.bs) {\n            c = c < d * 0.5 ? this.br : this.bs;\n          }\n\n          break;\n\n        case 0:\n          if (c > this.br) {\n            c = c < (d + this.br) * 0.5 ? this.br : this.bs;\n          }\n\n          break;\n      }\n    }\n\n    if (c != this.dm) {\n      this.dm = c;\n    }\n  };\n\n  XamRadialGauge.prototype.destroy = function () {\n    this.provideContainer(null);\n  };\n\n  XamRadialGauge.prototype.provideContainer = function (a) {\n    this.view.as(a);\n  };\n\n  XamRadialGauge.prototype.onMouseMove = function (a, b) {\n    if (this.a8) {\n      this.fr(a, b);\n    }\n  };\n\n  XamRadialGauge.prototype.onMouseDown = function (a, b) {\n    if (b === void 0) {\n      b = false;\n    }\n\n    if (this.ba && this.needleContainsPoint(a, b) && !this.a8) {\n      this.a8 = true;\n    }\n  };\n\n  XamRadialGauge.prototype.onMouseUp = function (a) {\n    if (this.a8) {\n      this.a8 = false;\n    }\n  };\n\n  XamRadialGauge.prototype.containerResized = function () {\n    this.view.at();\n  };\n\n  XamRadialGauge.prototype.fs = function () {\n    this.view.flush();\n  };\n\n  XamRadialGauge.prototype.aw = function () {\n    var a = new GaugeVisualData();\n    a.viewport = new RectData(this.im.left, this.im.top, this.im.width, this.im.height);\n    a.scaleLabels = new ScaleLabelVisualDataList();\n    a.scaleTickmarks = new ScaleTickmarkVisualDataList();\n    a.ranges = new RangeVisualDataList();\n    a.needle = new NeedleVisualData();\n    this.view.aj(a);\n    return a;\n  };\n\n  XamRadialGauge.prototype.d1 = function () {\n    var a = this.aw();\n    a.scaleByViewport();\n    return a.serialize();\n  };\n\n  XamRadialGauge.prototype.a1 = function () {\n    return FontUtil.toFontInfo(this.view.z, this.d2);\n  };\n\n  Object.defineProperty(XamRadialGauge.prototype, \"cz\", {\n    get: function () {\n      return this.bp;\n    },\n    set: function (a) {\n      var b = this.bp;\n      this.bp = a;\n      this.fy(\"PixelScalingRatio\", b, this.bp);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XamRadialGauge.prototype, \"bt\", {\n    get: function () {\n      return this.bo;\n    },\n    set: function (a) {\n      var b = this.bo;\n      this.bo = a;\n      this.fy(\"ActualPixelScalingRatio\", b, this.bo);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  XamRadialGauge.$t = markType(XamRadialGauge, 'XamRadialGauge', Control.$, [INotifyPropertyChanged_$type]);\n  XamRadialGauge.hl = DependencyProperty.i(\"NeedleStartWidth\", Number_$type, XamRadialGauge.$, new PropertyMetadata(2, NaN, function (a, b) {\n    return a.fy(\"NeedleStartWidth\", b.oldValue, b.newValue);\n  }));\n  XamRadialGauge.cy = DeviceUtils.g(1);\n  XamRadialGauge.cr = DeviceUtils.g(1);\n  XamRadialGauge.dj = DeviceUtils.g(3);\n  XamRadialGauge.ck = DeviceUtils.g(2);\n  XamRadialGauge.b2 = DeviceUtils.g(12);\n  XamRadialGauge.$$p = markDep(DependencyProperty, PropertyMetadata, XamRadialGauge, 'fy', ['BackingBrush:h6:ge', [Brush.$, null], 'BackingCornerRadius:bu:gf', [1, 4], 'BackingInnerExtent:bw:gg', [1, 0.12], 'BackingOuterExtent:by:gh', [1, 0.82], 'BackingOutline:h7:gi', [Brush.$, null], 'BackingOversweep:b0:gj', [1, 3], 'BackingShape:am:gk', [RadialGaugeBackingShape_$type, enumGetBox(RadialGaugeBackingShape_$type, 0)], 'BackingStrokeThickness:b1:gl', [1, XamRadialGauge.b2], 'CenterX:b3:gm', [1, 0.5], 'CenterY:b4:gn', [1, 0.5], 'DuplicateLabelOmissionStrategy:an:go', [RadialGaugeDuplicateLabelOmissionStrategy_$type, enumGetBox(RadialGaugeDuplicateLabelOmissionStrategy_$type, 0)], 'FontBrush:h8:gp', [Brush.$, null], 'Font:d2:gq', [2, null], 'Interval:b6:gr', [1, NaN], 'IsNeedleDraggingConstrained:a9:gs', [0, true], 'IsNeedleDraggingEnabled:ba:gt', [0, false], 'LabelExtent:b7:gu', [1, 0.65], 'LabelFormat:d9:gv', [2, null], 'LabelFormatSpecifiers:ag:gw', [Array_$type, null], 'LabelInterval:b9:gx', [1, NaN], 'MaximumValue:ca:gy', [1, 100], 'MinimumValue:cc:gz', [1, 0], 'MinorTickBrush:ia:g0', [Brush.$, null], 'MinorTickCount:ce:g1', [1, 3], 'MinorTickEndExtent:cf:g2', [1, 0.57], 'MinorTickStartExtent:ch:g3', [1, 0.54], 'MinorTickStrokeThickness:cj:g4', [1, XamRadialGauge.ck], 'NeedleBaseFeatureExtent:cl:g5', [1, NaN], 'NeedleBaseFeatureWidthRatio:cm:g6', [1, NaN], 'NeedleBrush:ib:g7', [Brush.$, null], 'NeedleEndExtent:cn:g8', [1, NaN], 'NeedleEndWidthRatio:co:g9', [1, NaN], 'NeedleOutline:ic:ha', [Brush.$, null], 'NeedlePivotBrush:id:hb', [Brush.$, null], 'NeedlePivotInnerWidthRatio:cp:hc', [1, NaN], 'NeedlePivotOutline:ie:hd', [Brush.$, null], 'NeedlePivotShape:as:he', [RadialGaugePivotShape_$type, enumGetBox(RadialGaugePivotShape_$type, 3)], 'NeedlePivotStrokeThickness:cq:hf', [1, XamRadialGauge.cr], 'NeedlePivotWidthRatio:cs:hg', [1, NaN], 'NeedlePointFeatureExtent:ct:hh', [1, NaN], 'NeedlePointFeatureWidthRatio:cu:hi', [1, NaN], 'NeedleShape:ar:hj', [RadialGaugeNeedleShape_$type, enumGetBox(RadialGaugeNeedleShape_$type, 4)], 'NeedleStartExtent:cv:hk', [1, NaN], 'NeedleStrokeThickness:cx:hm', [1, XamRadialGauge.cy], 'RadiusMultiplier:c0:hn', [1, 1], 'RangeBrushes:ah:ho', [BrushCollection.$, null], 'RangeOutlines:ai:hp', [BrushCollection.$, null], 'Ranges::hq', [RadialGaugeRangeCollection.$, null], 'ScaleBrush:ig:hr', [Brush.$, null], 'ScaleEndAngle:c5:hs', [1, 45], 'ScaleEndExtent:c6:ht', [1, 0.57], 'ScaleOversweep:c8:hu', [1, 2.8], 'ScaleOversweepShape:au:hv', [RadialGaugeScaleOversweepShape_$type, enumGetBox(RadialGaugeScaleOversweepShape_$type, 0)], 'ScaleStartAngle:da:hw', [1, 135], 'ScaleStartExtent:db:hx', [1, 0.5], 'ScaleSweepDirection:ii:hy', [SweepDirection_$type, enumGetBox(SweepDirection_$type, 1)], 'TickBrush:ih:hz', [Brush.$, null], 'TickEndExtent:de:h0', [1, 0.57], 'TickStartExtent:dg:h1', [1, 0.5], 'TickStrokeThickness:di:h2', [1, XamRadialGauge.dj], 'TransitionDuration:dn:h3', [1, 0], 'TransitionEasingFunction:a0:h4', [Delegate_$type, null], 'Value:dm:h5', [1, 0]]);\n  return XamRadialGauge;\n}(Control);\n\nexport { XamRadialGauge };\n/**\n * @hidden\n */\n\nvar XamRadialGaugeView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(XamRadialGaugeView, _super);\n\n  function XamRadialGaugeView(a) {\n    var _this = _super.call(this) || this;\n\n    _this.h = null;\n    _this.s = null;\n    _this.r = null;\n    _this.q = null;\n    _this.br = new Path();\n    _this.bt = new Path();\n    _this.bq = new Path();\n    _this.bs = new Path();\n    _this.bu = new Path();\n    _this.o = null;\n    _this.a = [\"needle\", \"needlePivot\", \"backing\", \"scale\", \"tick\", \"minorTick\", \"label\"];\n    _this.c = null;\n    _this.d = null;\n    _this.l = false;\n    _this.m = false;\n    _this.g = null;\n    _this.aa = null;\n    _this.k = null;\n    _this.z = null;\n    _this.i = null;\n    _this.bf = new Brush();\n\n    _this.bg = function () {\n      var $ret = new Brush();\n      $ret.fill = \"black\";\n      return $ret;\n    }();\n\n    _this.t = NaN;\n    _this.p = null;\n    _this.ac = -1;\n    _this.ab = -1;\n    _this.bk = null;\n    _this.bl = null;\n    _this.bm = null;\n    _this.bn = null;\n    _this.bh = null;\n    _this.bi = null;\n    _this.bo = null;\n    _this.bp = null;\n    _this.bj = null;\n    _this.e = null;\n    _this.f = null;\n    _this.u = 0;\n    _this.h = a;\n    _this.o = new Dictionary$2(String_$type, Dictionary$2.$.specialize(String_$type, String_$type), 0);\n    _this.q = new List$1(TextBlock.$, 0);\n    _this.r = new List$1(Path.$, 0);\n    _this.s = new List$1(Path.$, 0);\n    return _this;\n  }\n\n  XamRadialGaugeView.prototype.an = function (a) {\n    a._visibility = 0;\n  };\n\n  XamRadialGaugeView.prototype.ao = function (a) {\n    a._visibility = 1;\n  };\n\n  XamRadialGaugeView.prototype.ap = function (a) {\n    this.q.remove(a);\n  };\n\n  XamRadialGaugeView.prototype.be = function () {\n    var a = new TextBlock();\n    this.q.add(a);\n    return a;\n  };\n\n  XamRadialGaugeView.prototype.ay = function (a) {\n    a._visibility = 0;\n  };\n\n  XamRadialGaugeView.prototype.az = function (a) {\n    a._visibility = 1;\n  };\n\n  XamRadialGaugeView.prototype.a0 = function (a) {\n    this.r.remove(a);\n  };\n\n  XamRadialGaugeView.prototype.b0 = function () {\n    var a = new Path();\n    this.r.add(a);\n    return a;\n  };\n\n  XamRadialGaugeView.prototype.a3 = function (a) {\n    a._visibility = 0;\n  };\n\n  XamRadialGaugeView.prototype.a4 = function (a) {\n    a._visibility = 1;\n  };\n\n  XamRadialGaugeView.prototype.a5 = function (a) {\n    this.s.remove(a);\n  };\n\n  XamRadialGaugeView.prototype.b1 = function () {\n    var a = new Path();\n    this.s.add(a);\n    return a;\n  };\n\n  XamRadialGaugeView.prototype.n = function () {\n    return true;\n  };\n\n  XamRadialGaugeView.prototype.bw = function () {\n    return this.br;\n  };\n\n  XamRadialGaugeView.prototype.by = function () {\n    return this.bt;\n  };\n\n  XamRadialGaugeView.prototype.w = function (a) {\n    var b = typeCast(TextBlock.$, a);\n\n    if (b != null && b.ak != null) {\n      return this.k.e(b) + 0;\n    }\n\n    return 0;\n  };\n\n  XamRadialGaugeView.prototype.b2 = function (a) {\n    if (isNaN_(this.t)) {\n      this.t = this.v(null);\n    }\n\n    var b = this.w(a);\n    var c = this.t;\n    return new Size(1, b, c);\n  };\n\n  XamRadialGaugeView.prototype.al = function () {\n    this.l = true;\n    var a = [\"#CED3D8\", \"#CED3D8\", \"#EBEDEF\", \"#FFC73C\", \"#617583\", \"rgba(100,107,114,.74)\", \"rgba(100,107,114,.74)\"];\n    var b = [\"#B2B9C0\", \"#B2B9C0\", \"#B2B9C0\", null, null, null, null];\n    var c = [\"background-color\", \"border-top-color\"];\n\n    var d = function () {\n      var $ret = new List$1(Array_$type, 0);\n      $ret.add(a);\n      $ret.add(b);\n      return $ret;\n    }();\n\n    this.o.clear();\n    var e = this.a.length;\n\n    for (var f = 0; f < e; f++) {\n      var g = new Dictionary$2(String_$type, String_$type, 0);\n      var h = this.a[f];\n      var i = new Array(c.length);\n      arrayCopy1(c, 0, i, 0, c.length);\n      this.b(\"ui-radialgauge-\" + h, i);\n\n      for (var j = 0; j < i.length; j++) {\n        g.item(c[j], i[j] == null ? d._inner[j][f] : i[j]);\n      }\n\n      this.o.item(h, g);\n    }\n\n    this.bc();\n    var k;\n    var l;\n    var m = BrushUtil.e(\"radialgauge-range\", this.z, k, l);\n    k = m.p2;\n    l = m.p3;\n    this.c = k;\n    this.d = l;\n\n    if (this.e == null) {\n      this.h.ah = this.c;\n    }\n\n    if (this.f == null) {\n      this.h.ai = this.d;\n    }\n\n    this.l = false;\n  };\n\n  XamRadialGaugeView.prototype.aq = function () {\n    this.am();\n\n    if (this.g != null) {\n      this.g.ap(this.z.rootWrapper, \"\");\n    }\n  };\n\n  XamRadialGaugeView.prototype.au = function () {\n    if (this.g != null) {\n      this.g.bb(this.z.rootWrapper, \"\");\n    }\n  };\n\n  XamRadialGaugeView.prototype.bc = function () {\n    this.l = true;\n    var a = this.a.length;\n\n    for (var b = 0; b < a; b++) {\n      var c = this.a[b];\n      this.bb(c, this.o.item(c));\n    }\n\n    this.l = false;\n  };\n\n  XamRadialGaugeView.prototype.bb = function (a, b) {\n    var e_4, _a;\n\n    var c = null;\n    var d = null;\n    var e = b.count;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(b.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var f = _c.value;\n\n        switch (f) {\n          case \"background-color\":\n            c = new Brush();\n\n            if (b.item(f) != null) {\n              c._fill = b.item(f);\n            }\n\n            break;\n\n          case \"border-top-color\":\n            d = new Brush();\n\n            if (b.item(f) != null) {\n              d._fill = b.item(f);\n            }\n\n            break;\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    switch (a) {\n      case \"needle\":\n        if (this.bk == null) {\n          this.h.ib = c;\n        }\n\n        if (this.bl == null) {\n          this.h.ic = d;\n        }\n\n        break;\n\n      case \"needlePivot\":\n        if (this.bm == null) {\n          this.h.id = c;\n        }\n\n        if (this.bn == null) {\n          this.h.ie = d;\n        }\n\n        break;\n\n      case \"backing\":\n        if (this.bh == null) {\n          this.h.h6 = c;\n        }\n\n        if (this.bi == null) {\n          this.h.h7 = d;\n        }\n\n        break;\n\n      case \"scale\":\n        if (this.bo == null) {\n          this.h.ig = c;\n        }\n\n        break;\n\n      case \"tick\":\n        if (this.bp == null) {\n          this.h.ih = c;\n        }\n\n        break;\n\n      case \"minorTick\":\n        if (this.bj == null) {\n          this.h.ia = c;\n        }\n\n        break;\n\n      case \"label\":\n        this.bg = c;\n        break;\n    }\n  };\n\n  XamRadialGaugeView.prototype.b = function (a, b) {\n    this.z.startCSSQuery();\n\n    for (var c = 0; c < b.length; c++) {\n      b[c] = this.z.getCssDefaultPropertyValue(a, b[c]);\n    }\n\n    this.z.endCSSQuery();\n    return b;\n  };\n\n  XamRadialGaugeView.y = function (a, b) {\n    var c = a == null ? 0 : a.length;\n\n    if (c < 1) {\n      return b;\n    }\n\n    var d = a.split('.');\n    var e = d[0].length > 0 ? parseInt(d[0]) : 0;\n\n    if (d.length != 2) {\n      return e;\n    }\n\n    c = d[1].length;\n    var f = parseInt(d[1]);\n\n    while (c-- > 0) {\n      f /= 10;\n    }\n\n    return f + e;\n  };\n\n  XamRadialGaugeView.prototype.av = function () {\n    this.l = true;\n\n    this.h.ib = function () {\n      var $ret = new Brush();\n      $ret.fill = \"#CED3D8\";\n      return $ret;\n    }();\n\n    this.h.ic = function () {\n      var $ret = new Brush();\n      $ret.fill = \"#B2B9C0\";\n      return $ret;\n    }();\n\n    this.h.ih = function () {\n      var $ret = new Brush();\n      $ret.fill = \"#617583\";\n      return $ret;\n    }();\n\n    this.h.ig = function () {\n      var $ret = new Brush();\n      $ret.fill = \"#FFC73C\";\n      return $ret;\n    }();\n\n    this.h.h6 = function () {\n      var $ret = new Brush();\n      $ret.fill = \"#EBEDEF\";\n      return $ret;\n    }();\n\n    this.h.h7 = function () {\n      var $ret = new Brush();\n      $ret.fill = \"#B2B9C0\";\n      return $ret;\n    }();\n\n    this.h.id = function () {\n      var $ret = new Brush();\n      $ret.fill = \"#CED3D8\";\n      return $ret;\n    }();\n\n    this.h.ie = function () {\n      var $ret = new Brush();\n      $ret.fill = \"#B2B9C0\";\n      return $ret;\n    }();\n\n    this.h.ia = function () {\n      var $ret = new Brush();\n      $ret.fill = \"rgba(100,107,114,.74)\";\n      return $ret;\n    }();\n\n    this.l = false;\n    this.am();\n  };\n\n  XamRadialGaugeView.prototype.am = function () {\n    var a = this.h.cz;\n    var b = this.h.bt;\n\n    if (!isNaN_(a) && a != 0) {\n      return;\n    }\n\n    if (window.devicePixelRatio != undefined && window.devicePixelRatio != b) {\n      this.h.bt = window.devicePixelRatio;\n    }\n  };\n\n  XamRadialGaugeView.prototype.a7 = function () {\n    if (!this.m) {\n      this.m = true;\n\n      if (this.z != null) {\n        this.z.setTimeout(runOn(this, this.ad), 0);\n      } else {\n        window.setTimeout(runOn(this, this.ad), 0);\n      }\n    }\n  };\n\n  XamRadialGaugeView.prototype.ad = function () {\n    if (this.m) {\n      this.m = false;\n      this.h.fo();\n    }\n  };\n\n  XamRadialGaugeView.prototype.flush = function () {\n    if (this.m) {\n      this.ad();\n    }\n  };\n\n  XamRadialGaugeView.prototype.a2 = function (a, b, c) {\n    a.n = b;\n    a.o = c;\n  };\n\n  XamRadialGaugeView.prototype.as = function (a) {\n    var _this = this;\n\n    if (a == null) {\n      this.aa = null;\n      this.z = null;\n      this.k = null;\n      this.af();\n      return;\n    }\n\n    this.u = isNaN_(this.h.cz) ? this.h.bt : this.h.cz;\n    var b = a;\n    this.z = b;\n    this.h.ay.u(this.z);\n    this.z.rootWrapper.addClass(\"ui-radialgauge-container\");\n    var c = this.u;\n    var d = Math.round(b.rootWrapper.width());\n    var e = Math.round(b.rootWrapper.height());\n    var f = d * c;\n    var g = e * c;\n    this.z.rootWrapper.setStyleProperty(\"position\", \"relative\");\n    var h = this.z.createElement(\"canvas\");\n    h.setStyleProperty(\"position\", \"absolute\");\n    this.z.append(h);\n    this.ac = truncate(Math.round(f));\n    this.ab = truncate(Math.round(g));\n    h.setAttribute(\"width\", f.toString());\n    h.setAttribute(\"height\", g.toString());\n    h.setStyleProperty(\"width\", d.toString() + \"px\");\n    h.setStyleProperty(\"height\", e.toString() + \"px\");\n    this.h.im = new Rect(0, 0, 0, d, e);\n    this.aa = h;\n    var i = this.z.get2DCanvasContext(this.aa);\n    this.k = new RenderingContext(new CanvasViewRenderer(), i);\n    this.al();\n    this.bd();\n    this.k.ac(this.i);\n    this.af();\n\n    if (TypeRegistrar.isRegistered(\"CanvasGestureDOMEventProxy\")) {\n      this.g = typeCast(EventProxy.$, TypeRegistrar.create(\"CanvasGestureDOMEventProxy\", this.z.rootWrapper, this.z, false));\n    }\n\n    if (this.g != null) {\n      var j = this.g;\n      j.onContactStarted = delegateCombine(j.onContactStarted, runOn(this, this.ai));\n      var k = this.g;\n      k.onContactMoved = delegateCombine(k.onContactMoved, runOn(this, this.ah));\n      var l = this.g;\n      l.onContactCompleted = delegateCombine(l.onContactCompleted, runOn(this, this.ag));\n\n      this.g.ak = function (m) {\n        return _this.h.ba && (_this.h.a8 || _this.h.bc(m));\n      };\n    }\n\n    this.a6();\n  };\n\n  XamRadialGaugeView.prototype.ag = function (a, b) {\n    if (this.h != null) {\n      this.h.onMouseUp(a);\n    }\n  };\n\n  XamRadialGaugeView.prototype.ah = function (a, b) {\n    if (this.h != null) {\n      this.h.onMouseMove(a, b);\n    }\n  };\n\n  XamRadialGaugeView.prototype.ai = function (a, b) {\n    if (this.h != null) {\n      this.h.onMouseDown(a);\n    }\n  };\n\n  XamRadialGaugeView.prototype.af = function () {\n    if (this.g != null) {\n      var a = this.g;\n      a.onContactStarted = delegateRemove(a.onContactStarted, runOn(this, this.ai));\n      var b = this.g;\n      b.onContactMoved = delegateRemove(b.onContactMoved, runOn(this, this.ah));\n      var c = this.g;\n      c.onContactCompleted = delegateRemove(c.onContactCompleted, runOn(this, this.ag));\n      this.g.ak = null;\n      this.g.aq();\n    }\n  };\n\n  XamRadialGaugeView.prototype.a9 = function (a, b) {\n    if (b != null) {\n      a.am = b;\n    } else {\n      a.am = this.bg;\n    }\n  };\n\n  XamRadialGaugeView.prototype.ba = function () {\n    this.al();\n    this.bd();\n    this.a7();\n  };\n\n  XamRadialGaugeView.prototype.bd = function () {\n    this.i = FontUtil.getFont(this.z);\n\n    if (this.h.d2 != null) {\n      this.i = this.h.a1();\n    }\n\n    this.t = this.v(this.i);\n    this.bf = new Brush();\n    this.bf._fill = this.z.rootWrapper.getStyleProperty(\"color\");\n\n    if (this.k != null) {\n      this.k.ac(this.i);\n    }\n  };\n\n  XamRadialGaugeView.prototype.ae = function () {\n    this.a6();\n  };\n\n  XamRadialGaugeView.prototype.a6 = function () {\n    var a = this.h.im.width;\n    var b = this.h.im.height;\n    var c = Math.round(a * this.u);\n    var d = Math.round(b * this.u);\n\n    if (this.ac != c || this.ab != d) {\n      this.aa.setAttribute(\"width\", c.toString());\n      this.aa.setAttribute(\"height\", d.toString());\n      this.aa.setStyleProperty(\"width\", a.toString() + \"px\");\n      this.aa.setStyleProperty(\"height\", b.toString() + \"px\");\n      this.ac = truncate(Math.round(c));\n      this.ab = truncate(Math.round(d));\n    }\n\n    if (this.k.d && this.u != 1) {\n      this.k.z();\n      this.k.aa(this.u, this.u);\n    }\n\n    this.k.k(this.h.im.left, this.h.im.top, this.h.im.width, this.h.im.height);\n    this.k.s(this.bq);\n    this.k.s(this.bt);\n\n    if (this.p != null) {\n      for (var e = 0; e < this.p.count; e++) {\n        this.k.s(this.p._inner[e]);\n      }\n    }\n\n    for (var f = 0; f < this.q.count; f++) {\n      this.k.ac(this.i);\n      this.k.w(this.q._inner[f]);\n    }\n\n    for (var g = 0; g < this.r.count; g++) {\n      this.k.s(this.r._inner[g]);\n    }\n\n    this.k.z();\n    this.k.j(this.br.j);\n    this.k.s(this.bu);\n    this.k.s(this.br);\n    this.k.s(this.bs);\n    this.k.y();\n\n    if (this.k.d && this.u != 1) {\n      this.k.y();\n    }\n  };\n\n  XamRadialGaugeView.prototype.v = function (a) {\n    return FontUtil.getCurrentFontHeight(this.z, a);\n  };\n\n  XamRadialGaugeView.prototype.a8 = function (a) {\n    this.p = a;\n  };\n\n  XamRadialGaugeView.prototype.bv = function () {\n    return this.bq;\n  };\n\n  XamRadialGaugeView.prototype.bz = function () {\n    return this.bu;\n  };\n\n  XamRadialGaugeView.prototype.bx = function () {\n    return this.bs;\n  };\n\n  XamRadialGaugeView.prototype.at = function () {\n    this.am();\n    var a = Math.round(this.z.rootWrapper.width());\n    var b = Math.round(this.z.rootWrapper.height());\n    this.h.im = new Rect(0, 0, 0, a, b);\n\n    if (this.g != null) {\n      this.g.bf = this.h.im;\n    }\n  };\n\n  XamRadialGaugeView.prototype.j = function (a, b) {\n    return FontUtil.getFontInfo(this.z, a, b);\n  };\n\n  XamRadialGaugeView.prototype.aj = function (a) {\n    var e_5, _a, e_6, _b, e_7, _c;\n\n    a.scalePath = new PathVisualData(1, \"Scale\", this.bt);\n    a.needlePath = new PathVisualData(1, \"Needle\", this.br);\n    var b = this.br.j.j._inner[0].j;\n    a.needle.angle = b;\n    a.backingPath = new PathVisualData(1, \"Backing\", this.bq);\n    a.overlayPath = new PathVisualData(1, \"Overlay\", this.bs);\n    a.underlayPath = new PathVisualData(1, \"Underlay\", this.bu);\n    var c = this.i;\n\n    try {\n      for (var _d = tslib_1.__values(fromEnum(this.q)), _e = _d.next(); !_e.done; _e = _d.next()) {\n        var d = _e.value;\n\n        if (d._visibility == 0) {\n          var e = this.j(d, c);\n          var f = new ScaleLabelVisualData();\n          f.labelValue = d.ak;\n          f.labelPosition = PointData.b({\n            $type: Point_$type,\n            x: d.n,\n            y: d.o\n          });\n          f.labelSize = SizeData.b(this.b2(d));\n          f.appearance = AppearanceHelper.c(d, e);\n          a.scaleLabels.add(f);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    try {\n      for (var _f = tslib_1.__values(fromEnum(this.r)), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var g = _g.value;\n\n        if (g._visibility == 0) {\n          var h = new ScaleTickmarkVisualData();\n          h.tickPath = new PathVisualData(1, \"tickmarks\", g);\n          a.scaleTickmarks.add(h);\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = tslib_1.__values(fromEnum(this.s)), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var i = _j.value;\n\n        if (i._visibility == 0) {\n          var j = new RangeVisualData();\n          var k = new PathVisualData(1, \"range\", i);\n          j.rangePath = k;\n          a.ranges.add(j);\n        }\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n  };\n\n  XamRadialGaugeView.prototype.ar = function (a, b, c) {\n    var d = b;\n    var e = c;\n\n    if (!this.l) {\n      switch (a) {\n        case XamRadialGauge.$$p[29]:\n          this.bk = e;\n          break;\n\n        case XamRadialGauge.$$p[32]:\n          this.bl = e;\n          break;\n\n        case XamRadialGauge.$$p[33]:\n          this.bm = e;\n          break;\n\n        case XamRadialGauge.$$p[35]:\n          this.bn = e;\n          break;\n\n        case XamRadialGauge.$$p[0]:\n          this.bh = e;\n          break;\n\n        case XamRadialGauge.$$p[4]:\n          this.bi = e;\n          break;\n\n        case XamRadialGauge.$$p[48]:\n          this.bo = e;\n          break;\n\n        case XamRadialGauge.$$p[56]:\n          this.bp = e;\n          break;\n\n        case XamRadialGauge.$$p[22]:\n          this.bj = e;\n          break;\n      }\n\n      if (e == null) {\n        this.bc();\n      }\n    }\n  };\n\n  XamRadialGaugeView.prototype.aw = function (a, b) {\n    if (!this.l) {\n      this.e = b;\n\n      if (this.e == null) {\n        this.h.ah = this.c;\n      }\n    }\n  };\n\n  XamRadialGaugeView.prototype.ax = function (a, b) {\n    if (!this.l) {\n      this.f = b;\n\n      if (this.f == null) {\n        this.h.ai = this.d;\n      }\n    }\n  };\n\n  XamRadialGaugeView.prototype.a1 = function () {\n    this.u = this.h.bt;\n  };\n\n  XamRadialGaugeView.$t = markType(XamRadialGaugeView, 'XamRadialGaugeView');\n  return XamRadialGaugeView;\n}(Base);\n\nexport { XamRadialGaugeView };","map":{"version":3,"sources":["../../../../src/igniteui-gauges/lib/XamRadialGauge_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Control } from \"igniteui-react-core\";\nimport { INotifyPropertyChanged_$type, Base, PropertyChangedEventArgs, runOn, delegateCombine, Point_$type, Number_$type, enumGetBox, Delegate_$type, typeCast, String_$type, Array_$type, delegateRemove, fromEn, fromEnum, markType, markDep, TypeRegistrar } from \"igniteui-react-core\";\nimport { DoubleAnimator } from \"igniteui-react-core\";\nimport { BrushCollection } from \"igniteui-react-core\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { SweepDirection_$type } from \"igniteui-react-core\";\nimport { Brush } from \"igniteui-react-core\";\nimport { RadialGaugeNeedleShape_$type } from \"./RadialGaugeNeedleShape\";\nimport { RadialGaugePivotShape_$type } from \"./RadialGaugePivotShape\";\nimport { RadialGaugeScaleOversweepShape_$type } from \"./RadialGaugeScaleOversweepShape\";\nimport { RadialGaugeBackingShape_$type } from \"./RadialGaugeBackingShape\";\nimport { RadialGaugeRangeCollection } from \"./RadialGaugeRangeCollection\";\nimport { RadialGaugeDuplicateLabelOmissionStrategy_$type } from \"./RadialGaugeDuplicateLabelOmissionStrategy\";\nimport { BindingFormatter } from \"igniteui-react-core\";\nimport { RadialGaugeScaler } from \"./RadialGaugeScaler\";\nimport { Rect } from \"igniteui-react-core\";\nimport { RadialGaugeFrame } from \"./RadialGaugeFrame\";\nimport { StackPool$1 } from \"igniteui-react-core\";\nimport { Path } from \"igniteui-react-core\";\nimport { TextBlock } from \"igniteui-react-core\";\nimport { Size } from \"igniteui-react-core\";\nimport { Stack$1 } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { GeometryUtil } from \"igniteui-react-core\";\nimport { FormatRadialGaugeLabelEventArgs } from \"./FormatRadialGaugeLabelEventArgs\";\nimport { AlignRadialGaugeLabelEventArgs } from \"./AlignRadialGaugeLabelEventArgs\";\nimport { DoubleValueChangedEventArgs } from \"igniteui-react-core\";\nimport { DeviceUtils } from \"igniteui-react-core\";\nimport { XamRadialGaugeRange } from \"./XamRadialGaugeRange\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PolygonUtil } from \"igniteui-react-core\";\nimport { TransformGroup } from \"igniteui-react-core\";\nimport { RotateTransform } from \"igniteui-react-core\";\nimport { RadialGaugeNeedleParameters } from \"./RadialGaugeNeedleParameters\";\nimport { RadialGaugeNeedlePreparer } from \"./RadialGaugeNeedlePreparer\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { Tuple$2 } from \"igniteui-react-core\";\nimport { RadialGaugeRangeFrame } from \"./RadialGaugeRangeFrame\";\nimport { ArcSegment } from \"igniteui-react-core\";\nimport { LineSegment } from \"igniteui-react-core\";\nimport { GaugeVisualData } from \"./GaugeVisualData\";\nimport { RectData } from \"igniteui-react-core\";\nimport { ScaleLabelVisualDataList } from \"./ScaleLabelVisualDataList\";\nimport { ScaleTickmarkVisualDataList } from \"./ScaleTickmarkVisualDataList\";\nimport { RangeVisualDataList } from \"./RangeVisualDataList\";\nimport { NeedleVisualData } from \"./NeedleVisualData\";\nimport { FontUtil } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity, truncate } from \"igniteui-react-core\";\nimport { EventProxy } from \"igniteui-react-core\";\nimport { RenderingContext } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\nimport { BrushUtil } from \"igniteui-react-core\";\nimport { CanvasViewRenderer } from \"igniteui-react-core\";\nimport { ScaleLabelVisualData } from \"./ScaleLabelVisualData\";\nimport { ScaleTickmarkVisualData } from \"./ScaleTickmarkVisualData\";\nimport { RangeVisualData } from \"./RangeVisualData\";\nimport { PathVisualData } from \"igniteui-react-core\";\nimport { PointData } from \"igniteui-react-core\";\nimport { SizeData } from \"igniteui-react-core\";\nimport { AppearanceHelper } from \"igniteui-react-core\";\nimport { arrayCopy1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar XamRadialGauge = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(XamRadialGauge, _super);\n    function XamRadialGauge() {\n        var _this = _super.call(this) || this;\n        _this.propertyChanged = null;\n        _this._view = null;\n        _this.ay = null;\n        _this.bn = 0;\n        _this.bm = 100;\n        _this.a8 = false;\n        _this.formatLabel = null;\n        _this.aj = null;\n        _this.alignLabel = null;\n        _this.valueChanged = null;\n        _this.a7 = false;\n        _this.av = null;\n        _this.io = new Size(1, NaN, NaN);\n        _this.il = null;\n        _this.bj = null;\n        _this.bk = null;\n        _this.aq = null;\n        _this.ap = null;\n        _this.ao = null;\n        _this.bl = new Stack$1(TextBlock.$);\n        _this.bi = new List$1(Path.$, 0);\n        _this.bh = new List$1(Path.$, 0);\n        _this.bg = new List$1(Path.$, 0);\n        _this.bq = 0;\n        _this.a5 = null;\n        _this.a3 = null;\n        _this.a2 = null;\n        _this.a4 = null;\n        _this.bp = NaN;\n        _this.bo = 1;\n        _this.view = new XamRadialGaugeView(_this);\n        _this.view.av();\n        _this.il = Rect.empty;\n        _this.aq = new RadialGaugeFrame();\n        _this.ap = new RadialGaugeFrame();\n        _this.ao = new RadialGaugeFrame();\n        _this.ranges = new RadialGaugeRangeCollection();\n        _this.a7 = true;\n        _this.ay = new DoubleAnimator(0, 1, _this.dn);\n        var a = _this.ay;\n        a.propertyChanged = delegateCombine(a.propertyChanged, runOn(_this, _this.fn));\n        _this.ab = XamRadialGauge.$;\n        _this.a2 = ((function () {\n            var $ret = new StackPool$1(TextBlock.$);\n            $ret.b = runOn(_this.view, _this.view.an);\n            $ret.c = runOn(_this.view, _this.view.ao);\n            $ret.d = runOn(_this.view, _this.view.ap);\n            $ret.j = runOn(_this.view, _this.view.be);\n            return $ret;\n        })());\n        _this.a5 = ((function () {\n            var $ret = new StackPool$1(Path.$);\n            $ret.b = runOn(_this.view, _this.view.ay);\n            $ret.c = runOn(_this.view, _this.view.az);\n            $ret.d = runOn(_this.view, _this.view.a0);\n            $ret.j = runOn(_this.view, _this.view.b0);\n            return $ret;\n        })());\n        _this.a3 = ((function () {\n            var $ret = new StackPool$1(Path.$);\n            $ret.b = runOn(_this.view, _this.view.ay);\n            $ret.c = runOn(_this.view, _this.view.az);\n            $ret.d = runOn(_this.view, _this.view.a0);\n            $ret.j = runOn(_this.view, _this.view.b0);\n            return $ret;\n        })());\n        _this.a4 = ((function () {\n            var $ret = new StackPool$1(Path.$);\n            $ret.b = runOn(_this.view, _this.view.a3);\n            $ret.c = runOn(_this.view, _this.view.a4);\n            $ret.d = runOn(_this.view, _this.view.a5);\n            $ret.j = runOn(_this.view, _this.view.b1);\n            return $ret;\n        })());\n        _this.av = new RadialGaugeScaler(_this.bs, _this.br, _this.da, _this.c5, _this.ii);\n        return _this;\n    }\n    XamRadialGauge.prototype.fz = function (a) {\n        this.f4(a);\n    };\n    XamRadialGauge.prototype.f4 = function (a) {\n        var b = this.propertyChanged;\n        if (b != null) {\n            b(this, new PropertyChangedEventArgs(a));\n        }\n    };\n    XamRadialGauge.prototype.onDetachedFromUI = function () {\n        this.view.au();\n    };\n    XamRadialGauge.prototype.onAttachedToUI = function () {\n        this.view.aq();\n    };\n    XamRadialGauge.prototype.dd = function (a) {\n        return this.av.h(a);\n    };\n    XamRadialGauge.prototype.dl = function (a) {\n        return this.av.j(a);\n    };\n    XamRadialGauge.prototype.b5 = function (a) {\n        var b = this.im;\n        var c = Math.min(b.width / 2, b.height / 2) * this.c0;\n        var d = this.ij();\n        var e = d.x;\n        var f = d.y;\n        var g = GeometryUtil.e({ $type: Point_$type, x: e, y: f }, a);\n        if (this.av != null && g < this.av.i) {\n            g += Math.PI * 2;\n        }\n        if (this.av != null && g > this.av.g) {\n            g -= Math.PI * 2;\n        }\n        var h = this.dl(g);\n        return h;\n    };\n    XamRadialGauge.prototype.ik = function (a, b) {\n        var c = this.dd(a);\n        var d = Math.min(this.im.width / 2, this.im.height / 2) * this.c0 * b;\n        var e = this.ij();\n        var f = e.x + Math.cos(c) * d;\n        var g = e.y + Math.sin(c) * d;\n        return { $type: Point_$type, x: f, y: g };\n    };\n    XamRadialGauge.prototype.h9 = function (a, b) {\n        if (b != null && b.count > 0) {\n            return b.item(a % b.count);\n        }\n        else {\n            return null;\n        }\n    };\n    Object.defineProperty(XamRadialGauge.prototype, \"view\", {\n        get: function () {\n            return this._view;\n        },\n        set: function (a) {\n            this._view = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XamRadialGauge.prototype.fn = function (a, b) {\n        this.dk = this.ay.o;\n    };\n    Object.defineProperty(XamRadialGauge.prototype, \"bs\", {\n        get: function () {\n            return this.bn;\n        },\n        set: function (a) {\n            this.bn = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XamRadialGauge.prototype, \"br\", {\n        get: function () {\n            return this.bm;\n        },\n        set: function (a) {\n            this.bm = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XamRadialGauge.prototype, \"cw\", {\n        get: function () {\n            return this.c(XamRadialGauge.hl);\n        },\n        set: function (a) {\n            this.h(XamRadialGauge.hl, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XamRadialGauge.prototype.refresh = function () {\n        this.a7 = true;\n        this.view.a7();\n    };\n    XamRadialGauge.prototype.fy = function (a, b, c) {\n        switch (a) {\n            case XamRadialGauge.$$p[29]:\n            case XamRadialGauge.$$p[32]:\n            case XamRadialGauge.$$p[33]:\n            case XamRadialGauge.$$p[35]:\n            case XamRadialGauge.$$p[0]:\n            case XamRadialGauge.$$p[4]:\n            case XamRadialGauge.$$p[48]:\n            case XamRadialGauge.$$p[56]:\n            case XamRadialGauge.$$p[22]:\n                this.view.ar(a, b, c);\n                break;\n            case XamRadialGauge.$$p[45]:\n                this.view.aw(b, c);\n                break;\n            case XamRadialGauge.$$p[46]:\n                this.view.ax(b, c);\n                break;\n            case \"PixelScalingRatio\":\n                if (isNaN_(DeviceUtils.a(this.cz))) {\n                    this.bt = 1;\n                }\n                else {\n                    this.bt = DeviceUtils.a(this.cz);\n                }\n                break;\n            case \"ActualPixelScalingRatio\":\n                this.view.a1();\n                break;\n        }\n        switch (a) {\n            case XamRadialGauge.$$p[17]:\n            case XamRadialGauge.$$p[18]:\n                if (this.d9 != null) {\n                    this.aj = new BindingFormatter();\n                    this.aj.j = this.d9;\n                    this.aj.d = this.ag;\n                }\n                else {\n                    this.aj = null;\n                }\n                this.a7 = true;\n                this.view.a7();\n                break;\n            case XamRadialGauge.$$p[62]:\n                if (this.valueChanged != null) {\n                    this.valueChanged(this, new DoubleValueChangedEventArgs(b, c));\n                }\n                this.a7 = true;\n                this.view.a7();\n                break;\n            case XamRadialGauge.$$p[0]:\n            case XamRadialGauge.$$p[4]:\n            case XamRadialGauge.$$p[7]:\n            case XamRadialGauge.$$p[6]:\n            case XamRadialGauge.$$p[2]:\n            case XamRadialGauge.$$p[3]:\n            case XamRadialGauge.$$p[5]:\n            case XamRadialGauge.$$p[1]:\n                this.a7 = true;\n                this.view.a7();\n                break;\n            case XamRadialGauge.$$p[55]:\n            case XamRadialGauge.$$p[53]:\n            case XamRadialGauge.$$p[49]:\n            case XamRadialGauge.$$p[51]:\n            case XamRadialGauge.$$p[52]:\n                this.av = new RadialGaugeScaler(this.bs, this.br, this.da, this.c5, this.ii);\n                this.a7 = true;\n                this.view.a7();\n                break;\n            case XamRadialGauge.$$p[21]:\n            case XamRadialGauge.$$p[20]:\n                var d = this.cc;\n                var e = this.ca;\n                if (isInfinity(d) || isNaN_(d)) {\n                    d = 0;\n                }\n                if (isInfinity(e) || isNaN_(e)) {\n                    e = 100;\n                }\n                this.bs = Math.min(d, e);\n                this.br = Math.max(d, e);\n                this.av = new RadialGaugeScaler(this.bs, this.br, this.da, this.c5, this.ii);\n                this.a7 = true;\n                this.view.a7();\n                break;\n            case XamRadialGauge.$$p[13]:\n            case XamRadialGauge.$$p[54]:\n            case XamRadialGauge.$$p[50]:\n            case XamRadialGauge.$$p[16]:\n            case XamRadialGauge.$$p[58]:\n            case XamRadialGauge.$$p[57]:\n            case XamRadialGauge.$$p[56]:\n            case XamRadialGauge.$$p[48]:\n            case XamRadialGauge.$$p[19]:\n            case XamRadialGauge.$$p[23]:\n            case XamRadialGauge.$$p[59]:\n            case XamRadialGauge.$$p[26]:\n            case XamRadialGauge.$$p[22]:\n            case XamRadialGauge.$$p[25]:\n            case XamRadialGauge.$$p[24]:\n            case XamRadialGauge.$$p[8]:\n            case XamRadialGauge.$$p[9]:\n            case XamRadialGauge.$$p[44]:\n            case XamRadialGauge.$$p[10]:\n                this.av = new RadialGaugeScaler(this.bs, this.br, this.da, this.c5, this.ii);\n                this.a7 = true;\n                this.view.a7();\n                break;\n            case XamRadialGauge.$$p[42]:\n            case XamRadialGauge.$$p[30]:\n            case XamRadialGauge.$$p[29]:\n            case XamRadialGauge.$$p[32]:\n            case \"NeedleStartWidth\":\n            case XamRadialGauge.$$p[31]:\n            case XamRadialGauge.$$p[33]:\n            case XamRadialGauge.$$p[35]:\n            case XamRadialGauge.$$p[43]:\n            case XamRadialGauge.$$p[37]:\n            case XamRadialGauge.$$p[27]:\n            case XamRadialGauge.$$p[28]:\n            case XamRadialGauge.$$p[39]:\n            case XamRadialGauge.$$p[40]:\n            case XamRadialGauge.$$p[38]:\n            case XamRadialGauge.$$p[34]:\n            case XamRadialGauge.$$p[36]:\n            case XamRadialGauge.$$p[41]:\n                this.a7 = true;\n                this.view.a7();\n                break;\n            case XamRadialGauge.$$p[60]:\n                this.ay.r = this.dn;\n                this.view.a7();\n                break;\n            case XamRadialGauge.$$p[61]:\n                this.ay.b = this.a0;\n                break;\n            case \"TransitionProgress\":\n                if (this.dk >= 1) {\n                    this.ay.w();\n                    var f = this.ap;\n                    this.ap = this.aq;\n                    this.aq = f;\n                    this.f1();\n                    this.f2();\n                    this.f3();\n                    this.f9(this.ap);\n                    this.ga(this.ap);\n                    this.gb(this.ap);\n                    this.view.ae();\n                    return;\n                }\n                this.ao.e(this.dk, this.aq, this.ap);\n                this.f9(this.ao);\n                this.ga(this.ao);\n                this.gb(this.ao);\n                this.view.ae();\n                break;\n            case XamRadialGauge.$$p[47]:\n                var g = b;\n                var h = c;\n                if (g != null) {\n                    var i = g;\n                    i.collectionChanged = delegateRemove(i.collectionChanged, runOn(this, this.f7));\n                }\n                if (h != null) {\n                    var j = h;\n                    j.collectionChanged = delegateCombine(j.collectionChanged, runOn(this, this.f7));\n                }\n                this.a7 = true;\n                this.view.a7();\n                break;\n            case XamRadialGauge.$$p[46]:\n            case XamRadialGauge.$$p[45]:\n                this.a7 = true;\n                this.view.a7();\n                break;\n            case XamRadialGauge.$$p[11]:\n            case XamRadialGauge.$$p[12]:\n                this.a7 = true;\n                this.view.bd();\n                this.view.a7();\n                break;\n        }\n        this.fz(a);\n    };\n    XamRadialGauge.prototype.gd = function () {\n        this.view.ba();\n    };\n    XamRadialGauge.prototype.f7 = function (a, b) {\n        var e_1, _a, e_2, _b;\n        if (b.oldItems != null) {\n            try {\n                for (var _c = tslib_1.__values(fromEn(b.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var c = _d.value;\n                    c.propertyChanged = delegateRemove(c.propertyChanged, runOn(this, this.f6));\n                }\n            }\n            catch (e_1_1) {\n                e_1 = { error: e_1_1 };\n            }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return))\n                        _a.call(_c);\n                }\n                finally {\n                    if (e_1)\n                        throw e_1.error;\n                }\n            }\n        }\n        if (b.newItems != null) {\n            try {\n                for (var _e = tslib_1.__values(fromEn(b.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var d = _f.value;\n                    d.propertyChanged = delegateCombine(d.propertyChanged, runOn(this, this.f6));\n                }\n            }\n            catch (e_2_1) {\n                e_2 = { error: e_2_1 };\n            }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return))\n                        _b.call(_e);\n                }\n                finally {\n                    if (e_2)\n                        throw e_2.error;\n                }\n            }\n        }\n        this.a7 = true;\n        this.view.a7();\n    };\n    XamRadialGauge.prototype.f6 = function (a, b) {\n        this.a7 = true;\n        this.view.a7();\n    };\n    Object.defineProperty(XamRadialGauge.prototype, \"im\", {\n        get: function () {\n            return this.il;\n        },\n        set: function (a) {\n            var b = this.il;\n            this.il = a;\n            if (!b.equals1(this.il)) {\n                this.f0(b, this.il);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XamRadialGauge.prototype.f0 = function (a, b) {\n        this.a7 = true;\n        this.view.a7();\n    };\n    XamRadialGauge.prototype.bb = function () {\n        return !isNaN_(this.bs) && !isNaN_(this.br) && !isNaN_(this.dm) && !this.im.isEmpty && this.view.n();\n    };\n    XamRadialGauge.prototype.fo = function () {\n        if (!this.bb()) {\n            return;\n        }\n        if (this.a7) {\n            if (this.a6) {\n                if (this.ay.g) {\n                    this.ay.t();\n                }\n                var a = this.aq;\n                this.aq = this.ao;\n                this.ao = a;\n            }\n            else {\n                var b = this.aq;\n                this.aq = this.ap;\n                this.ap = b;\n            }\n        }\n        else if (this.a6) {\n            this.ao.e(this.dk, this.aq, this.ap);\n            this.f9(this.ao);\n            this.ga(this.ao);\n            this.gb(this.ao);\n        }\n        if (this.a7) {\n            this.f2();\n            this.f3();\n            this.f1();\n        }\n        if (this.a7 && this.be) {\n            this.gc();\n            this.ao.e(this.dk, this.aq, this.ap);\n            this.f9(this.ao);\n            this.ga(this.ao);\n            this.gb(this.ao);\n        }\n        else {\n            if (this.a7) {\n                this.f9(this.ap);\n                this.ga(this.ap);\n                this.gb(this.ap);\n            }\n        }\n        this.a7 = false;\n        this.view.ae();\n    };\n    XamRadialGauge.prototype.gc = function () {\n        this.bq = 0;\n        this.ay.w();\n        this.ay.v();\n    };\n    Object.defineProperty(XamRadialGauge.prototype, \"be\", {\n        get: function () {\n            return this.dn > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XamRadialGauge.prototype.f9 = function (a) {\n        var b = this.im;\n        var c = this.view.bv();\n        var d = a.a;\n        var e = Math.min(b.width / 2, b.height / 2) * a.d;\n        var f = this.ij();\n        var g = f.x;\n        var h = f.y;\n        var i = d.n(e, g, h);\n        c.ak = i;\n        c._fill = d.l;\n        c._stroke = d.m;\n        c.ac = d.h;\n    };\n    XamRadialGauge.prototype.bc = function (a) {\n        if (this.bj == null) {\n            return false;\n        }\n        return PolygonUtil.a(this.bj, a);\n    };\n    XamRadialGauge.prototype.needleContainsPoint = function (a, b) {\n        if (this.bj == null) {\n            return false;\n        }\n        return b ? PolygonUtil.a(this.bk, a) : PolygonUtil.a(this.bj, a);\n    };\n    XamRadialGauge.prototype.ga = function (a) {\n        var b = this.im;\n        var c = a.b.ab;\n        var d = a.b.aj;\n        var e = a.b.ak;\n        var f = a.b.ae;\n        var g = a.b.ah;\n        var h = a.b.ai;\n        var i = a.b.aa;\n        var j = this.view.bw();\n        var k = this.view.bz();\n        var l = this.view.bx();\n        var m = a.b;\n        var n = Math.min(b.width / 2, b.height / 2) * a.d;\n        var o = this.ij();\n        var p = o.x;\n        var q = o.y;\n        var r = m.am(n, p, q);\n        var s = c * 180 / Math.PI;\n        j.ak = r;\n        var t = new TransformGroup();\n        t.j.add(((function () {\n            var $ret = new RotateTransform();\n            $ret.k = p;\n            $ret.l = q;\n            $ret.j = s;\n            return $ret;\n        })()));\n        j.j = t;\n        j._fill = d;\n        j._stroke = e;\n        j.ac = f;\n        k.ak = m.an(n, p, q);\n        l.ak = m.al(n, p, q);\n        k._fill = g;\n        k._stroke = h;\n        k.ac = i;\n        l._fill = g;\n        l._stroke = h;\n        l.ac = i;\n        var u = new List$1(Point_$type, 0);\n        var v = Math.cos(c);\n        var w = Math.sin(c);\n        var x = m.af / 2;\n        var y = { $type: Point_$type, x: m.ad * n, y: x * n };\n        var z = { $type: Point_$type, x: m.ac * n, y: x * n };\n        var aa = { $type: Point_$type, x: m.ac * n, y: -x * n };\n        var ab = { $type: Point_$type, x: m.ad * n, y: -x * n };\n        y = { $type: Point_$type, x: y.x * v - y.y * w + p, y: y.y * v + y.x * w + q };\n        z = { $type: Point_$type, x: z.x * v - z.y * w + p, y: z.y * v + z.x * w + q };\n        aa = { $type: Point_$type, x: aa.x * v - aa.y * w + p, y: aa.y * v + aa.x * w + q };\n        ab = { $type: Point_$type, x: ab.x * v - ab.y * w + p, y: ab.y * v + ab.x * w + q };\n        u.add(y);\n        u.add(z);\n        u.add(aa);\n        u.add(ab);\n        this.bj = u;\n        x = (m.af / 2) * n;\n        var ac = { $type: Point_$type, x: m.ad * n, y: x };\n        var ad = { $type: Point_$type, x: m.ac * n, y: x };\n        var ae = { $type: Point_$type, x: m.ac * n, y: -x };\n        var af = { $type: Point_$type, x: m.ad * n, y: -x };\n        ac = { $type: Point_$type, x: ac.x * v - ac.y * w + p, y: ac.y * v + ac.x * w + q };\n        ad = { $type: Point_$type, x: ad.x * v - ad.y * w + p, y: ad.y * v + ad.x * w + q };\n        ae = { $type: Point_$type, x: ae.x * v - ae.y * w + p, y: ae.y * v + ae.x * w + q };\n        af = { $type: Point_$type, x: af.x * v - af.y * w + p, y: af.y * v + af.x * w + q };\n        this.bk = new List$1(Point_$type, 0);\n        this.bk.add(ac);\n        this.bk.add(ad);\n        this.bk.add(ae);\n        this.bk.add(af);\n    };\n    XamRadialGauge.prototype.ij = function () {\n        var a = this.im;\n        var b = isNaN_(this.b3) ? 0.5 : this.b3;\n        var c = isNaN_(this.b4) ? 0.5 : this.b4;\n        var d = a.left + b * a.width;\n        var e = a.top + c * a.height;\n        return { $type: Point_$type, x: d, y: e };\n    };\n    XamRadialGauge.prototype.c2 = function (a) {\n        if (isInfinity(a)) {\n            return NaN;\n        }\n        return a;\n    };\n    XamRadialGauge.prototype.f2 = function () {\n        var a = this.ap;\n        a.d = this.c0;\n        var b = this.im;\n        var c = this.av;\n        var d = this.c4(this.dm, 0);\n        var e = this.av.h(d);\n        var f = new RadialGaugeNeedlePreparer();\n        var g = new RadialGaugeNeedleParameters();\n        g.b = this.ar;\n        g.o = this.c2(this.cx);\n        g.t = this.ib;\n        g.u = this.ic;\n        g.m = this.c2(this.cv);\n        g.k = this.c2(this.cn);\n        g.d = this.c2(this.cl);\n        g.e = this.c2(this.cm);\n        g.p = this.c2(this.ct);\n        g.q = this.c2(this.cu);\n        g.i = this.c2(this.cs);\n        g.f = this.c2(this.cp);\n        g.r = this.id;\n        g.s = this.ie;\n        g.c = this.as;\n        g.h = this.c2(this.cq);\n        g.n = this.c2(this.cw);\n        g.l = this.c2(this.co);\n        if (isNaN_(g.o)) {\n            g.o = XamRadialGauge.cy;\n        }\n        if (isNaN_(g.h)) {\n            g.h = XamRadialGauge.cr;\n        }\n        f.b = g;\n        f.e(a.b);\n        a.b.ab = e;\n    };\n    XamRadialGauge.prototype.gb = function (a) {\n        var e_3, _a;\n        var b = this.im;\n        var c = a.c;\n        var d = c.c;\n        var e = c.e;\n        var f = c.g;\n        var g = c.h;\n        var h = c.f;\n        var i = c.d;\n        var j = c.l;\n        var k = c.t;\n        var l = c.q;\n        var m = c.j;\n        var n = c.i;\n        var o = c.v;\n        var p = c.u;\n        var q = c.s;\n        var r = c.p;\n        var s = c.ab;\n        var t = c.ac;\n        var u = c.w;\n        var v = c.aa;\n        var w = c.n;\n        var x = c.m;\n        var y = c.o;\n        var z = this.view.by();\n        var aa = c.r;\n        k = Math.max(0, k);\n        l = Math.max(0, l);\n        var ab = true;\n        if (this.au == 1 || (this.au == 0 && this.am == 0)) {\n            ab = false;\n        }\n        var ac = Math.min(b.width / 2, b.height / 2) * a.d;\n        var ad = this.ij();\n        var ae = ad.x;\n        var af = ad.y;\n        var ag = q;\n        var ah = r;\n        q -= aa;\n        r += aa;\n        var ai = false;\n        if ((r - q) >= 2 * Math.PI) {\n            ai = true;\n            q = 0;\n            r = Math.PI;\n        }\n        var aj = new PathGeometry();\n        var ak = new PathFigure();\n        var al = Math.cos(q);\n        var am = Math.sin(q);\n        var an = Math.cos(r);\n        var ao = Math.sin(r);\n        var ap = ae + (ac * k) * al;\n        var aq = af + (ac * k) * am;\n        var ar = ae + (ac * l) * al;\n        var as = af + (ac * l) * am;\n        var at = ae + (ac * k) * an;\n        var au = af + (ac * k) * ao;\n        var av = ae + (ac * l) * an;\n        var aw = af + (ac * l) * ao;\n        var ax = ai;\n        if (aa != 0 && !ai && ab) {\n            var ay = Math.cos(ag);\n            var az = Math.sin(ag);\n            var a0 = Math.cos(ah);\n            var a1 = Math.sin(ah);\n            var a2 = ae + (ac * k) * ay;\n            var a3 = af + (ac * k) * az;\n            var a4 = ae + (ac * l) * ay;\n            var a5 = af + (ac * l) * az;\n            var a6 = ae + (ac * k) * a0;\n            var a7 = af + (ac * k) * a1;\n            var a8 = ae + (ac * l) * a0;\n            var a9 = af + (ac * l) * a1;\n            var ba = aq;\n            var bb = ar;\n            if (a4 - a2 != 0) {\n                bb = ae;\n                var bc = (a5 - a3) / (a4 - a2);\n                ba = bc * (ae - ar) + as;\n            }\n            var bd = { $type: Point_$type, x: bb, y: ba };\n            var be = GeometryUtil.i(bd, { $type: Point_$type, x: ar, y: as }, { $type: Point_$type, x: ae, y: af }, ac * k);\n            var bf = au;\n            var bg = av;\n            if (a8 - a6 != 0) {\n                bg = ae;\n                var bh = (a9 - a7) / (a8 - a6);\n                bf = bh * (ae - av) + aw;\n            }\n            var bi = { $type: Point_$type, x: bg, y: bf };\n            var bj = GeometryUtil.i(bi, { $type: Point_$type, x: av, y: aw }, { $type: Point_$type, x: ae, y: af }, ac * k);\n            if (isNaN_(be.c.x) || isNaN_(be.c.y) || isNaN_(be.d.x) || isNaN_(be.d.y) || isNaN_(bj.c.x) || isNaN_(bj.c.y) || isNaN_(bj.d.x) || isNaN_(bj.d.y)) {\n                ai = true;\n                q = 0;\n                r = Math.PI;\n            }\n            else {\n                var bk = void 0;\n                var bl = void 0;\n                if ((Math.pow(be.c.x - ar, 2) + Math.pow(be.c.y - as, 2)) < (Math.pow(be.d.x - ar, 2) + Math.pow(be.d.y - as, 2))) {\n                    bk = be.c;\n                }\n                else {\n                    bk = be.d;\n                }\n                if ((Math.pow(bj.c.x - av, 2) + Math.pow(bj.c.y - aw, 2)) < (Math.pow(bj.d.x - av, 2) + Math.pow(bj.d.y - aw, 2))) {\n                    bl = bj.c;\n                }\n                else {\n                    bl = bj.d;\n                }\n                if ((Math.pow(bl.x - ar, 2) + Math.pow(bl.y - as, 2)) <= (Math.pow(bk.x - ar, 2) + Math.pow(bk.y - as, 2))) {\n                    ai = true;\n                    q = 0;\n                    r = Math.PI;\n                }\n                else {\n                    var bm = GeometryUtil.e({ $type: Point_$type, x: ae, y: af }, bk);\n                    var bn = GeometryUtil.e({ $type: Point_$type, x: ae, y: af }, bl);\n                    var bo = q;\n                    var bp = r;\n                    while (bo > Math.PI * 2) {\n                        bo -= Math.PI * 2;\n                    }\n                    while (bp > Math.PI * 2) {\n                        bp -= Math.PI * 2;\n                    }\n                    var bq = Math.min(Math.abs(bm - bo), Math.abs((Math.PI * 2 - bm) - bo));\n                    var br = Math.min(Math.abs(bn - bp), Math.abs((Math.PI * 2 - bn) - bp));\n                    if ((r - q) + bq + br >= 2 * Math.PI) {\n                        ai = true;\n                        q = 0;\n                        r = Math.PI;\n                    }\n                    else {\n                        ap = bk.x;\n                        aq = bk.y;\n                        at = bl.x;\n                        au = bl.y;\n                    }\n                }\n            }\n        }\n        if (ai && !ax) {\n            al = Math.cos(q);\n            am = Math.sin(q);\n            an = Math.cos(r);\n            ao = Math.sin(r);\n            ap = ae + (ac * k) * al;\n            aq = af + (ac * k) * am;\n            ar = ae + (ac * l) * al;\n            as = af + (ac * l) * am;\n            at = ae + (ac * k) * an;\n            au = af + (ac * k) * ao;\n            av = ae + (ac * l) * an;\n            aw = af + (ac * l) * ao;\n        }\n        if (ai) {\n            ak._startPoint = { $type: Point_$type, x: ar, y: as };\n            ak._segments.add(((function () {\n                var $ret = new ArcSegment();\n                $ret.e = { $type: Point_$type, x: av, y: aw };\n                $ret.b = false;\n                $ret.d = 1;\n                $ret.f = new Size(1, ac * l, ac * l);\n                return $ret;\n            })()));\n            ak._segments.add(((function () {\n                var $ret = new ArcSegment();\n                $ret.e = { $type: Point_$type, x: ar, y: as };\n                $ret.b = false;\n                $ret.d = 1;\n                $ret.f = new Size(1, ac * l, ac * l);\n                return $ret;\n            })()));\n            var bs = new PathFigure();\n            bs._startPoint = { $type: Point_$type, x: ap, y: aq };\n            bs._segments.add(((function () {\n                var $ret = new ArcSegment();\n                $ret.e = { $type: Point_$type, x: at, y: au };\n                $ret.b = false;\n                $ret.d = 0;\n                $ret.f = new Size(1, ac * k, ac * k);\n                return $ret;\n            })()));\n            bs._segments.add(((function () {\n                var $ret = new ArcSegment();\n                $ret.e = { $type: Point_$type, x: ap, y: aq };\n                $ret.b = false;\n                $ret.d = 0;\n                $ret.f = new Size(1, ac * k, ac * k);\n                return $ret;\n            })()));\n            aj.c.add(ak);\n            aj.c.add(bs);\n        }\n        else {\n            ak._startPoint = { $type: Point_$type, x: ap, y: aq };\n            ak._segments.add(((function () {\n                var $ret = new LineSegment(1);\n                $ret.c = { $type: Point_$type, x: ar, y: as };\n                return $ret;\n            })()));\n            ak._segments.add(((function () {\n                var $ret = new ArcSegment();\n                $ret.e = { $type: Point_$type, x: av, y: aw };\n                $ret.b = (r - q) > Math.PI;\n                $ret.d = 1;\n                $ret.f = new Size(1, ac * l, ac * l);\n                return $ret;\n            })()));\n            ak._segments.add(((function () {\n                var $ret = new LineSegment(1);\n                $ret.c = { $type: Point_$type, x: at, y: au };\n                return $ret;\n            })()));\n            ak._segments.add(((function () {\n                var $ret = new ArcSegment();\n                $ret.e = { $type: Point_$type, x: ap, y: aq };\n                $ret.b = (r - q) > Math.PI;\n                $ret.d = 0;\n                $ret.f = new Size(1, ac * k, ac * k);\n                return $ret;\n            })()));\n            aj.c.add(ak);\n        }\n        z.ak = aj;\n        z._fill = s;\n        var bt = this.a2;\n        bt.f = true;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.bl)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var bu = _c.value;\n                bt.n(bu);\n            }\n        }\n        catch (e_3_1) {\n            e_3 = { error: e_3_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_3)\n                    throw e_3.error;\n            }\n        }\n        this.bl.g();\n        var bv = c.z;\n        for (var bw = 0; bw < d.length; bw++) {\n            var bx = ae + (ac * j) * Math.cos(d[bw]);\n            var by = af + (ac * j) * Math.sin(d[bw]);\n            var bz = bt.a();\n            if (bz.ak != e[bw]) {\n                bz.ak = e[bw];\n            }\n            this.view.a9(bz, bv);\n            var b0 = h[bw];\n            var b1 = i[bw];\n            var b2 = f[bw];\n            var b3 = g[bw];\n            this.view.a2(bz, bx + b2, by + b3);\n            this.bl.h(bz);\n        }\n        bt.f = false;\n        var b4 = this.a5;\n        b4.f = true;\n        for (var b5 = 0; b5 < this.bi.count; b5++) {\n            b4.n(this.bi._inner[b5]);\n        }\n        this.bi.clear();\n        var _loop_1 = function (b6) {\n            var b7 = ae + (ac * o) * Math.cos(m[b6]);\n            var b8 = af + (ac * o) * Math.sin(m[b6]);\n            var b9 = ae + (ac * p) * Math.cos(m[b6]);\n            var ca = af + (ac * p) * Math.sin(m[b6]);\n            var cb = b4.a();\n            var cc = new PathGeometry();\n            var cd = new PathFigure();\n            cd._startPoint = { $type: Point_$type, x: b7, y: b8 };\n            cd._segments.add(((function () {\n                var $ret = new LineSegment(1);\n                $ret.c = { $type: Point_$type, x: b9, y: ca };\n                return $ret;\n            })()));\n            cc.c.add(cd);\n            cb.ak = cc;\n            cb._stroke = t;\n            cb.ac = u;\n            this_1.bi.add(cb);\n        };\n        var this_1 = this;\n        for (var b6 = 0; b6 < m.length; b6++) {\n            _loop_1(b6);\n        }\n        b4.f = false;\n        var ce = this.a3;\n        ce.f = true;\n        for (var cf = 0; cf < this.bg.count; cf++) {\n            ce.n(this.bg._inner[cf]);\n        }\n        this.bg.clear();\n        var _loop_2 = function (cg) {\n            var ch = ae + (ac * w) * Math.cos(n[cg]);\n            var ci = af + (ac * w) * Math.sin(n[cg]);\n            var cj = ae + (ac * x) * Math.cos(n[cg]);\n            var ck = af + (ac * x) * Math.sin(n[cg]);\n            var cl = ce.a();\n            var cm = new PathGeometry();\n            var cn = new PathFigure();\n            cn._startPoint = { $type: Point_$type, x: ch, y: ci };\n            cn._segments.add(((function () {\n                var $ret = new LineSegment(1);\n                $ret.c = { $type: Point_$type, x: cj, y: ck };\n                return $ret;\n            })()));\n            cm.c.add(cn);\n            cl.ak = cm;\n            cl._stroke = v;\n            cl.ac = y;\n            this_2.bg.add(cl);\n        };\n        var this_2 = this;\n        for (var cg = 0; cg < n.length; cg++) {\n            _loop_2(cg);\n        }\n        ce.f = false;\n        var co = this.a4;\n        co.f = true;\n        for (var cp = this.bh.count - 1; cp >= 0; cp--) {\n            co.n(this.bh._inner[cp]);\n        }\n        this.bh.clear();\n        for (var cq = 0; cq < c.k.count; cq++) {\n            var cr = c.k._inner[cq];\n            var cs = co.a();\n            cs.ak = cr.m(ac, ae, af);\n            cs._fill = cr.k;\n            cs._stroke = cr.l;\n            cs.ac = cr.h;\n            this.bh.add(cs);\n        }\n        this.view.a8(this.bh);\n        co.f = false;\n    };\n    XamRadialGauge.prototype.bf = function (a, b, c) {\n        var d = c / 10000;\n        if (isNaN_(d)) {\n            d = 1E-05;\n        }\n        var e = Math.abs(a - b);\n        if (e < d) {\n            return true;\n        }\n        return false;\n    };\n    XamRadialGauge.prototype.c3 = function (a) {\n        if (isInfinity(a)) {\n            return NaN;\n        }\n        return a;\n    };\n    XamRadialGauge.prototype.c1 = function (a, b) {\n        if (isInfinity(a)) {\n            return b;\n        }\n        return a;\n    };\n    XamRadialGauge.prototype.c4 = function (a, b) {\n        if (isInfinity(a) || isNaN_(a)) {\n            return b;\n        }\n        return a;\n    };\n    XamRadialGauge.prototype.f3 = function () {\n        var a = this.ap;\n        a.d = this.c3(this.c0);\n        if (isNaN_(a.d)) {\n            a.d = 1;\n        }\n        var b = this.im;\n        var c = this.av;\n        var d = this.c3(this.b6);\n        var e = this.c3(this.b9);\n        var f = this.c3(this.ce);\n        if (isNaN_(d)) {\n            d = (this.br - this.bs) / 10;\n        }\n        if (isNaN_(e)) {\n            e = d;\n        }\n        if (isNaN_(f)) {\n            f = 3;\n        }\n        var g = new List$1(Tuple$2.$.specialize(Number_$type, Number_$type), 0);\n        var h = c.i;\n        var i = c.g;\n        while (h >= Math.PI * 2) {\n            h -= Math.PI * 2;\n        }\n        while (i >= Math.PI * 2) {\n            i -= Math.PI * 2;\n        }\n        var j = Math.abs(i - h) < 0.0001;\n        var k = this.an == 1 || this.an == 3;\n        var l = this.an == 0 || this.an == 3;\n        for (var m = this.bs; m <= this.br || this.bf(m, this.br, e); m += e) {\n            if (j && this.bf(m, this.bs, e) && k) {\n                continue;\n            }\n            if (j && this.bf(m, this.br, e) && l) {\n                continue;\n            }\n            g.add(new Tuple$2(Number_$type, Number_$type, m, c.h(m)));\n            if (e == 0) {\n                break;\n            }\n        }\n        var n = new List$1(Number_$type, 0);\n        var o = new List$1(Number_$type, 0);\n        for (var p = this.bs; p <= this.br || this.bf(p, this.br, d); p += d) {\n            n.add(c.h(p));\n            for (var q = 0; q < f; q++) {\n                var r = (d / (f + 1)) * (q + 1);\n                if (r + p > this.br) {\n                    continue;\n                }\n                o.add(c.h(r + p));\n            }\n            if (d == 0) {\n                break;\n            }\n        }\n        if (a.c.c.length != g.count) {\n            a.c.c = new Array(g.count);\n            a.c.e = new Array(g.count);\n            a.c.f = new Array(g.count);\n            a.c.d = new Array(g.count);\n            a.c.g = new Array(g.count);\n            a.c.h = new Array(g.count);\n        }\n        if (a.c.j.length != n.count || a.c.i.length != o.count) {\n            a.c.j = new Array(n.count);\n            a.c.i = new Array(o.count);\n        }\n        var s = new FormatRadialGaugeLabelEventArgs();\n        s.startAngle = this.av.i;\n        s.endAngle = this.av.g;\n        s.actualMinimumValue = this.bs;\n        s.actualMaximumValue = this.br;\n        var t = new AlignRadialGaugeLabelEventArgs();\n        t.startAngle = s.startAngle;\n        t.endAngle = s.endAngle;\n        t.actualMinimumValue = s.actualMinimumValue;\n        t.actualMaximumValue = s.actualMaximumValue;\n        var _loop_3 = function (u) {\n            s.angle = g._inner[u].d;\n            t.angle = s.angle;\n            a.c.c[u] = g._inner[u].d;\n            var v = g._inner[u].c;\n            s.value = v;\n            var w = v;\n            if (this_3.aj == null) {\n                w = Math.round(v * 100) / 100;\n            }\n            s.label = (w).toString();\n            if (this_3.aj != null) {\n                s.label = this_3.aj.i(w);\n            }\n            if (this_3.formatLabel != null) {\n                this_3.formatLabel(this_3, s);\n            }\n            t.value = s.value;\n            t.label = s.label;\n            var x = s.label;\n            var y = this_3.view.b2(((function () {\n                var $ret = new TextBlock();\n                $ret.ak = x;\n                return $ret;\n            })()));\n            t.width = y.width;\n            t.height = y.height;\n            t.offsetX = -1 * (y.width / 2);\n            t.offsetY = -1 * (y.height / 2);\n            if (this_3.alignLabel != null) {\n                this_3.alignLabel(this_3, t);\n            }\n            a.c.f[u] = t.width;\n            a.c.d[u] = t.height;\n            a.c.g[u] = t.offsetX;\n            a.c.h[u] = t.offsetY;\n            a.c.e[u] = t.label;\n        };\n        var this_3 = this;\n        for (var u = 0; u < g.count; u++) {\n            _loop_3(u);\n        }\n        for (var z = 0; z < n.count; z++) {\n            a.c.j[z] = n._inner[z];\n        }\n        for (var aa = 0; aa < o.count; aa++) {\n            a.c.i[aa] = o._inner[aa];\n        }\n        a.c.t = this.c4(this.db, 0.5);\n        a.c.q = this.c4(this.c6, 0.57);\n        a.c.l = this.c4(this.b7, 0.65);\n        a.c.v = this.c4(this.dg, 0.5);\n        a.c.u = this.c4(this.de, 0.57);\n        a.c.n = this.c4(this.ch, 0.54);\n        a.c.m = this.c4(this.cf, 0.57);\n        a.c.s = c.i;\n        a.c.p = c.g;\n        var ab = this.c8;\n        if (isNaN_((ab))) {\n            ab = 2.8;\n        }\n        var ac = ab * Math.PI / 180;\n        if (ac < 0) {\n            ac = 0;\n        }\n        a.c.r = ac;\n        a.c.ac = this.ih;\n        a.c.z = this.h8;\n        a.c.aa = this.ia;\n        a.c.ab = this.ig;\n        a.c.w = this.c3(this.di);\n        a.c.o = this.c3(this.cj);\n        if (isNaN_(a.c.w)) {\n            a.c.w = XamRadialGauge.dj;\n        }\n        if (isNaN_(a.c.o)) {\n            a.c.o = XamRadialGauge.ck;\n        }\n        a.c.k.clear();\n        for (var ad = 0; ad < this.ranges.count; ad++) {\n            var ae = this.ranges._inner[ad];\n            var af = this.c3(Math.min(ae.o, ae.j));\n            var ag = this.c3(Math.max(ae.o, ae.j));\n            if (isNaN_(af) || isNaN_(ag)) {\n                continue;\n            }\n            var ah = c.h(af);\n            var ai = c.h(ag);\n            var aj = RadialGaugeScaler.k(ah, ai, this.ii);\n            ah = aj.c;\n            ai = aj.d;\n            var ak = new RadialGaugeRangeFrame();\n            ak.e = ah;\n            ak.b = ai;\n            ak.k = ae.ao != null ? ae.ao : this.h9(ad, this.ah);\n            ak.l = ae.ap != null ? ae.ap : this.h9(ad, this.ai);\n            ak.h = this.c4(ae.p, XamRadialGaugeRange.q);\n            ak.f = this.c3(ae.l);\n            if (isNaN_(ak.f)) {\n                ak.f = Math.max(0, this.db);\n            }\n            ak.c = this.c3(ae.k);\n            if (isNaN_(ak.c)) {\n                ak.c = Math.max(0, this.db);\n            }\n            ak.g = this.c3(ae.n);\n            if (isNaN_(ak.g)) {\n                ak.g = Math.max(0, this.c6);\n            }\n            ak.d = this.c3(ae.m);\n            if (isNaN_(ak.d)) {\n                ak.d = Math.max(0, this.c6);\n            }\n            if (this.ii == 0) {\n                var al = ak.f;\n                ak.f = ak.c;\n                ak.c = al;\n                al = ak.g;\n                ak.g = ak.d;\n                ak.d = al;\n            }\n            a.c.k.add(ak);\n        }\n    };\n    XamRadialGauge.prototype.f1 = function () {\n        var a = this.ap;\n        a.d = this.c0;\n        var b = a.a;\n        var c = this.h6;\n        var d = this.h7;\n        var e = this.c1(this.b1, XamRadialGauge.b2);\n        var f = this.am;\n        var g = this.by;\n        var h = this.bw;\n        if (isInfinity(h) || isNaN_(h)) {\n            h = 0.12;\n        }\n        if (isInfinity(g) || isNaN_(g)) {\n            g = 0.82;\n        }\n        var i = this.bu;\n        if (isInfinity(i) || isNaN_(i)) {\n            i = 4;\n        }\n        if (h > g) {\n            var j = g;\n            g = h;\n            h = j;\n        }\n        var k = this.av;\n        var l = k.i;\n        var m = k.g;\n        b.l = c;\n        b.m = d;\n        b.h = e;\n        if (f == 0) {\n            b.b = 0;\n            b.g = 0;\n            b.c = 0;\n            b.d = 0;\n            b.e = this.by;\n        }\n        else {\n            b.b = i;\n            var n = this.b0 * Math.PI / 180;\n            if (n < 0) {\n                n = 0;\n            }\n            if ((Math.PI * 2) - (m - l) < n) {\n                b.f = 0;\n                b.b = 0;\n                b.g = 0;\n                b.c = 0;\n                b.d = 0;\n                b.e = g;\n            }\n            else {\n                b.f = n;\n                b.g = l;\n                b.c = m;\n                b.b = i;\n                b.d = h;\n                b.e = g;\n            }\n        }\n    };\n    Object.defineProperty(XamRadialGauge.prototype, \"a6\", {\n        get: function () {\n            return this.ay.f();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XamRadialGauge.prototype, \"dk\", {\n        get: function () {\n            return this.bq;\n        },\n        set: function (a) {\n            var b = this.bq;\n            this.bq = a;\n            this.fy(\"TransitionProgress\", b, this.bq);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XamRadialGauge.prototype.fr = function (a, b) {\n        var c = this.b5(a);\n        if (this.a9) {\n            var d = this.dl(this.av.g - Math.PI * 2);\n            switch (this.ii) {\n                case 1:\n                    if (c < this.bs) {\n                        c = c < d * 0.5 ? this.br : this.bs;\n                    }\n                    break;\n                case 0:\n                    if (c > this.br) {\n                        c = c < (d + this.br) * 0.5 ? this.br : this.bs;\n                    }\n                    break;\n            }\n        }\n        if (c != this.dm) {\n            this.dm = c;\n        }\n    };\n    XamRadialGauge.prototype.destroy = function () {\n        this.provideContainer(null);\n    };\n    XamRadialGauge.prototype.provideContainer = function (a) {\n        this.view.as(a);\n    };\n    XamRadialGauge.prototype.onMouseMove = function (a, b) {\n        if (this.a8) {\n            this.fr(a, b);\n        }\n    };\n    XamRadialGauge.prototype.onMouseDown = function (a, b) {\n        if (b === void 0) {\n            b = false;\n        }\n        if (this.ba && this.needleContainsPoint(a, b) && !this.a8) {\n            this.a8 = true;\n        }\n    };\n    XamRadialGauge.prototype.onMouseUp = function (a) {\n        if (this.a8) {\n            this.a8 = false;\n        }\n    };\n    XamRadialGauge.prototype.containerResized = function () {\n        this.view.at();\n    };\n    XamRadialGauge.prototype.fs = function () {\n        this.view.flush();\n    };\n    XamRadialGauge.prototype.aw = function () {\n        var a = new GaugeVisualData();\n        a.viewport = new RectData(this.im.left, this.im.top, this.im.width, this.im.height);\n        a.scaleLabels = new ScaleLabelVisualDataList();\n        a.scaleTickmarks = new ScaleTickmarkVisualDataList();\n        a.ranges = new RangeVisualDataList();\n        a.needle = new NeedleVisualData();\n        this.view.aj(a);\n        return a;\n    };\n    XamRadialGauge.prototype.d1 = function () {\n        var a = this.aw();\n        a.scaleByViewport();\n        return a.serialize();\n    };\n    XamRadialGauge.prototype.a1 = function () {\n        return FontUtil.toFontInfo(this.view.z, this.d2);\n    };\n    Object.defineProperty(XamRadialGauge.prototype, \"cz\", {\n        get: function () {\n            return this.bp;\n        },\n        set: function (a) {\n            var b = this.bp;\n            this.bp = a;\n            this.fy(\"PixelScalingRatio\", b, this.bp);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XamRadialGauge.prototype, \"bt\", {\n        get: function () {\n            return this.bo;\n        },\n        set: function (a) {\n            var b = this.bo;\n            this.bo = a;\n            this.fy(\"ActualPixelScalingRatio\", b, this.bo);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XamRadialGauge.$t = markType(XamRadialGauge, 'XamRadialGauge', Control.$, [INotifyPropertyChanged_$type]);\n    XamRadialGauge.hl = DependencyProperty.i(\"NeedleStartWidth\", Number_$type, XamRadialGauge.$, new PropertyMetadata(2, NaN, function (a, b) { return a.fy(\"NeedleStartWidth\", b.oldValue, b.newValue); }));\n    XamRadialGauge.cy = DeviceUtils.g(1);\n    XamRadialGauge.cr = DeviceUtils.g(1);\n    XamRadialGauge.dj = DeviceUtils.g(3);\n    XamRadialGauge.ck = DeviceUtils.g(2);\n    XamRadialGauge.b2 = DeviceUtils.g(12);\n    XamRadialGauge.$$p = markDep(DependencyProperty, PropertyMetadata, XamRadialGauge, 'fy', ['BackingBrush:h6:ge', [Brush.$, null], 'BackingCornerRadius:bu:gf', [1, 4], 'BackingInnerExtent:bw:gg', [1, 0.12], 'BackingOuterExtent:by:gh', [1, 0.82], 'BackingOutline:h7:gi', [Brush.$, null], 'BackingOversweep:b0:gj', [1, 3], 'BackingShape:am:gk', [RadialGaugeBackingShape_$type, enumGetBox(RadialGaugeBackingShape_$type, 0)], 'BackingStrokeThickness:b1:gl', [1, XamRadialGauge.b2], 'CenterX:b3:gm', [1, 0.5], 'CenterY:b4:gn', [1, 0.5], 'DuplicateLabelOmissionStrategy:an:go', [RadialGaugeDuplicateLabelOmissionStrategy_$type, enumGetBox(RadialGaugeDuplicateLabelOmissionStrategy_$type, 0)], 'FontBrush:h8:gp', [Brush.$, null], 'Font:d2:gq', [2, null], 'Interval:b6:gr', [1, NaN], 'IsNeedleDraggingConstrained:a9:gs', [0, true], 'IsNeedleDraggingEnabled:ba:gt', [0, false], 'LabelExtent:b7:gu', [1, 0.65], 'LabelFormat:d9:gv', [2, null], 'LabelFormatSpecifiers:ag:gw', [Array_$type, null], 'LabelInterval:b9:gx', [1, NaN], 'MaximumValue:ca:gy', [1, 100], 'MinimumValue:cc:gz', [1, 0], 'MinorTickBrush:ia:g0', [Brush.$, null], 'MinorTickCount:ce:g1', [1, 3], 'MinorTickEndExtent:cf:g2', [1, 0.57], 'MinorTickStartExtent:ch:g3', [1, 0.54], 'MinorTickStrokeThickness:cj:g4', [1, XamRadialGauge.ck], 'NeedleBaseFeatureExtent:cl:g5', [1, NaN], 'NeedleBaseFeatureWidthRatio:cm:g6', [1, NaN], 'NeedleBrush:ib:g7', [Brush.$, null], 'NeedleEndExtent:cn:g8', [1, NaN], 'NeedleEndWidthRatio:co:g9', [1, NaN], 'NeedleOutline:ic:ha', [Brush.$, null], 'NeedlePivotBrush:id:hb', [Brush.$, null], 'NeedlePivotInnerWidthRatio:cp:hc', [1, NaN], 'NeedlePivotOutline:ie:hd', [Brush.$, null], 'NeedlePivotShape:as:he', [RadialGaugePivotShape_$type, enumGetBox(RadialGaugePivotShape_$type, 3)], 'NeedlePivotStrokeThickness:cq:hf', [1, XamRadialGauge.cr], 'NeedlePivotWidthRatio:cs:hg', [1, NaN], 'NeedlePointFeatureExtent:ct:hh', [1, NaN], 'NeedlePointFeatureWidthRatio:cu:hi', [1, NaN], 'NeedleShape:ar:hj', [RadialGaugeNeedleShape_$type, enumGetBox(RadialGaugeNeedleShape_$type, 4)], 'NeedleStartExtent:cv:hk', [1, NaN], 'NeedleStrokeThickness:cx:hm', [1, XamRadialGauge.cy], 'RadiusMultiplier:c0:hn', [1, 1], 'RangeBrushes:ah:ho', [BrushCollection.$, null], 'RangeOutlines:ai:hp', [BrushCollection.$, null], 'Ranges::hq', [RadialGaugeRangeCollection.$, null], 'ScaleBrush:ig:hr', [Brush.$, null], 'ScaleEndAngle:c5:hs', [1, 45], 'ScaleEndExtent:c6:ht', [1, 0.57], 'ScaleOversweep:c8:hu', [1, 2.8], 'ScaleOversweepShape:au:hv', [RadialGaugeScaleOversweepShape_$type, enumGetBox(RadialGaugeScaleOversweepShape_$type, 0)], 'ScaleStartAngle:da:hw', [1, 135], 'ScaleStartExtent:db:hx', [1, 0.5], 'ScaleSweepDirection:ii:hy', [SweepDirection_$type, enumGetBox(SweepDirection_$type, 1)], 'TickBrush:ih:hz', [Brush.$, null], 'TickEndExtent:de:h0', [1, 0.57], 'TickStartExtent:dg:h1', [1, 0.5], 'TickStrokeThickness:di:h2', [1, XamRadialGauge.dj], 'TransitionDuration:dn:h3', [1, 0], 'TransitionEasingFunction:a0:h4', [Delegate_$type, null], 'Value:dm:h5', [1, 0]]);\n    return XamRadialGauge;\n}(Control));\nexport { XamRadialGauge };\n/**\n * @hidden\n */\nvar XamRadialGaugeView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(XamRadialGaugeView, _super);\n    function XamRadialGaugeView(a) {\n        var _this = _super.call(this) || this;\n        _this.h = null;\n        _this.s = null;\n        _this.r = null;\n        _this.q = null;\n        _this.br = new Path();\n        _this.bt = new Path();\n        _this.bq = new Path();\n        _this.bs = new Path();\n        _this.bu = new Path();\n        _this.o = null;\n        _this.a = [\"needle\", \"needlePivot\", \"backing\", \"scale\", \"tick\", \"minorTick\", \"label\"];\n        _this.c = null;\n        _this.d = null;\n        _this.l = false;\n        _this.m = false;\n        _this.g = null;\n        _this.aa = null;\n        _this.k = null;\n        _this.z = null;\n        _this.i = null;\n        _this.bf = new Brush();\n        _this.bg = ((function () {\n            var $ret = new Brush();\n            $ret.fill = \"black\";\n            return $ret;\n        })());\n        _this.t = NaN;\n        _this.p = null;\n        _this.ac = -1;\n        _this.ab = -1;\n        _this.bk = null;\n        _this.bl = null;\n        _this.bm = null;\n        _this.bn = null;\n        _this.bh = null;\n        _this.bi = null;\n        _this.bo = null;\n        _this.bp = null;\n        _this.bj = null;\n        _this.e = null;\n        _this.f = null;\n        _this.u = 0;\n        _this.h = a;\n        _this.o = new Dictionary$2(String_$type, Dictionary$2.$.specialize(String_$type, String_$type), 0);\n        _this.q = new List$1(TextBlock.$, 0);\n        _this.r = new List$1(Path.$, 0);\n        _this.s = new List$1(Path.$, 0);\n        return _this;\n    }\n    XamRadialGaugeView.prototype.an = function (a) {\n        a._visibility = 0;\n    };\n    XamRadialGaugeView.prototype.ao = function (a) {\n        a._visibility = 1;\n    };\n    XamRadialGaugeView.prototype.ap = function (a) {\n        this.q.remove(a);\n    };\n    XamRadialGaugeView.prototype.be = function () {\n        var a = new TextBlock();\n        this.q.add(a);\n        return a;\n    };\n    XamRadialGaugeView.prototype.ay = function (a) {\n        a._visibility = 0;\n    };\n    XamRadialGaugeView.prototype.az = function (a) {\n        a._visibility = 1;\n    };\n    XamRadialGaugeView.prototype.a0 = function (a) {\n        this.r.remove(a);\n    };\n    XamRadialGaugeView.prototype.b0 = function () {\n        var a = new Path();\n        this.r.add(a);\n        return a;\n    };\n    XamRadialGaugeView.prototype.a3 = function (a) {\n        a._visibility = 0;\n    };\n    XamRadialGaugeView.prototype.a4 = function (a) {\n        a._visibility = 1;\n    };\n    XamRadialGaugeView.prototype.a5 = function (a) {\n        this.s.remove(a);\n    };\n    XamRadialGaugeView.prototype.b1 = function () {\n        var a = new Path();\n        this.s.add(a);\n        return a;\n    };\n    XamRadialGaugeView.prototype.n = function () {\n        return true;\n    };\n    XamRadialGaugeView.prototype.bw = function () {\n        return this.br;\n    };\n    XamRadialGaugeView.prototype.by = function () {\n        return this.bt;\n    };\n    XamRadialGaugeView.prototype.w = function (a) {\n        var b = typeCast(TextBlock.$, a);\n        if (b != null && b.ak != null) {\n            return this.k.e(b) + 0;\n        }\n        return 0;\n    };\n    XamRadialGaugeView.prototype.b2 = function (a) {\n        if (isNaN_(this.t)) {\n            this.t = this.v(null);\n        }\n        var b = this.w(a);\n        var c = this.t;\n        return new Size(1, b, c);\n    };\n    XamRadialGaugeView.prototype.al = function () {\n        this.l = true;\n        var a = [\"#CED3D8\", \"#CED3D8\", \"#EBEDEF\", \"#FFC73C\", \"#617583\", \"rgba(100,107,114,.74)\", \"rgba(100,107,114,.74)\"];\n        var b = [\"#B2B9C0\", \"#B2B9C0\", \"#B2B9C0\", null, null, null, null];\n        var c = [\"background-color\", \"border-top-color\"];\n        var d = ((function () {\n            var $ret = new List$1(Array_$type, 0);\n            $ret.add(a);\n            $ret.add(b);\n            return $ret;\n        })());\n        this.o.clear();\n        var e = this.a.length;\n        for (var f = 0; f < e; f++) {\n            var g = new Dictionary$2(String_$type, String_$type, 0);\n            var h = this.a[f];\n            var i = new Array(c.length);\n            arrayCopy1(c, 0, i, 0, c.length);\n            this.b(\"ui-radialgauge-\" + h, i);\n            for (var j = 0; j < i.length; j++) {\n                g.item(c[j], (i[j] == null) ? d._inner[j][f] : i[j]);\n            }\n            this.o.item(h, g);\n        }\n        this.bc();\n        var k;\n        var l;\n        var m = BrushUtil.e(\"radialgauge-range\", this.z, k, l);\n        k = m.p2;\n        l = m.p3;\n        this.c = k;\n        this.d = l;\n        if (this.e == null) {\n            this.h.ah = this.c;\n        }\n        if (this.f == null) {\n            this.h.ai = this.d;\n        }\n        this.l = false;\n    };\n    XamRadialGaugeView.prototype.aq = function () {\n        this.am();\n        if (this.g != null) {\n            this.g.ap(this.z.rootWrapper, \"\");\n        }\n    };\n    XamRadialGaugeView.prototype.au = function () {\n        if (this.g != null) {\n            this.g.bb(this.z.rootWrapper, \"\");\n        }\n    };\n    XamRadialGaugeView.prototype.bc = function () {\n        this.l = true;\n        var a = this.a.length;\n        for (var b = 0; b < a; b++) {\n            var c = this.a[b];\n            this.bb(c, this.o.item(c));\n        }\n        this.l = false;\n    };\n    XamRadialGaugeView.prototype.bb = function (a, b) {\n        var e_4, _a;\n        var c = null;\n        var d = null;\n        var e = b.count;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(b.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var f = _c.value;\n                switch (f) {\n                    case \"background-color\":\n                        c = new Brush();\n                        if (b.item(f) != null) {\n                            c._fill = b.item(f);\n                        }\n                        break;\n                    case \"border-top-color\":\n                        d = new Brush();\n                        if (b.item(f) != null) {\n                            d._fill = b.item(f);\n                        }\n                        break;\n                }\n            }\n        }\n        catch (e_4_1) {\n            e_4 = { error: e_4_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_4)\n                    throw e_4.error;\n            }\n        }\n        switch (a) {\n            case \"needle\":\n                if (this.bk == null) {\n                    this.h.ib = c;\n                }\n                if (this.bl == null) {\n                    this.h.ic = d;\n                }\n                break;\n            case \"needlePivot\":\n                if (this.bm == null) {\n                    this.h.id = c;\n                }\n                if (this.bn == null) {\n                    this.h.ie = d;\n                }\n                break;\n            case \"backing\":\n                if (this.bh == null) {\n                    this.h.h6 = c;\n                }\n                if (this.bi == null) {\n                    this.h.h7 = d;\n                }\n                break;\n            case \"scale\":\n                if (this.bo == null) {\n                    this.h.ig = c;\n                }\n                break;\n            case \"tick\":\n                if (this.bp == null) {\n                    this.h.ih = c;\n                }\n                break;\n            case \"minorTick\":\n                if (this.bj == null) {\n                    this.h.ia = c;\n                }\n                break;\n            case \"label\":\n                this.bg = c;\n                break;\n        }\n    };\n    XamRadialGaugeView.prototype.b = function (a, b) {\n        this.z.startCSSQuery();\n        for (var c = 0; c < b.length; c++) {\n            b[c] = this.z.getCssDefaultPropertyValue(a, b[c]);\n        }\n        this.z.endCSSQuery();\n        return b;\n    };\n    XamRadialGaugeView.y = function (a, b) {\n        var c = a == null ? 0 : a.length;\n        if (c < 1) {\n            return b;\n        }\n        var d = a.split('.');\n        var e = (d[0].length > 0) ? parseInt(d[0]) : 0;\n        if (d.length != 2) {\n            return e;\n        }\n        c = d[1].length;\n        var f = parseInt(d[1]);\n        while (c-- > 0) {\n            f /= 10;\n        }\n        return f + e;\n    };\n    XamRadialGaugeView.prototype.av = function () {\n        this.l = true;\n        this.h.ib = ((function () {\n            var $ret = new Brush();\n            $ret.fill = \"#CED3D8\";\n            return $ret;\n        })());\n        this.h.ic = ((function () {\n            var $ret = new Brush();\n            $ret.fill = \"#B2B9C0\";\n            return $ret;\n        })());\n        this.h.ih = ((function () {\n            var $ret = new Brush();\n            $ret.fill = \"#617583\";\n            return $ret;\n        })());\n        this.h.ig = ((function () {\n            var $ret = new Brush();\n            $ret.fill = \"#FFC73C\";\n            return $ret;\n        })());\n        this.h.h6 = ((function () {\n            var $ret = new Brush();\n            $ret.fill = \"#EBEDEF\";\n            return $ret;\n        })());\n        this.h.h7 = ((function () {\n            var $ret = new Brush();\n            $ret.fill = \"#B2B9C0\";\n            return $ret;\n        })());\n        this.h.id = ((function () {\n            var $ret = new Brush();\n            $ret.fill = \"#CED3D8\";\n            return $ret;\n        })());\n        this.h.ie = ((function () {\n            var $ret = new Brush();\n            $ret.fill = \"#B2B9C0\";\n            return $ret;\n        })());\n        this.h.ia = ((function () {\n            var $ret = new Brush();\n            $ret.fill = \"rgba(100,107,114,.74)\";\n            return $ret;\n        })());\n        this.l = false;\n        this.am();\n    };\n    XamRadialGaugeView.prototype.am = function () {\n        var a = this.h.cz;\n        var b = this.h.bt;\n        if (!isNaN_(a) && a != 0) {\n            return;\n        }\n        if (window.devicePixelRatio != undefined && window.devicePixelRatio != b) {\n            this.h.bt = window.devicePixelRatio;\n        }\n    };\n    XamRadialGaugeView.prototype.a7 = function () {\n        if (!this.m) {\n            this.m = true;\n            if (this.z != null) {\n                this.z.setTimeout(runOn(this, this.ad), 0);\n            }\n            else {\n                window.setTimeout(runOn(this, this.ad), 0);\n            }\n        }\n    };\n    XamRadialGaugeView.prototype.ad = function () {\n        if (this.m) {\n            this.m = false;\n            this.h.fo();\n        }\n    };\n    XamRadialGaugeView.prototype.flush = function () {\n        if (this.m) {\n            this.ad();\n        }\n    };\n    XamRadialGaugeView.prototype.a2 = function (a, b, c) {\n        a.n = b;\n        a.o = c;\n    };\n    XamRadialGaugeView.prototype.as = function (a) {\n        var _this = this;\n        if (a == null) {\n            this.aa = null;\n            this.z = null;\n            this.k = null;\n            this.af();\n            return;\n        }\n        this.u = (isNaN_(this.h.cz) ? this.h.bt : this.h.cz);\n        var b = a;\n        this.z = b;\n        this.h.ay.u(this.z);\n        this.z.rootWrapper.addClass(\"ui-radialgauge-container\");\n        var c = this.u;\n        var d = Math.round(b.rootWrapper.width());\n        var e = Math.round(b.rootWrapper.height());\n        var f = d * c;\n        var g = e * c;\n        this.z.rootWrapper.setStyleProperty(\"position\", \"relative\");\n        var h = this.z.createElement(\"canvas\");\n        h.setStyleProperty(\"position\", \"absolute\");\n        this.z.append(h);\n        this.ac = truncate(Math.round(f));\n        this.ab = truncate(Math.round(g));\n        h.setAttribute(\"width\", f.toString());\n        h.setAttribute(\"height\", g.toString());\n        h.setStyleProperty(\"width\", d.toString() + \"px\");\n        h.setStyleProperty(\"height\", e.toString() + \"px\");\n        this.h.im = new Rect(0, 0, 0, d, e);\n        this.aa = h;\n        var i = this.z.get2DCanvasContext(this.aa);\n        this.k = new RenderingContext(new CanvasViewRenderer(), i);\n        this.al();\n        this.bd();\n        this.k.ac(this.i);\n        this.af();\n        if (TypeRegistrar.isRegistered(\"CanvasGestureDOMEventProxy\")) {\n            this.g = typeCast(EventProxy.$, TypeRegistrar.create(\"CanvasGestureDOMEventProxy\", this.z.rootWrapper, this.z, false));\n        }\n        if (this.g != null) {\n            var j = this.g;\n            j.onContactStarted = delegateCombine(j.onContactStarted, runOn(this, this.ai));\n            var k = this.g;\n            k.onContactMoved = delegateCombine(k.onContactMoved, runOn(this, this.ah));\n            var l = this.g;\n            l.onContactCompleted = delegateCombine(l.onContactCompleted, runOn(this, this.ag));\n            this.g.ak = function (m) { return _this.h.ba && (_this.h.a8 || _this.h.bc(m)); };\n        }\n        this.a6();\n    };\n    XamRadialGaugeView.prototype.ag = function (a, b) {\n        if (this.h != null) {\n            this.h.onMouseUp(a);\n        }\n    };\n    XamRadialGaugeView.prototype.ah = function (a, b) {\n        if (this.h != null) {\n            this.h.onMouseMove(a, b);\n        }\n    };\n    XamRadialGaugeView.prototype.ai = function (a, b) {\n        if (this.h != null) {\n            this.h.onMouseDown(a);\n        }\n    };\n    XamRadialGaugeView.prototype.af = function () {\n        if (this.g != null) {\n            var a = this.g;\n            a.onContactStarted = delegateRemove(a.onContactStarted, runOn(this, this.ai));\n            var b = this.g;\n            b.onContactMoved = delegateRemove(b.onContactMoved, runOn(this, this.ah));\n            var c = this.g;\n            c.onContactCompleted = delegateRemove(c.onContactCompleted, runOn(this, this.ag));\n            this.g.ak = null;\n            this.g.aq();\n        }\n    };\n    XamRadialGaugeView.prototype.a9 = function (a, b) {\n        if (b != null) {\n            a.am = b;\n        }\n        else {\n            a.am = this.bg;\n        }\n    };\n    XamRadialGaugeView.prototype.ba = function () {\n        this.al();\n        this.bd();\n        this.a7();\n    };\n    XamRadialGaugeView.prototype.bd = function () {\n        this.i = FontUtil.getFont(this.z);\n        if (this.h.d2 != null) {\n            this.i = this.h.a1();\n        }\n        this.t = this.v(this.i);\n        this.bf = new Brush();\n        this.bf._fill = this.z.rootWrapper.getStyleProperty(\"color\");\n        if (this.k != null) {\n            this.k.ac(this.i);\n        }\n    };\n    XamRadialGaugeView.prototype.ae = function () {\n        this.a6();\n    };\n    XamRadialGaugeView.prototype.a6 = function () {\n        var a = this.h.im.width;\n        var b = this.h.im.height;\n        var c = Math.round(a * this.u);\n        var d = Math.round(b * this.u);\n        if (this.ac != c || this.ab != d) {\n            this.aa.setAttribute(\"width\", c.toString());\n            this.aa.setAttribute(\"height\", d.toString());\n            this.aa.setStyleProperty(\"width\", a.toString() + \"px\");\n            this.aa.setStyleProperty(\"height\", b.toString() + \"px\");\n            this.ac = truncate(Math.round(c));\n            this.ab = truncate(Math.round(d));\n        }\n        if (this.k.d && this.u != 1) {\n            this.k.z();\n            this.k.aa(this.u, this.u);\n        }\n        this.k.k(this.h.im.left, this.h.im.top, this.h.im.width, this.h.im.height);\n        this.k.s(this.bq);\n        this.k.s(this.bt);\n        if (this.p != null) {\n            for (var e = 0; e < this.p.count; e++) {\n                this.k.s(this.p._inner[e]);\n            }\n        }\n        for (var f = 0; f < this.q.count; f++) {\n            this.k.ac(this.i);\n            this.k.w(this.q._inner[f]);\n        }\n        for (var g = 0; g < this.r.count; g++) {\n            this.k.s(this.r._inner[g]);\n        }\n        this.k.z();\n        this.k.j(this.br.j);\n        this.k.s(this.bu);\n        this.k.s(this.br);\n        this.k.s(this.bs);\n        this.k.y();\n        if (this.k.d && this.u != 1) {\n            this.k.y();\n        }\n    };\n    XamRadialGaugeView.prototype.v = function (a) {\n        return FontUtil.getCurrentFontHeight(this.z, a);\n    };\n    XamRadialGaugeView.prototype.a8 = function (a) {\n        this.p = a;\n    };\n    XamRadialGaugeView.prototype.bv = function () {\n        return this.bq;\n    };\n    XamRadialGaugeView.prototype.bz = function () {\n        return this.bu;\n    };\n    XamRadialGaugeView.prototype.bx = function () {\n        return this.bs;\n    };\n    XamRadialGaugeView.prototype.at = function () {\n        this.am();\n        var a = Math.round(this.z.rootWrapper.width());\n        var b = Math.round(this.z.rootWrapper.height());\n        this.h.im = new Rect(0, 0, 0, a, b);\n        if (this.g != null) {\n            this.g.bf = this.h.im;\n        }\n    };\n    XamRadialGaugeView.prototype.j = function (a, b) {\n        return FontUtil.getFontInfo(this.z, a, b);\n    };\n    XamRadialGaugeView.prototype.aj = function (a) {\n        var e_5, _a, e_6, _b, e_7, _c;\n        a.scalePath = new PathVisualData(1, \"Scale\", this.bt);\n        a.needlePath = new PathVisualData(1, \"Needle\", this.br);\n        var b = this.br.j.j._inner[0].j;\n        a.needle.angle = b;\n        a.backingPath = new PathVisualData(1, \"Backing\", this.bq);\n        a.overlayPath = new PathVisualData(1, \"Overlay\", this.bs);\n        a.underlayPath = new PathVisualData(1, \"Underlay\", this.bu);\n        var c = this.i;\n        try {\n            for (var _d = tslib_1.__values(fromEnum(this.q)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var d = _e.value;\n                if (d._visibility == 0) {\n                    var e = this.j(d, c);\n                    var f = new ScaleLabelVisualData();\n                    f.labelValue = d.ak;\n                    f.labelPosition = PointData.b({ $type: Point_$type, x: d.n, y: d.o });\n                    f.labelSize = SizeData.b(this.b2(d));\n                    f.appearance = AppearanceHelper.c(d, e);\n                    a.scaleLabels.add(f);\n                }\n            }\n        }\n        catch (e_5_1) {\n            e_5 = { error: e_5_1 };\n        }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return))\n                    _a.call(_d);\n            }\n            finally {\n                if (e_5)\n                    throw e_5.error;\n            }\n        }\n        try {\n            for (var _f = tslib_1.__values(fromEnum(this.r)), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var g = _g.value;\n                if (g._visibility == 0) {\n                    var h = new ScaleTickmarkVisualData();\n                    h.tickPath = new PathVisualData(1, \"tickmarks\", g);\n                    a.scaleTickmarks.add(h);\n                }\n            }\n        }\n        catch (e_6_1) {\n            e_6 = { error: e_6_1 };\n        }\n        finally {\n            try {\n                if (_g && !_g.done && (_b = _f.return))\n                    _b.call(_f);\n            }\n            finally {\n                if (e_6)\n                    throw e_6.error;\n            }\n        }\n        try {\n            for (var _h = tslib_1.__values(fromEnum(this.s)), _j = _h.next(); !_j.done; _j = _h.next()) {\n                var i = _j.value;\n                if (i._visibility == 0) {\n                    var j = new RangeVisualData();\n                    var k = new PathVisualData(1, \"range\", i);\n                    j.rangePath = k;\n                    a.ranges.add(j);\n                }\n            }\n        }\n        catch (e_7_1) {\n            e_7 = { error: e_7_1 };\n        }\n        finally {\n            try {\n                if (_j && !_j.done && (_c = _h.return))\n                    _c.call(_h);\n            }\n            finally {\n                if (e_7)\n                    throw e_7.error;\n            }\n        }\n    };\n    XamRadialGaugeView.prototype.ar = function (a, b, c) {\n        var d = b;\n        var e = c;\n        if (!this.l) {\n            switch (a) {\n                case XamRadialGauge.$$p[29]:\n                    this.bk = e;\n                    break;\n                case XamRadialGauge.$$p[32]:\n                    this.bl = e;\n                    break;\n                case XamRadialGauge.$$p[33]:\n                    this.bm = e;\n                    break;\n                case XamRadialGauge.$$p[35]:\n                    this.bn = e;\n                    break;\n                case XamRadialGauge.$$p[0]:\n                    this.bh = e;\n                    break;\n                case XamRadialGauge.$$p[4]:\n                    this.bi = e;\n                    break;\n                case XamRadialGauge.$$p[48]:\n                    this.bo = e;\n                    break;\n                case XamRadialGauge.$$p[56]:\n                    this.bp = e;\n                    break;\n                case XamRadialGauge.$$p[22]:\n                    this.bj = e;\n                    break;\n            }\n            if (e == null) {\n                this.bc();\n            }\n        }\n    };\n    XamRadialGaugeView.prototype.aw = function (a, b) {\n        if (!this.l) {\n            this.e = b;\n            if (this.e == null) {\n                this.h.ah = this.c;\n            }\n        }\n    };\n    XamRadialGaugeView.prototype.ax = function (a, b) {\n        if (!this.l) {\n            this.f = b;\n            if (this.f == null) {\n                this.h.ai = this.d;\n            }\n        }\n    };\n    XamRadialGaugeView.prototype.a1 = function () {\n        this.u = this.h.bt;\n    };\n    XamRadialGaugeView.$t = markType(XamRadialGaugeView, 'XamRadialGaugeView');\n    return XamRadialGaugeView;\n}(Base));\nexport { XamRadialGaugeView };\n//# sourceMappingURL=XamRadialGauge_combined.js.map\n"]},"metadata":{},"sourceType":"module"}