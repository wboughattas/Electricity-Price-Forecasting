{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnWidthDescription } from \"./ColumnWidthDescription\";\n/**\r\n * @hidden\r\n */\n\nvar ColumnWidthDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ColumnWidthDescriptionMetadata, _super);\n\n  function ColumnWidthDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ColumnWidthDescriptionMetadata.b = function (a) {\n    if (ColumnWidthDescriptionMetadata.a == null) {\n      ColumnWidthDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ColumnWidthDescriptionMetadata.c(a, ColumnWidthDescriptionMetadata.a);\n    }\n  };\n\n  ColumnWidthDescriptionMetadata.c = function (a, b) {\n    b.item(\"IsStarSized\", \"Boolean\");\n    b.item(\"Value\", \"Number:double\");\n    b.item(\"MinimumWidth\", \"Number:double\");\n  };\n\n  ColumnWidthDescriptionMetadata.d = function (a) {\n    ColumnWidthDescriptionMetadata.b(a);\n    a.n(\"ColumnWidth\", function () {\n      return new ColumnWidthDescription();\n    });\n    a.m(\"ColumnWidth\", ColumnWidthDescriptionMetadata.a);\n  };\n\n  ColumnWidthDescriptionMetadata.$t = markType(ColumnWidthDescriptionMetadata, 'ColumnWidthDescriptionMetadata');\n  ColumnWidthDescriptionMetadata.a = null;\n  return ColumnWidthDescriptionMetadata;\n}(Base);\n\nexport { ColumnWidthDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ColumnWidthDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,sBAAT,QAAuC,0BAAvC;AAEA;;AAEG;;AACH,IAAA,8BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoD,EAAA,OAAA,CAAA,SAAA,CAAA,8BAAA,EAAA,MAAA;;AAApD,WAAA,8BAAA,GAAA;;AAmBC;;AAhBe,EAAA,8BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,8BAA8B,CAAC,CAA/B,IAAoC,IAAxC,EAA8C;AAC7C,MAAA,8BAA8B,CAAC,CAA/B,GAAmC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAnC;AACA,MAAA,8BAA8B,CAAC,CAA/B,CAAiC,CAAjC,EAAoC,8BAA8B,CAAC,CAAnE;AACA;AACD,GALc;;AAMR,EAAA,8BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,SAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,eAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,eAAvB;AACA,GAJM;;AAKA,EAAA,8BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,8BAA8B,CAAC,CAA/B,CAAiC,CAAjC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,aAAJ,EAAmB,YAAA;AAAM,aAAA,IAAA,sBAAA,EAAA;AAA4B,KAArD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,aAAJ,EAAmB,8BAA8B,CAAC,CAAlD;AACA,GAJM;;AAbA,EAAA,8BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,8BAAD,EAAiC,gCAAjC,CAAnB;AACQ,EAAA,8BAAA,CAAA,CAAA,GAAkC,IAAlC;AAiBhB,SAAA,8BAAA;AAAC,CAnBD,CAAoD,IAApD,CAAA;;SAAa,8B","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { ColumnWidthDescription } from \"./ColumnWidthDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar ColumnWidthDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(ColumnWidthDescriptionMetadata, _super);\r\n    function ColumnWidthDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ColumnWidthDescriptionMetadata.b = function (a) {\r\n        if (ColumnWidthDescriptionMetadata.a == null) {\r\n            ColumnWidthDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            ColumnWidthDescriptionMetadata.c(a, ColumnWidthDescriptionMetadata.a);\r\n        }\r\n    };\r\n    ColumnWidthDescriptionMetadata.c = function (a, b) {\r\n        b.item(\"IsStarSized\", \"Boolean\");\r\n        b.item(\"Value\", \"Number:double\");\r\n        b.item(\"MinimumWidth\", \"Number:double\");\r\n    };\r\n    ColumnWidthDescriptionMetadata.d = function (a) {\r\n        ColumnWidthDescriptionMetadata.b(a);\r\n        a.n(\"ColumnWidth\", function () { return new ColumnWidthDescription(); });\r\n        a.m(\"ColumnWidth\", ColumnWidthDescriptionMetadata.a);\r\n    };\r\n    ColumnWidthDescriptionMetadata.$t = markType(ColumnWidthDescriptionMetadata, 'ColumnWidthDescriptionMetadata');\r\n    ColumnWidthDescriptionMetadata.a = null;\r\n    return ColumnWidthDescriptionMetadata;\r\n}(Base));\r\nexport { ColumnWidthDescriptionMetadata };\r\n//# sourceMappingURL=ColumnWidthDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}