{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, Point_$type, markType } from \"./type\";\nimport { Matrix } from \"./Matrix\";\nimport { ScaleTransform } from \"./ScaleTransform\";\nimport { RotateTransform } from \"./RotateTransform\";\nimport { TranslateTransform } from \"./TranslateTransform\";\nimport { TransformGroup } from \"./TransformGroup\";\nimport { MatrixTransform } from \"./MatrixTransform\";\n/**\r\n * @hidden\r\n */\n\nvar TransformMatrixHelpler =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TransformMatrixHelpler, _super);\n\n  function TransformMatrixHelpler() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TransformMatrixHelpler.f = function (a) {\n    if (typeCast(MatrixTransform.$, a) !== null) {\n      return a.j;\n    }\n\n    if (typeCast(ScaleTransform.$, a) !== null) {\n      var b = a;\n      return TransformMatrixHelpler.g(0, b.l, b.m, {\n        $type: Point_$type,\n        x: 0,\n        y: 0\n      });\n    }\n\n    if (typeCast(RotateTransform.$, a) !== null) {\n      var c = a;\n      return TransformMatrixHelpler.g(c.j, 1, 1, {\n        $type: Point_$type,\n        x: 0,\n        y: 0\n      });\n    }\n\n    if (typeCast(TranslateTransform.$, a) !== null) {\n      var d = a;\n      return TransformMatrixHelpler.g(0, 1, 1, {\n        $type: Point_$type,\n        x: d.j,\n        y: d.k\n      });\n    }\n\n    if (typeCast(TransformGroup.$, a) !== null) {\n      var e = a;\n      var f = new Matrix();\n      f.j = 1;\n      f.m = 1;\n\n      for (var g = e.j.count - 1; g >= 0; g--) {\n        var h = TransformMatrixHelpler.f(e.j._inner[g]);\n        f = TransformMatrixHelpler.e(f, h);\n      }\n\n      return f;\n    }\n\n    return a;\n  };\n\n  TransformMatrixHelpler.a = function (a) {\n    return Math.atan2(a.k, a.j) * 180 / Math.PI;\n  };\n\n  TransformMatrixHelpler.b = function (a) {\n    var b = Math.sqrt(a.j * a.j + a.k * a.k);\n    return b;\n  };\n\n  TransformMatrixHelpler.c = function (a) {\n    var b = Math.sqrt(a.l * a.l + a.m * a.m);\n    return b;\n  };\n\n  TransformMatrixHelpler.h = function (a) {\n    return {\n      $type: Point_$type,\n      x: a.n,\n      y: a.o\n    };\n  };\n\n  TransformMatrixHelpler.e = function (a, b) {\n    var c = new Matrix();\n    c.j = a.j * b.j + a.k * b.l;\n    c.k = a.j * b.k + a.k * b.m;\n    c.n = a.n * b.j + a.o * b.l + b.n;\n    c.l = a.l * b.j + a.m * b.l;\n    c.m = a.l * b.k + a.m * b.m;\n    c.o = a.n * b.k + a.o * b.m + b.o;\n    return c;\n  };\n\n  TransformMatrixHelpler.d = function (a, b, c) {\n    var d = TransformMatrixHelpler.a(b);\n    var e = TransformMatrixHelpler.a(c);\n    var f = TransformMatrixHelpler.b(b);\n    var g = TransformMatrixHelpler.b(c);\n    var h = TransformMatrixHelpler.c(b);\n    var i = TransformMatrixHelpler.c(c);\n    var j = TransformMatrixHelpler.h(b);\n    var k = TransformMatrixHelpler.h(c);\n    var l = d + (e - d) * a;\n    var m = f + (g - f) * a;\n    var n = h + (i - h) * a;\n    var o = {\n      $type: Point_$type,\n      x: j.x + (k.x - j.x) * a,\n      y: j.y + (k.y - j.y) * a\n    };\n    return TransformMatrixHelpler.g(l, m, n, o);\n  };\n\n  TransformMatrixHelpler.g = function (a, b, c, d) {\n    a = a % 360;\n    var e = a * Math.PI / 180;\n    var f = new Matrix();\n    var g = Math.cos(e);\n    var h = Math.sin(e);\n    f.j = b * g;\n    f.k = b * h;\n    f.l = -c * h;\n    f.m = c * g;\n    f.n = d.x;\n    f.o = d.y;\n    return f;\n  };\n\n  TransformMatrixHelpler.$t = markType(TransformMatrixHelpler, 'TransformMatrixHelpler');\n  return TransformMatrixHelpler;\n}(Base);\n\nexport { TransformMatrixHelpler };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TransformMatrixHelpler.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, typeCast, Point_$type, markType } from \"./type\";\r\nimport { Matrix } from \"./Matrix\";\r\nimport { ScaleTransform } from \"./ScaleTransform\";\r\nimport { RotateTransform } from \"./RotateTransform\";\r\nimport { TranslateTransform } from \"./TranslateTransform\";\r\nimport { TransformGroup } from \"./TransformGroup\";\r\nimport { MatrixTransform } from \"./MatrixTransform\";\r\n/**\r\n * @hidden\r\n */\r\nvar TransformMatrixHelpler = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(TransformMatrixHelpler, _super);\r\n    function TransformMatrixHelpler() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TransformMatrixHelpler.f = function (a) {\r\n        if (typeCast(MatrixTransform.$, a) !== null) {\r\n            return a.j;\r\n        }\r\n        if (typeCast(ScaleTransform.$, a) !== null) {\r\n            var b = a;\r\n            return TransformMatrixHelpler.g(0, b.l, b.m, { $type: Point_$type, x: 0, y: 0 });\r\n        }\r\n        if (typeCast(RotateTransform.$, a) !== null) {\r\n            var c = a;\r\n            return TransformMatrixHelpler.g(c.j, 1, 1, { $type: Point_$type, x: 0, y: 0 });\r\n        }\r\n        if (typeCast(TranslateTransform.$, a) !== null) {\r\n            var d = a;\r\n            return TransformMatrixHelpler.g(0, 1, 1, { $type: Point_$type, x: d.j, y: d.k });\r\n        }\r\n        if (typeCast(TransformGroup.$, a) !== null) {\r\n            var e = a;\r\n            var f = new Matrix();\r\n            f.j = 1;\r\n            f.m = 1;\r\n            for (var g = e.j.count - 1; g >= 0; g--) {\r\n                var h = TransformMatrixHelpler.f(e.j._inner[g]);\r\n                f = TransformMatrixHelpler.e(f, h);\r\n            }\r\n            return f;\r\n        }\r\n        return a;\r\n    };\r\n    TransformMatrixHelpler.a = function (a) {\r\n        return Math.atan2(a.k, a.j) * 180 / Math.PI;\r\n    };\r\n    TransformMatrixHelpler.b = function (a) {\r\n        var b = Math.sqrt((a.j * a.j) + (a.k * a.k));\r\n        return b;\r\n    };\r\n    TransformMatrixHelpler.c = function (a) {\r\n        var b = Math.sqrt((a.l * a.l) + (a.m * a.m));\r\n        return b;\r\n    };\r\n    TransformMatrixHelpler.h = function (a) {\r\n        return { $type: Point_$type, x: a.n, y: a.o };\r\n    };\r\n    TransformMatrixHelpler.e = function (a, b) {\r\n        var c = new Matrix();\r\n        c.j = a.j * b.j + a.k * b.l;\r\n        c.k = a.j * b.k + a.k * b.m;\r\n        c.n = a.n * b.j + a.o * b.l + b.n;\r\n        c.l = a.l * b.j + a.m * b.l;\r\n        c.m = a.l * b.k + a.m * b.m;\r\n        c.o = a.n * b.k + a.o * b.m + b.o;\r\n        return c;\r\n    };\r\n    TransformMatrixHelpler.d = function (a, b, c) {\r\n        var d = TransformMatrixHelpler.a(b);\r\n        var e = TransformMatrixHelpler.a(c);\r\n        var f = TransformMatrixHelpler.b(b);\r\n        var g = TransformMatrixHelpler.b(c);\r\n        var h = TransformMatrixHelpler.c(b);\r\n        var i = TransformMatrixHelpler.c(c);\r\n        var j = TransformMatrixHelpler.h(b);\r\n        var k = TransformMatrixHelpler.h(c);\r\n        var l = d + (e - d) * a;\r\n        var m = f + (g - f) * a;\r\n        var n = h + (i - h) * a;\r\n        var o = { $type: Point_$type, x: j.x + (k.x - j.x) * a, y: j.y + (k.y - j.y) * a };\r\n        return TransformMatrixHelpler.g(l, m, n, o);\r\n    };\r\n    TransformMatrixHelpler.g = function (a, b, c, d) {\r\n        a = a % 360;\r\n        var e = a * Math.PI / 180;\r\n        var f = new Matrix();\r\n        var g = Math.cos(e);\r\n        var h = Math.sin(e);\r\n        f.j = b * g;\r\n        f.k = b * h;\r\n        f.l = -c * h;\r\n        f.m = c * g;\r\n        f.n = d.x;\r\n        f.o = d.y;\r\n        return f;\r\n    };\r\n    TransformMatrixHelpler.$t = markType(TransformMatrixHelpler, 'TransformMatrixHelpler');\r\n    return TransformMatrixHelpler;\r\n}(Base));\r\nexport { TransformMatrixHelpler };\r\n//# sourceMappingURL=TransformMatrixHelpler.js.map\r\n"]},"metadata":{},"sourceType":"module"}