{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FormatSummaryTextEventArgsDescriptionMetadata } from \"./FormatSummaryTextEventArgsDescriptionMetadata\";\nimport { ProvideCalculatorEventArgsDescriptionMetadata } from \"./ProvideCalculatorEventArgsDescriptionMetadata\";\nimport { ColumnSummaryDescriptionDescription } from \"./ColumnSummaryDescriptionDescription\";\n/**\n * @hidden\n */\n\nvar ColumnSummaryDescriptionDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ColumnSummaryDescriptionDescriptionMetadata, _super);\n\n  function ColumnSummaryDescriptionDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ColumnSummaryDescriptionDescriptionMetadata.b = function (a) {\n    if (ColumnSummaryDescriptionDescriptionMetadata.a == null) {\n      ColumnSummaryDescriptionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ColumnSummaryDescriptionDescriptionMetadata.c(a, ColumnSummaryDescriptionDescriptionMetadata.a);\n      FormatSummaryTextEventArgsDescriptionMetadata.d(a);\n      ProvideCalculatorEventArgsDescriptionMetadata.d(a);\n    }\n  };\n\n  ColumnSummaryDescriptionDescriptionMetadata.c = function (a, b) {\n    b.item(\"Field\", \"String\");\n    b.item(\"Operand\", \"ExportedType:string:SummaryOperand\");\n    b.item(\"CalculatorDisplayName\", \"String\");\n    b.item(\"DisplayName\", \"String\");\n    b.item(\"ValueFormat\", \"String\");\n    b.item(\"ValueFormatSpecifiers\", \"Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier\");\n    b.item(\"DisplayFormat\", \"String\");\n    b.item(\"DisplayFormatSpecifiers\", \"Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier\");\n    b.item(\"MaxFractionDigits\", \"Number:int\");\n    b.item(\"FormatTextRef\", \"EventRef::formatText\");\n    b.item(\"ProvideCalculatorRef\", \"EventRef::provideCalculator\");\n  };\n\n  ColumnSummaryDescriptionDescriptionMetadata.d = function (a) {\n    ColumnSummaryDescriptionDescriptionMetadata.b(a);\n    a.n(\"ColumnSummaryDescription\", function () {\n      return new ColumnSummaryDescriptionDescription();\n    });\n    a.m(\"ColumnSummaryDescription\", ColumnSummaryDescriptionDescriptionMetadata.a);\n  };\n\n  ColumnSummaryDescriptionDescriptionMetadata.$t = markType(ColumnSummaryDescriptionDescriptionMetadata, 'ColumnSummaryDescriptionDescriptionMetadata');\n  ColumnSummaryDescriptionDescriptionMetadata.a = null;\n  return ColumnSummaryDescriptionDescriptionMetadata;\n}(Base);\n\nexport { ColumnSummaryDescriptionDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ColumnSummaryDescriptionDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,6CAAT,QAA8D,iDAA9D;AACA,SAAS,6CAAT,QAA8D,iDAA9D;AACA,SAAS,mCAAT,QAAoD,uCAApD;AAEA;;AAEG;;AACH,IAAA,2CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiE,EAAA,OAAA,CAAA,SAAA,CAAA,2CAAA,EAAA,MAAA;;AAAjE,WAAA,2CAAA,GAAA;;AA6BC;;AA1Be,EAAA,2CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,2CAA2C,CAAC,CAA5C,IAAiD,IAArD,EAA2D;AAC1D,MAAA,2CAA2C,CAAC,CAA5C,GAAgD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAhD;AACA,MAAA,2CAA2C,CAAC,CAA5C,CAA8C,CAA9C,EAAiD,2CAA2C,CAAC,CAA7F;AACA,MAAA,6CAA6C,CAAC,CAA9C,CAAgD,CAAhD;AACA,MAAA,6CAA6C,CAAC,CAA9C,CAAgD,CAAhD;AACA;AACD,GAPc;;AAQR,EAAA,2CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,QAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,oCAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,uBAAP,EAAgC,QAAhC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,QAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,QAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,uBAAP,EAAgC,sEAAhC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,QAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,yBAAP,EAAkC,sEAAlC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,YAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,sBAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,sBAAP,EAA+B,6BAA/B;AACA,GAZM;;AAaA,EAAA,2CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,2CAA2C,CAAC,CAA5C,CAA8C,CAA9C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,0BAAJ,EAAgC,YAAA;AAAM,aAAA,IAAA,mCAAA,EAAA;AAAyC,KAA/E;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,0BAAJ,EAAgC,2CAA2C,CAAC,CAA5E;AACA,GAJM;;AAvBA,EAAA,2CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,2CAAD,EAA8C,6CAA9C,CAAnB;AACQ,EAAA,2CAAA,CAAA,CAAA,GAAkC,IAAlC;AA2BhB,SAAA,2CAAA;AAAC,CA7BD,CAAiE,IAAjE,CAAA;;SAAa,2C","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FormatSummaryTextEventArgsDescriptionMetadata } from \"./FormatSummaryTextEventArgsDescriptionMetadata\";\nimport { ProvideCalculatorEventArgsDescriptionMetadata } from \"./ProvideCalculatorEventArgsDescriptionMetadata\";\nimport { ColumnSummaryDescriptionDescription } from \"./ColumnSummaryDescriptionDescription\";\n/**\n * @hidden\n */\nvar ColumnSummaryDescriptionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ColumnSummaryDescriptionDescriptionMetadata, _super);\n    function ColumnSummaryDescriptionDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColumnSummaryDescriptionDescriptionMetadata.b = function (a) {\n        if (ColumnSummaryDescriptionDescriptionMetadata.a == null) {\n            ColumnSummaryDescriptionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ColumnSummaryDescriptionDescriptionMetadata.c(a, ColumnSummaryDescriptionDescriptionMetadata.a);\n            FormatSummaryTextEventArgsDescriptionMetadata.d(a);\n            ProvideCalculatorEventArgsDescriptionMetadata.d(a);\n        }\n    };\n    ColumnSummaryDescriptionDescriptionMetadata.c = function (a, b) {\n        b.item(\"Field\", \"String\");\n        b.item(\"Operand\", \"ExportedType:string:SummaryOperand\");\n        b.item(\"CalculatorDisplayName\", \"String\");\n        b.item(\"DisplayName\", \"String\");\n        b.item(\"ValueFormat\", \"String\");\n        b.item(\"ValueFormatSpecifiers\", \"Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier\");\n        b.item(\"DisplayFormat\", \"String\");\n        b.item(\"DisplayFormatSpecifiers\", \"Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier\");\n        b.item(\"MaxFractionDigits\", \"Number:int\");\n        b.item(\"FormatTextRef\", \"EventRef::formatText\");\n        b.item(\"ProvideCalculatorRef\", \"EventRef::provideCalculator\");\n    };\n    ColumnSummaryDescriptionDescriptionMetadata.d = function (a) {\n        ColumnSummaryDescriptionDescriptionMetadata.b(a);\n        a.n(\"ColumnSummaryDescription\", function () { return new ColumnSummaryDescriptionDescription(); });\n        a.m(\"ColumnSummaryDescription\", ColumnSummaryDescriptionDescriptionMetadata.a);\n    };\n    ColumnSummaryDescriptionDescriptionMetadata.$t = markType(ColumnSummaryDescriptionDescriptionMetadata, 'ColumnSummaryDescriptionDescriptionMetadata');\n    ColumnSummaryDescriptionDescriptionMetadata.a = null;\n    return ColumnSummaryDescriptionDescriptionMetadata;\n}(Base));\nexport { ColumnSummaryDescriptionDescriptionMetadata };\n//# sourceMappingURL=ColumnSummaryDescriptionDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}