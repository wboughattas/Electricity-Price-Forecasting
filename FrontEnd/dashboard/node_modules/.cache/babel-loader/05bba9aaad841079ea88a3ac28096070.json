{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapImageryDescriptionMetadata } from \"./GeographicMapImageryDescriptionMetadata\";\nimport { OpenStreetMapImageryDescription } from \"./OpenStreetMapImageryDescription\";\n/**\r\n * @hidden\r\n */\n\nvar OpenStreetMapImageryDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(OpenStreetMapImageryDescriptionMetadata, _super);\n\n  function OpenStreetMapImageryDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  OpenStreetMapImageryDescriptionMetadata.b = function (a) {\n    if (OpenStreetMapImageryDescriptionMetadata.a == null) {\n      OpenStreetMapImageryDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      OpenStreetMapImageryDescriptionMetadata.c(a, OpenStreetMapImageryDescriptionMetadata.a);\n    }\n  };\n\n  OpenStreetMapImageryDescriptionMetadata.c = function (a, b) {\n    GeographicMapImageryDescriptionMetadata.c(a, b);\n    b.item(\"TilePath\", \"String\");\n  };\n\n  OpenStreetMapImageryDescriptionMetadata.d = function (a) {\n    OpenStreetMapImageryDescriptionMetadata.b(a);\n    a.n(\"OpenStreetMapImagery\", function () {\n      return new OpenStreetMapImageryDescription();\n    });\n    a.m(\"OpenStreetMapImagery\", OpenStreetMapImageryDescriptionMetadata.a);\n  };\n\n  OpenStreetMapImageryDescriptionMetadata.$t = markType(OpenStreetMapImageryDescriptionMetadata, 'OpenStreetMapImageryDescriptionMetadata');\n  OpenStreetMapImageryDescriptionMetadata.a = null;\n  return OpenStreetMapImageryDescriptionMetadata;\n}(Base);\n\nexport { OpenStreetMapImageryDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/OpenStreetMapImageryDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,uCAAT,QAAwD,2CAAxD;AACA,SAAS,+BAAT,QAAgD,mCAAhD;AAEA;;AAEG;;AACH,IAAA,uCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6D,EAAA,OAAA,CAAA,SAAA,CAAA,uCAAA,EAAA,MAAA;;AAA7D,WAAA,uCAAA,GAAA;;AAkBC;;AAfe,EAAA,uCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,uCAAuC,CAAC,CAAxC,IAA6C,IAAjD,EAAuD;AACtD,MAAA,uCAAuC,CAAC,CAAxC,GAA4C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA5C;AACA,MAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C,EAA6C,uCAAuC,CAAC,CAArF;AACA;AACD,GALc;;AAMR,EAAA,uCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C,EAA6C,CAA7C;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,QAAnB;AACA,GAHM;;AAIA,EAAA,uCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,sBAAJ,EAA4B,YAAA;AAAM,aAAA,IAAA,+BAAA,EAAA;AAAqC,KAAvE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,sBAAJ,EAA4B,uCAAuC,CAAC,CAApE;AACA,GAJM;;AAZA,EAAA,uCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uCAAD,EAA0C,yCAA1C,CAAnB;AACQ,EAAA,uCAAA,CAAA,CAAA,GAAkC,IAAlC;AAgBhB,SAAA,uCAAA;AAAC,CAlBD,CAA6D,IAA7D,CAAA;;SAAa,uC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { GeographicMapImageryDescriptionMetadata } from \"./GeographicMapImageryDescriptionMetadata\";\r\nimport { OpenStreetMapImageryDescription } from \"./OpenStreetMapImageryDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar OpenStreetMapImageryDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(OpenStreetMapImageryDescriptionMetadata, _super);\r\n    function OpenStreetMapImageryDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OpenStreetMapImageryDescriptionMetadata.b = function (a) {\r\n        if (OpenStreetMapImageryDescriptionMetadata.a == null) {\r\n            OpenStreetMapImageryDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            OpenStreetMapImageryDescriptionMetadata.c(a, OpenStreetMapImageryDescriptionMetadata.a);\r\n        }\r\n    };\r\n    OpenStreetMapImageryDescriptionMetadata.c = function (a, b) {\r\n        GeographicMapImageryDescriptionMetadata.c(a, b);\r\n        b.item(\"TilePath\", \"String\");\r\n    };\r\n    OpenStreetMapImageryDescriptionMetadata.d = function (a) {\r\n        OpenStreetMapImageryDescriptionMetadata.b(a);\r\n        a.n(\"OpenStreetMapImagery\", function () { return new OpenStreetMapImageryDescription(); });\r\n        a.m(\"OpenStreetMapImagery\", OpenStreetMapImageryDescriptionMetadata.a);\r\n    };\r\n    OpenStreetMapImageryDescriptionMetadata.$t = markType(OpenStreetMapImageryDescriptionMetadata, 'OpenStreetMapImageryDescriptionMetadata');\r\n    OpenStreetMapImageryDescriptionMetadata.a = null;\r\n    return OpenStreetMapImageryDescriptionMetadata;\r\n}(Base));\r\nexport { OpenStreetMapImageryDescriptionMetadata };\r\n//# sourceMappingURL=OpenStreetMapImageryDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}