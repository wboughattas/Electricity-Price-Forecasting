{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GridFilterDialogOpeningEventArgsDescriptionMetadata } from \"./GridFilterDialogOpeningEventArgsDescriptionMetadata\";\nimport { GridFilterDialogFilterChangeEventArgsDescriptionMetadata } from \"./GridFilterDialogFilterChangeEventArgsDescriptionMetadata\";\nimport { FilterDialogRenderCompletedEventArgsDescriptionMetadata } from \"./FilterDialogRenderCompletedEventArgsDescriptionMetadata\";\nimport { DataGridFilterDialogDescription } from \"./DataGridFilterDialogDescription\";\n/**\n * @hidden\n */\n\nvar DataGridFilterDialogDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DataGridFilterDialogDescriptionMetadata, _super);\n\n  function DataGridFilterDialogDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DataGridFilterDialogDescriptionMetadata.b = function (a) {\n    if (DataGridFilterDialogDescriptionMetadata.a == null) {\n      DataGridFilterDialogDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      DataGridFilterDialogDescriptionMetadata.c(a, DataGridFilterDialogDescriptionMetadata.a);\n      GridFilterDialogOpeningEventArgsDescriptionMetadata.d(a);\n      GridFilterDialogFilterChangeEventArgsDescriptionMetadata.d(a);\n      FilterDialogRenderCompletedEventArgsDescriptionMetadata.d(a);\n    }\n  };\n\n  DataGridFilterDialogDescriptionMetadata.c = function (a, b) {\n    b.item(\"IsAnimationEnabled\", \"Boolean\");\n    b.item(\"PixelScalingRatio\", \"Number:double\");\n    b.item(\"ActualPixelScalingRatio\", \"Number:double\");\n    b.item(\"IconColor\", \"Brush\");\n    b.item(\"ViewSize\", \"Number:double\");\n    b.item(\"DialogOpeningRef\", \"EventRef::dialogOpening\");\n    b.item(\"FilterChangingRef\", \"EventRef::filterChanging\");\n    b.item(\"FilterChangedRef\", \"EventRef::filterChanged\");\n    b.item(\"RenderCompletedRef\", \"EventRef::renderCompleted\");\n  };\n\n  DataGridFilterDialogDescriptionMetadata.d = function (a) {\n    DataGridFilterDialogDescriptionMetadata.b(a);\n    a.n(\"DataGridFilterDialog\", function () {\n      return new DataGridFilterDialogDescription();\n    });\n    a.m(\"DataGridFilterDialog\", DataGridFilterDialogDescriptionMetadata.a);\n  };\n\n  DataGridFilterDialogDescriptionMetadata.$t = markType(DataGridFilterDialogDescriptionMetadata, 'DataGridFilterDialogDescriptionMetadata');\n  DataGridFilterDialogDescriptionMetadata.a = null;\n  return DataGridFilterDialogDescriptionMetadata;\n}(Base);\n\nexport { DataGridFilterDialogDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DataGridFilterDialogDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mDAAT,QAAoE,uDAApE;AACA,SAAS,wDAAT,QAAyE,4DAAzE;AACA,SAAS,uDAAT,QAAwE,2DAAxE;AACA,SAAS,+BAAT,QAAgD,mCAAhD;AAEA;;AAEG;;AACH,IAAA,uCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6D,EAAA,OAAA,CAAA,SAAA,CAAA,uCAAA,EAAA,MAAA;;AAA7D,WAAA,uCAAA,GAAA;;AA4BC;;AAzBe,EAAA,uCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,uCAAuC,CAAC,CAAxC,IAA6C,IAAjD,EAAuD;AACtD,MAAA,uCAAuC,CAAC,CAAxC,GAA4C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA5C;AACA,MAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C,EAA6C,uCAAuC,CAAC,CAArF;AACA,MAAA,mDAAmD,CAAC,CAApD,CAAsD,CAAtD;AACA,MAAA,wDAAwD,CAAC,CAAzD,CAA2D,CAA3D;AACA,MAAA,uDAAuD,CAAC,CAAxD,CAA0D,CAA1D;AACA;AACD,GARc;;AASR,EAAA,uCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,SAA7B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,eAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,yBAAP,EAAkC,eAAlC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,OAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,eAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,yBAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,0BAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,yBAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,2BAA7B;AACA,GAVM;;AAWA,EAAA,uCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,sBAAJ,EAA4B,YAAA;AAAM,aAAA,IAAA,+BAAA,EAAA;AAAqC,KAAvE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,sBAAJ,EAA4B,uCAAuC,CAAC,CAApE;AACA,GAJM;;AAtBA,EAAA,uCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uCAAD,EAA0C,yCAA1C,CAAnB;AACQ,EAAA,uCAAA,CAAA,CAAA,GAAkC,IAAlC;AA0BhB,SAAA,uCAAA;AAAC,CA5BD,CAA6D,IAA7D,CAAA;;SAAa,uC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GridFilterDialogOpeningEventArgsDescriptionMetadata } from \"./GridFilterDialogOpeningEventArgsDescriptionMetadata\";\nimport { GridFilterDialogFilterChangeEventArgsDescriptionMetadata } from \"./GridFilterDialogFilterChangeEventArgsDescriptionMetadata\";\nimport { FilterDialogRenderCompletedEventArgsDescriptionMetadata } from \"./FilterDialogRenderCompletedEventArgsDescriptionMetadata\";\nimport { DataGridFilterDialogDescription } from \"./DataGridFilterDialogDescription\";\n/**\n * @hidden\n */\nvar DataGridFilterDialogDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DataGridFilterDialogDescriptionMetadata, _super);\n    function DataGridFilterDialogDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataGridFilterDialogDescriptionMetadata.b = function (a) {\n        if (DataGridFilterDialogDescriptionMetadata.a == null) {\n            DataGridFilterDialogDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            DataGridFilterDialogDescriptionMetadata.c(a, DataGridFilterDialogDescriptionMetadata.a);\n            GridFilterDialogOpeningEventArgsDescriptionMetadata.d(a);\n            GridFilterDialogFilterChangeEventArgsDescriptionMetadata.d(a);\n            FilterDialogRenderCompletedEventArgsDescriptionMetadata.d(a);\n        }\n    };\n    DataGridFilterDialogDescriptionMetadata.c = function (a, b) {\n        b.item(\"IsAnimationEnabled\", \"Boolean\");\n        b.item(\"PixelScalingRatio\", \"Number:double\");\n        b.item(\"ActualPixelScalingRatio\", \"Number:double\");\n        b.item(\"IconColor\", \"Brush\");\n        b.item(\"ViewSize\", \"Number:double\");\n        b.item(\"DialogOpeningRef\", \"EventRef::dialogOpening\");\n        b.item(\"FilterChangingRef\", \"EventRef::filterChanging\");\n        b.item(\"FilterChangedRef\", \"EventRef::filterChanged\");\n        b.item(\"RenderCompletedRef\", \"EventRef::renderCompleted\");\n    };\n    DataGridFilterDialogDescriptionMetadata.d = function (a) {\n        DataGridFilterDialogDescriptionMetadata.b(a);\n        a.n(\"DataGridFilterDialog\", function () { return new DataGridFilterDialogDescription(); });\n        a.m(\"DataGridFilterDialog\", DataGridFilterDialogDescriptionMetadata.a);\n    };\n    DataGridFilterDialogDescriptionMetadata.$t = markType(DataGridFilterDialogDescriptionMetadata, 'DataGridFilterDialogDescriptionMetadata');\n    DataGridFilterDialogDescriptionMetadata.a = null;\n    return DataGridFilterDialogDescriptionMetadata;\n}(Base));\nexport { DataGridFilterDialogDescriptionMetadata };\n//# sourceMappingURL=DataGridFilterDialogDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}