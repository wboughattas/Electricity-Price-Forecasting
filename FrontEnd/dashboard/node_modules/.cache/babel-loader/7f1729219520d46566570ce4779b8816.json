{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { XObject } from \"./XObject\";\nimport { XmlUtils } from \"./XmlUtils\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar XAttribute =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(XAttribute, _super);\n\n  function XAttribute(a) {\n    return _super.call(this, a) || this;\n  }\n\n  XAttribute.prototype.e = function (a) {\n    this.backingNode = this.backingNode.cloneNode(true);\n    a.setAttributeNode(this.backingNode);\n  };\n\n  XAttribute.prototype.get_nodeType = function () {\n    return 2;\n  };\n\n  Object.defineProperty(XAttribute.prototype, \"nodeType\", {\n    get: function () {\n      return this.get_nodeType();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XAttribute.prototype, \"value\", {\n    get: function () {\n      return XmlUtils.b(this.backingNode);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  XAttribute.$t = markType(XAttribute, 'XAttribute', XObject.$);\n  return XAttribute;\n}(XObject);\n\nexport { XAttribute };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/XAttribute.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,OAAT,QAAwB,WAAxB;AAEA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,UAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA;;AAE/B,WAAA,UAAA,CAAY,CAAZ,EAA2B;WAC1B,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,CAAN,KAAQ,I;AACR;;AACD,EAAA,UAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAe;AACd,SAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,SAAjB,CAA2B,IAA3B,CAAnB;AACA,IAAA,CAAC,CAAC,gBAAF,CAAiC,KAAK,WAAtC;AACA,GAHD;;AAIU,EAAA,UAAA,CAAA,SAAA,CAAA,YAAA,GAAV,YAAA;AACC,WAAO,CAAP;AACA,GAFS;;AAGV,EAAA,MAAA,CAAA,cAAA,CAAI,UAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;SAAZ,YAAA;AACC,aAAO,KAAK,YAAL,EAAP;AACA,KAFW;oBAAA;;AAAA,GAAZ;AAGA,EAAA,MAAA,CAAA,cAAA,CAAI,UAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;SAAT,YAAA;AACC,aAAO,QAAQ,CAAC,CAAT,CAAyB,KAAK,WAA9B,CAAP;AACA,KAFQ;oBAAA;;AAAA,GAAT;AAdO,EAAA,UAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,UAAD,EAAa,YAAb,EAAiC,OAAQ,CAAC,CAA1C,CAAnB;AAiBR,SAAA,UAAA;AAAC,CAlBD,CAAgC,OAAhC,CAAA;;SAAa,U","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { XObject } from \"./XObject\";\nimport { XmlUtils } from \"./XmlUtils\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar XAttribute = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(XAttribute, _super);\n    function XAttribute(a) {\n        return _super.call(this, a) || this;\n    }\n    XAttribute.prototype.e = function (a) {\n        this.backingNode = this.backingNode.cloneNode(true);\n        a.setAttributeNode(this.backingNode);\n    };\n    XAttribute.prototype.get_nodeType = function () {\n        return 2;\n    };\n    Object.defineProperty(XAttribute.prototype, \"nodeType\", {\n        get: function () {\n            return this.get_nodeType();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XAttribute.prototype, \"value\", {\n        get: function () {\n            return XmlUtils.b(this.backingNode);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XAttribute.$t = markType(XAttribute, 'XAttribute', XObject.$);\n    return XAttribute;\n}(XObject));\nexport { XAttribute };\n//# sourceMappingURL=XAttribute.js.map\n"]},"metadata":{},"sourceType":"module"}