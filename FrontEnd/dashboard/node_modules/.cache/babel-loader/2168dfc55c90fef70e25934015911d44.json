{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalRangeCategorySeriesDescriptionMetadata } from \"./HorizontalRangeCategorySeriesDescriptionMetadata\";\nimport { RangeAreaSeriesDescription } from \"./RangeAreaSeriesDescription\";\n/**\r\n * @hidden\r\n */\n\nvar RangeAreaSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RangeAreaSeriesDescriptionMetadata, _super);\n\n  function RangeAreaSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RangeAreaSeriesDescriptionMetadata.b = function (a) {\n    if (RangeAreaSeriesDescriptionMetadata.a == null) {\n      RangeAreaSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      RangeAreaSeriesDescriptionMetadata.c(a, RangeAreaSeriesDescriptionMetadata.a);\n    }\n  };\n\n  RangeAreaSeriesDescriptionMetadata.c = function (a, b) {\n    HorizontalRangeCategorySeriesDescriptionMetadata.c(a, b);\n  };\n\n  RangeAreaSeriesDescriptionMetadata.d = function (a) {\n    RangeAreaSeriesDescriptionMetadata.b(a);\n    a.n(\"RangeAreaSeries\", function () {\n      return new RangeAreaSeriesDescription();\n    });\n    a.m(\"RangeAreaSeries\", RangeAreaSeriesDescriptionMetadata.a);\n  };\n\n  RangeAreaSeriesDescriptionMetadata.$t = markType(RangeAreaSeriesDescriptionMetadata, 'RangeAreaSeriesDescriptionMetadata');\n  RangeAreaSeriesDescriptionMetadata.a = null;\n  return RangeAreaSeriesDescriptionMetadata;\n}(Base);\n\nexport { RangeAreaSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/RangeAreaSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,gDAAT,QAAiE,oDAAjE;AACA,SAAS,0BAAT,QAA2C,8BAA3C;AAEA;;AAEG;;AACH,IAAA,kCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwD,EAAA,OAAA,CAAA,SAAA,CAAA,kCAAA,EAAA,MAAA;;AAAxD,WAAA,kCAAA,GAAA;;AAiBC;;AAde,EAAA,kCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,kCAAkC,CAAC,CAAnC,IAAwC,IAA5C,EAAkD;AACjD,MAAA,kCAAkC,CAAC,CAAnC,GAAuC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAvC;AACA,MAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC,EAAwC,kCAAkC,CAAC,CAA3E;AACA;AACD,GALc;;AAMR,EAAA,kCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,gDAAgD,CAAC,CAAjD,CAAmD,CAAnD,EAAsD,CAAtD;AACA,GAFM;;AAGA,EAAA,kCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,iBAAJ,EAAuB,YAAA;AAAM,aAAA,IAAA,0BAAA,EAAA;AAAgC,KAA7D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,iBAAJ,EAAuB,kCAAkC,CAAC,CAA1D;AACA,GAJM;;AAXA,EAAA,kCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,kCAAD,EAAqC,oCAArC,CAAnB;AACQ,EAAA,kCAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,kCAAA;AAAC,CAjBD,CAAwD,IAAxD,CAAA;;SAAa,kC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { HorizontalRangeCategorySeriesDescriptionMetadata } from \"./HorizontalRangeCategorySeriesDescriptionMetadata\";\r\nimport { RangeAreaSeriesDescription } from \"./RangeAreaSeriesDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar RangeAreaSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(RangeAreaSeriesDescriptionMetadata, _super);\r\n    function RangeAreaSeriesDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RangeAreaSeriesDescriptionMetadata.b = function (a) {\r\n        if (RangeAreaSeriesDescriptionMetadata.a == null) {\r\n            RangeAreaSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            RangeAreaSeriesDescriptionMetadata.c(a, RangeAreaSeriesDescriptionMetadata.a);\r\n        }\r\n    };\r\n    RangeAreaSeriesDescriptionMetadata.c = function (a, b) {\r\n        HorizontalRangeCategorySeriesDescriptionMetadata.c(a, b);\r\n    };\r\n    RangeAreaSeriesDescriptionMetadata.d = function (a) {\r\n        RangeAreaSeriesDescriptionMetadata.b(a);\r\n        a.n(\"RangeAreaSeries\", function () { return new RangeAreaSeriesDescription(); });\r\n        a.m(\"RangeAreaSeries\", RangeAreaSeriesDescriptionMetadata.a);\r\n    };\r\n    RangeAreaSeriesDescriptionMetadata.$t = markType(RangeAreaSeriesDescriptionMetadata, 'RangeAreaSeriesDescriptionMetadata');\r\n    RangeAreaSeriesDescriptionMetadata.a = null;\r\n    return RangeAreaSeriesDescriptionMetadata;\r\n}(Base));\r\nexport { RangeAreaSeriesDescriptionMetadata };\r\n//# sourceMappingURL=RangeAreaSeriesDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}