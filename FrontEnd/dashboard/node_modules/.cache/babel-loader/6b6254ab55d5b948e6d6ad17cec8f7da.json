{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { List$1 } from \"./List$1\";\nimport { PrimitiveVisualData } from \"./PrimitiveVisualData\";\nimport { IVisualData_$type } from \"./IVisualData\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar PrimitiveVisualDataList =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PrimitiveVisualDataList, _super);\n\n  function PrimitiveVisualDataList() {\n    return _super.call(this, PrimitiveVisualData.$, 0) || this;\n  }\n\n  PrimitiveVisualDataList.prototype.containingTag = function (a) {\n    var b = new PrimitiveVisualDataList();\n\n    for (var c = 0; c < this.count; c++) {\n      var d = this._inner[c];\n\n      for (var e = 0; e < d.tags.count; e++) {\n        if (d.tags._inner[e] == a) {\n          b.add(d);\n          break;\n        }\n      }\n    }\n\n    return b;\n  };\n\n  PrimitiveVisualDataList.prototype.serialize = function () {\n    var a = new StringBuilder(0);\n    a.l(\"{ items: [\");\n\n    for (var b = 0; b < this.count; b++) {\n      if (b != 0) {\n        a.l(\", \");\n      }\n\n      a.l(this._inner[b].serialize());\n    }\n\n    return a.toString();\n  };\n\n  PrimitiveVisualDataList.$t = markType(PrimitiveVisualDataList, 'PrimitiveVisualDataList', List$1.$.specialize(PrimitiveVisualData.$), [IVisualData_$type]);\n  return PrimitiveVisualDataList;\n}(List$1);\n\nexport { PrimitiveVisualDataList };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PrimitiveVisualDataList.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,MAAT,QAAuB,UAAvB;AACA,SAAS,mBAAT,QAAoC,uBAApC;AACA,SAAsB,iBAAtB,QAA+C,eAA/C;AACA,SAAS,aAAT,QAA8B,iBAA9B;AACA,SAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,uBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,OAAA,CAAA,SAAA,CAAA,uBAAA,EAAA,MAAA;;AAE5C,WAAA,uBAAA,GAAA;WACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAY,mBAAoB,CAAC,CAAjC,EAAoC,CAApC,KAAsC,I;AACtC;;AACD,EAAA,uBAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,CAAd,EAAuB;AACtB,QAAI,CAAC,GAAG,IAAI,uBAAJ,EAAR;;AACA,SAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,GAAG,KAAK,KAAjC,EAAwC,CAAC,EAAzC,EAA6C;AAC5C,UAAI,CAAC,GAAG,KAAK,MAAL,CAAY,CAAZ,CAAR;;AACA,WAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,GAAG,CAAC,CAAC,IAAF,CAAO,KAAnC,EAA0C,CAAC,EAA3C,EAA+C;AAC9C,YAAI,CAAC,CAAC,IAAF,CAAO,MAAP,CAAc,CAAd,KAAoB,CAAxB,EAA2B;AAC1B,UAAA,CAAC,CAAC,GAAF,CAAM,CAAN;AACA;AACA;AACD;AACD;;AACD,WAAO,CAAP;AACA,GAZD;;AAaA,EAAA,uBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACC,QAAI,CAAC,GAAG,IAAI,aAAJ,CAAkB,CAAlB,CAAR;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,YAAJ;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,KAAzB,EAAgC,CAAC,EAAjC,EAAqC;AACpC,UAAI,CAAC,IAAI,CAAT,EAAY;AACX,QAAA,CAAC,CAAC,CAAF,CAAI,IAAJ;AACA;;AACD,MAAA,CAAC,CAAC,CAAF,CAAI,KAAK,MAAL,CAAY,CAAZ,EAAe,SAAf,EAAJ;AACA;;AACD,WAAO,CAAC,CAAC,QAAF,EAAP;AACA,GAVD;;AAjBO,EAAA,uBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uBAAD,EAA0B,yBAA1B,EAA2D,MAAO,CAAC,CAAR,CAAU,UAAV,CAA2B,mBAAoB,CAAC,CAAhD,CAA3D,EAA+G,CAAC,iBAAD,CAA/G,CAAnB;AA4BR,SAAA,uBAAA;AAAC,CA7BD,CAA6C,MAA7C,CAAA;;SAAa,uB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { List$1 } from \"./List$1\";\nimport { PrimitiveVisualData } from \"./PrimitiveVisualData\";\nimport { IVisualData_$type } from \"./IVisualData\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar PrimitiveVisualDataList = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PrimitiveVisualDataList, _super);\n    function PrimitiveVisualDataList() {\n        return _super.call(this, PrimitiveVisualData.$, 0) || this;\n    }\n    PrimitiveVisualDataList.prototype.containingTag = function (a) {\n        var b = new PrimitiveVisualDataList();\n        for (var c = 0; c < this.count; c++) {\n            var d = this._inner[c];\n            for (var e = 0; e < d.tags.count; e++) {\n                if (d.tags._inner[e] == a) {\n                    b.add(d);\n                    break;\n                }\n            }\n        }\n        return b;\n    };\n    PrimitiveVisualDataList.prototype.serialize = function () {\n        var a = new StringBuilder(0);\n        a.l(\"{ items: [\");\n        for (var b = 0; b < this.count; b++) {\n            if (b != 0) {\n                a.l(\", \");\n            }\n            a.l(this._inner[b].serialize());\n        }\n        return a.toString();\n    };\n    PrimitiveVisualDataList.$t = markType(PrimitiveVisualDataList, 'PrimitiveVisualDataList', List$1.$.specialize(PrimitiveVisualData.$), [IVisualData_$type]);\n    return PrimitiveVisualDataList;\n}(List$1));\nexport { PrimitiveVisualDataList };\n//# sourceMappingURL=PrimitiveVisualDataList.js.map\n"]},"metadata":{},"sourceType":"module"}