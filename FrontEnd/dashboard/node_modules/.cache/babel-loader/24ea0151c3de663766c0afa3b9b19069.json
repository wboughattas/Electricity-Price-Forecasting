{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { DefinitionBaseDescriptionMetadata } from \"./DefinitionBaseDescriptionMetadata\";\nimport { RowSeparatorDescription } from \"./RowSeparatorDescription\";\n/**\r\n * @hidden\r\n */\n\nvar RowSeparatorDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RowSeparatorDescriptionMetadata, _super);\n\n  function RowSeparatorDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RowSeparatorDescriptionMetadata.b = function (a) {\n    if (RowSeparatorDescriptionMetadata.a == null) {\n      RowSeparatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      RowSeparatorDescriptionMetadata.c(a, RowSeparatorDescriptionMetadata.a);\n    }\n  };\n\n  RowSeparatorDescriptionMetadata.c = function (a, b) {\n    DefinitionBaseDescriptionMetadata.c(a, b);\n  };\n\n  RowSeparatorDescriptionMetadata.d = function (a) {\n    RowSeparatorDescriptionMetadata.b(a);\n    a.n(\"RowSeparator\", function () {\n      return new RowSeparatorDescription();\n    });\n    a.m(\"RowSeparator\", RowSeparatorDescriptionMetadata.a);\n  };\n\n  RowSeparatorDescriptionMetadata.$t = markType(RowSeparatorDescriptionMetadata, 'RowSeparatorDescriptionMetadata');\n  RowSeparatorDescriptionMetadata.a = null;\n  return RowSeparatorDescriptionMetadata;\n}(Base);\n\nexport { RowSeparatorDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/RowSeparatorDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,iCAAT,QAAkD,qCAAlD;AACA,SAAS,uBAAT,QAAwC,2BAAxC;AAEA;;AAEG;;AACH,IAAA,+BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqD,EAAA,OAAA,CAAA,SAAA,CAAA,+BAAA,EAAA,MAAA;;AAArD,WAAA,+BAAA,GAAA;;AAiBC;;AAde,EAAA,+BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,+BAA+B,CAAC,CAAhC,IAAqC,IAAzC,EAA+C;AAC9C,MAAA,+BAA+B,CAAC,CAAhC,GAAoC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAApC;AACA,MAAA,+BAA+B,CAAC,CAAhC,CAAkC,CAAlC,EAAqC,+BAA+B,CAAC,CAArE;AACA;AACD,GALc;;AAMR,EAAA,+BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,iCAAiC,CAAC,CAAlC,CAAoC,CAApC,EAAuC,CAAvC;AACA,GAFM;;AAGA,EAAA,+BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,+BAA+B,CAAC,CAAhC,CAAkC,CAAlC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,cAAJ,EAAoB,YAAA;AAAM,aAAA,IAAA,uBAAA,EAAA;AAA6B,KAAvD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,cAAJ,EAAoB,+BAA+B,CAAC,CAApD;AACA,GAJM;;AAXA,EAAA,+BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,+BAAD,EAAkC,iCAAlC,CAAnB;AACQ,EAAA,+BAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,+BAAA;AAAC,CAjBD,CAAqD,IAArD,CAAA;;SAAa,+B","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { DefinitionBaseDescriptionMetadata } from \"./DefinitionBaseDescriptionMetadata\";\r\nimport { RowSeparatorDescription } from \"./RowSeparatorDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar RowSeparatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(RowSeparatorDescriptionMetadata, _super);\r\n    function RowSeparatorDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RowSeparatorDescriptionMetadata.b = function (a) {\r\n        if (RowSeparatorDescriptionMetadata.a == null) {\r\n            RowSeparatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            RowSeparatorDescriptionMetadata.c(a, RowSeparatorDescriptionMetadata.a);\r\n        }\r\n    };\r\n    RowSeparatorDescriptionMetadata.c = function (a, b) {\r\n        DefinitionBaseDescriptionMetadata.c(a, b);\r\n    };\r\n    RowSeparatorDescriptionMetadata.d = function (a) {\r\n        RowSeparatorDescriptionMetadata.b(a);\r\n        a.n(\"RowSeparator\", function () { return new RowSeparatorDescription(); });\r\n        a.m(\"RowSeparator\", RowSeparatorDescriptionMetadata.a);\r\n    };\r\n    RowSeparatorDescriptionMetadata.$t = markType(RowSeparatorDescriptionMetadata, 'RowSeparatorDescriptionMetadata');\r\n    RowSeparatorDescriptionMetadata.a = null;\r\n    return RowSeparatorDescriptionMetadata;\r\n}(Base));\r\nexport { RowSeparatorDescriptionMetadata };\r\n//# sourceMappingURL=RowSeparatorDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}