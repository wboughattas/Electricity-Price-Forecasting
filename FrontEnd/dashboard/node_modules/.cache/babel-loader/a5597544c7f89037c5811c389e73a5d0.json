{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nvar HttpRequestUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function HttpRequestUtil() {}\n\n  HttpRequestUtil.submit = function (url, callback, error) {\n    var data, ret, req;\n\n    if (typeof XMLHttpRequest == \"undefined\") {\n      try {\n        req = new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n      } catch (e) {}\n\n      try {\n        req = new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n      } catch (e) {}\n\n      req = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    } else {\n      req = new XMLHttpRequest();\n    }\n\n    if (req.overrideMimeType) {\n      req.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    }\n\n    req.onreadystatechange = function () {\n      if (req.readyState == 4) {\n        if (req.status == 200) {\n          if (callback) {\n            callback(req.responseText, req);\n          }\n        } else {\n          if (error) {\n            error(req.error, req);\n          }\n        }\n      }\n    };\n\n    req.open(\"GET\", url, true);\n    req.send(null);\n    return req;\n  };\n\n  ;\n  return HttpRequestUtil;\n}();\n\nexport { HttpRequestUtil };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/httpRequestUtil.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;AAEF,IAAA,eAAA;AAAA;;AAAA;AAAA,YAAA;AAAA,WAAA,eAAA,GAAA,CAsCC;;AApCO,EAAA,eAAA,CAAA,MAAA,GAAP,UAAc,GAAd,EAA2B,QAA3B,EAAwE,KAAxE,EAAiH;AAChH,QAAI,IAAJ,EAAU,GAAV,EAAe,GAAf;;AAEA,QAAI,OAAO,cAAP,IAAyB,WAA7B,EAA0C;AACzC,UAAI;AAAE,QAAA,GAAG,GAAG,IAAI,aAAJ,CAAkB,oBAAlB,CAAN;AAAgD,OAAtD,CACA,OAAO,CAAP,EAAU,CAAG;;AACb,UAAI;AAAE,QAAA,GAAG,GAAG,IAAI,aAAJ,CAAkB,oBAAlB,CAAN;AAAgD,OAAtD,CACA,OAAO,CAAP,EAAU,CAAG;;AACb,MAAA,GAAG,GAAG,IAAI,aAAJ,CAAkB,mBAAlB,CAAN;AACA,KAND,MAMO;AACN,MAAA,GAAG,GAAG,IAAI,cAAJ,EAAN;AACA;;AAED,QAAI,GAAG,CAAC,gBAAR,EAA0B;AACzB,MAAA,GAAG,CAAC,gBAAJ,CAAqB,oCAArB;AACA;;AAED,IAAA,GAAG,CAAC,kBAAJ,GAAyB,YAAA;AACxB,UAAI,GAAG,CAAC,UAAJ,IAAkB,CAAtB,EAAyB;AACZ,YAAI,GAAG,CAAC,MAAJ,IAAc,GAAlB,EAAuB;AACnB,cAAI,QAAJ,EAAc;AACV,YAAA,QAAQ,CAAC,GAAG,CAAC,YAAL,EAAmB,GAAnB,CAAR;AACH;AACJ,SAJD,MAIO;AACH,cAAI,KAAJ,EAAW;AACP,YAAA,KAAK,CAAC,GAAG,CAAC,KAAL,EAAY,GAAZ,CAAL;AACH;AAChB;AACD;AACD,KAZD;;AAcA,IAAA,GAAG,CAAC,IAAJ,CAAS,KAAT,EAAgB,GAAhB,EAAqB,IAArB;AACM,IAAA,GAAG,CAAC,IAAJ,CAAS,IAAT;AAEA,WAAO,GAAP;AACN,GAnCM;;AAmCN;AACF,SAAA,eAAA;AAAC,CAtCD,EAAA","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nvar HttpRequestUtil = /** @class */ /*@__PURE__*/ (function () {\r\n    function HttpRequestUtil() {\r\n    }\r\n    HttpRequestUtil.submit = function (url, callback, error) {\r\n        var data, ret, req;\r\n        if (typeof XMLHttpRequest == \"undefined\") {\r\n            try {\r\n                req = new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                req = new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\r\n            }\r\n            catch (e) { }\r\n            req = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        }\r\n        else {\r\n            req = new XMLHttpRequest();\r\n        }\r\n        if (req.overrideMimeType) {\r\n            req.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        }\r\n        req.onreadystatechange = function () {\r\n            if (req.readyState == 4) {\r\n                if (req.status == 200) {\r\n                    if (callback) {\r\n                        callback(req.responseText, req);\r\n                    }\r\n                }\r\n                else {\r\n                    if (error) {\r\n                        error(req.error, req);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        req.open(\"GET\", url, true);\r\n        req.send(null);\r\n        return req;\r\n    };\r\n    ;\r\n    return HttpRequestUtil;\r\n}());\r\nexport { HttpRequestUtil };\r\n//# sourceMappingURL=httpRequestUtil.js.map\r\n"]},"metadata":{},"sourceType":"module"}