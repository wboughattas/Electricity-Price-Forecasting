{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { ObservableCollection$1 } from \"./ObservableCollection$1\";\nimport { Color } from \"./Color\";\nimport { NotifyCollectionChangedEventArgs } from \"./NotifyCollectionChangedEventArgs\";\nimport { fromEnum, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar ObservableColorCollection =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ObservableColorCollection, _super);\n\n  function ObservableColorCollection() {\n    var _this = _super.call(this, Color.$, 0) || this;\n\n    _this.ae = 0;\n    return _this;\n  }\n\n  Object.defineProperty(ObservableColorCollection.prototype, \"af\", {\n    get: function () {\n      return this.ae;\n    },\n    set: function (a) {\n      if (this.ae != a) {\n        this.ae = a;\n        this.ac(new NotifyCollectionChangedEventArgs(0, 4));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ObservableColorCollection.prototype.equals = function (a) {\n    if (a == null) {\n      return false;\n    }\n\n    var b = a;\n\n    if (b.count != this.count) {\n      return false;\n    }\n\n    for (var c = 0; c < b.count; c++) {\n      if (!b._inner[c].equals(this._inner[c])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  ObservableColorCollection.ag = function (a) {\n    var e_1, _a;\n\n    var b = new ObservableColorCollection();\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        var d = new Color();\n        d.colorString = c;\n        b.add(d);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return b;\n  };\n\n  ObservableColorCollection.$t = markType(ObservableColorCollection, 'ObservableColorCollection', ObservableCollection$1.$.specialize(Color.$));\n  return ObservableColorCollection;\n}(ObservableCollection$1);\n\nexport { ObservableColorCollection };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ObservableColorCollection.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,sBAAT,QAAuC,0BAAvC;AACA,SAAS,KAAT,QAAsB,SAAtB;AAEA,SAAS,gCAAT,QAAiD,oCAAjD;AACA,SAA+K,QAA/K,EAA+L,QAA/L,QAA+M,QAA/M;AAIA;;AAEG;;AACH,IAAA,yBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+C,EAAA,OAAA,CAAA,SAAA,CAAA,yBAAA,EAAA,MAAA;;AAE9C,WAAA,yBAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAY,KAAM,CAAC,CAAnB,EAAsB,CAAtB,KAAwB,IADzB;;AAYQ,IAAA,KAAA,CAAA,EAAA,GAAwB,CAAxB;;AAVP;;AACD,EAAA,MAAA,CAAA,cAAA,CAAI,yBAAA,CAAA,SAAJ,EAAI,IAAJ,EAAM;SAAN,YAAA;AACC,aAAO,KAAK,EAAZ;AACA,KAFK;SAGN,UAAO,CAAP,EAA2B;AAC1B,UAAI,KAAK,EAAL,IAAW,CAAf,EAAkB;AACjB,aAAK,EAAL,GAAU,CAAV;AACA,aAAK,EAAL,CAAQ,IAAI,gCAAJ,CAAqC,CAArC,EAAwC,CAAxC,CAAR;AACA;AACD,KARK;oBAAA;;AAAA,GAAN;;AAUA,EAAA,yBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,CAAP,EAAa;AACZ,QAAI,CAAC,IAAI,IAAT,EAAe;AACd,aAAO,KAAP;AACA;;AACD,QAAI,CAAC,GAAyD,CAA9D;;AACA,QAAI,CAAC,CAAC,KAAF,IAAW,KAAK,KAApB,EAA2B;AAC1B,aAAO,KAAP;AACA;;AACD,SAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,GAAG,CAAC,CAAC,KAA9B,EAAqC,CAAC,EAAtC,EAA0C;AACzC,UAAI,CAAC,CAAC,CAAC,MAAF,CAAS,CAAT,EAAY,MAAZ,CAAmB,KAAK,MAAL,CAAY,CAAZ,CAAnB,CAAL,EAAyC;AACxC,eAAO,KAAP;AACA;AACD;;AACD,WAAO,IAAP;AACA,GAdD;;AAeO,EAAA,yBAAA,CAAA,EAAA,GAAP,UAAU,CAAV,EAA4B;;;AAC3B,QAAI,CAAC,GAAG,IAAI,yBAAJ,EAAR;;;AACA,WAAc,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,QAAQ,CAAS,CAAT,CAAR,CAAA,EAAmB,EAAA,GAAA,EAAA,CAAA,IAAA,EAAjC,EAAiC,CAAA,EAAA,CAAA,IAAjC,EAAiC,EAAA,GAAA,EAAA,CAAA,IAAA,EAAjC,EAAmC;AAA9B,YAAI,CAAC,GAAA,EAAA,CAAA,KAAL;AACJ,YAAI,CAAC,GAAG,IAAI,KAAJ,EAAR;AACA,QAAA,CAAC,CAAC,WAAF,GAAgB,CAAhB;AACA,QAAA,CAAC,CAAC,GAAF,CAAM,CAAN;AACA;;;;;;;;AACD,O,SACA;AArCM,YAAA,GAAA,EAsCR,MAAA,GAAA,CAAA,KAAA;AAvC+C;AAAlC;;;GA8BL;;;;CA9BR,C,sBAAA,CAAA","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { ObservableCollection$1 } from \"./ObservableCollection$1\";\nimport { Color } from \"./Color\";\nimport { NotifyCollectionChangedEventArgs } from \"./NotifyCollectionChangedEventArgs\";\nimport { fromEnum, markType } from \"./type\";\n/**\n * @hidden\n */\nvar ObservableColorCollection = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObservableColorCollection, _super);\n    function ObservableColorCollection() {\n        var _this = _super.call(this, Color.$, 0) || this;\n        _this.ae = 0;\n        return _this;\n    }\n    Object.defineProperty(ObservableColorCollection.prototype, \"af\", {\n        get: function () {\n            return this.ae;\n        },\n        set: function (a) {\n            if (this.ae != a) {\n                this.ae = a;\n                this.ac(new NotifyCollectionChangedEventArgs(0, 4));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ObservableColorCollection.prototype.equals = function (a) {\n        if (a == null) {\n            return false;\n        }\n        var b = a;\n        if (b.count != this.count) {\n            return false;\n        }\n        for (var c = 0; c < b.count; c++) {\n            if (!b._inner[c].equals(this._inner[c])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    ObservableColorCollection.ag = function (a) {\n        var e_1, _a;\n        var b = new ObservableColorCollection();\n        try {\n            for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                var d = new Color();\n                d.colorString = c;\n                b.add(d);\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        return b;\n    };\n    ObservableColorCollection.$t = markType(ObservableColorCollection, 'ObservableColorCollection', ObservableCollection$1.$.specialize(Color.$));\n    return ObservableColorCollection;\n}(ObservableCollection$1));\nexport { ObservableColorCollection };\n//# sourceMappingURL=ObservableColorCollection.js.map\n"]},"metadata":{},"sourceType":"module"}