{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { DependencyObject } from \"igniteui-react-core\";\nimport { INotifyPropertyChanged_$type, Base, PropertyChangedEventArgs, String_$type, typeCast, markType, markDep } from \"igniteui-react-core\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { Brush } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\n/**\r\n * @hidden\r\n */\n\nvar LinearGraphTooltipDataContext =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(LinearGraphTooltipDataContext, _super);\n\n  function LinearGraphTooltipDataContext() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.propertyChanged = null;\n    return _this;\n  }\n\n  Object.defineProperty(LinearGraphTooltipDataContext.prototype, \"item\", {\n    get: function () {\n      return this.c(LinearGraphTooltipDataContext.itemProperty);\n    },\n    set: function (a) {\n      this.h(LinearGraphTooltipDataContext.itemProperty, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LinearGraphTooltipDataContext.prototype, \"itemName\", {\n    get: function () {\n      return this.c(LinearGraphTooltipDataContext.itemNameProperty);\n    },\n    set: function (a) {\n      this.h(LinearGraphTooltipDataContext.itemNameProperty, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LinearGraphTooltipDataContext.prototype, \"brush\", {\n    get: function () {\n      return this.c(LinearGraphTooltipDataContext.itemBrushProperty);\n    },\n    set: function (a) {\n      this.h(LinearGraphTooltipDataContext.itemBrushProperty, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LinearGraphTooltipDataContext.prototype, \"label\", {\n    get: function () {\n      return this.c(LinearGraphTooltipDataContext.labelProperty);\n    },\n    set: function (a) {\n      this.h(LinearGraphTooltipDataContext.labelProperty, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LinearGraphTooltipDataContext.prototype.p = function (a, b, c) {\n    if (this.propertyChanged != null) {\n      this.propertyChanged(this, new PropertyChangedEventArgs(a));\n    }\n  };\n\n  LinearGraphTooltipDataContext.$t = markType(LinearGraphTooltipDataContext, 'LinearGraphTooltipDataContext', DependencyObject.$, [INotifyPropertyChanged_$type]);\n  LinearGraphTooltipDataContext.labelProperty = DependencyProperty.i(\"Label\", String_$type, LinearGraphTooltipDataContext.$, new PropertyMetadata(2, null, function (a, b) {\n    return typeCast(LinearGraphTooltipDataContext.$, a).p(\"Label\", b.oldValue, b.newValue);\n  }));\n  LinearGraphTooltipDataContext.itemProperty = DependencyProperty.i(\"Item\", Base.$, LinearGraphTooltipDataContext.$, new PropertyMetadata(2, null, function (a, b) {\n    return typeCast(LinearGraphTooltipDataContext.$, a).p(\"Item\", b.oldValue, b.newValue);\n  }));\n  LinearGraphTooltipDataContext.itemNameProperty = DependencyProperty.i(\"ItemName\", Base.$, LinearGraphTooltipDataContext.$, new PropertyMetadata(2, null, function (a, b) {\n    return typeCast(LinearGraphTooltipDataContext.$, a).p(\"ItemName\", b.oldValue, b.newValue);\n  }));\n  LinearGraphTooltipDataContext.itemBrushProperty = DependencyProperty.i(\"ItemBrush\", Brush.$, LinearGraphTooltipDataContext.$, new PropertyMetadata(2, null, function (a, b) {\n    return typeCast(LinearGraphTooltipDataContext.$, a).p(\"ItemBrush\", b.oldValue, b.newValue);\n  }));\n  LinearGraphTooltipDataContext.$$p = markDep(DependencyProperty, PropertyMetadata, LinearGraphTooltipDataContext, 'p', ['Outline', [Brush.$, null], 'Thickness', [1, 0]]);\n  return LinearGraphTooltipDataContext;\n}(DependencyObject);\n\nexport { LinearGraphTooltipDataContext };","map":{"version":3,"sources":["../../../../src/igniteui-gauges/lib/LinearGraphTooltipDataContext.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DependencyObject } from \"igniteui-react-core\";\r\nimport { INotifyPropertyChanged_$type, Base, PropertyChangedEventArgs, String_$type, typeCast, markType, markDep } from \"igniteui-react-core\";\r\nimport { DependencyProperty } from \"igniteui-react-core\";\r\nimport { Brush } from \"igniteui-react-core\";\r\nimport { PropertyMetadata } from \"igniteui-react-core\";\r\n/**\r\n * @hidden\r\n */\r\nvar LinearGraphTooltipDataContext = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(LinearGraphTooltipDataContext, _super);\r\n    function LinearGraphTooltipDataContext() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.propertyChanged = null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LinearGraphTooltipDataContext.prototype, \"item\", {\r\n        get: function () {\r\n            return this.c(LinearGraphTooltipDataContext.itemProperty);\r\n        },\r\n        set: function (a) {\r\n            this.h(LinearGraphTooltipDataContext.itemProperty, a);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LinearGraphTooltipDataContext.prototype, \"itemName\", {\r\n        get: function () {\r\n            return this.c(LinearGraphTooltipDataContext.itemNameProperty);\r\n        },\r\n        set: function (a) {\r\n            this.h(LinearGraphTooltipDataContext.itemNameProperty, a);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LinearGraphTooltipDataContext.prototype, \"brush\", {\r\n        get: function () {\r\n            return this.c(LinearGraphTooltipDataContext.itemBrushProperty);\r\n        },\r\n        set: function (a) {\r\n            this.h(LinearGraphTooltipDataContext.itemBrushProperty, a);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LinearGraphTooltipDataContext.prototype, \"label\", {\r\n        get: function () {\r\n            return this.c(LinearGraphTooltipDataContext.labelProperty);\r\n        },\r\n        set: function (a) {\r\n            this.h(LinearGraphTooltipDataContext.labelProperty, a);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinearGraphTooltipDataContext.prototype.p = function (a, b, c) {\r\n        if (this.propertyChanged != null) {\r\n            this.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n        }\r\n    };\r\n    LinearGraphTooltipDataContext.$t = markType(LinearGraphTooltipDataContext, 'LinearGraphTooltipDataContext', DependencyObject.$, [INotifyPropertyChanged_$type]);\r\n    LinearGraphTooltipDataContext.labelProperty = DependencyProperty.i(\"Label\", String_$type, LinearGraphTooltipDataContext.$, new PropertyMetadata(2, null, function (a, b) { return (typeCast(LinearGraphTooltipDataContext.$, a)).p(\"Label\", b.oldValue, b.newValue); }));\r\n    LinearGraphTooltipDataContext.itemProperty = DependencyProperty.i(\"Item\", Base.$, LinearGraphTooltipDataContext.$, new PropertyMetadata(2, null, function (a, b) { return (typeCast(LinearGraphTooltipDataContext.$, a)).p(\"Item\", b.oldValue, b.newValue); }));\r\n    LinearGraphTooltipDataContext.itemNameProperty = DependencyProperty.i(\"ItemName\", Base.$, LinearGraphTooltipDataContext.$, new PropertyMetadata(2, null, function (a, b) { return (typeCast(LinearGraphTooltipDataContext.$, a)).p(\"ItemName\", b.oldValue, b.newValue); }));\r\n    LinearGraphTooltipDataContext.itemBrushProperty = DependencyProperty.i(\"ItemBrush\", Brush.$, LinearGraphTooltipDataContext.$, new PropertyMetadata(2, null, function (a, b) { return (typeCast(LinearGraphTooltipDataContext.$, a)).p(\"ItemBrush\", b.oldValue, b.newValue); }));\r\n    LinearGraphTooltipDataContext.$$p = markDep(DependencyProperty, PropertyMetadata, LinearGraphTooltipDataContext, 'p', ['Outline', [Brush.$, null], 'Thickness', [1, 0]]);\r\n    return LinearGraphTooltipDataContext;\r\n}(DependencyObject));\r\nexport { LinearGraphTooltipDataContext };\r\n//# sourceMappingURL=LinearGraphTooltipDataContext.js.map\r\n"]},"metadata":{},"sourceType":"module"}