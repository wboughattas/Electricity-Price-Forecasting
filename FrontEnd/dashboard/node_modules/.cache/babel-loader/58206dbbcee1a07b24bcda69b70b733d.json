{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { getEnumerator, getEnumeratorObject, Base, Array_$type } from \"./type\";\nexport function arrayCopyTo(source, dest, index) {\n  for (var i = 0; i < source.length; i++) {\n    dest[index++] = source[i];\n  }\n}\nexport function arrayCopy(source, sourceIndex, dest, destIndex, count) {\n  for (var i = 0; i < count; i++) {\n    dest[destIndex + i] = source[sourceIndex + i];\n  }\n}\nexport function arrayInsert(target, index, item) {\n  target.splice(index, 0, item);\n}\nexport function arrayRemoveAt(target, index) {\n  target.splice(index, 1);\n}\nexport function arrayRemoveItem(target, item) {\n  var index = target.indexOf(item);\n\n  if (index >= 0) {\n    target.splice(index, 1);\n    return true;\n  }\n\n  return false;\n}\nexport function arrayGetValue(target, index) {\n  return target[index];\n}\nexport function arrayGetLength(target, dimension) {\n  // TODO: Is there a better way to do this? Maybe attach the rank values to the array?\n  var array = target;\n  var dim = dimension;\n\n  while (array) {\n    if (dim === 0) {\n      return array.length;\n    }\n\n    dim--;\n    array = array[0];\n  }\n\n  return -1;\n}\nexport function arrayGetRank(target) {\n  return 1;\n}\nexport function arrayResize(target, length) {\n  target.length = 0;\n}\nexport function arrayInsertRange(target, index, items) {\n  var i = 0;\n\n  if (target.length === 0) {\n    for (i = 0; i < items.length; i++) {\n      target[index++] = items[i];\n    }\n  } else {\n    for (i = 0; i < items.length; i++) {\n      target.splice(index++, 0, items[i]);\n    }\n  }\n}\nexport function arrayInsertRange1(target, index, items) {\n  //TODO: adjust this later, but this is the safest change to make right now.\n  var i = 0;\n\n  if (target.length === 0) {\n    for (i = 0; i < items.length; i++) {\n      target[index++] = items[i];\n    }\n  } else {\n    for (i = 0; i < items.length; i++) {\n      target.splice(index++, 0, items[i]);\n    }\n  }\n}\nexport function arrayShallowClone(arr) {\n  var newArr = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr[i] = arr[i];\n  }\n\n  return newArr;\n}\nexport function arrayClear(arr) {\n  arr.length = 0;\n} //   export function listItem(list: any, index: number, item?: any): void {\n//       if ((<any>list).$type === undefined) {\n//           let arr = <any[]>list;\n//           if (item !== undefined) {\n//               arr[index] = item;\n//               return item;\n//           } else {\n//               return arr[index];\n//           }\n//       }\n//       if (item !== undefined) {\n//           list.item(index, item);\n//           return item;\n//       }\n//       return list.item(index);\n//   }\n//export function  listAdd(list: any, item: any): void {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\tarrayInsert(arr, arr.length, item);\n//\t\t\t\t\treturn;\n//\t\t\t}\n//\t\t\tlist.add(item);\n//\t}\n//export function  listClear(list: any): void {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\tarrayClear(arr);\n//\t\t\t\t\treturn;\n//\t\t\t}\n//\t\t\tlist.clear();\n//\t}\n//export function listContains(list: any, item: any): boolean {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\treturn arr.indexOf(item) > -1;\n//\t\t\t}\n//\t\t\treturn list.contains(item);\n//\t}\n//export function listIndexOf(list: any, item: any): number {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\treturn arr.indexOf(item);\n//\t\t\t}\n//\t\t\treturn list.indexOf(item);\n//\t}\n//export function listInsert(list: any, index: number, item: any): void {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\tarrayInsert(arr, index, item);\n//\t\t\t\t\treturn;\n//\t\t\t}\n//\t\t\tlist.contains(item);\n//\t}\n//export function listRemove(list: any, item: any): boolean {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//                       arrayRemoveItem(arr, item);\n//                       return true;\n//\t\t\t}\n//\t\t\treturn list.remove(item);\n//\t}\n//export function listRemoveAt(list: any, index: number): void {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//                       arrayRemoveAt(arr, index);\n//                       return;\n//\t\t\t}\n//\t\t\tlist.removeAt(index);\n//\t}\n//export function listIsFixedSize(list: any): boolean {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\treturn false;\n//\t\t\t}\n//\t\t\treturn list.isFixedSize;\n//\t}\n//export function listIsReadOnly(list: any): boolean {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\treturn false;\n//\t\t\t}\n//\t\t\treturn list.isReadOnly;\n//\t}\n//export function collectionCount(collection: any): number {\n//\t\t\tif ((<any>collection).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>collection;\n//\t\t\t\t\treturn arr.length;\n//\t\t\t}\n//\t\t\treturn collection.count;\n//\t}\n//export function collectionCopyTo(collection: any, array: any[], index: number): void {\n//\t\t\tif ((<any>collection).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>collection;\n//\t\t\t\t\tarrayCopy(arr, 0, array, index, arr.length);\n//\t\t\t\t\treturn;\n//\t\t\t}\n//\t\t\treturn collection.copyTo(array, index);\n//\t}\n//export function collectionIsSynchronized(collection: any): boolean {\n//\t\t\tif ((<any>collection).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>collection;\n//\t\t\t\t\treturn false;\n//\t\t\t}\n//\t\t\treturn collection.isSynchronized;\n//\t}\n//export function collectionSyncRoot(collection: any): any {\n//\t\t\tif ((<any>collection).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>collection;\n//\t\t\t\t\treturn arr;\n//\t\t\t}\n//\t\t\treturn collection.syncRoot;\n//   }\n\nexport function boxArray$1(array) {\n  return new ArrayBox$1(array);\n}\nexport function unboxArray(box) {\n  if (box.$arrayWrapper) {\n    return box._target;\n  }\n\n  return box;\n}\nexport function arrayListCreate() {\n  return new ArrayBox$1([]);\n}\n\nvar ArrayBox$1 =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function ArrayBox$1(target) {\n    this.isFixedSize = false;\n    this.isSynchronized = false;\n    this.syncRoot = null;\n    this.isReadOnly = false;\n    this.$arrayWrapper = true;\n    this._target = target;\n  }\n\n  ArrayBox$1.prototype.item = function (index, value) {\n    if (arguments.length === 2) {\n      this._target[index] = value;\n      return value;\n    } else {\n      return this._target[index];\n    }\n  };\n\n  ArrayBox$1.prototype.indexOf = function (item) {\n    return this._target.indexOf(item);\n  };\n\n  ArrayBox$1.prototype.insert = function (index, item) {\n    this._target.splice(index, 0, item);\n  };\n\n  ArrayBox$1.prototype.insertRange = function (index, items) {\n    arrayInsertRange(this._target, index, items);\n  };\n\n  ArrayBox$1.prototype.removeRange = function (index, count) {\n    this._target.splice(index, count);\n  };\n\n  ArrayBox$1.prototype.removeAt = function (index) {\n    this._target.splice(index, 1);\n  };\n\n  Object.defineProperty(ArrayBox$1.prototype, \"count\", {\n    get: function () {\n      return this._target.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ArrayBox$1.prototype.add = function (item) {\n    this._target.push(item);\n  };\n\n  ArrayBox$1.prototype.clear = function () {\n    this._target.length = 0;\n  };\n\n  ArrayBox$1.prototype.contains = function (item) {\n    return this._target.indexOf(item) >= 0;\n  };\n\n  ArrayBox$1.prototype.copyTo = function (array, arrayIndex) {\n    for (var i = 0; i < this._target.length; i++) {\n      array[i + arrayIndex] = this._target[i];\n    }\n  };\n\n  ArrayBox$1.prototype.remove = function (item) {\n    var index = this._target.indexOf(item);\n\n    if (index < 0) {\n      return false;\n    }\n\n    this._target.splice(index, 1);\n\n    return true;\n  };\n\n  ArrayBox$1.prototype.getEnumerator = function () {\n    return getEnumerator(this._target);\n  };\n\n  ArrayBox$1.prototype.getEnumeratorObject = function () {\n    return getEnumeratorObject(this._target);\n  };\n\n  ArrayBox$1.prototype.getHashCode = function () {\n    return Base.getHashCodeStatic(this._target);\n  };\n\n  ArrayBox$1.prototype.equals = function (other) {\n    if (other.$arrayWrapper) {\n      other = other._target;\n    }\n\n    return this._target === other;\n  };\n\n  Object.defineProperty(ArrayBox$1.prototype, \"$type\", {\n    get: function () {\n      return Array_$type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ArrayBox$1.prototype.reverse = function () {\n    var len = this._target.length;\n\n    for (var i = 0; i < len / 2.0; i++) {\n      var swap = this._target[len - 1 - i];\n      this._target[len - 1 - i] = this._target[i];\n      this._target[i] = swap;\n    }\n  };\n\n  return ArrayBox$1;\n}();\n\nexport { ArrayBox$1 };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/array.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { getEnumerator, getEnumeratorObject, Base, Array_$type } from \"./type\";\nexport function arrayCopyTo(source, dest, index) {\n    for (var i = 0; i < source.length; i++) {\n        dest[index++] = source[i];\n    }\n}\nexport function arrayCopy(source, sourceIndex, dest, destIndex, count) {\n    for (var i = 0; i < count; i++) {\n        dest[destIndex + i] = source[sourceIndex + i];\n    }\n}\nexport function arrayInsert(target, index, item) {\n    target.splice(index, 0, item);\n}\nexport function arrayRemoveAt(target, index) {\n    target.splice(index, 1);\n}\nexport function arrayRemoveItem(target, item) {\n    var index = target.indexOf(item);\n    if (index >= 0) {\n        target.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nexport function arrayGetValue(target, index) {\n    return target[index];\n}\nexport function arrayGetLength(target, dimension) {\n    // TODO: Is there a better way to do this? Maybe attach the rank values to the array?\n    var array = target;\n    var dim = dimension;\n    while (array) {\n        if (dim === 0) {\n            return array.length;\n        }\n        dim--;\n        array = array[0];\n    }\n    return -1;\n}\nexport function arrayGetRank(target) {\n    return 1;\n}\nexport function arrayResize(target, length) {\n    target.length = 0;\n}\nexport function arrayInsertRange(target, index, items) {\n    var i = 0;\n    if (target.length === 0) {\n        for (i = 0; i < items.length; i++) {\n            target[index++] = items[i];\n        }\n    }\n    else {\n        for (i = 0; i < items.length; i++) {\n            target.splice(index++, 0, items[i]);\n        }\n    }\n}\nexport function arrayInsertRange1(target, index, items) {\n    //TODO: adjust this later, but this is the safest change to make right now.\n    var i = 0;\n    if (target.length === 0) {\n        for (i = 0; i < items.length; i++) {\n            target[index++] = items[i];\n        }\n    }\n    else {\n        for (i = 0; i < items.length; i++) {\n            target.splice(index++, 0, items[i]);\n        }\n    }\n}\nexport function arrayShallowClone(arr) {\n    var newArr = [];\n    for (var i = 0; i < arr.length; i++) {\n        newArr[i] = arr[i];\n    }\n    return newArr;\n}\nexport function arrayClear(arr) {\n    arr.length = 0;\n}\n//   export function listItem(list: any, index: number, item?: any): void {\n//       if ((<any>list).$type === undefined) {\n//           let arr = <any[]>list;\n//           if (item !== undefined) {\n//               arr[index] = item;\n//               return item;\n//           } else {\n//               return arr[index];\n//           }\n//       }\n//       if (item !== undefined) {\n//           list.item(index, item);\n//           return item;\n//       }\n//       return list.item(index);\n//   }\n//export function  listAdd(list: any, item: any): void {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\tarrayInsert(arr, arr.length, item);\n//\t\t\t\t\treturn;\n//\t\t\t}\n//\t\t\tlist.add(item);\n//\t}\n//export function  listClear(list: any): void {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\tarrayClear(arr);\n//\t\t\t\t\treturn;\n//\t\t\t}\n//\t\t\tlist.clear();\n//\t}\n//export function listContains(list: any, item: any): boolean {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\treturn arr.indexOf(item) > -1;\n//\t\t\t}\n//\t\t\treturn list.contains(item);\n//\t}\n//export function listIndexOf(list: any, item: any): number {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\treturn arr.indexOf(item);\n//\t\t\t}\n//\t\t\treturn list.indexOf(item);\n//\t}\n//export function listInsert(list: any, index: number, item: any): void {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\tarrayInsert(arr, index, item);\n//\t\t\t\t\treturn;\n//\t\t\t}\n//\t\t\tlist.contains(item);\n//\t}\n//export function listRemove(list: any, item: any): boolean {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//                       arrayRemoveItem(arr, item);\n//                       return true;\n//\t\t\t}\n//\t\t\treturn list.remove(item);\n//\t}\n//export function listRemoveAt(list: any, index: number): void {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//                       arrayRemoveAt(arr, index);\n//                       return;\n//\t\t\t}\n//\t\t\tlist.removeAt(index);\n//\t}\n//export function listIsFixedSize(list: any): boolean {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\treturn false;\n//\t\t\t}\n//\t\t\treturn list.isFixedSize;\n//\t}\n//export function listIsReadOnly(list: any): boolean {\n//\t\t\tif ((<any>list).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>list;\n//\t\t\t\t\treturn false;\n//\t\t\t}\n//\t\t\treturn list.isReadOnly;\n//\t}\n//export function collectionCount(collection: any): number {\n//\t\t\tif ((<any>collection).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>collection;\n//\t\t\t\t\treturn arr.length;\n//\t\t\t}\n//\t\t\treturn collection.count;\n//\t}\n//export function collectionCopyTo(collection: any, array: any[], index: number): void {\n//\t\t\tif ((<any>collection).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>collection;\n//\t\t\t\t\tarrayCopy(arr, 0, array, index, arr.length);\n//\t\t\t\t\treturn;\n//\t\t\t}\n//\t\t\treturn collection.copyTo(array, index);\n//\t}\n//export function collectionIsSynchronized(collection: any): boolean {\n//\t\t\tif ((<any>collection).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>collection;\n//\t\t\t\t\treturn false;\n//\t\t\t}\n//\t\t\treturn collection.isSynchronized;\n//\t}\n//export function collectionSyncRoot(collection: any): any {\n//\t\t\tif ((<any>collection).$type === undefined) {\n//\t\t\t\t\tlet arr = <any[]>collection;\n//\t\t\t\t\treturn arr;\n//\t\t\t}\n//\t\t\treturn collection.syncRoot;\n//   }\nexport function boxArray$1(array) {\n    return new ArrayBox$1(array);\n}\nexport function unboxArray(box) {\n    if (box.$arrayWrapper) {\n        return box._target;\n    }\n    return box;\n}\nexport function arrayListCreate() {\n    return new ArrayBox$1([]);\n}\nvar ArrayBox$1 = /** @class */ /*@__PURE__*/ (function () {\n    function ArrayBox$1(target) {\n        this.isFixedSize = false;\n        this.isSynchronized = false;\n        this.syncRoot = null;\n        this.isReadOnly = false;\n        this.$arrayWrapper = true;\n        this._target = target;\n    }\n    ArrayBox$1.prototype.item = function (index, value) {\n        if (arguments.length === 2) {\n            this._target[index] = value;\n            return value;\n        }\n        else {\n            return this._target[index];\n        }\n    };\n    ArrayBox$1.prototype.indexOf = function (item) {\n        return this._target.indexOf(item);\n    };\n    ArrayBox$1.prototype.insert = function (index, item) {\n        this._target.splice(index, 0, item);\n    };\n    ArrayBox$1.prototype.insertRange = function (index, items) {\n        arrayInsertRange(this._target, index, items);\n    };\n    ArrayBox$1.prototype.removeRange = function (index, count) {\n        this._target.splice(index, count);\n    };\n    ArrayBox$1.prototype.removeAt = function (index) {\n        this._target.splice(index, 1);\n    };\n    Object.defineProperty(ArrayBox$1.prototype, \"count\", {\n        get: function () {\n            return this._target.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ArrayBox$1.prototype.add = function (item) {\n        this._target.push(item);\n    };\n    ArrayBox$1.prototype.clear = function () {\n        this._target.length = 0;\n    };\n    ArrayBox$1.prototype.contains = function (item) {\n        return this._target.indexOf(item) >= 0;\n    };\n    ArrayBox$1.prototype.copyTo = function (array, arrayIndex) {\n        for (var i = 0; i < this._target.length; i++) {\n            array[i + arrayIndex] = this._target[i];\n        }\n    };\n    ArrayBox$1.prototype.remove = function (item) {\n        var index = this._target.indexOf(item);\n        if (index < 0) {\n            return false;\n        }\n        this._target.splice(index, 1);\n        return true;\n    };\n    ArrayBox$1.prototype.getEnumerator = function () {\n        return getEnumerator(this._target);\n    };\n    ArrayBox$1.prototype.getEnumeratorObject = function () {\n        return getEnumeratorObject(this._target);\n    };\n    ArrayBox$1.prototype.getHashCode = function () {\n        return Base.getHashCodeStatic(this._target);\n    };\n    ArrayBox$1.prototype.equals = function (other) {\n        if (other.$arrayWrapper) {\n            other = other._target;\n        }\n        return this._target === other;\n    };\n    Object.defineProperty(ArrayBox$1.prototype, \"$type\", {\n        get: function () {\n            return Array_$type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ArrayBox$1.prototype.reverse = function () {\n        var len = this._target.length;\n        for (var i = 0; i < len / 2.0; i++) {\n            var swap = this._target[(len - 1) - i];\n            this._target[(len - 1) - i] = this._target[i];\n            this._target[i] = swap;\n        }\n    };\n    return ArrayBox$1;\n}());\nexport { ArrayBox$1 };\n//# sourceMappingURL=array.js.map\n"]},"metadata":{},"sourceType":"module"}