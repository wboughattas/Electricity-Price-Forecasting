{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { PathSegment } from \"./PathSegment\";\nimport { markType } from \"./type\";\nimport { Size } from \"./Size\";\n/**\r\n * @hidden\r\n */\n\nvar ArcSegment =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ArcSegment, _super);\n\n  function ArcSegment() {\n    var _this = _super.call(this) || this;\n\n    _this.e = null;\n    _this.b = false;\n    _this.d = 0;\n    _this.f = new Size();\n    _this.c = 0;\n    _this.b = false;\n    _this.d = 0;\n    return _this;\n  }\n\n  ArcSegment.prototype.get_a = function () {\n    return 4;\n  };\n\n  Object.defineProperty(ArcSegment.prototype, \"a\", {\n    get: function () {\n      return this.get_a();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ArcSegment.$t = markType(ArcSegment, 'ArcSegment', PathSegment.$);\n  return ArcSegment;\n}(PathSegment);\n\nexport { ArcSegment };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ArcSegment.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,WAAT,QAA4B,eAA5B;AACA,SAA4B,QAA5B,QAA4C,QAA5C;AAEA,SAAS,IAAT,QAAqB,QAArB;AAGA;;AAEG;;AACH,IAAA,UAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA;;AAE/B,WAAA,UAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAKA,IAAA,KAAA,CAAA,CAAA,GAAW,IAAX;AACA,IAAA,KAAA,CAAA,CAAA,GAAa,KAAb;AACA,IAAA,KAAA,CAAA,CAAA,GAAoC,CAApC;AACA,IAAA,KAAA,CAAA,CAAA,GAAU,IAAI,IAAJ,EAAV;AACA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AAPC,IAAA,KAAI,CAAC,CAAL,GAAS,KAAT;AACA,IAAA,KAAI,CAAC,CAAL,GAAS,CAAT;;AACA;;AAMS,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAV,YAAA;AACC,WAAO,CAAP;AACA,GAFS;;AAGV,EAAA,MAAA,CAAA,cAAA,CAAI,UAAA,CAAA,SAAJ,EAAI,GAAJ,EAAK;SAAL,YAAA;AACC,aAAO,KAAK,KAAL,EAAP;AACA,KAFI;oBAAA;;AAAA,GAAL;AAdO,EAAA,UAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,UAAD,EAAa,YAAb,EAAiC,WAAY,CAAC,CAA9C,CAAnB;AAiBR,SAAA,UAAA;AAAC,CAlBD,CAAgC,WAAhC,CAAA;;SAAa,U","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PathSegment } from \"./PathSegment\";\r\nimport { markType } from \"./type\";\r\nimport { Size } from \"./Size\";\r\n/**\r\n * @hidden\r\n */\r\nvar ArcSegment = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(ArcSegment, _super);\r\n    function ArcSegment() {\r\n        var _this = _super.call(this) || this;\r\n        _this.e = null;\r\n        _this.b = false;\r\n        _this.d = 0;\r\n        _this.f = new Size();\r\n        _this.c = 0;\r\n        _this.b = false;\r\n        _this.d = 0;\r\n        return _this;\r\n    }\r\n    ArcSegment.prototype.get_a = function () {\r\n        return 4;\r\n    };\r\n    Object.defineProperty(ArcSegment.prototype, \"a\", {\r\n        get: function () {\r\n            return this.get_a();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ArcSegment.$t = markType(ArcSegment, 'ArcSegment', PathSegment.$);\r\n    return ArcSegment;\r\n}(PathSegment));\r\nexport { ArcSegment };\r\n//# sourceMappingURL=ArcSegment.js.map\r\n"]},"metadata":{},"sourceType":"module"}