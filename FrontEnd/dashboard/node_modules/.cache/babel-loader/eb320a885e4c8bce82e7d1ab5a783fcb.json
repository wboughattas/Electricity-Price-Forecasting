{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, IEqualityComparer$1_$type, Point_$type, markType } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar PointComparer =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PointComparer, _super);\n\n  function PointComparer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PointComparer.prototype.equalsC = function (a, b) {\n    return a.x == b.x && a.y == b.y;\n  };\n\n  PointComparer.prototype.getHashCodeC = function (a) {\n    return a.x ^ a.y;\n  };\n\n  PointComparer.$t = markType(PointComparer, 'PointComparer', Base.$, [IEqualityComparer$1_$type.specialize(Point_$type)]);\n  return PointComparer;\n}(Base);\n\nexport { PointComparer };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PointComparer.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAoC,yBAApC,EAAsE,WAAtE,EAAyF,QAAzF,QAAyG,QAAzG;AAEA;;AAEG;;AACH,IAAA,aAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,EAAA,MAAA;;AAAnC,WAAA,aAAA,GAAA;;AAQC;;AANA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,CAAR,EAAkB,CAAlB,EAA0B;AACzB,WAAO,CAAC,CAAC,CAAF,IAAO,CAAC,CAAC,CAAT,IAAc,CAAC,CAAC,CAAF,IAAO,CAAC,CAAC,CAA9B;AACA,GAFD;;AAGA,EAAA,aAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,CAAb,EAAqB;AACpB,WAAQ,CAAC,CAAC,CAAH,GAAS,CAAC,CAAC,CAAlB;AACA,GAFD;;AAJO,EAAA,aAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,aAAD,EAAgB,eAAhB,EAAuC,IAAK,CAAC,CAA7C,EAAgD,CAAC,yBAAyB,CAAC,UAA1B,CAAqC,WAArC,CAAD,CAAhD,CAAnB;AAOR,SAAA,aAAA;AAAC,CARD,CAAmC,IAAnC,CAAA;;SAAa,a","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, IEqualityComparer$1_$type, Point_$type, markType } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar PointComparer = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(PointComparer, _super);\r\n    function PointComparer() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PointComparer.prototype.equalsC = function (a, b) {\r\n        return a.x == b.x && a.y == b.y;\r\n    };\r\n    PointComparer.prototype.getHashCodeC = function (a) {\r\n        return (a.x) ^ (a.y);\r\n    };\r\n    PointComparer.$t = markType(PointComparer, 'PointComparer', Base.$, [IEqualityComparer$1_$type.specialize(Point_$type)]);\r\n    return PointComparer;\r\n}(Base));\r\nexport { PointComparer };\r\n//# sourceMappingURL=PointComparer.js.map\r\n"]},"metadata":{},"sourceType":"module"}