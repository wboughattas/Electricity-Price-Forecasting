{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { DataSourceSupportingCalculationDescription } from \"./DataSourceSupportingCalculationDescription\";\n/**\n * @hidden\n */\n\nvar DataSourceSupportingCalculationDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DataSourceSupportingCalculationDescriptionMetadata, _super);\n\n  function DataSourceSupportingCalculationDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DataSourceSupportingCalculationDescriptionMetadata.b = function (a) {\n    if (DataSourceSupportingCalculationDescriptionMetadata.a == null) {\n      DataSourceSupportingCalculationDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      DataSourceSupportingCalculationDescriptionMetadata.c(a, DataSourceSupportingCalculationDescriptionMetadata.a);\n    }\n  };\n\n  DataSourceSupportingCalculationDescriptionMetadata.c = function (a, b) {};\n\n  DataSourceSupportingCalculationDescriptionMetadata.d = function (a) {\n    DataSourceSupportingCalculationDescriptionMetadata.b(a);\n    a.n(\"DataSourceSupportingCalculation\", function () {\n      return new DataSourceSupportingCalculationDescription();\n    });\n    a.m(\"DataSourceSupportingCalculation\", DataSourceSupportingCalculationDescriptionMetadata.a);\n  };\n\n  DataSourceSupportingCalculationDescriptionMetadata.$t = markType(DataSourceSupportingCalculationDescriptionMetadata, 'DataSourceSupportingCalculationDescriptionMetadata');\n  DataSourceSupportingCalculationDescriptionMetadata.a = null;\n  return DataSourceSupportingCalculationDescriptionMetadata;\n}(Base);\n\nexport { DataSourceSupportingCalculationDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DataSourceSupportingCalculationDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,0CAAT,QAA2D,8CAA3D;AAEA;;AAEG;;AACH,IAAA,kDAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwE,EAAA,OAAA,CAAA,SAAA,CAAA,kDAAA,EAAA,MAAA;;AAAxE,WAAA,kDAAA,GAAA;;AAgBC;;AAbe,EAAA,kDAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,kDAAkD,CAAC,CAAnD,IAAwD,IAA5D,EAAkE;AACjE,MAAA,kDAAkD,CAAC,CAAnD,GAAuD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAvD;AACA,MAAA,kDAAkD,CAAC,CAAnD,CAAqD,CAArD,EAAwD,kDAAkD,CAAC,CAA3G;AACA;AACD,GALc;;AAMR,EAAA,kDAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE,CAClE,CADM;;AAEA,EAAA,kDAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,kDAAkD,CAAC,CAAnD,CAAqD,CAArD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,iCAAJ,EAAuC,YAAA;AAAM,aAAA,IAAA,0CAAA,EAAA;AAAgD,KAA7F;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,iCAAJ,EAAuC,kDAAkD,CAAC,CAA1F;AACA,GAJM;;AAVA,EAAA,kDAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,kDAAD,EAAqD,oDAArD,CAAnB;AACQ,EAAA,kDAAA,CAAA,CAAA,GAAkC,IAAlC;AAchB,SAAA,kDAAA;AAAC,CAhBD,CAAwE,IAAxE,CAAA;;SAAa,kD","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { DataSourceSupportingCalculationDescription } from \"./DataSourceSupportingCalculationDescription\";\n/**\n * @hidden\n */\nvar DataSourceSupportingCalculationDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DataSourceSupportingCalculationDescriptionMetadata, _super);\n    function DataSourceSupportingCalculationDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataSourceSupportingCalculationDescriptionMetadata.b = function (a) {\n        if (DataSourceSupportingCalculationDescriptionMetadata.a == null) {\n            DataSourceSupportingCalculationDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            DataSourceSupportingCalculationDescriptionMetadata.c(a, DataSourceSupportingCalculationDescriptionMetadata.a);\n        }\n    };\n    DataSourceSupportingCalculationDescriptionMetadata.c = function (a, b) {\n    };\n    DataSourceSupportingCalculationDescriptionMetadata.d = function (a) {\n        DataSourceSupportingCalculationDescriptionMetadata.b(a);\n        a.n(\"DataSourceSupportingCalculation\", function () { return new DataSourceSupportingCalculationDescription(); });\n        a.m(\"DataSourceSupportingCalculation\", DataSourceSupportingCalculationDescriptionMetadata.a);\n    };\n    DataSourceSupportingCalculationDescriptionMetadata.$t = markType(DataSourceSupportingCalculationDescriptionMetadata, 'DataSourceSupportingCalculationDescriptionMetadata');\n    DataSourceSupportingCalculationDescriptionMetadata.a = null;\n    return DataSourceSupportingCalculationDescriptionMetadata;\n}(Base));\nexport { DataSourceSupportingCalculationDescriptionMetadata };\n//# sourceMappingURL=DataSourceSupportingCalculationDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}