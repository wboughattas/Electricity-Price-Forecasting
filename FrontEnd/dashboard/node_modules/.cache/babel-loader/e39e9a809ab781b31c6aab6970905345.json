{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, enumGetBox, markType } from \"./type\";\nimport { DataSeriesIntent_$type } from \"./DataSeriesIntent\";\nimport { stringIsNullOrEmpty, stringReplace } from \"./string\";\n/**\n * @hidden\n */\n\nvar DataSeriesMemberPathHint =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DataSeriesMemberPathHint, _super);\n\n  function DataSeriesMemberPathHint() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._path = null;\n    _this._intent = 0;\n    return _this;\n  }\n\n  Object.defineProperty(DataSeriesMemberPathHint.prototype, \"path\", {\n    get: function () {\n      return this._path;\n    },\n    set: function (a) {\n      this._path = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DataSeriesMemberPathHint.prototype, \"intent\", {\n    get: function () {\n      return this._intent;\n    },\n    set: function (a) {\n      this._intent = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DataSeriesMemberPathHint.prototype.equals = function (a) {\n    var b = typeCast(DataSeriesMemberPathHint.$, a);\n\n    if (b == null) {\n      return false;\n    }\n\n    if (!Base.equalsStatic(this.path, b.path)) {\n      return false;\n    }\n\n    if (this.intent != b.intent) {\n      return false;\n    }\n\n    return true;\n  };\n\n  DataSeriesMemberPathHint.prototype.toString = function () {\n    return enumGetBox(DataSeriesIntent_$type, this.intent) + \" Path = '\" + this.path + \"'\";\n  };\n\n  DataSeriesMemberPathHint.prototype.update1 = function (a, b) {\n    if (b === void 0) {\n      b = null;\n    }\n\n    this.path = stringIsNullOrEmpty(b) ? a : stringReplace(b, \"NAME\", a);\n  };\n\n  DataSeriesMemberPathHint.prototype.update = function (a, b) {\n    if (b === void 0) {\n      b = null;\n    }\n\n    if (a.count == 0) {\n      return;\n    }\n\n    this.update1(a._inner[0], b);\n  };\n\n  DataSeriesMemberPathHint.prototype.hasPath = function () {\n    return !stringIsNullOrEmpty(this.path);\n  };\n\n  DataSeriesMemberPathHint.prototype.clone = function () {\n    var _this = this;\n\n    return function () {\n      var $ret = new DataSeriesMemberPathHint();\n      $ret.intent = _this.intent;\n      $ret.path = _this.path;\n      return $ret;\n    }();\n  };\n\n  DataSeriesMemberPathHint.$t = markType(DataSeriesMemberPathHint, 'DataSeriesMemberPathHint');\n  return DataSeriesMemberPathHint;\n}(Base);\n\nexport { DataSeriesMemberPathHint };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DataSeriesMemberPathHint.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, enumGetBox, markType } from \"./type\";\nimport { DataSeriesIntent_$type } from \"./DataSeriesIntent\";\nimport { stringIsNullOrEmpty, stringReplace } from \"./string\";\n/**\n * @hidden\n */\nvar DataSeriesMemberPathHint = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DataSeriesMemberPathHint, _super);\n    function DataSeriesMemberPathHint() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._path = null;\n        _this._intent = 0;\n        return _this;\n    }\n    Object.defineProperty(DataSeriesMemberPathHint.prototype, \"path\", {\n        get: function () {\n            return this._path;\n        },\n        set: function (a) {\n            this._path = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataSeriesMemberPathHint.prototype, \"intent\", {\n        get: function () {\n            return this._intent;\n        },\n        set: function (a) {\n            this._intent = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataSeriesMemberPathHint.prototype.equals = function (a) {\n        var b = typeCast(DataSeriesMemberPathHint.$, a);\n        if (b == null) {\n            return false;\n        }\n        if (!Base.equalsStatic(this.path, b.path)) {\n            return false;\n        }\n        if (this.intent != b.intent) {\n            return false;\n        }\n        return true;\n    };\n    DataSeriesMemberPathHint.prototype.toString = function () {\n        return enumGetBox(DataSeriesIntent_$type, this.intent) + \" Path = '\" + this.path + \"'\";\n    };\n    DataSeriesMemberPathHint.prototype.update1 = function (a, b) {\n        if (b === void 0) {\n            b = null;\n        }\n        this.path = stringIsNullOrEmpty(b) ? a : stringReplace(b, \"NAME\", a);\n    };\n    DataSeriesMemberPathHint.prototype.update = function (a, b) {\n        if (b === void 0) {\n            b = null;\n        }\n        if (a.count == 0) {\n            return;\n        }\n        this.update1(a._inner[0], b);\n    };\n    DataSeriesMemberPathHint.prototype.hasPath = function () {\n        return !stringIsNullOrEmpty(this.path);\n    };\n    DataSeriesMemberPathHint.prototype.clone = function () {\n        var _this = this;\n        return ((function () {\n            var $ret = new DataSeriesMemberPathHint();\n            $ret.intent = _this.intent;\n            $ret.path = _this.path;\n            return $ret;\n        })());\n    };\n    DataSeriesMemberPathHint.$t = markType(DataSeriesMemberPathHint, 'DataSeriesMemberPathHint');\n    return DataSeriesMemberPathHint;\n}(Base));\nexport { DataSeriesMemberPathHint };\n//# sourceMappingURL=DataSeriesMemberPathHint.js.map\n"]},"metadata":{},"sourceType":"module"}