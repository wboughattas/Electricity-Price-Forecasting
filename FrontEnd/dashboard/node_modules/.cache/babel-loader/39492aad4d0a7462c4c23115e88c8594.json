{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SectionInformationDescription } from \"./SectionInformationDescription\";\n/**\n * @hidden\n */\n\nvar SectionInformationDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SectionInformationDescriptionMetadata, _super);\n\n  function SectionInformationDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SectionInformationDescriptionMetadata.b = function (a) {\n    if (SectionInformationDescriptionMetadata.a == null) {\n      SectionInformationDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      SectionInformationDescriptionMetadata.c(a, SectionInformationDescriptionMetadata.a);\n    }\n  };\n\n  SectionInformationDescriptionMetadata.c = function (a, b) {};\n\n  SectionInformationDescriptionMetadata.d = function (a) {\n    SectionInformationDescriptionMetadata.b(a);\n    a.n(\"SectionInformation\", function () {\n      return new SectionInformationDescription();\n    });\n    a.m(\"SectionInformation\", SectionInformationDescriptionMetadata.a);\n  };\n\n  SectionInformationDescriptionMetadata.$t = markType(SectionInformationDescriptionMetadata, 'SectionInformationDescriptionMetadata');\n  SectionInformationDescriptionMetadata.a = null;\n  return SectionInformationDescriptionMetadata;\n}(Base);\n\nexport { SectionInformationDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/SectionInformationDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,6BAAT,QAA8C,iCAA9C;AAEA;;AAEG;;AACH,IAAA,qCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2D,EAAA,OAAA,CAAA,SAAA,CAAA,qCAAA,EAAA,MAAA;;AAA3D,WAAA,qCAAA,GAAA;;AAgBC;;AAbe,EAAA,qCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,qCAAqC,CAAC,CAAtC,IAA2C,IAA/C,EAAqD;AACpD,MAAA,qCAAqC,CAAC,CAAtC,GAA0C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA1C;AACA,MAAA,qCAAqC,CAAC,CAAtC,CAAwC,CAAxC,EAA2C,qCAAqC,CAAC,CAAjF;AACA;AACD,GALc;;AAMR,EAAA,qCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE,CAClE,CADM;;AAEA,EAAA,qCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,qCAAqC,CAAC,CAAtC,CAAwC,CAAxC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,oBAAJ,EAA0B,YAAA;AAAM,aAAA,IAAA,6BAAA,EAAA;AAAmC,KAAnE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,oBAAJ,EAA0B,qCAAqC,CAAC,CAAhE;AACA,GAJM;;AAVA,EAAA,qCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,qCAAD,EAAwC,uCAAxC,CAAnB;AACQ,EAAA,qCAAA,CAAA,CAAA,GAAkC,IAAlC;AAchB,SAAA,qCAAA;AAAC,CAhBD,CAA2D,IAA3D,CAAA;;SAAa,qC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SectionInformationDescription } from \"./SectionInformationDescription\";\n/**\n * @hidden\n */\nvar SectionInformationDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SectionInformationDescriptionMetadata, _super);\n    function SectionInformationDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SectionInformationDescriptionMetadata.b = function (a) {\n        if (SectionInformationDescriptionMetadata.a == null) {\n            SectionInformationDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            SectionInformationDescriptionMetadata.c(a, SectionInformationDescriptionMetadata.a);\n        }\n    };\n    SectionInformationDescriptionMetadata.c = function (a, b) {\n    };\n    SectionInformationDescriptionMetadata.d = function (a) {\n        SectionInformationDescriptionMetadata.b(a);\n        a.n(\"SectionInformation\", function () { return new SectionInformationDescription(); });\n        a.m(\"SectionInformation\", SectionInformationDescriptionMetadata.a);\n    };\n    SectionInformationDescriptionMetadata.$t = markType(SectionInformationDescriptionMetadata, 'SectionInformationDescriptionMetadata');\n    SectionInformationDescriptionMetadata.a = null;\n    return SectionInformationDescriptionMetadata;\n}(Base));\nexport { SectionInformationDescriptionMetadata };\n//# sourceMappingURL=SectionInformationDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}