{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { DependencyObject } from \"./DependencyObject\";\nimport { INotifyPropertyChanged_$type, BaseError, PropertyChangedEventArgs, typeCast, markType } from \"./type\";\nimport { Uri } from \"./Uri\";\nimport { DependencyProperty } from \"./DependencyProperty\";\nimport { TriangulationSource } from \"./TriangulationSource\";\nimport { BinaryReader } from \"./BinaryReader\";\nimport { BinaryFileDownloader } from \"./BinaryFileDownloader\";\nimport { AsyncCompletedEventArgs } from \"./AsyncCompletedEventArgs\";\nimport { List$1 } from \"./List$1\";\nimport { TriangulationSourcePointRecord } from \"./TriangulationSourcePointRecord\";\nimport { Triangle } from \"./Triangle\";\nimport { PropertyMetadata } from \"./PropertyMetadata\";\n/**\r\n * @hidden\r\n */\n\nvar ItfConverter =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ItfConverter, _super);\n\n  function ItfConverter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.j = null;\n    _this.importCompleted = null;\n    _this.propertyChanged = null;\n    return _this;\n  }\n\n  Object.defineProperty(ItfConverter.prototype, \"source\", {\n    get: function () {\n      return typeCast(Uri.$, this.c(ItfConverter.sourceProperty));\n    },\n    set: function (a) {\n      this.h(ItfConverter.sourceProperty, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ItfConverter.prototype, \"triangulationSource\", {\n    get: function () {\n      return this.j;\n    },\n    set: function (a) {\n      var b = a != this.triangulationSource;\n\n      if (b) {\n        var c = this.j;\n        this.j = a;\n        this.t(\"TriangulationSource\", c, this.triangulationSource);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ItfConverter.prototype.r = function () {\n    var _this = this;\n\n    var a = null;\n\n    var b = function () {\n      if (a != null) {\n        _this.triangulationSource = TriangulationSource.loadItf(a);\n      }\n\n      _this.s(new AsyncCompletedEventArgs(null, false, null));\n    };\n\n    BinaryFileDownloader.a(this.source.value, function (c) {\n      a = new BinaryReader(0, c, false);\n      b();\n    }, function (c) {\n      throw new BaseError(1, \"itf file download error: \" + c);\n    });\n  };\n\n  ItfConverter.prototype.s = function (a) {\n    if (this.importCompleted != null) {\n      this.importCompleted(this, a);\n    }\n  };\n\n  ItfConverter.prototype.u = function (a, b, c) {\n    switch (a) {\n      case \"Source\":\n        if (this.source != null) {\n          this.r();\n        }\n\n        break;\n    }\n  };\n\n  ItfConverter.prototype.t = function (a, b, c) {\n    if (this.propertyChanged != null) {\n      this.propertyChanged(this, new PropertyChangedEventArgs(a));\n    }\n\n    this.u(a, b, c);\n  };\n\n  ItfConverter.prototype.getPointData = function () {\n    if (this.j == null) {\n      return null;\n    }\n\n    return new List$1(TriangulationSourcePointRecord.$, 1, this.j.points);\n  };\n\n  ItfConverter.prototype.getTriangleData = function () {\n    if (this.j == null) {\n      return null;\n    }\n\n    return new List$1(Triangle.$, 1, this.j.triangles);\n  };\n\n  ItfConverter.$t = markType(ItfConverter, 'ItfConverter', DependencyObject.$, [INotifyPropertyChanged_$type]);\n  ItfConverter.sourceProperty = DependencyProperty.i(\"Source\", Uri.$, ItfConverter.$, new PropertyMetadata(2, null, function (a, b) {\n    return typeCast(ItfConverter.$, a).u(\"Source\", b.oldValue, b.newValue);\n  }));\n  return ItfConverter;\n}(DependencyObject);\n\nexport { ItfConverter };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ItfConverter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DependencyObject } from \"./DependencyObject\";\r\nimport { INotifyPropertyChanged_$type, BaseError, PropertyChangedEventArgs, typeCast, markType } from \"./type\";\r\nimport { Uri } from \"./Uri\";\r\nimport { DependencyProperty } from \"./DependencyProperty\";\r\nimport { TriangulationSource } from \"./TriangulationSource\";\r\nimport { BinaryReader } from \"./BinaryReader\";\r\nimport { BinaryFileDownloader } from \"./BinaryFileDownloader\";\r\nimport { AsyncCompletedEventArgs } from \"./AsyncCompletedEventArgs\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { TriangulationSourcePointRecord } from \"./TriangulationSourcePointRecord\";\r\nimport { Triangle } from \"./Triangle\";\r\nimport { PropertyMetadata } from \"./PropertyMetadata\";\r\n/**\r\n * @hidden\r\n */\r\nvar ItfConverter = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(ItfConverter, _super);\r\n    function ItfConverter() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.j = null;\r\n        _this.importCompleted = null;\r\n        _this.propertyChanged = null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ItfConverter.prototype, \"source\", {\r\n        get: function () {\r\n            return typeCast(Uri.$, this.c(ItfConverter.sourceProperty));\r\n        },\r\n        set: function (a) {\r\n            this.h(ItfConverter.sourceProperty, a);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ItfConverter.prototype, \"triangulationSource\", {\r\n        get: function () {\r\n            return this.j;\r\n        },\r\n        set: function (a) {\r\n            var b = a != this.triangulationSource;\r\n            if (b) {\r\n                var c = this.j;\r\n                this.j = a;\r\n                this.t(\"TriangulationSource\", c, this.triangulationSource);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ItfConverter.prototype.r = function () {\r\n        var _this = this;\r\n        var a = null;\r\n        var b = function () {\r\n            if (a != null) {\r\n                _this.triangulationSource = TriangulationSource.loadItf(a);\r\n            }\r\n            _this.s(new AsyncCompletedEventArgs(null, false, null));\r\n        };\r\n        BinaryFileDownloader.a(this.source.value, function (c) {\r\n            a = new BinaryReader(0, c, false);\r\n            b();\r\n        }, function (c) {\r\n            throw new BaseError(1, \"itf file download error: \" + c);\r\n        });\r\n    };\r\n    ItfConverter.prototype.s = function (a) {\r\n        if (this.importCompleted != null) {\r\n            this.importCompleted(this, a);\r\n        }\r\n    };\r\n    ItfConverter.prototype.u = function (a, b, c) {\r\n        switch (a) {\r\n            case \"Source\":\r\n                if (this.source != null) {\r\n                    this.r();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    ItfConverter.prototype.t = function (a, b, c) {\r\n        if (this.propertyChanged != null) {\r\n            this.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n        }\r\n        this.u(a, b, c);\r\n    };\r\n    ItfConverter.prototype.getPointData = function () {\r\n        if (this.j == null) {\r\n            return null;\r\n        }\r\n        return new List$1(TriangulationSourcePointRecord.$, 1, this.j.points);\r\n    };\r\n    ItfConverter.prototype.getTriangleData = function () {\r\n        if (this.j == null) {\r\n            return null;\r\n        }\r\n        return new List$1(Triangle.$, 1, this.j.triangles);\r\n    };\r\n    ItfConverter.$t = markType(ItfConverter, 'ItfConverter', DependencyObject.$, [INotifyPropertyChanged_$type]);\r\n    ItfConverter.sourceProperty = DependencyProperty.i(\"Source\", Uri.$, ItfConverter.$, new PropertyMetadata(2, null, function (a, b) { return (typeCast(ItfConverter.$, a)).u(\"Source\", b.oldValue, b.newValue); }));\r\n    return ItfConverter;\r\n}(DependencyObject));\r\nexport { ItfConverter };\r\n//# sourceMappingURL=ItfConverter.js.map\r\n"]},"metadata":{},"sourceType":"module"}