{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, fromEnum, markType } from \"./type\";\nimport { PathGeometry } from \"./PathGeometry\";\nimport { List$1 } from \"./List$1\";\nimport { PathFigure } from \"./PathFigure\";\nimport { Panel } from \"./Panel\";\nimport { ContentControl } from \"./ContentControl\";\nimport { UIElement } from \"./UIElement\";\nimport { isNaN_, isInfinity } from \"./number\";\n/**\r\n * @hidden\r\n */\n\nvar Extensions =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(Extensions, _super);\n\n  function Extensions() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Extensions.e = function (a) {\n    a.c.clear();\n    a.c.add(new PathFigure());\n    a.c.removeAt(0);\n  };\n\n  Extensions.d = function (a) {\n    a.d.clear();\n    a.d.add(new PathGeometry());\n    a.d.removeAt(0);\n  };\n\n  Extensions.c = function (a) {\n    if (a == null) {\n      return;\n    }\n\n    var b = typeCast(Panel.$, a.x);\n\n    if (b != null) {\n      b.ab.remove(a);\n      return;\n    }\n\n    var c = typeCast(ContentControl.$, a.x);\n\n    if (c != null) {\n      c.content = null;\n      return;\n    }\n  };\n\n  Extensions.f = function (a, b) {\n    var e_1, _a, e_2, _b;\n\n    var c = new List$1(UIElement.$, 0);\n\n    try {\n      for (var _c = tslib_1.__values(fromEnum(a.ab)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var d = _d.value;\n\n        if (typeCast(UIElement.$, d) !== null) {\n          c.add(d);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    try {\n      for (var _e = tslib_1.__values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var e = _f.value;\n        a.ab.remove(e);\n        b.ab.add(e);\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n\n  Extensions.a = function (a) {\n    return !isNaN_(a.x) && !isNaN_(a.y) && !isInfinity(a.x) && !isInfinity(a.y);\n  };\n\n  Extensions.b = function (a) {\n    return !isNaN_(a.left) && !isNaN_(a.right) && !isNaN_(a.top) && !isNaN_(a.bottom) && !isInfinity(a.left) && !isInfinity(a.right) && !isInfinity(a.top) && !isInfinity(a.bottom);\n  };\n\n  Extensions.$t = markType(Extensions, 'Extensions');\n  return Extensions;\n}(Base);\n\nexport { Extensions };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/Extensions.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAA0H,QAA1H,EAAoI,QAApI,EAAoJ,QAApJ,QAAoK,QAApK;AACA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,MAAT,QAAuB,UAAvB;AACA,SAAS,UAAT,QAA2B,cAA3B;AAIA,SAAS,KAAT,QAAsB,SAAtB;AACA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,SAAT,QAA0B,aAA1B;AAEA,SAAS,MAAT,EAAiB,UAAjB,QAAmC,UAAnC;AAEA;;AAEG;;AACH,IAAA,UAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA;;AAAhC,WAAA,UAAA,GAAA;;AA6CC;;AA3CO,EAAA,UAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwB;AACvB,IAAA,CAAC,CAAC,CAAF,CAAI,KAAJ;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,GAAJ,CAAQ,IAAI,UAAJ,EAAR;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,QAAJ,CAAa,CAAb;AACA,GAJM;;AAKA,EAAA,UAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAyB;AACxB,IAAA,CAAC,CAAC,CAAF,CAAI,KAAJ;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,GAAJ,CAAQ,IAAI,YAAJ,EAAR;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,QAAJ,CAAa,CAAb;AACA,GAJM;;AAKA,EAAA,UAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAA4B;AAC3B,QAAI,CAAC,IAAI,IAAT,EAAe;AACd;AACA;;AACD,QAAI,CAAC,GAAU,QAAQ,CAAc,KAAM,CAAC,CAArB,EAAwB,CAAC,CAAC,CAA1B,CAAvB;;AACA,QAAI,CAAC,IAAI,IAAT,EAAe;AACd,MAAA,CAAC,CAAC,EAAF,CAAK,MAAL,CAAY,CAAZ;AACA;AACA;;AACD,QAAI,CAAC,GAAG,QAAQ,CAAuB,cAAe,CAAC,CAAvC,EAA0C,CAAC,CAAC,CAA5C,CAAhB;;AACA,QAAI,CAAC,IAAI,IAAT,EAAe;AACd,MAAA,CAAC,CAAC,OAAF,GAAY,IAAZ;AACA;AACA;AACD,GAdM;;AAeA,EAAA,UAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAmB,CAAnB,EAA2B;;;AAC1B,QAAI,CAAC,GAAsB,IAAI,MAAJ,CAA4B,SAAU,CAAC,CAAvC,EAA0C,CAA1C,CAA3B;;;AACA,WAAc,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,QAAQ,CAAY,CAAC,CAAC,EAAd,CAAR,CAAA,EAAyB,EAAA,GAAA,EAAA,CAAA,IAAA,EAAvC,EAAuC,CAAA,EAAA,CAAA,IAAvC,EAAuC,EAAA,GAAA,EAAA,CAAA,IAAA,EAAvC,EAAyC;AAApC,YAAI,CAAC,GAAA,EAAA,CAAA,KAAL;;AACJ,YAAI,QAAQ,CAAkB,SAAU,CAAC,CAA7B,EAAgC,CAAhC,CAAR,KAA+C,IAAnD,EAAyD;AACxD,UAAA,CAAC,CAAC,GAAF,CAAiB,CAAjB;AACA;AACD;;;;;;;;gBACa;AAAT,YAAI,GAAJ,EACA,MAAC,GAAQ,CAAC,KAAV;AACJ;AACA;;;;;;;;;AACD,MAAA,GAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACD,K,SACS;AACR,UAAA;AACD,YAAA,EAAA,IAAA,CAAA,EAAS,CAAO,IAAhB,KAAgB,EAAA,GAAA,EAAA,CAAA,MAAhB,CAAA,EACS,EAAM,CAAC,IAAP,CAAS,EAAT;AACR,OAHA,SAxCiB;AA4CnB,YAAA,GAAA,EAAC,MAAA,GAAA,CAAA,KAAA;AA7CY;;GA2BL;;;;;;;;;;;;CA3BR,C,IAAA,CAAA","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, typeCast, fromEnum, markType } from \"./type\";\r\nimport { PathGeometry } from \"./PathGeometry\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { PathFigure } from \"./PathFigure\";\r\nimport { Panel } from \"./Panel\";\r\nimport { ContentControl } from \"./ContentControl\";\r\nimport { UIElement } from \"./UIElement\";\r\nimport { isNaN_, isInfinity } from \"./number\";\r\n/**\r\n * @hidden\r\n */\r\nvar Extensions = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(Extensions, _super);\r\n    function Extensions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Extensions.e = function (a) {\r\n        a.c.clear();\r\n        a.c.add(new PathFigure());\r\n        a.c.removeAt(0);\r\n    };\r\n    Extensions.d = function (a) {\r\n        a.d.clear();\r\n        a.d.add(new PathGeometry());\r\n        a.d.removeAt(0);\r\n    };\r\n    Extensions.c = function (a) {\r\n        if (a == null) {\r\n            return;\r\n        }\r\n        var b = typeCast(Panel.$, a.x);\r\n        if (b != null) {\r\n            b.ab.remove(a);\r\n            return;\r\n        }\r\n        var c = typeCast(ContentControl.$, a.x);\r\n        if (c != null) {\r\n            c.content = null;\r\n            return;\r\n        }\r\n    };\r\n    Extensions.f = function (a, b) {\r\n        var e_1, _a, e_2, _b;\r\n        var c = new List$1(UIElement.$, 0);\r\n        try {\r\n            for (var _c = tslib_1.__values(fromEnum(a.ab)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var d = _d.value;\r\n                if (typeCast(UIElement.$, d) !== null) {\r\n                    c.add(d);\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) {\r\n            e_1 = { error: e_1_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return))\r\n                    _a.call(_c);\r\n            }\r\n            finally {\r\n                if (e_1)\r\n                    throw e_1.error;\r\n            }\r\n        }\r\n        try {\r\n            for (var _e = tslib_1.__values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                var e = _f.value;\r\n                a.ab.remove(e);\r\n                b.ab.add(e);\r\n            }\r\n        }\r\n        catch (e_2_1) {\r\n            e_2 = { error: e_2_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_f && !_f.done && (_b = _e.return))\r\n                    _b.call(_e);\r\n            }\r\n            finally {\r\n                if (e_2)\r\n                    throw e_2.error;\r\n            }\r\n        }\r\n    };\r\n    Extensions.a = function (a) {\r\n        return !isNaN_(a.x) && !isNaN_(a.y) && !isInfinity(a.x) && !isInfinity(a.y);\r\n    };\r\n    Extensions.b = function (a) {\r\n        return !isNaN_(a.left) && !isNaN_(a.right) && !isNaN_(a.top) && !isNaN_(a.bottom) && !isInfinity(a.left) && !isInfinity(a.right) && !isInfinity(a.top) && !isInfinity(a.bottom);\r\n    };\r\n    Extensions.$t = markType(Extensions, 'Extensions');\r\n    return Extensions;\r\n}(Base));\r\nexport { Extensions };\r\n//# sourceMappingURL=Extensions.js.map\r\n"]},"metadata":{},"sourceType":"module"}