{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, EnumUtil, markType } from \"./type\";\nimport { IDataSeriesAdapterRule_$type } from \"./IDataSeriesAdapterRule\";\nimport { DataSeriesIntent_$type } from \"./DataSeriesIntent\";\nimport { DataSeries } from \"./DataSeries\";\nimport { DataSeriesMemberPathHint } from \"./DataSeriesMemberPathHint\";\n/**\r\n * @hidden\r\n */\n\nvar SimpleCategorySeriesRule =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SimpleCategorySeriesRule, _super);\n\n  function SimpleCategorySeriesRule() {\n    var _this = _super.call(this) || this;\n\n    _this._priority = 0;\n    _this._useColumnThreshold = 0;\n    _this._distinctCheckThreshold = 0;\n    _this.priority = 10;\n    _this.distinctCheckThreshold = 50000;\n    _this.useColumnThreshold = 30;\n    return _this;\n  }\n\n  Object.defineProperty(SimpleCategorySeriesRule.prototype, \"priority\", {\n    get: function () {\n      return this._priority;\n    },\n    set: function (a) {\n      this._priority = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SimpleCategorySeriesRule.prototype, \"useColumnThreshold\", {\n    get: function () {\n      return this._useColumnThreshold;\n    },\n    set: function (a) {\n      this._useColumnThreshold = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SimpleCategorySeriesRule.prototype, \"distinctCheckThreshold\", {\n    get: function () {\n      return this._distinctCheckThreshold;\n    },\n    set: function (a) {\n      this._distinctCheckThreshold = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SimpleCategorySeriesRule.c = function (a, b) {\n    var c = a.analyzer.getAllPropertiesWithIntent(EnumUtil.getName(DataSeriesIntent_$type, 16));\n\n    if (c.length > 0) {\n      return c[0];\n    }\n\n    return function (d) {\n      return d != null ? d : function (e) {\n        return e != null ? e : function (f) {\n          return f != null ? f : a.analyzer.getFirstStringProperty();\n        }(a.analyzer.getFirstDistinctMonotonicNumericProperty(b));\n      }(a.analyzer.getFirstDistinctDateTimeProperty(b));\n    }(a.analyzer.getFirstDistinctStringProperty(b));\n  };\n\n  SimpleCategorySeriesRule.prototype.evaluate = function (a) {\n    var b = SimpleCategorySeriesRule.c(a, this.distinctCheckThreshold);\n    var c = null;\n    var d = a.analyzer.getAllPropertiesWithIntent(EnumUtil.getName(DataSeriesIntent_$type, 0));\n\n    if (d.length > 0) {\n      c = d;\n    }\n\n    if (c == null) {\n      c = a.analyzer.getAllNumericProperties();\n    }\n\n    if (c == null || c.length == 0) {\n      return;\n    }\n\n    var e = a.getCurrentDataSource().actualCount;\n\n    for (var f = 0; f < c.length; f++) {\n      if (c[f] == b && c.length > 1) {\n        continue;\n      }\n\n      var g = new Array(1);\n      g[0] = c[f];\n      var h = a.analyzer.getTitleString(null, g);\n      var i = new DataSeries();\n      var j = new DataSeriesMemberPathHint();\n      j.intent = 0;\n      j.path = c[f];\n      var k = new DataSeriesMemberPathHint();\n      k.intent = 16;\n      k.path = b;\n      i.addMemberPathHint(j);\n      i.addMemberPathHint(k);\n\n      if (e > this.useColumnThreshold) {\n        i.suggestedSeries = 0;\n      } else {\n        i.suggestedSeries = 1;\n      }\n\n      this.d(i, a);\n      i.suggestedPrimaryAxis = 0;\n      i.suggestedSecondaryAxis = 1;\n      i.name = c[f];\n\n      if (h != null) {\n        i.title = h;\n      } else {\n        i.title = c[f];\n        i.title = a.analyzer.expandCamelCasedWords(i.title);\n      }\n\n      a.addDataSeries(i, this);\n    }\n  };\n\n  SimpleCategorySeriesRule.prototype.d = function (a, b) {\n    if (!b.hasValidType(a)) {\n      a.suggestedSeries = 0;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 1;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 2;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 6;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 7;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 4;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 5;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 10;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 8;\n\n      if (b.hasValidType(a)) {\n        return;\n      }\n\n      a.suggestedSeries = 0;\n    }\n  };\n\n  SimpleCategorySeriesRule.$t = markType(SimpleCategorySeriesRule, 'SimpleCategorySeriesRule', Base.$, [IDataSeriesAdapterRule_$type]);\n  return SimpleCategorySeriesRule;\n}(Base);\n\nexport { SimpleCategorySeriesRule };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/SimpleCategorySeriesRule.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, EnumUtil, markType } from \"./type\";\r\nimport { IDataSeriesAdapterRule_$type } from \"./IDataSeriesAdapterRule\";\r\nimport { DataSeriesIntent_$type } from \"./DataSeriesIntent\";\r\nimport { DataSeries } from \"./DataSeries\";\r\nimport { DataSeriesMemberPathHint } from \"./DataSeriesMemberPathHint\";\r\n/**\r\n * @hidden\r\n */\r\nvar SimpleCategorySeriesRule = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(SimpleCategorySeriesRule, _super);\r\n    function SimpleCategorySeriesRule() {\r\n        var _this = _super.call(this) || this;\r\n        _this._priority = 0;\r\n        _this._useColumnThreshold = 0;\r\n        _this._distinctCheckThreshold = 0;\r\n        _this.priority = 10;\r\n        _this.distinctCheckThreshold = 50000;\r\n        _this.useColumnThreshold = 30;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SimpleCategorySeriesRule.prototype, \"priority\", {\r\n        get: function () {\r\n            return this._priority;\r\n        },\r\n        set: function (a) {\r\n            this._priority = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleCategorySeriesRule.prototype, \"useColumnThreshold\", {\r\n        get: function () {\r\n            return this._useColumnThreshold;\r\n        },\r\n        set: function (a) {\r\n            this._useColumnThreshold = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleCategorySeriesRule.prototype, \"distinctCheckThreshold\", {\r\n        get: function () {\r\n            return this._distinctCheckThreshold;\r\n        },\r\n        set: function (a) {\r\n            this._distinctCheckThreshold = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SimpleCategorySeriesRule.c = function (a, b) {\r\n        var c = a.analyzer.getAllPropertiesWithIntent(EnumUtil.getName(DataSeriesIntent_$type, (16)));\r\n        if (c.length > 0) {\r\n            return c[0];\r\n        }\r\n        return ((function (d) { return d != null ? d : ((function (e) { return e != null ? e : ((function (f) { return f != null ? f : a.analyzer.getFirstStringProperty(); })(a.analyzer.getFirstDistinctMonotonicNumericProperty(b))); })(a.analyzer.getFirstDistinctDateTimeProperty(b))); })(a.analyzer.getFirstDistinctStringProperty(b)));\r\n    };\r\n    SimpleCategorySeriesRule.prototype.evaluate = function (a) {\r\n        var b = SimpleCategorySeriesRule.c(a, this.distinctCheckThreshold);\r\n        var c = null;\r\n        var d = a.analyzer.getAllPropertiesWithIntent(EnumUtil.getName(DataSeriesIntent_$type, (0)));\r\n        if (d.length > 0) {\r\n            c = d;\r\n        }\r\n        if (c == null) {\r\n            c = a.analyzer.getAllNumericProperties();\r\n        }\r\n        if (c == null || c.length == 0) {\r\n            return;\r\n        }\r\n        var e = a.getCurrentDataSource().actualCount;\r\n        for (var f = 0; f < c.length; f++) {\r\n            if (c[f] == b && c.length > 1) {\r\n                continue;\r\n            }\r\n            var g = new Array(1);\r\n            g[0] = c[f];\r\n            var h = a.analyzer.getTitleString(null, g);\r\n            var i = new DataSeries();\r\n            var j = new DataSeriesMemberPathHint();\r\n            j.intent = 0;\r\n            j.path = c[f];\r\n            var k = new DataSeriesMemberPathHint();\r\n            k.intent = 16;\r\n            k.path = b;\r\n            i.addMemberPathHint(j);\r\n            i.addMemberPathHint(k);\r\n            if (e > this.useColumnThreshold) {\r\n                i.suggestedSeries = 0;\r\n            }\r\n            else {\r\n                i.suggestedSeries = 1;\r\n            }\r\n            this.d(i, a);\r\n            i.suggestedPrimaryAxis = 0;\r\n            i.suggestedSecondaryAxis = 1;\r\n            i.name = c[f];\r\n            if (h != null) {\r\n                i.title = h;\r\n            }\r\n            else {\r\n                i.title = c[f];\r\n                i.title = a.analyzer.expandCamelCasedWords(i.title);\r\n            }\r\n            a.addDataSeries(i, this);\r\n        }\r\n    };\r\n    SimpleCategorySeriesRule.prototype.d = function (a, b) {\r\n        if (!b.hasValidType(a)) {\r\n            a.suggestedSeries = 0;\r\n            if (b.hasValidType(a)) {\r\n                return;\r\n            }\r\n            a.suggestedSeries = 1;\r\n            if (b.hasValidType(a)) {\r\n                return;\r\n            }\r\n            a.suggestedSeries = 2;\r\n            if (b.hasValidType(a)) {\r\n                return;\r\n            }\r\n            a.suggestedSeries = 6;\r\n            if (b.hasValidType(a)) {\r\n                return;\r\n            }\r\n            a.suggestedSeries = 7;\r\n            if (b.hasValidType(a)) {\r\n                return;\r\n            }\r\n            a.suggestedSeries = 4;\r\n            if (b.hasValidType(a)) {\r\n                return;\r\n            }\r\n            a.suggestedSeries = 5;\r\n            if (b.hasValidType(a)) {\r\n                return;\r\n            }\r\n            a.suggestedSeries = 10;\r\n            if (b.hasValidType(a)) {\r\n                return;\r\n            }\r\n            a.suggestedSeries = 8;\r\n            if (b.hasValidType(a)) {\r\n                return;\r\n            }\r\n            a.suggestedSeries = 0;\r\n        }\r\n    };\r\n    SimpleCategorySeriesRule.$t = markType(SimpleCategorySeriesRule, 'SimpleCategorySeriesRule', Base.$, [IDataSeriesAdapterRule_$type]);\r\n    return SimpleCategorySeriesRule;\r\n}(Base));\r\nexport { SimpleCategorySeriesRule };\r\n//# sourceMappingURL=SimpleCategorySeriesRule.js.map\r\n"]},"metadata":{},"sourceType":"module"}