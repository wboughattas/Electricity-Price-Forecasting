{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, IEqualityComparer_$type, IEqualityComparer$1_$type, typeCastObjTo$t, markType, getBoxIfEnum } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar EqualityComparer$1 =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(EqualityComparer$1, _super);\n\n  function EqualityComparer$1($t) {\n    var _this = _super.call(this) || this;\n\n    _this.$t = null;\n    _this.$t = $t;\n    _this.$type = _this.$type.specialize(_this.$t);\n    return _this;\n  }\n\n  EqualityComparer$1.defaultEqualityComparerValue = function ($t) {\n    return new DefaultEqualityComparer$1($t);\n  };\n\n  EqualityComparer$1.prototype.equalsC = function (a, b) {\n    return this.equalsC(typeCastObjTo$t(this.$t, a), typeCastObjTo$t(this.$t, b));\n  };\n\n  EqualityComparer$1.prototype.getHashCodeC = function (a) {\n    return this.getHashCodeC(typeCastObjTo$t(this.$t, a));\n  };\n\n  EqualityComparer$1.$t = markType(EqualityComparer$1, 'EqualityComparer$1', Base.$, [IEqualityComparer_$type, IEqualityComparer$1_$type.specialize(0)]);\n  return EqualityComparer$1;\n}(Base);\n\nexport { EqualityComparer$1 };\n/**\r\n * @hidden\r\n */\n\nvar DefaultEqualityComparer$1 =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DefaultEqualityComparer$1, _super);\n\n  function DefaultEqualityComparer$1($t) {\n    var _this = _super.call(this, $t) || this;\n\n    _this.$t = null;\n    _this.$t = $t;\n    _this.$type = _this.$type.specialize(_this.$t);\n    return _this;\n  }\n\n  DefaultEqualityComparer$1.prototype.equalsC = function (a, b) {\n    return Base.equalsStatic(getBoxIfEnum(this.$t, a), getBoxIfEnum(this.$t, b));\n  };\n\n  DefaultEqualityComparer$1.prototype.getHashCodeC = function (a) {\n    return Base.getHashCodeStatic(a);\n  };\n\n  DefaultEqualityComparer$1.$t = markType(DefaultEqualityComparer$1, 'DefaultEqualityComparer$1', EqualityComparer$1.$.specialize(0));\n  return DefaultEqualityComparer$1;\n}(EqualityComparer$1);\n\nexport { DefaultEqualityComparer$1 };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/EqualityComparer$1_combined.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAkC,uBAAlC,EAAgF,yBAAhF,EAAiH,eAAjH,EAAkI,QAAlI,EAA4I,YAA5I,QAAgK,QAAhK;AAEA;;AAEG;;AACH,IAAA,kBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoD,EAAA,OAAA,CAAA,SAAA,CAAA,kBAAA,EAAA,MAAA;;AAGnD,WAAA,kBAAA,CAAY,EAAZ,EAAoB;AAApB,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AADU,IAAA,KAAA,CAAA,EAAA,GAAW,IAAX;AAGT,IAAA,KAAI,CAAC,EAAL,GAAU,EAAV;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,KAAI,CAAC,KAAL,CAAW,UAAX,CAAsB,KAAI,CAAC,EAA3B,CAAb;;AACA;;AACM,EAAA,kBAAA,CAAA,4BAAA,GAAP,UAAuC,EAAvC,EAA+C;AAC9C,WAAO,IAAI,yBAAJ,CAAiC,EAAjC,CAAP;AACA,GAFM;;AAGP,EAAA,kBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,CAAR,EAAgB,CAAhB,EAAsB;AACrB,WAAO,KAAK,OAAL,CAAa,eAAe,CAAI,KAAK,EAAT,EAAa,CAAb,CAA5B,EAA6C,eAAe,CAAI,KAAK,EAAT,EAAa,CAAb,CAA5D,CAAP;AACA,GAFD;;AAGA,EAAA,kBAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,CAAb,EAAmB;AAClB,WAAO,KAAK,YAAL,CAAkB,eAAe,CAAI,KAAK,EAAT,EAAa,CAAb,CAAjC,CAAP;AACA,GAFD;;AAbO,EAAA,kBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,kBAAD,EAAqB,oBAArB,EAAiD,IAAK,CAAC,CAAvD,EAA0D,CAAC,uBAAD,EAA0B,yBAAyB,CAAC,UAA1B,CAAqC,CAArC,CAA1B,CAA1D,CAAnB;AAgBR,SAAA,kBAAA;AAAC,CAjBD,CAAoD,IAApD,CAAA;;SAAsB,kB;AAmBtB;;AAEG;;AACH,IAAA,yBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkD,EAAA,OAAA,CAAA,SAAA,CAAA,yBAAA,EAAA,MAAA;;AAGjD,WAAA,yBAAA,CAAY,EAAZ,EAAoB;AAApB,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,EAAN,KAAS,IADV;;AADU,IAAA,KAAA,CAAA,EAAA,GAAW,IAAX;AAGT,IAAA,KAAI,CAAC,EAAL,GAAU,EAAV;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,KAAI,CAAC,KAAL,CAAW,UAAX,CAAsB,KAAI,CAAC,EAA3B,CAAb;;AACA;;AACD,EAAA,yBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,CAAR,EAAc,CAAd,EAAkB;AACjB,WAAO,IAAI,CAAC,YAAL,CAAkB,YAAY,CAAI,KAAK,EAAT,EAAa,CAAb,CAA9B,EAA+C,YAAY,CAAI,KAAK,EAAT,EAAa,CAAb,CAA3D,CAAP;AACA,GAFD;;AAGA,EAAA,yBAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,CAAb,EAAiB;AAChB,WAAO,IAAI,CAAC,iBAAL,CAAuB,CAAvB,CAAP;AACA,GAFD;;AAVO,EAAA,yBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,yBAAD,EAA4B,2BAA5B,EAA+D,kBAAmB,CAAC,CAApB,CAAsB,UAAtB,CAAiC,CAAjC,CAA/D,CAAnB;AAaR,SAAA,yBAAA;AAAC,CAdD,CAAkD,kBAAlD,CAAA;;SAAa,yB","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, IEqualityComparer_$type, IEqualityComparer$1_$type, typeCastObjTo$t, markType, getBoxIfEnum } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar EqualityComparer$1 = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(EqualityComparer$1, _super);\r\n    function EqualityComparer$1($t) {\r\n        var _this = _super.call(this) || this;\r\n        _this.$t = null;\r\n        _this.$t = $t;\r\n        _this.$type = _this.$type.specialize(_this.$t);\r\n        return _this;\r\n    }\r\n    EqualityComparer$1.defaultEqualityComparerValue = function ($t) {\r\n        return new DefaultEqualityComparer$1($t);\r\n    };\r\n    EqualityComparer$1.prototype.equalsC = function (a, b) {\r\n        return this.equalsC(typeCastObjTo$t(this.$t, a), typeCastObjTo$t(this.$t, b));\r\n    };\r\n    EqualityComparer$1.prototype.getHashCodeC = function (a) {\r\n        return this.getHashCodeC(typeCastObjTo$t(this.$t, a));\r\n    };\r\n    EqualityComparer$1.$t = markType(EqualityComparer$1, 'EqualityComparer$1', Base.$, [IEqualityComparer_$type, IEqualityComparer$1_$type.specialize(0)]);\r\n    return EqualityComparer$1;\r\n}(Base));\r\nexport { EqualityComparer$1 };\r\n/**\r\n * @hidden\r\n */\r\nvar DefaultEqualityComparer$1 = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(DefaultEqualityComparer$1, _super);\r\n    function DefaultEqualityComparer$1($t) {\r\n        var _this = _super.call(this, $t) || this;\r\n        _this.$t = null;\r\n        _this.$t = $t;\r\n        _this.$type = _this.$type.specialize(_this.$t);\r\n        return _this;\r\n    }\r\n    DefaultEqualityComparer$1.prototype.equalsC = function (a, b) {\r\n        return Base.equalsStatic(getBoxIfEnum(this.$t, a), getBoxIfEnum(this.$t, b));\r\n    };\r\n    DefaultEqualityComparer$1.prototype.getHashCodeC = function (a) {\r\n        return Base.getHashCodeStatic(a);\r\n    };\r\n    DefaultEqualityComparer$1.$t = markType(DefaultEqualityComparer$1, 'DefaultEqualityComparer$1', EqualityComparer$1.$.specialize(0));\r\n    return DefaultEqualityComparer$1;\r\n}(EqualityComparer$1));\r\nexport { DefaultEqualityComparer$1 };\r\n//# sourceMappingURL=EqualityComparer$1_combined.js.map\r\n"]},"metadata":{},"sourceType":"module"}