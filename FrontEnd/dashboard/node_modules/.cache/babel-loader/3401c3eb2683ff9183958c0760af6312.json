{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { truncate } from \"./number\";\nexport function timeSpanInit1(h, m, s) {\n  return h * 3600000 + m * 60000 + s * 1000;\n}\n;\nexport function timeSpanInit2(d, h, m, s, ms) {\n  return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\n;\nexport function timeSpanInit3(d, h, m, s) {\n  return d * 86400000 + h * 3600000 + m * 60000 + s * 1000;\n}\n;\nexport function timeSpanTotalDays(t) {\n  return t / 86400000;\n}\n;\nexport function timeSpanTotalHours(t) {\n  return t / 3600000;\n}\n;\nexport function timeSpanTotalMilliseconds(t) {\n  return t;\n}\n;\nexport function timeSpanTotalMinutes(t) {\n  return t / 60000;\n}\n;\nexport function timeSpanTotalSeconds(t) {\n  return t / 1000;\n}\n;\nexport function timeSpanFromDays(v) {\n  return v * 86400000;\n}\n;\nexport function timeSpanFromHours(v) {\n  return v * 3600000;\n}\n;\nexport function timeSpanFromMilliseconds(v) {\n  return v;\n}\n;\nexport function timeSpanFromMinutes(v) {\n  return v * 60000;\n}\n;\nexport function timeSpanFromSeconds(v) {\n  return v * 1000;\n}\n;\nexport function timeSpanFromTicks(v) {\n  return v / 10000;\n}\n;\nexport function timeSpanDays(t) {\n  return truncate(t / 86400000);\n}\n;\nexport function timeSpanHours(t) {\n  return truncate(t / 3600000 % 24);\n}\n;\nexport function timeSpanMilliseconds(t) {\n  return t % 1000;\n}\n;\nexport function timeSpanMinutes(t) {\n  return truncate(t / 60000 % 60);\n}\n;\nexport function timeSpanSeconds(t) {\n  return truncate(t / 1000 % 60);\n}\n;\nexport function timeSpanTicks(t) {\n  return truncate(t * 10000);\n}\n;\nexport function timeSpanNegate(t) {\n  return -t;\n}\n;","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/timespan.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;AAEF,SAAS,QAAT,QAAyB,UAAzB;AAEI,OAAM,SAAU,aAAV,CAAwB,CAAxB,EAAmC,CAAnC,EAA8C,CAA9C,EAAuD;AAC/D,SAAQ,CAAC,GAAG,OAAL,GAAiB,CAAC,GAAG,KAArB,GAA+B,CAAC,GAAG,IAA1C;AACA;AAAA;AACD,OAAM,SAAW,aAAX,CAAyB,CAAzB,EAAoC,CAApC,EAA+C,CAA/C,EAA0D,CAA1D,EAAqE,EAArE,EAA+E;AACpF,SAAQ,CAAC,GAAG,QAAL,GAAkB,CAAC,GAAG,OAAtB,GAAkC,CAAC,GAAG,KAAtC,GAAgD,CAAC,GAAG,IAApD,GAA4D,EAAnE;AACA;AAAA;AACD,OAAM,SAAW,aAAX,CAAyB,CAAzB,EAAoC,CAApC,EAA+C,CAA/C,EAA0D,CAA1D,EAAmE;AACxE,SAAQ,CAAC,GAAG,QAAL,GAAkB,CAAC,GAAG,OAAtB,GAAkC,CAAC,GAAG,KAAtC,GAAgD,CAAC,GAAG,IAA3D;AACA;AAAA;AAED,OAAM,SAAU,iBAAV,CAA4B,CAA5B,EAAqC;AAAI,SAAO,CAAC,GAAG,QAAX;AAAsB;AAAA;AACrE,OAAM,SAAU,kBAAV,CAA6B,CAA7B,EAAsC;AAAI,SAAO,CAAC,GAAG,OAAX;AAAqB;AAAA;AACrE,OAAM,SAAU,yBAAV,CAAoC,CAApC,EAA6C;AAAI,SAAO,CAAP;AAAW;AAAA;AAClE,OAAM,SAAU,oBAAV,CAA+B,CAA/B,EAAwC;AAAI,SAAO,CAAC,GAAG,KAAX;AAAmB;AAAA;AACrE,OAAM,SAAU,oBAAV,CAA+B,CAA/B,EAAwC;AAAI,SAAO,CAAC,GAAG,IAAX;AAAkB;AAAA;AAEpE,OAAM,SAAU,gBAAV,CAA2B,CAA3B,EAAoC;AAAI,SAAO,CAAC,GAAG,QAAX;AAAsB;AAAA;AACpE,OAAM,SAAU,iBAAV,CAA4B,CAA5B,EAAqC;AAAI,SAAO,CAAC,GAAG,OAAX;AAAqB;AAAA;AACpE,OAAM,SAAU,wBAAV,CAAmC,CAAnC,EAA4C;AAAI,SAAO,CAAP;AAAW;AAAA;AACjE,OAAM,SAAU,mBAAV,CAA8B,CAA9B,EAAuC;AAAI,SAAO,CAAC,GAAG,KAAX;AAAmB;AAAA;AACpE,OAAM,SAAU,mBAAV,CAA8B,CAA9B,EAAuC;AAAI,SAAO,CAAC,GAAG,IAAX;AAAkB;AAAA;AACnE,OAAM,SAAU,iBAAV,CAA4B,CAA5B,EAAqC;AAAI,SAAO,CAAC,GAAG,KAAX;AAAmB;AAAA;AAElE,OAAM,SAAU,YAAV,CAAuB,CAAvB,EAAgC;AAAI,SAAO,QAAQ,CAAC,CAAC,GAAG,QAAL,CAAf;AAAgC;AAAA;AAC1E,OAAM,SAAU,aAAV,CAAwB,CAAxB,EAAiC;AAAI,SAAO,QAAQ,CAAE,CAAC,GAAG,OAAL,GAAgB,EAAjB,CAAf;AAAsC;AAAA;AACjF,OAAM,SAAU,oBAAV,CAA+B,CAA/B,EAAwC;AAAI,SAAO,CAAC,GAAG,IAAX;AAAkB;AAAA;AACpE,OAAM,SAAU,eAAV,CAA0B,CAA1B,EAAmC;AAAI,SAAO,QAAQ,CAAE,CAAC,GAAG,KAAL,GAAc,EAAf,CAAf;AAAoC;AAAA;AACjF,OAAM,SAAU,eAAV,CAA0B,CAA1B,EAAmC;AAAI,SAAO,QAAQ,CAAE,CAAC,GAAG,IAAL,GAAa,EAAd,CAAf;AAAmC;AAAA;AAChF,OAAM,SAAU,aAAV,CAAwB,CAAxB,EAAiC;AAAI,SAAO,QAAQ,CAAC,CAAC,GAAG,KAAL,CAAf;AAA6B;AAAA;AAExE,OAAM,SAAU,cAAV,CAAyB,CAAzB,EAAkC;AAAI,SAAO,CAAC,CAAR;AAAY;AAAA","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { truncate } from \"./number\";\nexport function timeSpanInit1(h, m, s) {\n    return (h * 3600000) + (m * 60000) + (s * 1000);\n}\n;\nexport function timeSpanInit2(d, h, m, s, ms) {\n    return (d * 86400000) + (h * 3600000) + (m * 60000) + (s * 1000) + ms;\n}\n;\nexport function timeSpanInit3(d, h, m, s) {\n    return (d * 86400000) + (h * 3600000) + (m * 60000) + (s * 1000);\n}\n;\nexport function timeSpanTotalDays(t) { return t / 86400000; }\n;\nexport function timeSpanTotalHours(t) { return t / 3600000; }\n;\nexport function timeSpanTotalMilliseconds(t) { return t; }\n;\nexport function timeSpanTotalMinutes(t) { return t / 60000; }\n;\nexport function timeSpanTotalSeconds(t) { return t / 1000; }\n;\nexport function timeSpanFromDays(v) { return v * 86400000; }\n;\nexport function timeSpanFromHours(v) { return v * 3600000; }\n;\nexport function timeSpanFromMilliseconds(v) { return v; }\n;\nexport function timeSpanFromMinutes(v) { return v * 60000; }\n;\nexport function timeSpanFromSeconds(v) { return v * 1000; }\n;\nexport function timeSpanFromTicks(v) { return v / 10000; }\n;\nexport function timeSpanDays(t) { return truncate(t / 86400000); }\n;\nexport function timeSpanHours(t) { return truncate((t / 3600000) % 24); }\n;\nexport function timeSpanMilliseconds(t) { return t % 1000; }\n;\nexport function timeSpanMinutes(t) { return truncate((t / 60000) % 60); }\n;\nexport function timeSpanSeconds(t) { return truncate((t / 1000) % 60); }\n;\nexport function timeSpanTicks(t) { return truncate(t * 10000); }\n;\nexport function timeSpanNegate(t) { return -t; }\n;\n//# sourceMappingURL=timespan.js.map\n"]},"metadata":{},"sourceType":"module"}