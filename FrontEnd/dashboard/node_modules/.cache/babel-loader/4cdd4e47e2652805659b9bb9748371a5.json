{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnSupportingCalculationDescriptionMetadata } from \"./ColumnSupportingCalculationDescriptionMetadata\";\nimport { DataSourceSupportingCalculationDescriptionMetadata } from \"./DataSourceSupportingCalculationDescriptionMetadata\";\nimport { FinancialCalculationSupportingCalculationsDescription } from \"./FinancialCalculationSupportingCalculationsDescription\";\n/**\n * @hidden\n */\n\nvar FinancialCalculationSupportingCalculationsDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(FinancialCalculationSupportingCalculationsDescriptionMetadata, _super);\n\n  function FinancialCalculationSupportingCalculationsDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FinancialCalculationSupportingCalculationsDescriptionMetadata.b = function (a) {\n    if (FinancialCalculationSupportingCalculationsDescriptionMetadata.a == null) {\n      FinancialCalculationSupportingCalculationsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      FinancialCalculationSupportingCalculationsDescriptionMetadata.c(a, FinancialCalculationSupportingCalculationsDescriptionMetadata.a);\n      ColumnSupportingCalculationDescriptionMetadata.d(a);\n      DataSourceSupportingCalculationDescriptionMetadata.d(a);\n    }\n  };\n\n  FinancialCalculationSupportingCalculationsDescriptionMetadata.c = function (a, b) {\n    b.item(\"EMA\", \"ExportedType:ColumnSupportingCalculation\");\n    b.item(\"SMA\", \"ExportedType:ColumnSupportingCalculation\");\n    b.item(\"STDEV\", \"ExportedType:ColumnSupportingCalculation\");\n    b.item(\"MovingSum\", \"ExportedType:ColumnSupportingCalculation\");\n    b.item(\"ShortVolumeOscillatorAverage\", \"ExportedType:DataSourceSupportingCalculation\");\n    b.item(\"LongVolumeOscillatorAverage\", \"ExportedType:DataSourceSupportingCalculation\");\n    b.item(\"ShortPriceOscillatorAverage\", \"ExportedType:DataSourceSupportingCalculation\");\n    b.item(\"LongPriceOscillatorAverage\", \"ExportedType:DataSourceSupportingCalculation\");\n    b.item(\"MakeSafeRef\", \"(w:MakeSafe,wf:MakeSafe)MethodRef\");\n  };\n\n  FinancialCalculationSupportingCalculationsDescriptionMetadata.d = function (a) {\n    FinancialCalculationSupportingCalculationsDescriptionMetadata.b(a);\n    a.n(\"FinancialCalculationSupportingCalculations\", function () {\n      return new FinancialCalculationSupportingCalculationsDescription();\n    });\n    a.m(\"FinancialCalculationSupportingCalculations\", FinancialCalculationSupportingCalculationsDescriptionMetadata.a);\n  };\n\n  FinancialCalculationSupportingCalculationsDescriptionMetadata.$t = markType(FinancialCalculationSupportingCalculationsDescriptionMetadata, 'FinancialCalculationSupportingCalculationsDescriptionMetadata');\n  FinancialCalculationSupportingCalculationsDescriptionMetadata.a = null;\n  return FinancialCalculationSupportingCalculationsDescriptionMetadata;\n}(Base);\n\nexport { FinancialCalculationSupportingCalculationsDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FinancialCalculationSupportingCalculationsDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,8CAAT,QAA+D,kDAA/D;AACA,SAAS,kDAAT,QAAmE,sDAAnE;AACA,SAAS,qDAAT,QAAsE,yDAAtE;AAEA;;AAEG;;AACH,IAAA,6DAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmF,EAAA,OAAA,CAAA,SAAA,CAAA,6DAAA,EAAA,MAAA;;AAAnF,WAAA,6DAAA,GAAA;;AA2BC;;AAxBe,EAAA,6DAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,6DAA6D,CAAC,CAA9D,IAAmE,IAAvE,EAA6E;AAC5E,MAAA,6DAA6D,CAAC,CAA9D,GAAkE,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAlE;AACA,MAAA,6DAA6D,CAAC,CAA9D,CAAgE,CAAhE,EAAmE,6DAA6D,CAAC,CAAjI;AACA,MAAA,8CAA8C,CAAC,CAA/C,CAAiD,CAAjD;AACA,MAAA,kDAAkD,CAAC,CAAnD,CAAqD,CAArD;AACA;AACD,GAPc;;AAQR,EAAA,6DAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAc,0CAAd;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAc,0CAAd;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,0CAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,0CAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,8BAAP,EAAuC,8CAAvC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,6BAAP,EAAsC,8CAAtC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,6BAAP,EAAsC,8CAAtC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,4BAAP,EAAqC,8CAArC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,mCAAtB;AACA,GAVM;;AAWA,EAAA,6DAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,6DAA6D,CAAC,CAA9D,CAAgE,CAAhE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,4CAAJ,EAAkD,YAAA;AAAM,aAAA,IAAA,qDAAA,EAAA;AAA2D,KAAnH;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,4CAAJ,EAAkD,6DAA6D,CAAC,CAAhH;AACA,GAJM;;AArBA,EAAA,6DAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,6DAAD,EAAgE,+DAAhE,CAAnB;AACQ,EAAA,6DAAA,CAAA,CAAA,GAAkC,IAAlC;AAyBhB,SAAA,6DAAA;AAAC,CA3BD,CAAmF,IAAnF,CAAA;;SAAa,6D","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnSupportingCalculationDescriptionMetadata } from \"./ColumnSupportingCalculationDescriptionMetadata\";\nimport { DataSourceSupportingCalculationDescriptionMetadata } from \"./DataSourceSupportingCalculationDescriptionMetadata\";\nimport { FinancialCalculationSupportingCalculationsDescription } from \"./FinancialCalculationSupportingCalculationsDescription\";\n/**\n * @hidden\n */\nvar FinancialCalculationSupportingCalculationsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FinancialCalculationSupportingCalculationsDescriptionMetadata, _super);\n    function FinancialCalculationSupportingCalculationsDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FinancialCalculationSupportingCalculationsDescriptionMetadata.b = function (a) {\n        if (FinancialCalculationSupportingCalculationsDescriptionMetadata.a == null) {\n            FinancialCalculationSupportingCalculationsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            FinancialCalculationSupportingCalculationsDescriptionMetadata.c(a, FinancialCalculationSupportingCalculationsDescriptionMetadata.a);\n            ColumnSupportingCalculationDescriptionMetadata.d(a);\n            DataSourceSupportingCalculationDescriptionMetadata.d(a);\n        }\n    };\n    FinancialCalculationSupportingCalculationsDescriptionMetadata.c = function (a, b) {\n        b.item(\"EMA\", \"ExportedType:ColumnSupportingCalculation\");\n        b.item(\"SMA\", \"ExportedType:ColumnSupportingCalculation\");\n        b.item(\"STDEV\", \"ExportedType:ColumnSupportingCalculation\");\n        b.item(\"MovingSum\", \"ExportedType:ColumnSupportingCalculation\");\n        b.item(\"ShortVolumeOscillatorAverage\", \"ExportedType:DataSourceSupportingCalculation\");\n        b.item(\"LongVolumeOscillatorAverage\", \"ExportedType:DataSourceSupportingCalculation\");\n        b.item(\"ShortPriceOscillatorAverage\", \"ExportedType:DataSourceSupportingCalculation\");\n        b.item(\"LongPriceOscillatorAverage\", \"ExportedType:DataSourceSupportingCalculation\");\n        b.item(\"MakeSafeRef\", \"(w:MakeSafe,wf:MakeSafe)MethodRef\");\n    };\n    FinancialCalculationSupportingCalculationsDescriptionMetadata.d = function (a) {\n        FinancialCalculationSupportingCalculationsDescriptionMetadata.b(a);\n        a.n(\"FinancialCalculationSupportingCalculations\", function () { return new FinancialCalculationSupportingCalculationsDescription(); });\n        a.m(\"FinancialCalculationSupportingCalculations\", FinancialCalculationSupportingCalculationsDescriptionMetadata.a);\n    };\n    FinancialCalculationSupportingCalculationsDescriptionMetadata.$t = markType(FinancialCalculationSupportingCalculationsDescriptionMetadata, 'FinancialCalculationSupportingCalculationsDescriptionMetadata');\n    FinancialCalculationSupportingCalculationsDescriptionMetadata.a = null;\n    return FinancialCalculationSupportingCalculationsDescriptionMetadata;\n}(Base));\nexport { FinancialCalculationSupportingCalculationsDescriptionMetadata };\n//# sourceMappingURL=FinancialCalculationSupportingCalculationsDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}