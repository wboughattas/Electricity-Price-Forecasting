{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { CellInfoDescription } from \"./CellInfoDescription\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar TemplateCellInfoDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TemplateCellInfoDescription, _super);\n\n  function TemplateCellInfoDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.fb = null;\n    return _this;\n  }\n\n  TemplateCellInfoDescription.prototype.get_type = function () {\n    return \"TemplateCellInfo\";\n  };\n\n  Object.defineProperty(TemplateCellInfoDescription.prototype, \"valueRef\", {\n    get: function () {\n      return this.fb;\n    },\n    set: function (a) {\n      this.fb = a;\n      this.e(\"ValueRef\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  TemplateCellInfoDescription.$t = markType(TemplateCellInfoDescription, 'TemplateCellInfoDescription', CellInfoDescription.$);\n  TemplateCellInfoDescription.__marshalByValue1 = true;\n  TemplateCellInfoDescription.__marshalByValueAlias1 = \"TemplateCellModel\";\n  return TemplateCellInfoDescription;\n}(CellInfoDescription);\n\nexport { TemplateCellInfoDescription };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TemplateCellInfoDescription.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,mBAAT,QAAoC,uBAApC;AAEA,SAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,2BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiD,EAAA,OAAA,CAAA,SAAA,CAAA,2BAAA,EAAA,MAAA;;AAOhD,WAAA,2BAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAGQ,IAAA,KAAA,CAAA,EAAA,GAAa,IAAb;;AADP;;AAPS,EAAA,2BAAA,CAAA,SAAA,CAAA,QAAA,GAAV,YAAA;AACC,WAAO,kBAAP;AACA,GAFS;;AASV,EAAA,MAAA,CAAA,cAAA,CAAI,2BAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;SAAZ,YAAA;AACC,aAAO,KAAK,EAAZ;AACA,KAFW;SAGZ,UAAa,CAAb,EAAsB;AACrB,WAAK,EAAL,GAAU,CAAV;AACA,WAAK,CAAL,CAAO,UAAP;AACA,KANW;oBAAA;;AAAA,GAAZ;AAVO,EAAA,2BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,2BAAD,EAA8B,6BAA9B,EAAmE,mBAAoB,CAAC,CAAxF,CAAnB;AAIQ,EAAA,2BAAA,CAAA,iBAAA,GAA6B,IAA7B;AACA,EAAA,2BAAA,CAAA,sBAAA,GAAiC,mBAAjC;AAYhB,SAAA,2BAAA;AAAC,CAlBD,CAAiD,mBAAjD,CAAA;;SAAa,2B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { CellInfoDescription } from \"./CellInfoDescription\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar TemplateCellInfoDescription = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TemplateCellInfoDescription, _super);\n    function TemplateCellInfoDescription() {\n        var _this = _super.call(this) || this;\n        _this.fb = null;\n        return _this;\n    }\n    TemplateCellInfoDescription.prototype.get_type = function () {\n        return \"TemplateCellInfo\";\n    };\n    Object.defineProperty(TemplateCellInfoDescription.prototype, \"valueRef\", {\n        get: function () {\n            return this.fb;\n        },\n        set: function (a) {\n            this.fb = a;\n            this.e(\"ValueRef\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TemplateCellInfoDescription.$t = markType(TemplateCellInfoDescription, 'TemplateCellInfoDescription', CellInfoDescription.$);\n    TemplateCellInfoDescription.__marshalByValue1 = true;\n    TemplateCellInfoDescription.__marshalByValueAlias1 = \"TemplateCellModel\";\n    return TemplateCellInfoDescription;\n}(CellInfoDescription));\nexport { TemplateCellInfoDescription };\n//# sourceMappingURL=TemplateCellInfoDescription.js.map\n"]},"metadata":{},"sourceType":"module"}