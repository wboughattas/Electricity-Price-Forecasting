{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalAnchoredCategorySeriesDescriptionMetadata } from \"./HorizontalAnchoredCategorySeriesDescriptionMetadata\";\n/**\r\n * @hidden\r\n */\n\nvar FragmentBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(FragmentBaseDescriptionMetadata, _super);\n\n  function FragmentBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FragmentBaseDescriptionMetadata.b = function (a) {\n    if (FragmentBaseDescriptionMetadata.a == null) {\n      FragmentBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      FragmentBaseDescriptionMetadata.c(a, FragmentBaseDescriptionMetadata.a);\n    }\n  };\n\n  FragmentBaseDescriptionMetadata.c = function (a, b) {\n    HorizontalAnchoredCategorySeriesDescriptionMetadata.c(a, b);\n  };\n\n  FragmentBaseDescriptionMetadata.d = function (a) {\n    FragmentBaseDescriptionMetadata.b(a);\n    a.m(\"FragmentBase\", FragmentBaseDescriptionMetadata.a);\n  };\n\n  FragmentBaseDescriptionMetadata.$t = markType(FragmentBaseDescriptionMetadata, 'FragmentBaseDescriptionMetadata');\n  FragmentBaseDescriptionMetadata.a = null;\n  return FragmentBaseDescriptionMetadata;\n}(Base);\n\nexport { FragmentBaseDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FragmentBaseDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mDAAT,QAAoE,uDAApE;AAEA;;AAEG;;AACH,IAAA,+BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqD,EAAA,OAAA,CAAA,SAAA,CAAA,+BAAA,EAAA,MAAA;;AAArD,WAAA,+BAAA,GAAA;;AAgBC;;AAbe,EAAA,+BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,+BAA+B,CAAC,CAAhC,IAAqC,IAAzC,EAA+C;AAC9C,MAAA,+BAA+B,CAAC,CAAhC,GAAoC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAApC;AACA,MAAA,+BAA+B,CAAC,CAAhC,CAAkC,CAAlC,EAAqC,+BAA+B,CAAC,CAArE;AACA;AACD,GALc;;AAMR,EAAA,+BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,mDAAmD,CAAC,CAApD,CAAsD,CAAtD,EAAyD,CAAzD;AACA,GAFM;;AAGA,EAAA,+BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,+BAA+B,CAAC,CAAhC,CAAkC,CAAlC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,cAAJ,EAAoB,+BAA+B,CAAC,CAApD;AACA,GAHM;;AAXA,EAAA,+BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,+BAAD,EAAkC,iCAAlC,CAAnB;AACQ,EAAA,+BAAA,CAAA,CAAA,GAAkC,IAAlC;AAchB,SAAA,+BAAA;AAAC,CAhBD,CAAqD,IAArD,CAAA;;SAAa,+B","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { HorizontalAnchoredCategorySeriesDescriptionMetadata } from \"./HorizontalAnchoredCategorySeriesDescriptionMetadata\";\r\n/**\r\n * @hidden\r\n */\r\nvar FragmentBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(FragmentBaseDescriptionMetadata, _super);\r\n    function FragmentBaseDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FragmentBaseDescriptionMetadata.b = function (a) {\r\n        if (FragmentBaseDescriptionMetadata.a == null) {\r\n            FragmentBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            FragmentBaseDescriptionMetadata.c(a, FragmentBaseDescriptionMetadata.a);\r\n        }\r\n    };\r\n    FragmentBaseDescriptionMetadata.c = function (a, b) {\r\n        HorizontalAnchoredCategorySeriesDescriptionMetadata.c(a, b);\r\n    };\r\n    FragmentBaseDescriptionMetadata.d = function (a) {\r\n        FragmentBaseDescriptionMetadata.b(a);\r\n        a.m(\"FragmentBase\", FragmentBaseDescriptionMetadata.a);\r\n    };\r\n    FragmentBaseDescriptionMetadata.$t = markType(FragmentBaseDescriptionMetadata, 'FragmentBaseDescriptionMetadata');\r\n    FragmentBaseDescriptionMetadata.a = null;\r\n    return FragmentBaseDescriptionMetadata;\r\n}(Base));\r\nexport { FragmentBaseDescriptionMetadata };\r\n//# sourceMappingURL=FragmentBaseDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}