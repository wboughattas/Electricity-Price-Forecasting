{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { BaseTransactionService } from \"./BaseTransactionService\";\nimport { List$1 } from \"./List$1\";\nimport { TransactionHistory } from \"./TransactionHistory\";\nimport { Base, fromEnum, markType } from \"./type\";\nimport { Transaction } from \"./Transaction\";\nimport { TransactionCommit } from \"./TransactionCommit\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TransactionState } from \"./TransactionState\";\nimport { TransactionType } from \"./TransactionType\";\nimport { InvalidOperationException } from \"./InvalidOperationException\";\n/**\n * @hidden\n */\n\nvar TransactionService =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TransactionService, _super);\n\n  function TransactionService(a, b, c) {\n    var _this = _super.call(this, a, b, c) || this;\n\n    _this.am = new List$1(Transaction.$, 0);\n    _this.ak = new List$1(TransactionCommit.$, 0);\n    _this.ai = null;\n    _this.an = new List$1(TransactionHistory.$, 0);\n    _this.al = new List$1(TransactionHistory.$, 0);\n    _this.aj = null;\n    _this.aj = c;\n\n    if (_this.aj != null) {\n      _this.ai = new Dictionary$2(Base.$, TransactionState.$, 2, _this.aj);\n    } else {\n      _this.ai = new Dictionary$2(Base.$, TransactionState.$, 0);\n    }\n\n    return _this;\n  }\n\n  TransactionService.prototype.get_l = function () {\n    return true;\n  };\n\n  TransactionService.prototype.set_l = function (a) {\n    _super.prototype.set_l.call(this, a);\n  };\n\n  TransactionService.prototype.get_k = function () {\n    return this.an.count > 0;\n  };\n\n  TransactionService.prototype.get_j = function () {\n    return this.al.count > 0;\n  };\n\n  TransactionService.prototype.af = function (a, b) {\n    var c = null;\n\n    if (a.containsKey(b.id)) {\n      c = a.item(b.id);\n    }\n\n    if (c != null) {\n      switch (b.type) {\n        case TransactionType.Delete:\n          if (c.transactionType == 0) {\n            a.removeItem(b.id);\n          } else if (c.transactionType == 1) {\n            c.value = null;\n            c.transactionType = TransactionType.Delete;\n          }\n\n          break;\n\n        case 1:\n          if (c.transactionType == 0 || c.transactionType == 1) {\n            this.h(c.value, b.value);\n          }\n\n          break;\n      }\n    } else {\n      a.addItem(b.id, new TransactionState(b.id, b.type, this.r(b.value)));\n    }\n  };\n\n  TransactionService.prototype.aq = function (a, b) {\n    var c = null;\n\n    if (a.containsKey(b.id)) {\n      c = a.item(b.id);\n    }\n\n    switch (b.type) {\n      case 0:\n        if (c != null) {\n          throw new InvalidOperationException(1, \"Cannot add this transaction. A transaction with this ID already exists.\");\n        }\n\n        break;\n\n      case 1:\n      case TransactionType.Delete:\n        if (c != null && c.transactionType == TransactionType.Delete) {\n          throw new InvalidOperationException(1, \"Cannot add this transaction. A transaction with this ID has already been deleted.\");\n        }\n\n        break;\n    }\n  };\n\n  TransactionService.prototype.z = function (a, b, c) {\n    _super.prototype.z.call(this, a, b, c);\n\n    switch (a) {\n      case \"IsEnabled\":\n        this.w(true, null);\n        break;\n    }\n  };\n\n  TransactionService.prototype.v = function (a, b) {\n    if (b === void 0) {\n      b = false;\n    }\n\n    var c = this.m || b ? this.o : this.ai;\n    var d = this.m || b ? this.q : this.am;\n    this.aq(c, a);\n    this.af(c, a);\n    d.add(a);\n    a.transactionID = TransactionService.ao++;\n\n    if (!this.m && !b) {\n      var e = new TransactionHistory();\n      e.transactions.add(a);\n      this.an.insert(0, e);\n      this.al.clear();\n      this.aa(3, e);\n    }\n  };\n\n  TransactionService.prototype.w = function (a, b) {\n    if (b === void 0) {\n      b = null;\n    }\n\n    if (b != null) {\n      for (var c = 0; c < this.am.count; c++) {\n        if (this.am._inner[c].id == b) {\n          this.am.removeAt(c);\n          c--;\n        }\n      }\n\n      this.ai.removeItem(b);\n\n      for (var d = 0; d < this.an.count; d++) {\n        for (var e = 0; e < this.an._inner[d].transactions.count; e++) {\n          if (this.an._inner[d].transactions._inner[e].id == b) {\n            this.an._inner[d].transactions.removeAt(e);\n\n            e--;\n          }\n        }\n\n        if (this.an._inner[d].transactions.count == 0) {\n          this.an.removeAt(d);\n          d--;\n        }\n      }\n    } else {\n      if (this.aj != null) {\n        this.ai = new Dictionary$2(Base.$, TransactionState.$, 2, this.aj);\n      } else {\n        this.ai = new Dictionary$2(Base.$, TransactionState.$, 0);\n      }\n\n      this.am.clear();\n      this.an.clear();\n    }\n\n    this.al.clear();\n\n    _super.prototype.w.call(this, a, b);\n  };\n\n  TransactionService.prototype.g = function (a) {\n    var b = this.m ? this.o : this.ai;\n\n    if (b.count > 0 && b.containsKey(a)) {\n      return b.item(a);\n    }\n\n    return null;\n  };\n\n  TransactionService.prototype.ah = function (a) {\n    return _super.prototype.g.call(this, a);\n  };\n\n  TransactionService.prototype.ag = function (a) {\n    for (var b = this.ak.count - 1; b >= 0; b--) {\n      if (this.ak._inner[b].b.containsKey(a)) {\n        return this.ak._inner[b].b.item(a);\n      }\n    }\n\n    return null;\n  };\n\n  TransactionService.prototype.y = function (a) {\n    this.m = false;\n\n    if (a) {\n      var b = new TransactionHistory();\n\n      for (var c = 0; c < this.q.count; c++) {\n        var d = this.q._inner[c];\n        var e = this.o.item(d.id);\n        this.am.add(d);\n        this.af(this.ai, d);\n        b.transactions.add(d);\n      }\n\n      this.an.insert(0, b);\n      this.al.clear();\n    }\n\n    _super.prototype.y.call(this, a);\n  };\n\n  TransactionService.prototype.ap = function (a) {\n    for (var b = 0; b < this.q.count; b++) {\n      var c = this.q._inner[b];\n\n      if (c.transactionID == a) {\n        this.am.add(c);\n        this.af(this.ai, c);\n        this.q.removeAt(b);\n        this.o.clear();\n\n        for (var d = 0; d < this.q.count; d++) {\n          this.af(this.o, this.q._inner[d]);\n        }\n\n        var e = new TransactionHistory();\n        e.transactions.add(c);\n        this.an.insert(0, e);\n        this.al.clear();\n        break;\n      }\n    }\n  };\n\n  TransactionService.prototype.s = function (a, b) {\n    var c = -1;\n\n    if (this.ai.count > 0) {\n      var d = new TransactionCommit();\n      d.id = TransactionService.ao++;\n      d.a = this.a(-1);\n      d.b = this.ai;\n      d.d = -1;\n\n      if (a) {\n        d.d = this.ak.count;\n        this.ak.add(d);\n      } else {\n        this.aa(5, d);\n      }\n\n      c = d.id;\n    }\n\n    this.w(b, null);\n    return c;\n  };\n\n  TransactionService.prototype.u = function (a) {\n    var b = this.e(a);\n\n    if (b != null) {\n      this.aa(5, b);\n      this.ak.removeAt(b.d);\n    }\n  };\n\n  TransactionService.prototype.ac = function (a) {\n    var b = this.e(a);\n\n    if (b != null) {\n      this.ak.removeAt(b.d);\n    }\n  };\n\n  TransactionService.prototype.ae = function () {\n    if (this.k) {\n      var a = this.an._inner[0];\n      this.an.removeAt(0);\n      var b = this.am.count - a.transactions.count;\n      this.am.v(b, a.transactions.count);\n      this.al.insert(0, a);\n      this.ai.clear();\n\n      for (var c = 0; c < this.an.count; c++) {\n        for (var d = 0; d < this.an._inner[c].transactions.count; d++) {\n          this.af(this.ai, this.an._inner[c].transactions._inner[d]);\n        }\n      }\n\n      this.aa(0, a);\n    }\n  };\n\n  TransactionService.prototype.ab = function () {\n    if (this.j) {\n      var a = this.al._inner[0];\n      this.al.removeAt(0);\n\n      for (var b = 0; b < a.transactions.count; b++) {\n        this.af(this.ai, a.transactions._inner[b]);\n        this.am.add(a.transactions._inner[b]);\n      }\n\n      this.an.insert(0, a);\n      this.aa(1, a);\n    }\n  };\n\n  TransactionService.prototype.a = function (a) {\n    var e_1, _a, e_2, _b;\n\n    if (a === void 0) {\n      a = -1;\n    }\n\n    var b = new List$1(TransactionState.$, 0);\n\n    if (a > -1) {\n      var c = this.e(a);\n\n      if (c != null) {\n        try {\n          for (var _c = tslib_1.__values(fromEnum(c.b.values)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var d = _d.value;\n            b.add(d);\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n      }\n    } else {\n      try {\n        for (var _e = tslib_1.__values(fromEnum(this.ai.values)), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var e = _f.value;\n          b.add(e);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    return b.toArray();\n  };\n\n  TransactionService.prototype.e = function (a) {\n    for (var b = 0; b < this.ak.count; b++) {\n      if (this.ak._inner[b].id == a) {\n        return this.ak._inner[b];\n      }\n    }\n\n    return null;\n  };\n\n  TransactionService.prototype.c = function (a) {\n    if (a === void 0) {\n      a = null;\n    }\n\n    if (a != null) {\n      var b = new List$1(Transaction.$, 0);\n\n      for (var c = 0; c < this.q.count; c++) {\n        if (this.q._inner[c].id == a || this.aj.equalsC(this.q._inner[c].id, a)) {\n          b.add(this.q._inner[c]);\n        }\n      }\n\n      return b.toArray();\n    }\n\n    return this.q.toArray();\n  };\n\n  TransactionService.$t = markType(TransactionService, 'TransactionService', BaseTransactionService.$);\n  TransactionService.ao = 0;\n  return TransactionService;\n}(BaseTransactionService);\n\nexport { TransactionService };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TransactionService.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { BaseTransactionService } from \"./BaseTransactionService\";\nimport { List$1 } from \"./List$1\";\nimport { TransactionHistory } from \"./TransactionHistory\";\nimport { Base, fromEnum, markType } from \"./type\";\nimport { Transaction } from \"./Transaction\";\nimport { TransactionCommit } from \"./TransactionCommit\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TransactionState } from \"./TransactionState\";\nimport { TransactionType } from \"./TransactionType\";\nimport { InvalidOperationException } from \"./InvalidOperationException\";\n/**\n * @hidden\n */\nvar TransactionService = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TransactionService, _super);\n    function TransactionService(a, b, c) {\n        var _this = _super.call(this, a, b, c) || this;\n        _this.am = new List$1(Transaction.$, 0);\n        _this.ak = new List$1(TransactionCommit.$, 0);\n        _this.ai = null;\n        _this.an = new List$1(TransactionHistory.$, 0);\n        _this.al = new List$1(TransactionHistory.$, 0);\n        _this.aj = null;\n        _this.aj = c;\n        if (_this.aj != null) {\n            _this.ai = new Dictionary$2(Base.$, TransactionState.$, 2, _this.aj);\n        }\n        else {\n            _this.ai = new Dictionary$2(Base.$, TransactionState.$, 0);\n        }\n        return _this;\n    }\n    TransactionService.prototype.get_l = function () {\n        return true;\n    };\n    TransactionService.prototype.set_l = function (a) {\n        _super.prototype.set_l.call(this, a);\n    };\n    TransactionService.prototype.get_k = function () {\n        return this.an.count > 0;\n    };\n    TransactionService.prototype.get_j = function () {\n        return this.al.count > 0;\n    };\n    TransactionService.prototype.af = function (a, b) {\n        var c = null;\n        if (a.containsKey(b.id)) {\n            c = a.item(b.id);\n        }\n        if (c != null) {\n            switch (b.type) {\n                case TransactionType.Delete:\n                    if (c.transactionType == 0) {\n                        a.removeItem(b.id);\n                    }\n                    else if (c.transactionType == 1) {\n                        c.value = null;\n                        c.transactionType = TransactionType.Delete;\n                    }\n                    break;\n                case 1:\n                    if (c.transactionType == 0 || c.transactionType == 1) {\n                        this.h(c.value, b.value);\n                    }\n                    break;\n            }\n        }\n        else {\n            a.addItem(b.id, new TransactionState(b.id, b.type, this.r(b.value)));\n        }\n    };\n    TransactionService.prototype.aq = function (a, b) {\n        var c = null;\n        if (a.containsKey(b.id)) {\n            c = a.item(b.id);\n        }\n        switch (b.type) {\n            case 0:\n                if (c != null) {\n                    throw new InvalidOperationException(1, \"Cannot add this transaction. A transaction with this ID already exists.\");\n                }\n                break;\n            case 1:\n            case TransactionType.Delete:\n                if (c != null && c.transactionType == TransactionType.Delete) {\n                    throw new InvalidOperationException(1, \"Cannot add this transaction. A transaction with this ID has already been deleted.\");\n                }\n                break;\n        }\n    };\n    TransactionService.prototype.z = function (a, b, c) {\n        _super.prototype.z.call(this, a, b, c);\n        switch (a) {\n            case \"IsEnabled\":\n                this.w(true, null);\n                break;\n        }\n    };\n    TransactionService.prototype.v = function (a, b) {\n        if (b === void 0) {\n            b = false;\n        }\n        var c = (this.m || b) ? this.o : this.ai;\n        var d = (this.m || b) ? this.q : this.am;\n        this.aq(c, a);\n        this.af(c, a);\n        d.add(a);\n        a.transactionID = TransactionService.ao++;\n        if (!this.m && !b) {\n            var e = new TransactionHistory();\n            e.transactions.add(a);\n            this.an.insert(0, e);\n            this.al.clear();\n            this.aa(3, e);\n        }\n    };\n    TransactionService.prototype.w = function (a, b) {\n        if (b === void 0) {\n            b = null;\n        }\n        if (b != null) {\n            for (var c = 0; c < this.am.count; c++) {\n                if (this.am._inner[c].id == b) {\n                    this.am.removeAt(c);\n                    c--;\n                }\n            }\n            this.ai.removeItem(b);\n            for (var d = 0; d < this.an.count; d++) {\n                for (var e = 0; e < this.an._inner[d].transactions.count; e++) {\n                    if (this.an._inner[d].transactions._inner[e].id == b) {\n                        this.an._inner[d].transactions.removeAt(e);\n                        e--;\n                    }\n                }\n                if (this.an._inner[d].transactions.count == 0) {\n                    this.an.removeAt(d);\n                    d--;\n                }\n            }\n        }\n        else {\n            if (this.aj != null) {\n                this.ai = new Dictionary$2(Base.$, TransactionState.$, 2, this.aj);\n            }\n            else {\n                this.ai = new Dictionary$2(Base.$, TransactionState.$, 0);\n            }\n            this.am.clear();\n            this.an.clear();\n        }\n        this.al.clear();\n        _super.prototype.w.call(this, a, b);\n    };\n    TransactionService.prototype.g = function (a) {\n        var b = this.m ? this.o : this.ai;\n        if (b.count > 0 && b.containsKey(a)) {\n            return b.item(a);\n        }\n        return null;\n    };\n    TransactionService.prototype.ah = function (a) {\n        return _super.prototype.g.call(this, a);\n    };\n    TransactionService.prototype.ag = function (a) {\n        for (var b = this.ak.count - 1; b >= 0; b--) {\n            if (this.ak._inner[b].b.containsKey(a)) {\n                return this.ak._inner[b].b.item(a);\n            }\n        }\n        return null;\n    };\n    TransactionService.prototype.y = function (a) {\n        this.m = false;\n        if (a) {\n            var b = new TransactionHistory();\n            for (var c = 0; c < this.q.count; c++) {\n                var d = this.q._inner[c];\n                var e = this.o.item(d.id);\n                this.am.add(d);\n                this.af(this.ai, d);\n                b.transactions.add(d);\n            }\n            this.an.insert(0, b);\n            this.al.clear();\n        }\n        _super.prototype.y.call(this, a);\n    };\n    TransactionService.prototype.ap = function (a) {\n        for (var b = 0; b < this.q.count; b++) {\n            var c = this.q._inner[b];\n            if (c.transactionID == a) {\n                this.am.add(c);\n                this.af(this.ai, c);\n                this.q.removeAt(b);\n                this.o.clear();\n                for (var d = 0; d < this.q.count; d++) {\n                    this.af(this.o, this.q._inner[d]);\n                }\n                var e = new TransactionHistory();\n                e.transactions.add(c);\n                this.an.insert(0, e);\n                this.al.clear();\n                break;\n            }\n        }\n    };\n    TransactionService.prototype.s = function (a, b) {\n        var c = -1;\n        if (this.ai.count > 0) {\n            var d = new TransactionCommit();\n            d.id = TransactionService.ao++;\n            d.a = this.a(-1);\n            d.b = this.ai;\n            d.d = -1;\n            if (a) {\n                d.d = this.ak.count;\n                this.ak.add(d);\n            }\n            else {\n                this.aa(5, d);\n            }\n            c = d.id;\n        }\n        this.w(b, null);\n        return c;\n    };\n    TransactionService.prototype.u = function (a) {\n        var b = this.e(a);\n        if (b != null) {\n            this.aa(5, b);\n            this.ak.removeAt(b.d);\n        }\n    };\n    TransactionService.prototype.ac = function (a) {\n        var b = this.e(a);\n        if (b != null) {\n            this.ak.removeAt(b.d);\n        }\n    };\n    TransactionService.prototype.ae = function () {\n        if (this.k) {\n            var a = this.an._inner[0];\n            this.an.removeAt(0);\n            var b = this.am.count - a.transactions.count;\n            this.am.v(b, a.transactions.count);\n            this.al.insert(0, a);\n            this.ai.clear();\n            for (var c = 0; c < this.an.count; c++) {\n                for (var d = 0; d < this.an._inner[c].transactions.count; d++) {\n                    this.af(this.ai, this.an._inner[c].transactions._inner[d]);\n                }\n            }\n            this.aa(0, a);\n        }\n    };\n    TransactionService.prototype.ab = function () {\n        if (this.j) {\n            var a = this.al._inner[0];\n            this.al.removeAt(0);\n            for (var b = 0; b < a.transactions.count; b++) {\n                this.af(this.ai, a.transactions._inner[b]);\n                this.am.add(a.transactions._inner[b]);\n            }\n            this.an.insert(0, a);\n            this.aa(1, a);\n        }\n    };\n    TransactionService.prototype.a = function (a) {\n        var e_1, _a, e_2, _b;\n        if (a === void 0) {\n            a = -1;\n        }\n        var b = new List$1(TransactionState.$, 0);\n        if (a > -1) {\n            var c = this.e(a);\n            if (c != null) {\n                try {\n                    for (var _c = tslib_1.__values(fromEnum(c.b.values)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var d = _d.value;\n                        b.add(d);\n                    }\n                }\n                catch (e_1_1) {\n                    e_1 = { error: e_1_1 };\n                }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return))\n                            _a.call(_c);\n                    }\n                    finally {\n                        if (e_1)\n                            throw e_1.error;\n                    }\n                }\n            }\n        }\n        else {\n            try {\n                for (var _e = tslib_1.__values(fromEnum(this.ai.values)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var e = _f.value;\n                    b.add(e);\n                }\n            }\n            catch (e_2_1) {\n                e_2 = { error: e_2_1 };\n            }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return))\n                        _b.call(_e);\n                }\n                finally {\n                    if (e_2)\n                        throw e_2.error;\n                }\n            }\n        }\n        return b.toArray();\n    };\n    TransactionService.prototype.e = function (a) {\n        for (var b = 0; b < this.ak.count; b++) {\n            if (this.ak._inner[b].id == a) {\n                return this.ak._inner[b];\n            }\n        }\n        return null;\n    };\n    TransactionService.prototype.c = function (a) {\n        if (a === void 0) {\n            a = null;\n        }\n        if (a != null) {\n            var b = new List$1(Transaction.$, 0);\n            for (var c = 0; c < this.q.count; c++) {\n                if (this.q._inner[c].id == a || this.aj.equalsC(this.q._inner[c].id, a)) {\n                    b.add(this.q._inner[c]);\n                }\n            }\n            return b.toArray();\n        }\n        return this.q.toArray();\n    };\n    TransactionService.$t = markType(TransactionService, 'TransactionService', BaseTransactionService.$);\n    TransactionService.ao = 0;\n    return TransactionService;\n}(BaseTransactionService));\nexport { TransactionService };\n//# sourceMappingURL=TransactionService.js.map\n"]},"metadata":{},"sourceType":"module"}