{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SplineSeriesBaseDescriptionMetadata } from \"./SplineSeriesBaseDescriptionMetadata\";\n/**\r\n * @hidden\r\n */\n\nvar SplineFragmentBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SplineFragmentBaseDescriptionMetadata, _super);\n\n  function SplineFragmentBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SplineFragmentBaseDescriptionMetadata.b = function (a) {\n    if (SplineFragmentBaseDescriptionMetadata.a == null) {\n      SplineFragmentBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      SplineFragmentBaseDescriptionMetadata.c(a, SplineFragmentBaseDescriptionMetadata.a);\n    }\n  };\n\n  SplineFragmentBaseDescriptionMetadata.c = function (a, b) {\n    SplineSeriesBaseDescriptionMetadata.c(a, b);\n  };\n\n  SplineFragmentBaseDescriptionMetadata.d = function (a) {\n    SplineFragmentBaseDescriptionMetadata.b(a);\n    a.m(\"SplineFragmentBase\", SplineFragmentBaseDescriptionMetadata.a);\n  };\n\n  SplineFragmentBaseDescriptionMetadata.$t = markType(SplineFragmentBaseDescriptionMetadata, 'SplineFragmentBaseDescriptionMetadata');\n  SplineFragmentBaseDescriptionMetadata.a = null;\n  return SplineFragmentBaseDescriptionMetadata;\n}(Base);\n\nexport { SplineFragmentBaseDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/SplineFragmentBaseDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mCAAT,QAAoD,uCAApD;AAEA;;AAEG;;AACH,IAAA,qCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2D,EAAA,OAAA,CAAA,SAAA,CAAA,qCAAA,EAAA,MAAA;;AAA3D,WAAA,qCAAA,GAAA;;AAgBC;;AAbe,EAAA,qCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,qCAAqC,CAAC,CAAtC,IAA2C,IAA/C,EAAqD;AACpD,MAAA,qCAAqC,CAAC,CAAtC,GAA0C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA1C;AACA,MAAA,qCAAqC,CAAC,CAAtC,CAAwC,CAAxC,EAA2C,qCAAqC,CAAC,CAAjF;AACA;AACD,GALc;;AAMR,EAAA,qCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC,EAAyC,CAAzC;AACA,GAFM;;AAGA,EAAA,qCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,qCAAqC,CAAC,CAAtC,CAAwC,CAAxC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,oBAAJ,EAA0B,qCAAqC,CAAC,CAAhE;AACA,GAHM;;AAXA,EAAA,qCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,qCAAD,EAAwC,uCAAxC,CAAnB;AACQ,EAAA,qCAAA,CAAA,CAAA,GAAkC,IAAlC;AAchB,SAAA,qCAAA;AAAC,CAhBD,CAA2D,IAA3D,CAAA;;SAAa,qC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { SplineSeriesBaseDescriptionMetadata } from \"./SplineSeriesBaseDescriptionMetadata\";\r\n/**\r\n * @hidden\r\n */\r\nvar SplineFragmentBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(SplineFragmentBaseDescriptionMetadata, _super);\r\n    function SplineFragmentBaseDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SplineFragmentBaseDescriptionMetadata.b = function (a) {\r\n        if (SplineFragmentBaseDescriptionMetadata.a == null) {\r\n            SplineFragmentBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            SplineFragmentBaseDescriptionMetadata.c(a, SplineFragmentBaseDescriptionMetadata.a);\r\n        }\r\n    };\r\n    SplineFragmentBaseDescriptionMetadata.c = function (a, b) {\r\n        SplineSeriesBaseDescriptionMetadata.c(a, b);\r\n    };\r\n    SplineFragmentBaseDescriptionMetadata.d = function (a) {\r\n        SplineFragmentBaseDescriptionMetadata.b(a);\r\n        a.m(\"SplineFragmentBase\", SplineFragmentBaseDescriptionMetadata.a);\r\n    };\r\n    SplineFragmentBaseDescriptionMetadata.$t = markType(SplineFragmentBaseDescriptionMetadata, 'SplineFragmentBaseDescriptionMetadata');\r\n    SplineFragmentBaseDescriptionMetadata.a = null;\r\n    return SplineFragmentBaseDescriptionMetadata;\r\n}(Base));\r\nexport { SplineFragmentBaseDescriptionMetadata };\r\n//# sourceMappingURL=SplineFragmentBaseDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}