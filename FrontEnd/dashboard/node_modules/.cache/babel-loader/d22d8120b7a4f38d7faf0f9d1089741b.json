{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { VerticalAnchoredCategorySeriesDescriptionMetadata } from \"./VerticalAnchoredCategorySeriesDescriptionMetadata\";\nimport { BarSeriesDescription } from \"./BarSeriesDescription\";\n/**\r\n * @hidden\r\n */\n\nvar BarSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(BarSeriesDescriptionMetadata, _super);\n\n  function BarSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  BarSeriesDescriptionMetadata.b = function (a) {\n    if (BarSeriesDescriptionMetadata.a == null) {\n      BarSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      BarSeriesDescriptionMetadata.c(a, BarSeriesDescriptionMetadata.a);\n    }\n  };\n\n  BarSeriesDescriptionMetadata.c = function (a, b) {\n    VerticalAnchoredCategorySeriesDescriptionMetadata.c(a, b);\n    b.item(\"RadiusX\", \"Number:double\");\n    b.item(\"RadiusY\", \"Number:double\");\n  };\n\n  BarSeriesDescriptionMetadata.d = function (a) {\n    BarSeriesDescriptionMetadata.b(a);\n    a.n(\"BarSeries\", function () {\n      return new BarSeriesDescription();\n    });\n    a.m(\"BarSeries\", BarSeriesDescriptionMetadata.a);\n  };\n\n  BarSeriesDescriptionMetadata.$t = markType(BarSeriesDescriptionMetadata, 'BarSeriesDescriptionMetadata');\n  BarSeriesDescriptionMetadata.a = null;\n  return BarSeriesDescriptionMetadata;\n}(Base);\n\nexport { BarSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/BarSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,iDAAT,QAAkE,qDAAlE;AACA,SAAS,oBAAT,QAAqC,wBAArC;AAEA;;AAEG;;AACH,IAAA,4BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkD,EAAA,OAAA,CAAA,SAAA,CAAA,4BAAA,EAAA,MAAA;;AAAlD,WAAA,4BAAA,GAAA;;AAmBC;;AAhBe,EAAA,4BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,4BAA4B,CAAC,CAA7B,IAAkC,IAAtC,EAA4C;AAC3C,MAAA,4BAA4B,CAAC,CAA7B,GAAiC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAjC;AACA,MAAA,4BAA4B,CAAC,CAA7B,CAA+B,CAA/B,EAAkC,4BAA4B,CAAC,CAA/D;AACA;AACD,GALc;;AAMR,EAAA,4BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,iDAAiD,CAAC,CAAlD,CAAoD,CAApD,EAAuD,CAAvD;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,eAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,eAAlB;AACA,GAJM;;AAKA,EAAA,4BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,4BAA4B,CAAC,CAA7B,CAA+B,CAA/B;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,WAAJ,EAAiB,YAAA;AAAM,aAAA,IAAA,oBAAA,EAAA;AAA0B,KAAjD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,WAAJ,EAAiB,4BAA4B,CAAC,CAA9C;AACA,GAJM;;AAbA,EAAA,4BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,4BAAD,EAA+B,8BAA/B,CAAnB;AACQ,EAAA,4BAAA,CAAA,CAAA,GAAkC,IAAlC;AAiBhB,SAAA,4BAAA;AAAC,CAnBD,CAAkD,IAAlD,CAAA;;SAAa,4B","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { VerticalAnchoredCategorySeriesDescriptionMetadata } from \"./VerticalAnchoredCategorySeriesDescriptionMetadata\";\r\nimport { BarSeriesDescription } from \"./BarSeriesDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar BarSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(BarSeriesDescriptionMetadata, _super);\r\n    function BarSeriesDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BarSeriesDescriptionMetadata.b = function (a) {\r\n        if (BarSeriesDescriptionMetadata.a == null) {\r\n            BarSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            BarSeriesDescriptionMetadata.c(a, BarSeriesDescriptionMetadata.a);\r\n        }\r\n    };\r\n    BarSeriesDescriptionMetadata.c = function (a, b) {\r\n        VerticalAnchoredCategorySeriesDescriptionMetadata.c(a, b);\r\n        b.item(\"RadiusX\", \"Number:double\");\r\n        b.item(\"RadiusY\", \"Number:double\");\r\n    };\r\n    BarSeriesDescriptionMetadata.d = function (a) {\r\n        BarSeriesDescriptionMetadata.b(a);\r\n        a.n(\"BarSeries\", function () { return new BarSeriesDescription(); });\r\n        a.m(\"BarSeries\", BarSeriesDescriptionMetadata.a);\r\n    };\r\n    BarSeriesDescriptionMetadata.$t = markType(BarSeriesDescriptionMetadata, 'BarSeriesDescriptionMetadata');\r\n    BarSeriesDescriptionMetadata.a = null;\r\n    return BarSeriesDescriptionMetadata;\r\n}(Base));\r\nexport { BarSeriesDescriptionMetadata };\r\n//# sourceMappingURL=BarSeriesDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}