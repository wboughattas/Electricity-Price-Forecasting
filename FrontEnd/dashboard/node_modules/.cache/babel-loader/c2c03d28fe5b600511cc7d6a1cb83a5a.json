{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { GeometryData } from \"./GeometryData\";\nimport { List$1 } from \"./List$1\";\nimport { PathFigureData } from \"./PathFigureData\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { fromEnum, markType } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar PathGeometryData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PathGeometryData, _super);\n\n  function PathGeometryData() {\n    var _this = _super.call(this) || this;\n\n    _this._figures = null;\n    _this.figures = new List$1(PathFigureData.$, 0);\n    return _this;\n  }\n\n  PathGeometryData.prototype.get_type = function () {\n    return \"Path\";\n  };\n\n  Object.defineProperty(PathGeometryData.prototype, \"type\", {\n    get: function () {\n      return this.get_type();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PathGeometryData.prototype, \"figures\", {\n    get: function () {\n      return this._figures;\n    },\n    set: function (a) {\n      this._figures = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PathGeometryData.prototype.a = function () {\n    var a = new StringBuilder(0);\n    a.u(\"figures: [\");\n\n    for (var b = 0; b < this.figures.count; b++) {\n      if (b != 0) {\n        a.l(\", \");\n      }\n\n      a.l(this.figures._inner[b].serialize());\n    }\n\n    a.u(\"]\");\n    return a.toString();\n  };\n\n  PathGeometryData.prototype.scaleByViewport = function (a) {\n    var e_1, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.figures)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var b = _c.value;\n        b.d(a);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  PathGeometryData.prototype.getPointsOverride = function (a, b) {\n    for (var c = 0; c < this.figures.count; c++) {\n      var d = this.figures._inner[c];\n      d.getPointsOverride(a, b);\n    }\n  };\n\n  PathGeometryData.$t = markType(PathGeometryData, 'PathGeometryData', GeometryData.$);\n  return PathGeometryData;\n}(GeometryData);\n\nexport { PathGeometryData };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PathGeometryData.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,MAAT,QAAuB,UAAvB;AACA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,aAAT,QAA8B,iBAA9B;AACA,SAAmH,QAAnH,EAAmI,QAAnI,QAAmJ,QAAnJ;AAKA;;AAEG;;AACH,IAAA,gBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,OAAA,CAAA,SAAA,CAAA,gBAAA,EAAA,MAAA;;AAErC,WAAA,gBAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAUQ,IAAA,KAAA,CAAA,QAAA,GAAmC,IAAnC;AARP,IAAA,KAAI,CAAC,OAAL,GAAe,IAAI,MAAJ,CAAiC,cAAe,CAAC,CAAjD,EAAoD,CAApD,CAAf;;AACA;;AACS,EAAA,gBAAA,CAAA,SAAA,CAAA,QAAA,GAAV,YAAA;AACC,WAAO,MAAP;AACA,GAFS;;AAGV,EAAA,MAAA,CAAA,cAAA,CAAI,gBAAA,CAAA,SAAJ,EAAI,MAAJ,EAAQ;SAAR,YAAA;AACC,aAAO,KAAK,QAAL,EAAP;AACA,KAFO;oBAAA;;AAAA,GAAR;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,gBAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;SAAX,YAAA;AACC,aAAO,KAAK,QAAZ;AACA,KAFU;SAGX,UAAY,CAAZ,EAAqC;AACpC,WAAK,QAAL,GAAgB,CAAhB;AACA,KALU;oBAAA;;AAAA,GAAX;;AAMU,EAAA,gBAAA,CAAA,SAAA,CAAA,CAAA,GAAV,YAAA;AACC,QAAI,CAAC,GAAG,IAAI,aAAJ,CAAkB,CAAlB,CAAR;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,YAAJ;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,OAAL,CAAa,KAAjC,EAAwC,CAAC,EAAzC,EAA6C;AAC5C,UAAI,CAAC,IAAI,CAAT,EAAY;AACX,QAAA,CAAC,CAAC,CAAF,CAAI,IAAJ;AACA;;AACD,MAAA,CAAC,CAAC,CAAF,CAAI,KAAK,OAAL,CAAa,MAAb,CAAoB,CAApB,EAAuB,SAAvB,EAAJ;AACA;;AACD,IAAA,CAAC,CAAC,CAAF,CAAI,GAAJ;AACA,WAAO,CAAC,CAAC,QAAF,EAAP;AACA,GAXS;;AAYV,EAAA,gBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,CAAhB,EAA2B;;;;AAC1B,WAAc,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,QAAQ,CAAiB,KAAK,OAAtB,CAAR,CAAA,EAAsC,EAAA,GAAA,EAAA,CAAA,IAAA,EAApD,EAAoD,CAAA,EAAA,CAAA,IAApD,EAAoD,EAAA,GAAA,EAAA,CAAA,IAAA,EAApD,EAAsD;AAAjD,YAAI,CAAC,GAAA,EAAA,CAAA,KAAL;AACJ,QAAA,CAAC,CAAC,CAAF,CAAI,CAAJ;AACA;;;;;;;;AACD,O,SACD;AACM,YAAK,GAAL,EACI,MAAK,GAAA,CAAA,KAAL;AACP;AACD;AACD,GAVD;;AA9BO,EAAA,gBAAA,CAAA,SAAA,CAAW,iBAAX,GAAoC,UAAE,CAAF,EAAE,CAAF,EAAE;AAyC9C,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAC,KAAA,OAAA,CAAA,KAAD,EAAC,CAAA,EAAD,EAAC;AA1CqC,UAAY,CA0CjD,GAAA,KAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CA1CqC;AAAzB,MAAA,CAAA,CAAA,iBAAA,CAAgB,CAAhB,EAAgB,CAAhB;;GACL;;;;CADR,C,YAAA,CAAA","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { GeometryData } from \"./GeometryData\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { PathFigureData } from \"./PathFigureData\";\r\nimport { StringBuilder } from \"./StringBuilder\";\r\nimport { fromEnum, markType } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar PathGeometryData = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(PathGeometryData, _super);\r\n    function PathGeometryData() {\r\n        var _this = _super.call(this) || this;\r\n        _this._figures = null;\r\n        _this.figures = new List$1(PathFigureData.$, 0);\r\n        return _this;\r\n    }\r\n    PathGeometryData.prototype.get_type = function () {\r\n        return \"Path\";\r\n    };\r\n    Object.defineProperty(PathGeometryData.prototype, \"type\", {\r\n        get: function () {\r\n            return this.get_type();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PathGeometryData.prototype, \"figures\", {\r\n        get: function () {\r\n            return this._figures;\r\n        },\r\n        set: function (a) {\r\n            this._figures = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PathGeometryData.prototype.a = function () {\r\n        var a = new StringBuilder(0);\r\n        a.u(\"figures: [\");\r\n        for (var b = 0; b < this.figures.count; b++) {\r\n            if (b != 0) {\r\n                a.l(\", \");\r\n            }\r\n            a.l(this.figures._inner[b].serialize());\r\n        }\r\n        a.u(\"]\");\r\n        return a.toString();\r\n    };\r\n    PathGeometryData.prototype.scaleByViewport = function (a) {\r\n        var e_1, _a;\r\n        try {\r\n            for (var _b = tslib_1.__values(fromEnum(this.figures)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var b = _c.value;\r\n                b.d(a);\r\n            }\r\n        }\r\n        catch (e_1_1) {\r\n            e_1 = { error: e_1_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return))\r\n                    _a.call(_b);\r\n            }\r\n            finally {\r\n                if (e_1)\r\n                    throw e_1.error;\r\n            }\r\n        }\r\n    };\r\n    PathGeometryData.prototype.getPointsOverride = function (a, b) {\r\n        for (var c = 0; c < this.figures.count; c++) {\r\n            var d = this.figures._inner[c];\r\n            d.getPointsOverride(a, b);\r\n        }\r\n    };\r\n    PathGeometryData.$t = markType(PathGeometryData, 'PathGeometryData', GeometryData.$);\r\n    return PathGeometryData;\r\n}(GeometryData));\r\nexport { PathGeometryData };\r\n//# sourceMappingURL=PathGeometryData.js.map\r\n"]},"metadata":{},"sourceType":"module"}