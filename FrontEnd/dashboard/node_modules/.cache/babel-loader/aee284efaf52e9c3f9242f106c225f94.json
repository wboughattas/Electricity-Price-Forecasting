{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { CultureInfo } from \"./culture\";\nimport { markEnum, FormatException } from \"./type\";\nimport { stringEscapeRegExp } from \"./string\";\nexport function dateToString(value, provider) {\n  return dateToStringFormat(value, \"s\", provider);\n}\n;\nexport function fromOADate(value) {\n  var days = Math.floor(value);\n  var result = new Date(1899, 11, 30 + days);\n\n  if (value !== days) {\n    result = new Date(+result + Math.round((value - days) * 86400000));\n  }\n\n  return result;\n}\nexport function toOADate(value) {\n  var u1 = Date.UTC(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes(), value.getSeconds(), value.getMilliseconds());\n  var u2 = Date.UTC(1899, 11, 30);\n  return (u1 - u2) / 86400000;\n}\n\nvar IntlCache =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IntlCache() {}\n\n  return IntlCache;\n}();\n\nvar intlCache = /*@__PURE__*/new IntlCache();\nexport function dateToStringFormat(value, format, provider) {\n  var result;\n  provider = provider || CultureInfo.currentCulture; // TODO: Use the provider below\n\n  var mmm = function (value, provider) {\n    // On some browsers, the ja-JP month short formatting seems to not match .NET\"s \"MMM\" formatting\n    var cultureName = provider.name;\n\n    if (cultureName == \"ja-JP\") {\n      if (window.Intl) {\n        if (!intlCache.monthShortJP) {\n          intlCache.monthShortJP = new Intl.DateTimeFormat(\"en-US\", {\n            month: \"numeric\"\n          });\n        }\n\n        result = intlCache.monthShortJP.format(value).replace(/\\u200E/g, \"\");\n      } else {\n        result = value.toLocaleString(\"en-US\", {\n          month: \"numeric\"\n        }).replace(/\\u200E/g, \"\");\n      }\n    } else {\n      if (window.Intl) {\n        if (!intlCache['mmm_' + provider.name]) {\n          intlCache['mmm_' + provider.name] = new Intl.DateTimeFormat(provider.name, {\n            month: \"short\"\n          });\n        }\n\n        result = intlCache['mmm_' + provider.name].format(value).replace(/\\u200E/g, \"\");\n      } else {\n        result = value.toLocaleString(provider.name, {\n          month: \"short\"\n        }).replace(/\\u200E/g, \"\");\n      }\n    }\n\n    if (result.indexOf(\" \") >= 0) {\n      // Date.toLocaleString is not supported fully\n      // TODO: Handle other cultures?\n      return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"][value.getMonth()];\n    }\n\n    return result;\n  };\n\n  var tt = function (value, abbr) {\n    var h = value.getHours();\n    var designator = h <= 11 ? \"AM\" : \"PM\";\n\n    if (window.Intl) {\n      var d = new Date(+value);\n      d.setHours(h, 0, 0, 0);\n      var culture = provider.name; // account for left-to-right marker ie/edge inject\n\n      var r = /\\d|[\\u200E]/g;\n      var withAmPm = applyFormat(\"tt:\" + abbr, {\n        hour12: true,\n        hour: \"2-digit\"\n      }, d).replace(r, \"\");\n      var nonAmPm = applyFormat(\"tt:\" + abbr, {\n        hour12: false,\n        hour: \"2-digit\"\n      }, d).replace(r, \"\");\n      var pattern = stringEscapeRegExp(nonAmPm);\n      var amPm = withAmPm.replace(new RegExp(\"\\\\s*\" + pattern + \"\\\\s*\"), \"\").trim(); // ie & edge will not include the culture's am/pm designator\n      // and they instead include some erroneous extra characters.\n      // if that's the case then we'll just use the previous fallback\n\n      if (amPm.replace(/[.,:;]/g, \"\").length > 0) {\n        designator = amPm;\n      }\n    }\n\n    if (abbr && designator) {\n      designator = designator.charAt(0);\n    }\n\n    return designator;\n  };\n\n  var applyFormat = function (format, options, otherVal) {\n    var val = value;\n\n    if (otherVal) {\n      val = otherVal;\n    }\n\n    if (window.Intl) {\n      if (!intlCache[format + \"_\" + provider.name]) {\n        intlCache[format + \"_\" + provider.name] = new Intl.DateTimeFormat(provider.name, options);\n      }\n\n      var formatter = intlCache[format + \"_\" + provider.name];\n      return formatter.format(val);\n    }\n\n    return val.toLocaleString(provider.name, options);\n  };\n\n  switch (format) {\n    case \"s\":\n      {\n        var s = new Date(Date.UTC(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes(), value.getSeconds())).toISOString();\n        var d = s.lastIndexOf(\".\");\n\n        if (d < 0) {\n          return s;\n        }\n\n        return s.slice(0, d);\n      }\n\n    case \"MMMM\":\n      return applyFormat(format, {\n        month: \"long\"\n      }).replace(/\\u200E/g, \"\");\n\n    case \"ddd\":\n      return applyFormat(format, {\n        weekday: \"short\"\n      }).replace(/\\u200E/g, \"\");\n\n    case \"dddd\":\n      result = applyFormat(format, {\n        weekday: \"long\"\n      }).replace(/\\u200E/g, \"\");\n\n      if (result.indexOf(\" \") >= 0) {\n        // Date.toLocaleString is not supported fully\n        // TODO: Handle other cultures?\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"][value.getDay()];\n      }\n\n      return result;\n\n    case \"%h\":\n      return value.getHours();\n      ;\n\n    case \"%m\":\n      return value.getMinutes();\n\n    case \"%s\":\n      return value.getSeconds();\n\n    case \"%t\":\n      return tt(value, true);\n\n    case \"d\":\n      // short date\n      return applyFormat(format, {});\n\n    case \"D\":\n      // long date\n      return applyFormat(format, {\n        weekday: \"long\",\n        month: \"long\",\n        day: \"numeric\",\n        year: \"numeric\"\n      });\n\n    case \"f\":\n      // full datetime (short time)\n      return applyFormat(format, {\n        weekday: \"long\",\n        month: \"long\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\"\n      });\n\n    case \"F\":\n      // full datetime (long time)\n      return applyFormat(format, {\n        weekday: \"long\",\n        month: \"long\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n      });\n\n    case \"g\":\n      // general (short time)\n      return applyFormat(format, {\n        month: \"numeric\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\"\n      });\n\n    case \"G\":\n      // general (long time)\n      return applyFormat(format, {\n        month: \"numeric\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n      });\n\n    case \"M\": // month/day\n\n    case \"m\":\n      return applyFormat(format, {\n        month: \"long\",\n        day: \"numeric\"\n      });\n\n    case \"t\":\n      // short time\n      return applyFormat(format, {\n        hour: \"numeric\",\n        minute: \"numeric\"\n      });\n\n    case \"T\":\n      // long time\n      return applyFormat(format, {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n      });\n    //return value.toLocaleTimeString();\n\n    case \"Y\": // year/month\n\n    case \"y\":\n      return applyFormat(format, {\n        year: \"numeric\",\n        month: \"long\"\n      });\n  }\n\n  result = format;\n  var year = value.getFullYear().toString();\n  result = result.replace(\"yyyy\", year);\n  result = result.replace(\"yy\", year.substr(-2));\n  result = result.replace(\"MMM\", mmm(value, provider));\n  result = result.replace(\"MM\", (value.getMonth() + 1).toString().replace(/^(\\d)$/, \"0$1\"));\n  result = result.replace(\"dd\", value.getDate().toString().replace(/^(\\d)$/, \"0$1\"));\n  var hours = value.getHours();\n  result = result.replace(\"HH\", hours.toString().replace(/^(\\d)$/, \"0$1\"));\n  result = result.replace(\"hh\", (hours % 12 == 0 ? 12 : hours % 12).toString().replace(/^(\\d)$/, \"0$1\"));\n  result = result.replace(\"tt\", tt(value, false));\n  result = result.replace(\"mm\", value.getMinutes().toString().replace(/^(\\d)$/, \"0$1\"));\n  result = result.replace(\"ss\", value.getSeconds().toString().replace(/^(\\d)$/, \"0$1\"));\n  result = result.replace(\"ff\", Math.round(value.getMilliseconds() / 10).toString().replace(/^(\\d)$/, \"0$1\")); // hundredths of a second\n\n  return result;\n}\nexport function dateTryParse(s, result) {\n  var date = new Date(s);\n\n  if (date == null || isNaN(+date)) {\n    // IE8 does not support this format, so parse it manually\n    var r = /(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}))?/.exec(s);\n\n    if (r) {\n      if (r[4]) {\n        return {\n          p1: new Date(+r[1], +r[2] - 1, +r[3], +r[4], +r[5], +r[6]),\n          ret: true\n        };\n      } else {\n        return {\n          p1: new Date(+r[1], +r[2] - 1, +r[3]),\n          ret: true\n        };\n      }\n    }\n\n    return {\n      p1: null,\n      ret: false\n    };\n  } // TODO: Use the current date separator/date format here here?\n\n\n  if (date.getFullYear() < 1930 && /\\d+\\/\\d+\\/\\d\\d(?!\\d)/.test(s)) {\n    date.setFullYear(date.getFullYear() + 100);\n  }\n\n  return {\n    p1: date,\n    ret: true\n  };\n}\nexport function dateParseExact(s, format, provider) {\n  if (format === void 0) {\n    format = null;\n  }\n\n  if (provider === void 0) {\n    provider = null;\n  } // TODO: Use the format and provider\n\n\n  var r = dateTryParse(s);\n\n  if (!r.ret) {\n    throw new FormatException(1, \"Unknown date format\");\n  }\n\n  return r.p1;\n}\nexport function toLocalTime(value) {\n  // TODO: Implement\n  return value;\n}\nexport function toUniversalTime(value) {\n  // TODO: Implement\n  return value;\n}\n\nvar _requiresISOCorrection = ! /*@__PURE__*/isNaN(+ /*@__PURE__*/new Date(\"2000-01-01T00:00:00\")) &&\n/*@__PURE__*/\n\n/*@__PURE__*/\nnew Date(\"2000-01-01T00:00:00\").getHours() !== 0;\n\nvar _requiresISODateCorrection = ! /*@__PURE__*/isNaN(+ /*@__PURE__*/new Date(\"2000-01-01\")) &&\n/*@__PURE__*/\n\n/*@__PURE__*/\nnew Date(\"2000-01-01\").getHours() !== 0;\n\nexport function dateParse(s, provider) {\n  provider = provider || CultureInfo.currentCulture; // TODO: Use the provider below\n\n  var result;\n  var isoTest = /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2})(?:\\.| )?(\\d*)?/.exec(s);\n\n  if (isoTest) {\n    result = dateParseExact(isoTest[1]);\n\n    if (isoTest[2]) {\n      var ms = Number(\"0.\" + isoTest[2]) * 1000;\n      result = new Date(+result + ms);\n    }\n\n    if (!_requiresISOCorrection) {\n      return result;\n    }\n  } else {\n    result = dateParseExact(s);\n\n    if (!_requiresISODateCorrection) {\n      return result;\n    }\n  }\n\n  return new Date(result.getUTCFullYear(), result.getUTCMonth(), result.getUTCDate(), result.getUTCHours(), result.getUTCMinutes(), result.getUTCSeconds(), result.getUTCMilliseconds());\n}\nvar _longDateFormatOptions = {\n  weekday: \"long\",\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\"\n};\nexport function toLongDateString(value) {\n  return value.toLocaleString(CultureInfo.currentCulture.name, _longDateFormatOptions).replace(/\\u200E/g, \"\");\n}\n\nvar _longTimeFormatOptions;\n\nexport function toLongTimeString(value) {\n  return value.toLocaleString(CultureInfo.currentCulture.name, _longTimeFormatOptions).replace(/\\u200E/g, \"\");\n}\nexport var DayOfWeek = /*@__PURE__*/function (DayOfWeek) {\n  DayOfWeek[DayOfWeek[\"Sunday\"] = 0] = \"Sunday\";\n  DayOfWeek[DayOfWeek[\"Monday\"] = 1] = \"Monday\";\n  DayOfWeek[DayOfWeek[\"Tuesday\"] = 2] = \"Tuesday\";\n  DayOfWeek[DayOfWeek[\"Wednesday\"] = 3] = \"Wednesday\";\n  DayOfWeek[DayOfWeek[\"Thursday\"] = 4] = \"Thursday\";\n  DayOfWeek[DayOfWeek[\"Friday\"] = 5] = \"Friday\";\n  DayOfWeek[DayOfWeek[\"Saturday\"] = 6] = \"Saturday\";\n  return DayOfWeek;\n}({});\nexport var DayOfWeek_$type = /*@__PURE__*/markEnum(\"DayOfWeek\", \"Sunday,0|Monday,1|Tuesday,2|Wednesday,3|Thursday,4|Friday,5|Saturday,6\");","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/dateExtended.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { CultureInfo } from \"./culture\";\nimport { markEnum, FormatException } from \"./type\";\nimport { stringEscapeRegExp } from \"./string\";\nexport function dateToString(value, provider) {\n    return dateToStringFormat(value, \"s\", provider);\n}\n;\nexport function fromOADate(value) {\n    var days = Math.floor(value);\n    var result = new Date(1899, 11, 30 + days);\n    if (value !== days) {\n        result = new Date(+result + Math.round((value - days) * 86400000));\n    }\n    return result;\n}\nexport function toOADate(value) {\n    var u1 = Date.UTC(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes(), value.getSeconds(), value.getMilliseconds());\n    var u2 = Date.UTC(1899, 11, 30);\n    return (u1 - u2) / 86400000;\n}\nvar IntlCache = /** @class */ /*@__PURE__*/ (function () {\n    function IntlCache() {\n    }\n    return IntlCache;\n}());\nvar intlCache = /*@__PURE__*/ new IntlCache();\nexport function dateToStringFormat(value, format, provider) {\n    var result;\n    provider = provider || CultureInfo.currentCulture; // TODO: Use the provider below\n    var mmm = function (value, provider) {\n        // On some browsers, the ja-JP month short formatting seems to not match .NET\"s \"MMM\" formatting\n        var cultureName = provider.name;\n        if (cultureName == \"ja-JP\") {\n            if (window.Intl) {\n                if (!intlCache.monthShortJP) {\n                    intlCache.monthShortJP = new Intl.DateTimeFormat(\"en-US\", { month: \"numeric\" });\n                }\n                result = intlCache.monthShortJP.format(value).replace(/\\u200E/g, \"\");\n            }\n            else {\n                result = value.toLocaleString(\"en-US\", { month: \"numeric\" })\n                    .replace(/\\u200E/g, \"\");\n            }\n        }\n        else {\n            if (window.Intl) {\n                if (!intlCache['mmm_' + provider.name]) {\n                    intlCache['mmm_' + provider.name] = new Intl.DateTimeFormat(provider.name, { month: \"short\" });\n                }\n                result = intlCache['mmm_' + provider.name].format(value)\n                    .replace(/\\u200E/g, \"\");\n            }\n            else {\n                result = value.toLocaleString(provider.name, { month: \"short\" })\n                    .replace(/\\u200E/g, \"\");\n            }\n        }\n        if (result.indexOf(\" \") >= 0) {\n            // Date.toLocaleString is not supported fully\n            // TODO: Handle other cultures?\n            return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n                \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"][value.getMonth()];\n        }\n        return result;\n    };\n    var tt = function (value, abbr) {\n        var h = value.getHours();\n        var designator = h <= 11 ? \"AM\" : \"PM\";\n        if (window.Intl) {\n            var d = new Date(+value);\n            d.setHours(h, 0, 0, 0);\n            var culture = provider.name;\n            // account for left-to-right marker ie/edge inject\n            var r = /\\d|[\\u200E]/g;\n            var withAmPm = applyFormat(\"tt:\" + abbr, { hour12: true, hour: \"2-digit\" }, d)\n                .replace(r, \"\");\n            var nonAmPm = applyFormat(\"tt:\" + abbr, { hour12: false, hour: \"2-digit\" }, d)\n                .replace(r, \"\");\n            var pattern = stringEscapeRegExp(nonAmPm);\n            var amPm = withAmPm.replace(new RegExp(\"\\\\s*\" + pattern + \"\\\\s*\"), \"\").trim();\n            // ie & edge will not include the culture's am/pm designator\n            // and they instead include some erroneous extra characters.\n            // if that's the case then we'll just use the previous fallback\n            if (amPm.replace(/[.,:;]/g, \"\").length > 0) {\n                designator = amPm;\n            }\n        }\n        if (abbr && designator) {\n            designator = designator.charAt(0);\n        }\n        return designator;\n    };\n    var applyFormat = function (format, options, otherVal) {\n        var val = value;\n        if (otherVal) {\n            val = otherVal;\n        }\n        if (window.Intl) {\n            if (!intlCache[format + \"_\" + provider.name]) {\n                intlCache[format + \"_\" + provider.name] = new Intl.DateTimeFormat(provider.name, options);\n            }\n            var formatter = intlCache[format + \"_\" + provider.name];\n            return formatter.format(val);\n        }\n        return val.toLocaleString(provider.name, options);\n    };\n    switch (format) {\n        case \"s\":\n            {\n                var s = new Date(Date.UTC(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes(), value.getSeconds())).toISOString();\n                var d = s.lastIndexOf(\".\");\n                if (d < 0) {\n                    return s;\n                }\n                return s.slice(0, d);\n            }\n        case \"MMMM\":\n            return applyFormat(format, { month: \"long\" })\n                .replace(/\\u200E/g, \"\");\n        case \"ddd\":\n            return applyFormat(format, { weekday: \"short\" })\n                .replace(/\\u200E/g, \"\");\n        case \"dddd\":\n            result = applyFormat(format, { weekday: \"long\" })\n                .replace(/\\u200E/g, \"\");\n            if (result.indexOf(\" \") >= 0) {\n                // Date.toLocaleString is not supported fully\n                // TODO: Handle other cultures?\n                return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n                    \"Thursday\", \"Friday\", \"Saturday\"][value.getDay()];\n            }\n            return result;\n        case \"%h\":\n            return value.getHours();\n            ;\n        case \"%m\":\n            return value.getMinutes();\n        case \"%s\":\n            return value.getSeconds();\n        case \"%t\":\n            return tt(value, true);\n        case \"d\": // short date\n            return applyFormat(format, {});\n        case \"D\": // long date\n            return applyFormat(format, { weekday: \"long\", month: \"long\", day: \"numeric\", year: \"numeric\" });\n        case \"f\": // full datetime (short time)\n            return applyFormat(format, {\n                weekday: \"long\", month: \"long\", day: \"numeric\", year: \"numeric\",\n                hour: \"numeric\", minute: \"numeric\"\n            });\n        case \"F\": // full datetime (long time)\n            return applyFormat(format, {\n                weekday: \"long\", month: \"long\", day: \"numeric\", year: \"numeric\",\n                hour: \"numeric\", minute: \"numeric\", second: \"numeric\"\n            });\n        case \"g\": // general (short time)\n            return applyFormat(format, {\n                month: \"numeric\", day: \"numeric\", year: \"numeric\",\n                hour: \"numeric\", minute: \"numeric\"\n            });\n        case \"G\": // general (long time)\n            return applyFormat(format, {\n                month: \"numeric\", day: \"numeric\", year: \"numeric\",\n                hour: \"numeric\", minute: \"numeric\", second: \"numeric\"\n            });\n        case \"M\": // month/day\n        case \"m\":\n            return applyFormat(format, { month: \"long\", day: \"numeric\" });\n        case \"t\": // short time\n            return applyFormat(format, { hour: \"numeric\", minute: \"numeric\" });\n        case \"T\": // long time\n            return applyFormat(format, { hour: \"numeric\", minute: \"numeric\", second: \"numeric\" });\n        //return value.toLocaleTimeString();\n        case \"Y\": // year/month\n        case \"y\":\n            return applyFormat(format, { year: \"numeric\", month: \"long\" });\n    }\n    result = format;\n    var year = value.getFullYear().toString();\n    result = result.replace(\"yyyy\", year);\n    result = result.replace(\"yy\", year.substr(-2));\n    result = result.replace(\"MMM\", mmm(value, provider));\n    result = result.replace(\"MM\", (value.getMonth() + 1).toString().replace(/^(\\d)$/, \"0$1\"));\n    result = result.replace(\"dd\", value.getDate().toString().replace(/^(\\d)$/, \"0$1\"));\n    var hours = value.getHours();\n    result = result.replace(\"HH\", hours.toString().replace(/^(\\d)$/, \"0$1\"));\n    result = result.replace(\"hh\", (hours % 12 == 0 ? 12 : hours % 12).toString().replace(/^(\\d)$/, \"0$1\"));\n    result = result.replace(\"tt\", tt(value, false));\n    result = result.replace(\"mm\", value.getMinutes().toString().replace(/^(\\d)$/, \"0$1\"));\n    result = result.replace(\"ss\", value.getSeconds().toString().replace(/^(\\d)$/, \"0$1\"));\n    result = result.replace(\"ff\", Math.round(value.getMilliseconds() / 10).toString().replace(/^(\\d)$/, \"0$1\")); // hundredths of a second\n    return result;\n}\nexport function dateTryParse(s, result) {\n    var date = new Date(s);\n    if (date == null || isNaN(+date)) {\n        // IE8 does not support this format, so parse it manually\n        var r = /(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}):(\\d{2}):(\\d{2}))?/.exec(s);\n        if (r) {\n            if (r[4]) {\n                return {\n                    p1: new Date(+r[1], +r[2] - 1, +r[3], +r[4], +r[5], +r[6]), ret: true\n                };\n            }\n            else {\n                return { p1: new Date(+r[1], +r[2] - 1, +r[3]), ret: true };\n            }\n        }\n        return { p1: null, ret: false };\n    }\n    // TODO: Use the current date separator/date format here here?\n    if (date.getFullYear() < 1930 && /\\d+\\/\\d+\\/\\d\\d(?!\\d)/.test(s)) {\n        date.setFullYear(date.getFullYear() + 100);\n    }\n    return { p1: date, ret: true };\n}\nexport function dateParseExact(s, format, provider) {\n    if (format === void 0) {\n        format = null;\n    }\n    if (provider === void 0) {\n        provider = null;\n    }\n    // TODO: Use the format and provider\n    var r = dateTryParse(s);\n    if (!r.ret) {\n        throw new FormatException(1, \"Unknown date format\");\n    }\n    return r.p1;\n}\nexport function toLocalTime(value) {\n    // TODO: Implement\n    return value;\n}\nexport function toUniversalTime(value) {\n    // TODO: Implement\n    return value;\n}\nvar _requiresISOCorrection = !/*@__PURE__*/ isNaN(+/*@__PURE__*/ new Date(\"2000-01-01T00:00:00\")) &&\n    /*@__PURE__*/ /*@__PURE__*/ new Date(\"2000-01-01T00:00:00\").getHours() !== 0;\nvar _requiresISODateCorrection = !/*@__PURE__*/ isNaN(+/*@__PURE__*/ new Date(\"2000-01-01\")) &&\n    /*@__PURE__*/ /*@__PURE__*/ new Date(\"2000-01-01\").getHours() !== 0;\nexport function dateParse(s, provider) {\n    provider = provider || CultureInfo.currentCulture; // TODO: Use the provider below\n    var result;\n    var isoTest = /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2})(?:\\.| )?(\\d*)?/.exec(s);\n    if (isoTest) {\n        result = dateParseExact(isoTest[1]);\n        if (isoTest[2]) {\n            var ms = Number(\"0.\" + isoTest[2]) * 1000;\n            result = new Date(+result + ms);\n        }\n        if (!_requiresISOCorrection) {\n            return result;\n        }\n    }\n    else {\n        result = dateParseExact(s);\n        if (!_requiresISODateCorrection) {\n            return result;\n        }\n    }\n    return new Date(result.getUTCFullYear(), result.getUTCMonth(), result.getUTCDate(), result.getUTCHours(), result.getUTCMinutes(), result.getUTCSeconds(), result.getUTCMilliseconds());\n}\nvar _longDateFormatOptions = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n};\nexport function toLongDateString(value) {\n    return value.toLocaleString(CultureInfo.currentCulture.name, _longDateFormatOptions).replace(/\\u200E/g, \"\");\n}\nvar _longTimeFormatOptions;\nexport function toLongTimeString(value) {\n    return value.toLocaleString(CultureInfo.currentCulture.name, _longTimeFormatOptions).replace(/\\u200E/g, \"\");\n}\nexport var DayOfWeek = /*@__PURE__*/ (function (DayOfWeek) {\n    DayOfWeek[DayOfWeek[\"Sunday\"] = 0] = \"Sunday\";\n    DayOfWeek[DayOfWeek[\"Monday\"] = 1] = \"Monday\";\n    DayOfWeek[DayOfWeek[\"Tuesday\"] = 2] = \"Tuesday\";\n    DayOfWeek[DayOfWeek[\"Wednesday\"] = 3] = \"Wednesday\";\n    DayOfWeek[DayOfWeek[\"Thursday\"] = 4] = \"Thursday\";\n    DayOfWeek[DayOfWeek[\"Friday\"] = 5] = \"Friday\";\n    DayOfWeek[DayOfWeek[\"Saturday\"] = 6] = \"Saturday\";\n    return DayOfWeek;\n})({});\nexport var DayOfWeek_$type = /*@__PURE__*/ markEnum(\"DayOfWeek\", \"Sunday,0|Monday,1|Tuesday,2|Wednesday,3|Thursday,4|Friday,5|Saturday,6\");\n//# sourceMappingURL=dateExtended.js.map\n"]},"metadata":{},"sourceType":"module"}