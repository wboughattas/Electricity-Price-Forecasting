{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport { markEnum } from \"./type\";\n/**\r\n * Identifies the operator type of an operator filter expression.\r\n */\n\nexport var FilterExpressionOperatorType = /*@__PURE__*/function (FilterExpressionOperatorType) {\n  /**\r\n   * No operator type specified.\r\n   */\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"None\"] = 0] = \"None\";\n  /**\r\n   * Determines if two expressions are equal.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"Equal\"] = 1] = \"Equal\";\n  /**\r\n   * Determines if two expressions are not equal.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"NotEqual\"] = 2] = \"NotEqual\";\n  /**\r\n   * Determines if an expression is greater than another.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"GreaterThan\"] = 3] = \"GreaterThan\";\n  /**\r\n   * Determines if an expression is greater than or equal to another.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"GreaterThanOrEqual\"] = 4] = \"GreaterThanOrEqual\";\n  /**\r\n   * Determines if an expression is less than another.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"LessThan\"] = 5] = \"LessThan\";\n  /**\r\n   * Determines if an expression is less than or equal to another.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"LessThanOrEqual\"] = 6] = \"LessThanOrEqual\";\n  /**\r\n   * Applies the And operator to two expressions.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"And\"] = 7] = \"And\";\n  /**\r\n   * Applies the Or operator to two expressions.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"Or\"] = 8] = \"Or\";\n  /**\r\n   * Applies the Not operator to a single expression.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"Not\"] = 9] = \"Not\";\n  /**\r\n   * Adds two expressions.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"Add\"] = 10] = \"Add\";\n  /**\r\n   * Subtracts one expression from another.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"Subtract\"] = 11] = \"Subtract\";\n  /**\r\n   * Multiplies two expressions.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"Multiply\"] = 12] = \"Multiply\";\n  /**\r\n   * Divides one expression by another.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"Divide\"] = 13] = \"Divide\";\n  /**\r\n   * Performs the modulus of one expression by another.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"Modulo\"] = 14] = \"Modulo\";\n  /**\r\n   * Groups an expression.\r\n   */\n\n  FilterExpressionOperatorType[FilterExpressionOperatorType[\"Grouping\"] = 15] = \"Grouping\";\n  return FilterExpressionOperatorType;\n}({});\n/**\r\n * @hidden\r\n */\n\nexport var FilterExpressionOperatorType_$type = /*@__PURE__*/markEnum('FilterExpressionOperatorType', 'None,0|Equal,1|NotEqual,2|GreaterThan,3|GreaterThanOrEqual,4|LessThan,5|LessThanOrEqual,6|And,7|Or,8|Not,9|Add,10|Subtract,11|Multiply,12|Divide,13|Modulo,14|Grouping,15');","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FilterExpressionOperatorType.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;AAEF,SAA0B,QAA1B,QAAgD,QAAhD;AAEA;;AAEG;;AACH,OAAA,IAAY,4BAiEX,GAAA,aAAA,UAAA,4BAAA,EAAA;AAjED;AACC;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,oBAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,iBAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,KAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,GAAA,UAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,GAAA,UAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,GAAA,UAAA;AACH,SAAA,4BAAA;AACA,CAAA,CAjEW,EAiEX,CAjED;AAmEA;;AAEG;;AACH,OAAO,IAAI,kCAAkC,GAAG,aAAS,QAAA,CAAA,8BAAA,EAAgC,2KAAhC,CAAlD","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport { markEnum } from \"./type\";\r\n/**\r\n * Identifies the operator type of an operator filter expression.\r\n */\r\nexport var FilterExpressionOperatorType = /*@__PURE__*/ (function (FilterExpressionOperatorType) {\r\n    /**\r\n     * No operator type specified.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Determines if two expressions are equal.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"Equal\"] = 1] = \"Equal\";\r\n    /**\r\n     * Determines if two expressions are not equal.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"NotEqual\"] = 2] = \"NotEqual\";\r\n    /**\r\n     * Determines if an expression is greater than another.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"GreaterThan\"] = 3] = \"GreaterThan\";\r\n    /**\r\n     * Determines if an expression is greater than or equal to another.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"GreaterThanOrEqual\"] = 4] = \"GreaterThanOrEqual\";\r\n    /**\r\n     * Determines if an expression is less than another.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"LessThan\"] = 5] = \"LessThan\";\r\n    /**\r\n     * Determines if an expression is less than or equal to another.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"LessThanOrEqual\"] = 6] = \"LessThanOrEqual\";\r\n    /**\r\n     * Applies the And operator to two expressions.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"And\"] = 7] = \"And\";\r\n    /**\r\n     * Applies the Or operator to two expressions.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"Or\"] = 8] = \"Or\";\r\n    /**\r\n     * Applies the Not operator to a single expression.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"Not\"] = 9] = \"Not\";\r\n    /**\r\n     * Adds two expressions.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"Add\"] = 10] = \"Add\";\r\n    /**\r\n     * Subtracts one expression from another.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"Subtract\"] = 11] = \"Subtract\";\r\n    /**\r\n     * Multiplies two expressions.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"Multiply\"] = 12] = \"Multiply\";\r\n    /**\r\n     * Divides one expression by another.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"Divide\"] = 13] = \"Divide\";\r\n    /**\r\n     * Performs the modulus of one expression by another.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"Modulo\"] = 14] = \"Modulo\";\r\n    /**\r\n     * Groups an expression.\r\n     */\r\n    FilterExpressionOperatorType[FilterExpressionOperatorType[\"Grouping\"] = 15] = \"Grouping\";\r\n    return FilterExpressionOperatorType;\r\n})({});\r\n/**\r\n * @hidden\r\n */\r\nexport var FilterExpressionOperatorType_$type = /*@__PURE__*/ markEnum('FilterExpressionOperatorType', 'None,0|Equal,1|NotEqual,2|GreaterThan,3|GreaterThanOrEqual,4|LessThan,5|LessThanOrEqual,6|And,7|Or,8|Not,9|Add,10|Subtract,11|Multiply,12|Divide,13|Modulo,14|Grouping,15');\r\n//# sourceMappingURL=FilterExpressionOperatorType.js.map\r\n"]},"metadata":{},"sourceType":"module"}