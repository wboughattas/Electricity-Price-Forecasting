{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { CellInfoDescriptionMetadata } from \"./CellInfoDescriptionMetadata\";\nimport { ImageCellInfoDescription } from \"./ImageCellInfoDescription\";\n/**\r\n * @hidden\r\n */\n\nvar ImageCellInfoDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ImageCellInfoDescriptionMetadata, _super);\n\n  function ImageCellInfoDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ImageCellInfoDescriptionMetadata.b = function (a) {\n    if (ImageCellInfoDescriptionMetadata.a == null) {\n      ImageCellInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ImageCellInfoDescriptionMetadata.c(a, ImageCellInfoDescriptionMetadata.a);\n    }\n  };\n\n  ImageCellInfoDescriptionMetadata.c = function (a, b) {\n    CellInfoDescriptionMetadata.c(a, b);\n    b.item(\"ImagePath\", \"String\");\n    b.item(\"ImageStretchOption\", \"ExportedType:string:ImageStretchOptions\");\n    b.item(\"ImageResourceType\", \"ExportedType:string:ImageResourceType\");\n  };\n\n  ImageCellInfoDescriptionMetadata.d = function (a) {\n    ImageCellInfoDescriptionMetadata.b(a);\n    a.n(\"ImageCellInfo\", function () {\n      return new ImageCellInfoDescription();\n    });\n    a.m(\"ImageCellInfo\", ImageCellInfoDescriptionMetadata.a);\n  };\n\n  ImageCellInfoDescriptionMetadata.$t = markType(ImageCellInfoDescriptionMetadata, 'ImageCellInfoDescriptionMetadata');\n  ImageCellInfoDescriptionMetadata.a = null;\n  return ImageCellInfoDescriptionMetadata;\n}(Base);\n\nexport { ImageCellInfoDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ImageCellInfoDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,2BAAT,QAA4C,+BAA5C;AACA,SAAS,wBAAT,QAAyC,4BAAzC;AAEA;;AAEG;;AACH,IAAA,gCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,OAAA,CAAA,SAAA,CAAA,gCAAA,EAAA,MAAA;;AAAtD,WAAA,gCAAA,GAAA;;AAoBC;;AAjBe,EAAA,gCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,gCAAgC,CAAC,CAAjC,IAAsC,IAA1C,EAAgD;AAC/C,MAAA,gCAAgC,CAAC,CAAjC,GAAqC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAArC;AACA,MAAA,gCAAgC,CAAC,CAAjC,CAAmC,CAAnC,EAAsC,gCAAgC,CAAC,CAAvE;AACA;AACD,GALc;;AAMR,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,2BAA2B,CAAC,CAA5B,CAA8B,CAA9B,EAAiC,CAAjC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,QAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,yCAA7B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,uCAA5B;AACA,GALM;;AAMA,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,gCAAgC,CAAC,CAAjC,CAAmC,CAAnC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,YAAA;AAAM,aAAA,IAAA,wBAAA,EAAA;AAA8B,KAAzD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,gCAAgC,CAAC,CAAtD;AACA,GAJM;;AAdA,EAAA,gCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,gCAAD,EAAmC,kCAAnC,CAAnB;AACQ,EAAA,gCAAA,CAAA,CAAA,GAAkC,IAAlC;AAkBhB,SAAA,gCAAA;AAAC,CApBD,CAAsD,IAAtD,CAAA;;SAAa,gC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { CellInfoDescriptionMetadata } from \"./CellInfoDescriptionMetadata\";\r\nimport { ImageCellInfoDescription } from \"./ImageCellInfoDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar ImageCellInfoDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(ImageCellInfoDescriptionMetadata, _super);\r\n    function ImageCellInfoDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ImageCellInfoDescriptionMetadata.b = function (a) {\r\n        if (ImageCellInfoDescriptionMetadata.a == null) {\r\n            ImageCellInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            ImageCellInfoDescriptionMetadata.c(a, ImageCellInfoDescriptionMetadata.a);\r\n        }\r\n    };\r\n    ImageCellInfoDescriptionMetadata.c = function (a, b) {\r\n        CellInfoDescriptionMetadata.c(a, b);\r\n        b.item(\"ImagePath\", \"String\");\r\n        b.item(\"ImageStretchOption\", \"ExportedType:string:ImageStretchOptions\");\r\n        b.item(\"ImageResourceType\", \"ExportedType:string:ImageResourceType\");\r\n    };\r\n    ImageCellInfoDescriptionMetadata.d = function (a) {\r\n        ImageCellInfoDescriptionMetadata.b(a);\r\n        a.n(\"ImageCellInfo\", function () { return new ImageCellInfoDescription(); });\r\n        a.m(\"ImageCellInfo\", ImageCellInfoDescriptionMetadata.a);\r\n    };\r\n    ImageCellInfoDescriptionMetadata.$t = markType(ImageCellInfoDescriptionMetadata, 'ImageCellInfoDescriptionMetadata');\r\n    ImageCellInfoDescriptionMetadata.a = null;\r\n    return ImageCellInfoDescriptionMetadata;\r\n}(Base));\r\nexport { ImageCellInfoDescriptionMetadata };\r\n//# sourceMappingURL=ImageCellInfoDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}