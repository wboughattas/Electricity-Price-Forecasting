{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar PolygonUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolygonUtil, _super);\n\n  function PolygonUtil() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PolygonUtil.a = function (a, b) {\n    if (a == null) {\n      return false;\n    }\n\n    var c = a.count;\n\n    if (c < 4) {\n      return false;\n    }\n\n    var d = false;\n\n    for (var e = 0, f = c - 1; e < c; f = e++) {\n      if (a.item(e).y > b.y != a.item(f).y > b.y && b.x < (a.item(f).x - a.item(e).x) * (b.y - a.item(e).y) / (a.item(f).y - a.item(e).y) + a.item(e).x) {\n        d = !d;\n      }\n    }\n\n    return d;\n  };\n\n  PolygonUtil.$t = markType(PolygonUtil, 'PolygonUtil');\n  return PolygonUtil;\n}(Base);\n\nexport { PolygonUtil };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PolygonUtil.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAwF,QAAxF,QAAwG,QAAxG;AAEA;;AAEG;;AACH,IAAA,WAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,EAAA,MAAA;;AAAjC,WAAA,WAAA,GAAA;;AAkBC;;AAhBO,EAAA,WAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAA4B,CAA5B,EAAoC;AACnC,QAAI,CAAC,IAAI,IAAT,EAAe;AACd,aAAO,KAAP;AACA;;AACD,QAAI,CAAC,GAAW,CAAC,CAAC,KAAlB;;AACA,QAAI,CAAC,GAAG,CAAR,EAAW;AACV,aAAO,KAAP;AACA;;AACD,QAAI,CAAC,GAAY,KAAjB;;AACA,SAAK,IAAI,CAAC,GAAW,CAAhB,EAAmB,CAAC,GAAW,CAAC,GAAG,CAAxC,EAA2C,CAAC,GAAG,CAA/C,EAAkD,CAAC,GAAG,CAAC,EAAvD,EAA2D;AAC1D,UAAM,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAAV,GAAc,CAAC,CAAC,CAAjB,IAAwB,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAAV,GAAc,CAAC,CAAC,CAAzC,IAAiD,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAAV,GAAc,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAAzB,KAA+B,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAA/C,KAAqD,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAAV,GAAc,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAA7E,IAAkF,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAAvJ,EAA2J;AAC1J,QAAA,CAAC,GAAG,CAAC,CAAL;AACA;AACD;;AACD,WAAO,CAAP;AACA,GAfM;;AADA,EAAA,WAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,WAAD,EAAc,aAAd,CAAnB;AAiBR,SAAA,WAAA;AAAC,CAlBD,CAAiC,IAAjC,CAAA;;SAAa,W","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\nvar PolygonUtil = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolygonUtil, _super);\n    function PolygonUtil() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PolygonUtil.a = function (a, b) {\n        if (a == null) {\n            return false;\n        }\n        var c = a.count;\n        if (c < 4) {\n            return false;\n        }\n        var d = false;\n        for (var e = 0, f = c - 1; e < c; f = e++) {\n            if (((a.item(e).y > b.y) != (a.item(f).y > b.y)) && (b.x < (a.item(f).x - a.item(e).x) * (b.y - a.item(e).y) / (a.item(f).y - a.item(e).y) + a.item(e).x)) {\n                d = !d;\n            }\n        }\n        return d;\n    };\n    PolygonUtil.$t = markType(PolygonUtil, 'PolygonUtil');\n    return PolygonUtil;\n}(Base));\nexport { PolygonUtil };\n//# sourceMappingURL=PolygonUtil.js.map\n"]},"metadata":{},"sourceType":"module"}