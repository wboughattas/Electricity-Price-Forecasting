{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ShapeDataSourceDescriptionMetadata } from \"./ShapeDataSourceDescriptionMetadata\";\nimport { GeographicMapSeriesHostDescriptionMetadata } from \"./GeographicMapSeriesHostDescriptionMetadata\";\n/**\r\n * @hidden\r\n */\n\nvar GeographicShapeSeriesBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(GeographicShapeSeriesBaseDescriptionMetadata, _super);\n\n  function GeographicShapeSeriesBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GeographicShapeSeriesBaseDescriptionMetadata.b = function (a) {\n    if (GeographicShapeSeriesBaseDescriptionMetadata.a == null) {\n      GeographicShapeSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GeographicShapeSeriesBaseDescriptionMetadata.c(a, GeographicShapeSeriesBaseDescriptionMetadata.a);\n      ShapeDataSourceDescriptionMetadata.d(a);\n    }\n  };\n\n  GeographicShapeSeriesBaseDescriptionMetadata.c = function (a, b) {\n    GeographicMapSeriesHostDescriptionMetadata.c(a, b);\n    b.item(\"ShapeMemberPath\", \"String\");\n    b.item(\"ShapefileDataSource\", \"ExportedType:ShapefileConverter\");\n    b.item(\"ShapeFilterResolution\", \"Number:double\");\n  };\n\n  GeographicShapeSeriesBaseDescriptionMetadata.d = function (a) {\n    GeographicShapeSeriesBaseDescriptionMetadata.b(a);\n    a.m(\"GeographicShapeSeriesBase\", GeographicShapeSeriesBaseDescriptionMetadata.a);\n  };\n\n  GeographicShapeSeriesBaseDescriptionMetadata.$t = markType(GeographicShapeSeriesBaseDescriptionMetadata, 'GeographicShapeSeriesBaseDescriptionMetadata');\n  GeographicShapeSeriesBaseDescriptionMetadata.a = null;\n  return GeographicShapeSeriesBaseDescriptionMetadata;\n}(Base);\n\nexport { GeographicShapeSeriesBaseDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/GeographicShapeSeriesBaseDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,kCAAT,QAAmD,sCAAnD;AACA,SAAS,0CAAT,QAA2D,8CAA3D;AAEA;;AAEG;;AACH,IAAA,4CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkE,EAAA,OAAA,CAAA,SAAA,CAAA,4CAAA,EAAA,MAAA;;AAAlE,WAAA,4CAAA,GAAA;;AAoBC;;AAjBe,EAAA,4CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,4CAA4C,CAAC,CAA7C,IAAkD,IAAtD,EAA4D;AAC3D,MAAA,4CAA4C,CAAC,CAA7C,GAAiD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAjD;AACA,MAAA,4CAA4C,CAAC,CAA7C,CAA+C,CAA/C,EAAkD,4CAA4C,CAAC,CAA/F;AACA,MAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC;AACA;AACD,GANc;;AAOR,EAAA,4CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,0CAA0C,CAAC,CAA3C,CAA6C,CAA7C,EAAgD,CAAhD;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,QAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,qBAAP,EAA8B,iCAA9B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,uBAAP,EAAgC,eAAhC;AACA,GALM;;AAMA,EAAA,4CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,4CAA4C,CAAC,CAA7C,CAA+C,CAA/C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,2BAAJ,EAAiC,4CAA4C,CAAC,CAA9E;AACA,GAHM;;AAfA,EAAA,4CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,4CAAD,EAA+C,8CAA/C,CAAnB;AACQ,EAAA,4CAAA,CAAA,CAAA,GAAkC,IAAlC;AAkBhB,SAAA,4CAAA;AAAC,CApBD,CAAkE,IAAlE,CAAA;;SAAa,4C","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { ShapeDataSourceDescriptionMetadata } from \"./ShapeDataSourceDescriptionMetadata\";\r\nimport { GeographicMapSeriesHostDescriptionMetadata } from \"./GeographicMapSeriesHostDescriptionMetadata\";\r\n/**\r\n * @hidden\r\n */\r\nvar GeographicShapeSeriesBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(GeographicShapeSeriesBaseDescriptionMetadata, _super);\r\n    function GeographicShapeSeriesBaseDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    GeographicShapeSeriesBaseDescriptionMetadata.b = function (a) {\r\n        if (GeographicShapeSeriesBaseDescriptionMetadata.a == null) {\r\n            GeographicShapeSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            GeographicShapeSeriesBaseDescriptionMetadata.c(a, GeographicShapeSeriesBaseDescriptionMetadata.a);\r\n            ShapeDataSourceDescriptionMetadata.d(a);\r\n        }\r\n    };\r\n    GeographicShapeSeriesBaseDescriptionMetadata.c = function (a, b) {\r\n        GeographicMapSeriesHostDescriptionMetadata.c(a, b);\r\n        b.item(\"ShapeMemberPath\", \"String\");\r\n        b.item(\"ShapefileDataSource\", \"ExportedType:ShapefileConverter\");\r\n        b.item(\"ShapeFilterResolution\", \"Number:double\");\r\n    };\r\n    GeographicShapeSeriesBaseDescriptionMetadata.d = function (a) {\r\n        GeographicShapeSeriesBaseDescriptionMetadata.b(a);\r\n        a.m(\"GeographicShapeSeriesBase\", GeographicShapeSeriesBaseDescriptionMetadata.a);\r\n    };\r\n    GeographicShapeSeriesBaseDescriptionMetadata.$t = markType(GeographicShapeSeriesBaseDescriptionMetadata, 'GeographicShapeSeriesBaseDescriptionMetadata');\r\n    GeographicShapeSeriesBaseDescriptionMetadata.a = null;\r\n    return GeographicShapeSeriesBaseDescriptionMetadata;\r\n}(Base));\r\nexport { GeographicShapeSeriesBaseDescriptionMetadata };\r\n//# sourceMappingURL=GeographicShapeSeriesBaseDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}