{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, PropertyChangedEventArgs, runOn, delegateCombine, typeCast, fromEnum, String_$type, delegateRemove, enumGetBox, markType } from \"./type\";\nimport { IDataSource_$type } from \"./IDataSource\";\nimport { IEditableDataSource_$type } from \"./IEditableDataSource\";\nimport { TransactionService } from \"./TransactionService\";\nimport { IDataSourceDataProviderUpdateNotifier_$type } from \"./IDataSourceDataProviderUpdateNotifier\";\nimport { SortDescriptionCollection } from \"./SortDescriptionCollection\";\nimport { FilterExpressionCollection } from \"./FilterExpressionCollection\";\nimport { SummaryDescriptionCollection } from \"./SummaryDescriptionCollection\";\nimport { DataSourceSummaryScope_$type } from \"./DataSourceSummaryScope\";\nimport { DataSourceSectionHeaderDisplayMode_$type } from \"./DataSourceSectionHeaderDisplayMode\";\nimport { TransactionKeyEqualityComparer } from \"./TransactionKeyEqualityComparer\";\nimport { Transaction } from \"./Transaction\";\nimport { DataSourceSpecialRow } from \"./DataSourceSpecialRow\";\nimport { List$1 } from \"./List$1\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { DataSourceAggregatedResult } from \"./DataSourceAggregatedResult\";\nimport { DataSourceDataCommittedEventArgs } from \"./DataSourceDataCommittedEventArgs\";\nimport { DataSourceRowExpansionChangedEventArgs } from \"./DataSourceRowExpansionChangedEventArgs\";\nimport { DataSourceSchemaChangedEventArgs } from \"./DataSourceSchemaChangedEventArgs\";\nimport { TransactionType } from \"./TransactionType\";\n/**\n * @hidden\n */\n\nvar BaseDataSource =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(BaseDataSource, _super);\n\n  function BaseDataSource() {\n    var _this = _super.call(this) || this;\n\n    _this.t = null;\n    _this._isReadOnly = false;\n    _this.y = false;\n    _this.dataCommitted = null;\n    _this.an = false;\n    _this.aw = null;\n    _this._externalDataSource = null;\n    _this.r = null;\n    _this.q = null;\n    _this.h = null;\n    _this.s = null;\n    _this.i = null;\n    _this.n = null;\n    _this.ar = 0;\n    _this.as = 0;\n    _this.at = 0;\n    _this.o = null;\n    _this.propertyChanged = null;\n    _this.k = null;\n    _this.m = null;\n    _this.schemaChanged = null;\n    _this.rowExpansionChanged = null;\n    _this.z = false;\n    _this.g = 0;\n    _this.w = false;\n    _this.b = null;\n    _this.a = null;\n    _this.c = null;\n    _this.af = false;\n    _this.ag = false;\n    _this.u = false;\n    _this.f = 0;\n    _this.aa = false;\n    _this.ac = true;\n    _this.x = false;\n    _this.ae = false;\n    _this.ad = false;\n    _this.ab = true;\n    _this.ai = true;\n    _this.ah = false;\n    _this.aj = true;\n    _this.v = false;\n    _this.d = null;\n    _this.k = new DefaultDataSourceDataProviderUpdateNotifier(_this);\n    _this.r = new SortDescriptionCollection();\n    _this.q = new SortDescriptionCollection();\n    _this.s = new SummaryDescriptionCollection();\n\n    _this.r.n(runOn(_this, _this.co));\n\n    _this.q.n(runOn(_this, _this.bs));\n\n    _this.s.n(runOn(_this, _this.cp));\n\n    _this.h = new FilterExpressionCollection();\n\n    _this.h.m(runOn(_this, _this.bq));\n\n    _this.t = new TransactionService(runOn(_this, _this.bu), runOn(_this, _this.clone1), new TransactionKeyEqualityComparer());\n    var a = _this.t;\n    a.stateChanged = delegateCombine(a.stateChanged, runOn(_this, _this.ck));\n    return _this;\n  }\n\n  BaseDataSource.prototype.ck = function (a, b) {\n    if (a == 0 || a == 1) {\n      if (this.updateNotifier != null) {\n        var c = b;\n        var d = c.transactions._inner[0];\n\n        if (d.type == 1 || d.type == TransactionType.Delete) {\n          var e = d.id;\n          var f = this.indexOfKey(e);\n\n          if (f > -1) {\n            var g = this.getItemAtIndex(f);\n            this.updateNotifier.notifySetItem(f, g, g);\n            var h = this.getStickyRows();\n\n            if (h != null) {\n              for (var i = 0; i < h.length; i++) {\n                var j = h[i];\n                var k = typeCast(DataSourceSpecialRow.$, this.getItemAtIndex(j));\n\n                if (k != null && k.rowType == 3 && k.targetRow == g) {\n                  this.updateNotifier.notifySetItem(j, k, k);\n                  break;\n                }\n              }\n            }\n          }\n        } else if (d.type == 0) {}\n      }\n    }\n\n    this.cj(a, b);\n  };\n\n  BaseDataSource.prototype.cj = function (a, b) {};\n\n  BaseDataSource.prototype.ao = function () {\n    return !this.isReadOnly && this.actualPrimaryKey != null && this.actualBaseDataProvider != null && this.t != null;\n  };\n\n  BaseDataSource.prototype.bu = function (a, b) {\n    var e_1, _a;\n\n    if (a != null && b != null) {\n      var c = a;\n      var d = b;\n\n      try {\n        for (var _b = tslib_1.__values(fromEnum(d)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var e = _c.value;\n\n          if (c.containsKey(e.key)) {\n            c.item(e.key, e.value);\n          } else {\n            c.addItem(e.key, e.value);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n\n  BaseDataSource.prototype.clone1 = function (a) {\n    var e_2, _a;\n\n    if (a != null) {\n      var b = a;\n      var c = new Dictionary$2(String_$type, Base.$, 0);\n\n      try {\n        for (var _b = tslib_1.__values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var d = _c.value;\n          c.addItem(d.key, d.value);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n\n      return c;\n    }\n\n    return null;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isReadOnly\", {\n    get: function () {\n      return this._isReadOnly;\n    },\n    set: function (a) {\n      this._isReadOnly = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_isBatchingEnabled = function () {\n    return this.y;\n  };\n\n  BaseDataSource.prototype.set_isBatchingEnabled = function (a) {\n    this.y = a;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isBatchingEnabled\", {\n    get: function () {\n      return this.get_isBatchingEnabled();\n    },\n    set: function (a) {\n      this.set_isBatchingEnabled(a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"canUndo\", {\n    get: function () {\n      return this.t.k;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"canRedo\", {\n    get: function () {\n      return this.t.j;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"canCommit\", {\n    get: function () {\n      return this.t.a(-1).length > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.updatePropertyAtKey = function (a, b, c, d) {\n    if (d === void 0) {\n      d = false;\n    }\n\n    if (this.ao()) {\n      var e = null;\n\n      if (a.length == 1 && typeCast(DataSourceSpecialRow.$, a[0]) !== null) {\n        var f = typeCast(DataSourceSpecialRow.$, a[0]);\n\n        if (f.rowType == 3) {\n          e = f;\n\n          if (this.actualPrimaryKey != null) {\n            a = new Array(this.actualPrimaryKey.length);\n            this.getPrimaryKeyValue(e.targetRow, a);\n          } else {\n            a = [e.targetRow];\n          }\n        }\n      }\n\n      var g = new Dictionary$2(String_$type, Base.$, 0);\n      g.addItem(b, c);\n      var h = new Transaction();\n      h.id = a;\n      h.value = g;\n      h.type = 1;\n      this.t.v(h, d);\n\n      if (this.isBatchingEnabled || d) {\n        if (this.updateNotifier != null) {\n          var i = this.indexOfKey(a);\n\n          if (i > -1) {\n            var j = this.getItemAtIndex(i);\n            this.updateNotifier.notifySetItem(i, j, j);\n          }\n\n          if (this.isRowPinned(i)) {\n            var k = -1;\n\n            if (e != null) {\n              k = this.indexOfItem(e);\n            } else {\n              var l = this.getStickyRows();\n\n              if (l != null) {\n                for (var m = 0; m < l.length; m++) {\n                  var n = typeCast(DataSourceSpecialRow.$, this.getItemAtIndex(l[m]));\n\n                  if (n != null && n.rowType == 3) {\n                    e = n;\n                    k = l[m];\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (k > -1) {\n              this.updateNotifier.notifySetItem(k, e, e);\n            }\n          }\n        }\n      }\n\n      return h.transactionID;\n    }\n\n    return -1;\n  };\n\n  BaseDataSource.prototype.removeItemByKey = function (a) {\n    if (this.ao()) {\n      var b = null;\n\n      if (a.length == 1 && typeCast(DataSourceSpecialRow.$, a[0]) !== null) {\n        var c = typeCast(DataSourceSpecialRow.$, a[0]);\n\n        if (c.rowType == 3) {\n          b = c;\n\n          if (this.actualPrimaryKey != null) {\n            a = new Array(this.actualPrimaryKey.length);\n            this.getPrimaryKeyValue(b.targetRow, a);\n          } else {\n            a = [b.targetRow];\n          }\n        }\n      }\n\n      var d = new Transaction();\n      d.id = a;\n      d.type = TransactionType.Delete;\n      this.t.v(d, false);\n\n      if (this.isBatchingEnabled) {\n        if (this.updateNotifier != null) {\n          var e = this.indexOfKey(a);\n\n          if (e > -1) {\n            var f = this.getItemAtIndex(e);\n            this.updateNotifier.notifySetItem(e, f, f);\n          }\n\n          if (this.isRowPinned(e)) {\n            var g = -1;\n\n            if (b != null) {\n              g = this.indexOfItem(b);\n            } else {\n              var h = this.getStickyRows();\n\n              if (h != null) {\n                for (var i = 0; i < h.length; i++) {\n                  var j = typeCast(DataSourceSpecialRow.$, this.getItemAtIndex(h[i]));\n\n                  if (j != null && j.rowType == 3) {\n                    b = j;\n                    g = h[i];\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (g > -1) {\n              this.updateNotifier.notifySetItem(g, b, b);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  BaseDataSource.prototype.removeItem = function (a) {\n    if (this.ao()) {\n      var b = void 0;\n\n      if (typeCast(DataSourceSpecialRow.$, a) !== null) {\n        b = [a];\n      } else if (this.actualPrimaryKey == null || this.actualPrimaryKey.length < 1) {\n        b = [a];\n      } else {\n        b = new Array(this.actualPrimaryKey.length);\n        this.getPrimaryKeyValue(a, b);\n      }\n\n      this.removeItemByKey(b);\n    }\n  };\n\n  BaseDataSource.prototype.addItem = function (a) {\n    if (this.ao()) {\n      if (typeCast(DataSourceSpecialRow.$, a) !== null) {\n        return;\n      }\n\n      var b = new Transaction();\n      b.id = [a];\n      b.type = 0;\n      this.t.v(b, false);\n    }\n  };\n\n  BaseDataSource.prototype.acceptPendingTransaction = function (a) {\n    if (this.ao()) {\n      var b = this.t.d(a);\n\n      if (b != null) {\n        this.t.ap(a);\n      }\n    }\n  };\n\n  BaseDataSource.prototype.rejectPendingTransaction = function (a) {\n    if (this.ao()) {\n      var b = this.t.d(a);\n\n      if (b != null) {\n        this.t.x(a);\n\n        if (this.updateNotifier != null) {\n          if (b.type != 0) {\n            var c = b.id;\n            var d = this.indexOfKey(c);\n\n            if (d > -1) {\n              var e = this.getItemAtIndex(d);\n              this.updateNotifier.notifySetItem(d, e, e);\n              var f = this.getStickyRows();\n\n              if (f != null) {\n                for (var g = 0; g < f.length; g++) {\n                  var h = typeCast(DataSourceSpecialRow.$, this.getItemAtIndex(f[g]));\n\n                  if (h != null && h.rowType == 3) {\n                    if (h.targetRow == e) {\n                      this.updateNotifier.notifySetItem(f[g], h, h);\n                      break;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  BaseDataSource.prototype.commitEdits = function (a) {\n    if (this.ao()) {\n      var b = this.t.c(null).length > 0;\n      var c = this.t.s(a, this.isBatchingEnabled);\n\n      if (c == -1 && b) {\n        if (this.updateNotifier != null) {\n          this.updateNotifier.notifyClearItems();\n        }\n      }\n\n      return c;\n    }\n\n    return -1;\n  };\n\n  BaseDataSource.prototype.cancelEdits = function () {\n    if (this.ao()) {\n      this.t.w(true, null);\n\n      if (this.updateNotifier != null) {\n        this.updateNotifier.notifyClearItems();\n      }\n    }\n  };\n\n  BaseDataSource.prototype.acceptPendingCommit = function (a) {\n    if (this.ao()) {\n      var b = this.t.e(a);\n\n      if (b != null) {\n        this.t.u(a);\n\n        if (this.updateNotifier != null) {\n          for (var c = 0; c < b.a.length; c++) {\n            if (b.a[c].transactionType != 0) {\n              var d = b.a[c].id;\n              var e = this.indexOfKey(d);\n\n              if (e > -1) {\n                var f = this.getItemAtIndex(e);\n                this.updateNotifier.notifySetItem(e, f, f);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  BaseDataSource.prototype.rejectPendingCommit = function (a) {\n    if (this.ao()) {\n      var b = this.t.e(a);\n\n      if (b != null) {\n        this.t.ac(a);\n\n        if (this.updateNotifier != null) {\n          for (var c = 0; c < b.a.length; c++) {\n            if (b.a[c].transactionType != 0) {\n              var d = b.a[c].id;\n              var e = this.indexOfKey(d);\n\n              if (e > -1) {\n                var f = this.getItemAtIndex(e);\n                this.updateNotifier.notifySetItem(e, f, f);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  BaseDataSource.prototype.undo = function () {\n    if (this.ao()) {\n      this.t.ae();\n    }\n  };\n\n  BaseDataSource.prototype.redo = function () {\n    if (this.ao()) {\n      this.t.ab();\n    }\n  };\n\n  BaseDataSource.prototype.hasEdit = function (a, b) {\n    if (this.ao()) {\n      a = this.e(a);\n      var c = this.t.g(a);\n\n      if (c != null) {\n        var d = typeCast(Dictionary$2.$.specialize(String_$type, Base.$), c.value);\n\n        if (d != null && d.containsKey(b)) {\n          return true;\n        }\n      }\n\n      c = this.t.ah(a);\n\n      if (c != null) {\n        var e = typeCast(Dictionary$2.$.specialize(String_$type, Base.$), c.value);\n\n        if (e != null && e.containsKey(b)) {\n          return true;\n        }\n      }\n\n      c = this.t.ag(a);\n\n      if (c != null) {\n        var f = typeCast(Dictionary$2.$.specialize(String_$type, Base.$), c.value);\n\n        if (f != null && f.containsKey(b)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  BaseDataSource.prototype.hasDelete = function (a) {\n    if (this.ao()) {\n      a = this.e(a);\n      var b = this.t.g(a);\n\n      if (b != null && b.transactionType == TransactionType.Delete) {\n        return true;\n      }\n\n      b = this.t.ah(a);\n\n      if (b != null && b.transactionType == TransactionType.Delete) {\n        return true;\n      }\n\n      b = this.t.ag(a);\n\n      if (b != null && b.transactionType == TransactionType.Delete) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  BaseDataSource.prototype.hasAdd = function (a) {\n    if (this.ao()) {\n      var b = this.t.g(a);\n\n      if (b != null && b.transactionType == 0) {\n        return true;\n      }\n\n      b = this.t.ah(a);\n\n      if (b != null && b.transactionType == 0) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  BaseDataSource.prototype.getAggregatedChanges = function (a) {\n    var e_3, _a;\n\n    if (this.ao()) {\n      var b = this.t.a(a);\n      var c = new List$1(DataSourceAggregatedResult.$, 0);\n\n      for (var d = 0; d < b.length; d++) {\n        var e = b[d].id;\n        var f = new DataSourceAggregatedResult();\n\n        if (b[d].transactionType == 0) {\n          f.transactionType = 0;\n          f.item = e[0];\n        } else if (b[d].transactionType == TransactionType.Delete) {\n          f.transactionType = TransactionType.Delete;\n          var g = this.indexOfKey(e);\n\n          if (g > -1) {\n            f.item = this.getItemAtIndex(g);\n          } else {\n            f.item = e;\n          }\n        } else if (b[d].transactionType == 1) {\n          f.transactionType = 1;\n          var h = b[d].value;\n          f.keys = new Array(h.count);\n          f.values = new Array(h.count);\n          var i = 0;\n\n          try {\n            for (var _b = (e_3 = void 0, tslib_1.__values(fromEnum(h))), _c = _b.next(); !_c.done; _c = _b.next()) {\n              var j = _c.value;\n              f.keys[i] = j.key;\n              f.values[i] = j.value;\n              i++;\n            }\n          } catch (e_3_1) {\n            e_3 = {\n              error: e_3_1\n            };\n          } finally {\n            try {\n              if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n          }\n\n          var k = this.getItemFromKey(e);\n\n          if (k != null) {\n            f.item = k;\n          } else {\n            f.item = e;\n          }\n        }\n\n        c.add(f);\n      }\n\n      return c.toArray();\n    }\n\n    return new Array(0);\n  };\n\n  BaseDataSource.prototype.isPendingTransaction = function (a) {\n    return this.t.d(a) != null;\n  };\n\n  BaseDataSource.prototype.isPendingCommit = function (a) {\n    return this.t.e(a) != null;\n  };\n\n  BaseDataSource.prototype.setTransactionError = function (a, b) {\n    var c = this.t.d(a);\n\n    if (c != null) {\n      c.error = b;\n\n      if (this.updateNotifier != null) {\n        var d = c.id;\n        var e = this.indexOfKey(d);\n\n        if (e > -1) {\n          var f = this.getItemAtIndex(e);\n          this.updateNotifier.notifySetItem(e, f, f);\n        }\n      }\n    }\n  };\n\n  BaseDataSource.prototype.getTransactionErrorByKey = function (a, b) {\n    a = this.e(a);\n    var c = this.t.c(a);\n\n    for (var d = 0; d < c.length; d++) {\n      if (c[d].error != null) {\n        if (c[d].type == 1) {\n          var e = c[d].value;\n\n          if (e.containsKey(b)) {\n            return c[d].error;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  BaseDataSource.prototype.getTransactionErrorByID = function (a) {\n    var b = this.t.d(a);\n\n    if (b != null) {\n      return b.error;\n    }\n\n    return null;\n  };\n\n  BaseDataSource.prototype.getTransactionID = function (a, b) {\n    a = this.e(a);\n    var c = this.t.c(a);\n\n    for (var d = 0; d < c.length; d++) {\n      if (c[d].type == 1) {\n        var e = c[d].value;\n\n        if (e.containsKey(b)) {\n          return c[d].transactionID;\n        }\n      }\n    }\n\n    return -1;\n  };\n\n  BaseDataSource.prototype.e = function (a) {\n    if (a.length == 1 && typeCast(DataSourceSpecialRow.$, a[0]) !== null) {\n      var b = typeCast(DataSourceSpecialRow.$, a[0]);\n\n      if (b.rowType == 3) {\n        if (this.actualPrimaryKey != null) {\n          a = new Array(this.actualPrimaryKey.length);\n          this.getPrimaryKeyValue(b.targetRow, a);\n        } else {\n          a = [b.targetRow];\n        }\n      }\n    }\n\n    return a;\n  };\n\n  BaseDataSource.prototype.bv = function (a, b) {\n    if (this.dataCommitted != null) {\n      this.dataCommitted(this, new DataSourceDataCommittedEventArgs(a, b));\n    }\n  };\n\n  BaseDataSource.prototype.co = function (a, b) {\n    this.onSortDescriptionsChanged(b);\n  };\n\n  BaseDataSource.prototype.bs = function (a, b) {\n    this.onGroupDescriptionsChanged(b);\n  };\n\n  BaseDataSource.prototype.cp = function (a, b) {\n    this.onSummaryDescriptionsChanged(b);\n  };\n\n  BaseDataSource.prototype.bq = function (a, b) {\n    this.onFilterExpressionsChanged(b);\n  };\n\n  BaseDataSource.prototype.onSortDescriptionsChanged = function (a) {\n    this.queueAutoRefresh();\n  };\n\n  BaseDataSource.prototype.onGroupDescriptionsChanged = function (a) {\n    if (this.isGroupingSupported) {\n      if (this.groupDescriptions != null && this.groupDescriptions.k.count > 0) {\n        this.an = true;\n      } else {\n        this.an = false;\n      }\n\n      this.queueAutoRefresh();\n    }\n  };\n\n  BaseDataSource.prototype.onSummaryDescriptionsChanged = function (a) {\n    this.queueAutoRefresh();\n  };\n\n  BaseDataSource.prototype.onFilterExpressionsChanged = function (a) {\n    this.queueAutoRefresh();\n  };\n\n  BaseDataSource.prototype.onRowExpansionChanged = function (a, b, c) {\n    if (this.rowExpansionChanged != null) {\n      this.rowExpansionChanged(this, new DataSourceRowExpansionChangedEventArgs(a, b, c));\n    }\n  };\n\n  BaseDataSource.prototype.isPlaceholderItem = function (a) {\n    return false;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"externalDataSource\", {\n    get: function () {\n      return this._externalDataSource;\n    },\n    set: function (a) {\n      this._externalDataSource = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"actualSchema\", {\n    get: function () {\n      return this.n;\n    },\n    set: function (a) {\n      var b = this.n;\n      this.n = a;\n\n      if (b != this.n) {\n        this.onPropertyUpdated(\"ActualSchema\", b, this.n);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"actualCount\", {\n    get: function () {\n      return this.ar;\n    },\n    set: function (a) {\n      var b = this.ar;\n      this.ar = a;\n\n      if (b != this.ar) {\n        this.onPropertyUpdated(\"ActualCount\", b, this.ar);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"firstVisibleIndexRequested\", {\n    get: function () {\n      return this.as;\n    },\n    set: function (a) {\n      var b = this.as;\n      this.as = a;\n\n      if (b != this.as) {\n        this.onPropertyUpdated(\"FirstVisibleIndexRequested\", b, this.as);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"lastVisibleIndexRequested\", {\n    get: function () {\n      return this.at;\n    },\n    set: function (a) {\n      var b = this.at;\n      this.at = a;\n\n      if (b != this.at) {\n        this.onPropertyUpdated(\"LastVisibleIndexRequested\", b, this.at);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"updateNotifier\", {\n    get: function () {\n      return this.o;\n    },\n    set: function (a) {\n      var b = this.o;\n      this.o = a;\n\n      if (b != this.o) {\n        this.onPropertyUpdated(\"UpdateNotifier\", b, this.o);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.getItemAtIndex = function (a) {\n    return null;\n  };\n\n  BaseDataSource.prototype.getItemFromKey = function (a) {\n    return null;\n  };\n\n  BaseDataSource.prototype.getItemProperty = function (a, b) {\n    if (this.actualBaseDataProvider != null) {\n      var item_ = a;\n\n      if (item_ != null && item_.$$isSpecialRow !== undefined) {\n        return this.getSpecialRowItemValue(a, b);\n      }\n\n      return this.actualBaseDataProvider.getItemValue(a, b);\n    }\n\n    return null;\n  };\n\n  BaseDataSource.prototype.getSpecialRowItemValue = function (a, b) {\n    if (a.rowType == 3) {\n      if (this.ao()) {\n        var c = this.ay(a.targetRow, b);\n\n        if (c != null) {\n          return c;\n        }\n      }\n\n      return this.getItemProperty(a.targetRow, b);\n    }\n\n    return a.getSectionValue(b);\n  };\n\n  BaseDataSource.prototype.ay = function (a, b) {\n    var c;\n\n    if (this.actualPrimaryKey == null || this.actualPrimaryKey.length < 1) {\n      c = [a];\n    } else {\n      c = new Array(this.actualPrimaryKey.length);\n      this.getPrimaryKeyValue(a, c);\n    }\n\n    var d = this.t.g(c);\n\n    if (d != null && d.transactionType == 1) {\n      var e = d.value;\n\n      if (e.containsKey(b)) {\n        return e.item(b);\n      }\n    }\n\n    d = this.t.ah(c);\n\n    if (d != null && d.transactionType == 1) {\n      var f = d.value;\n\n      if (f.containsKey(b)) {\n        return f.item(b);\n      }\n    }\n\n    d = this.t.ag(c);\n\n    if (d != null && d.transactionType == 1) {\n      var g = d.value;\n\n      if (g.containsKey(b)) {\n        return g.item(b);\n      }\n    }\n\n    return null;\n  };\n\n  BaseDataSource.prototype.al = function (a, b) {\n    var c;\n\n    if (this.actualPrimaryKey == null || this.actualPrimaryKey.length < 1) {\n      c = [a];\n    } else {\n      c = new Array(this.actualPrimaryKey.length);\n      this.getPrimaryKeyValue(a, c);\n    }\n\n    var d = this.t.g(c);\n\n    if (d != null && d.transactionType == 1) {\n      var e = d.value;\n\n      if (e.containsKey(b)) {\n        return true;\n      }\n    }\n\n    d = this.t.ah(c);\n\n    if (d != null && d.transactionType == 1) {\n      var f = d.value;\n\n      if (f.containsKey(b)) {\n        return true;\n      }\n    }\n\n    d = this.t.ag(c);\n\n    if (d != null && d.transactionType == 1) {\n      var g = d.value;\n\n      if (g.containsKey(b)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  BaseDataSource.prototype.getItemPropertyAtIndex = function (a, b) {\n    return null;\n  };\n\n  BaseDataSource.prototype.get_fullSectionInformationWillForceLoad = function () {\n    return false;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"fullSectionInformationWillForceLoad\", {\n    get: function () {\n      return this.get_fullSectionInformationWillForceLoad();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.onPropertyUpdated = function (a, b, c) {\n    if (this.propertyChanged != null) {\n      this.propertyChanged(this, new PropertyChangedEventArgs(a));\n    }\n\n    this.propertyUpdatedOverride(a, b, c);\n  };\n\n  BaseDataSource.prototype.propertyUpdatedOverride = function (a, b, c) {\n    switch (a) {\n      case \"PrimaryKey\":\n        this.actualPrimaryKey = this.primaryKey;\n        break;\n\n      case \"ActualPrimaryKey\":\n        this.onActualPrimaryKeyChanged(b, c);\n        break;\n\n      case \"ExecutionContext\":\n        if (this.actualBaseDataProvider != null) {\n          this.actualBaseDataProvider.executionContext = this.executionContext;\n        }\n\n        this.queueAutoRefresh();\n        break;\n\n      case \"LastVisibleIndexRequested\":\n      case \"FirstVisibleIndexRequested\":\n        this.onRequestedVisibleRangeChanged();\n        break;\n\n      case \"ActualDataProvider\":\n        this.onActualDataProviderChanged(b, c);\n        break;\n\n      case \"DeferAutoRefresh\":\n        if (this.actualBaseDataProvider != null) {\n          this.actualBaseDataProvider.deferAutoRefresh = this.deferAutoRefresh;\n        }\n\n        if (!c) {\n          this.queueAutoRefresh();\n        }\n\n        break;\n\n      case \"PropertiesRequested\":\n        if (this.actualBaseDataProvider != null) {\n          this.actualBaseDataProvider.propertiesRequested = this.propertiesRequested;\n        }\n\n        break;\n\n      case \"ShouldEmitSectionFooters\":\n      case \"ShouldEmitSectionHeaders\":\n      case \"ShouldEmitShiftedRows\":\n      case \"SectionHeaderDisplayMode\":\n      case \"IsSectionCollapsable\":\n      case \"IncludeSummaryRowsInSection\":\n      case \"IsSectionSummaryRowsAtBottom\":\n      case \"IsSectionContentVisible\":\n        this.queueAutoRefresh();\n        break;\n\n      case \"SummaryScope\":\n        if (this.actualBaseDataProvider != null) {\n          this.actualBaseDataProvider.summaryScope = this.summaryScope;\n        }\n\n        this.queueAutoRefresh();\n        break;\n    }\n  };\n\n  BaseDataSource.prototype.onActualPrimaryKeyChanged = function (a, b) {\n    this.onActualPrimaryKeyChangedOverrride(a, b);\n  };\n\n  BaseDataSource.prototype.onActualPrimaryKeyChangedOverrride = function (a, b) {};\n\n  BaseDataSource.prototype.get_isVirtual = function () {\n    return false;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isVirtual\", {\n    get: function () {\n      return this.get_isVirtual();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"dataProviderUpdateNotifier\", {\n    get: function () {\n      return this.k;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.onActualDataProviderChanged = function (a, b) {\n    var c = a;\n    var d = b;\n\n    if (c != null) {\n      c.updateNotifier = null;\n    }\n\n    if (d != null) {\n      d.updateNotifier = this.k;\n    }\n\n    if (c != null) {\n      c.schemaChanged = delegateRemove(c.schemaChanged, runOn(this, this.bm));\n    }\n\n    if (d != null) {\n      d.schemaChanged = delegateCombine(d.schemaChanged, runOn(this, this.bm));\n      d.executionContext = this.executionContext;\n      this.notifyUsingSourceIndexes = this.actualBaseDataProvider.notifyUsingSourceIndexes;\n    } else {\n      this.notifyUsingSourceIndexes = false;\n    }\n\n    if (c != null) {\n      this.sortDescriptions.syncTarget = null;\n      this.groupDescriptions.syncTarget = null;\n      this.filterExpressions.syncTarget = null;\n      this.summaryDescriptions.syncTarget = null;\n    }\n\n    if (d != null) {\n      this.sortDescriptions.syncTarget = d.sortDescriptions;\n      this.groupDescriptions.syncTarget = d.groupDescriptions;\n      this.filterExpressions.syncTarget = d.filterExpressions;\n      this.summaryDescriptions.syncTarget = d.summaryDescriptions;\n\n      if (this.propertiesRequested != null) {\n        d.propertiesRequested = this.propertiesRequested;\n      }\n\n      d.summaryScope = this.summaryScope;\n    }\n\n    this.queueAutoRefresh();\n  };\n\n  BaseDataSource.prototype.onRequestedVisibleRangeChanged = function () {};\n\n  Object.defineProperty(BaseDataSource.prototype, \"executionContext\", {\n    get: function () {\n      return this.m;\n    },\n    set: function (a) {\n      var b = this.m;\n      this.m = a;\n\n      if (this.m != b) {\n        this.onPropertyUpdated(\"ExecutionContext\", b, this.m);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.canInitialize = function () {\n    if (this.m != null && this.actualBaseDataProvider != null) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isInitializing\", {\n    get: function () {\n      return this.z;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_isSortingSupported = function () {\n    return false;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isSortingSupported\", {\n    get: function () {\n      return this.get_isSortingSupported();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_isFilteringSupported = function () {\n    return false;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isFilteringSupported\", {\n    get: function () {\n      return this.get_isFilteringSupported();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"sortDescriptions\", {\n    get: function () {\n      return this.r;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"groupDescriptions\", {\n    get: function () {\n      return this.q;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"filterExpressions\", {\n    get: function () {\n      return this.h;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"summaryDescriptions\", {\n    get: function () {\n      return this.s;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"summaryScope\", {\n    get: function () {\n      return this.g;\n    },\n    set: function (a) {\n      var b = this.g;\n      this.g = a;\n\n      if (this.g != b) {\n        this.onPropertyUpdated(\"SummaryScope\", enumGetBox(DataSourceSummaryScope_$type, b), enumGetBox(DataSourceSummaryScope_$type, this.g));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"deferAutoRefresh\", {\n    get: function () {\n      return this.w;\n    },\n    set: function (a) {\n      var b = this.w;\n      this.w = a;\n\n      if (this.w != b) {\n        this.onPropertyUpdated(\"DeferAutoRefresh\", b, this.w);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"primaryKey\", {\n    get: function () {\n      return this.b;\n    },\n    set: function (a) {\n      var b = this.b;\n      this.b = a;\n\n      if (this.b != b) {\n        this.onPropertyUpdated(\"PrimaryKey\", b, this.b);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"actualPrimaryKey\", {\n    get: function () {\n      return this.a;\n    },\n    set: function (a) {\n      var b = this.a;\n      this.a = a;\n\n      if (this.a != b) {\n        this.onPropertyUpdated(\"ActualPrimaryKey\", b, this.a);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"propertiesRequested\", {\n    get: function () {\n      return this.c;\n    },\n    set: function (a) {\n      var b = this.c;\n      this.c = a;\n\n      if (this.c != b) {\n        this.onPropertyUpdated(\"PropertiesRequested\", b, this.c);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"notifyUsingSourceIndexes\", {\n    get: function () {\n      return this.af;\n    },\n    set: function (a) {\n      var b = this.af;\n      this.af = a;\n\n      if (this.af != b) {\n        this.onPropertyUpdated(\"NotifyUsingSourceIndexes\", b, this.af);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_isItemIndexLookupSupported = function () {\n    return false;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isItemIndexLookupSupported\", {\n    get: function () {\n      return this.get_isItemIndexLookupSupported();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_isKeyIndexLookupSupported = function () {\n    return false;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isKeyIndexLookupSupported\", {\n    get: function () {\n      return this.get_isKeyIndexLookupSupported();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.initializeOverride = function () {};\n\n  BaseDataSource.prototype.resolveFullCount = function (a) {\n    return a;\n  };\n\n  BaseDataSource.prototype.bm = function (a, b) {\n    var _this = this;\n\n    var c = this.executionContext;\n    c.execute(function () {\n      _this.ag = true;\n      _this.v = true;\n\n      _this.queueAutoRefresh();\n\n      if (_this.deferAutoRefresh) {\n        _this.actualSchema = b.schema;\n        _this.actualCount = _this.resolveFullCount(b.count);\n\n        _this.bw();\n      }\n    });\n  };\n\n  BaseDataSource.prototype.bw = function () {\n    if (this.schemaChanged != null) {\n      this.schemaChanged(this, new DataSourceSchemaChangedEventArgs(this.actualSchema, this.actualCount));\n    }\n  };\n\n  BaseDataSource.prototype.onSetItem = function (a, b, c) {\n    this.onSetItemOverride(a, b, c);\n  };\n\n  BaseDataSource.prototype.onBroadcastSetItem = function (a, b, c) {\n    if (this.updateNotifier != null) {\n      this.updateNotifier.notifySetItem(a, b, c);\n    }\n  };\n\n  BaseDataSource.prototype.onSetItemOverride = function (a, b, c) {\n    if (this.actualBaseDataProvider != null) {\n      this.actualCount = this.resolveFullCount(this.actualBaseDataProvider.actualCount);\n    }\n\n    this.onBroadcastSetItem(a, b, c);\n  };\n\n  BaseDataSource.prototype.onClearItems = function () {\n    this.onClearItemsOverride();\n  };\n\n  BaseDataSource.prototype.onBroadcastClearItems = function () {\n    if (this.updateNotifier != null) {\n      this.updateNotifier.notifyClearItems();\n    }\n  };\n\n  BaseDataSource.prototype.onClearItemsOverride = function () {\n    if (this.actualBaseDataProvider != null) {\n      this.actualCount = this.resolveFullCount(this.actualBaseDataProvider.actualCount);\n    }\n\n    this.onBroadcastClearItems();\n  };\n\n  BaseDataSource.prototype.onInsertItem = function (a, b) {\n    this.onInsertItemOverride(a, b);\n  };\n\n  BaseDataSource.prototype.onBroadcastInsertItem = function (a, b) {\n    if (this.updateNotifier != null) {\n      this.updateNotifier.notifyInsertItem(a, b);\n    }\n  };\n\n  BaseDataSource.prototype.onInsertItemOverride = function (a, b) {\n    if (this.actualBaseDataProvider != null) {\n      this.actualCount = this.resolveFullCount(this.actualBaseDataProvider.actualCount);\n    }\n\n    this.onBroadcastInsertItem(a, b);\n  };\n\n  BaseDataSource.prototype.onRemoveItem = function (a, b) {\n    this.onRemoveItemOverride(a, b);\n  };\n\n  BaseDataSource.prototype.onBroadcastRemoveItem = function (a, b) {\n    if (this.updateNotifier != null) {\n      this.updateNotifier.notifyRemoveItem(a, b);\n    }\n  };\n\n  BaseDataSource.prototype.onRemoveItemOverride = function (a, b) {\n    if (this.actualBaseDataProvider != null) {\n      this.actualCount = this.resolveFullCount(this.actualBaseDataProvider.actualCount);\n    }\n\n    this.onBroadcastRemoveItem(a, b);\n  };\n\n  BaseDataSource.prototype.notifySetItem = function (a, b, c) {\n    if (this.actualBaseDataProvider != null) {\n      this.actualBaseDataProvider.notifySetItem(a, b, c);\n    }\n  };\n\n  BaseDataSource.prototype.notifyClearItems = function () {\n    if (this.actualBaseDataProvider != null) {\n      this.actualBaseDataProvider.notifyClearItems();\n    }\n  };\n\n  BaseDataSource.prototype.notifyInsertItem = function (a, b) {\n    if (this.actualBaseDataProvider != null) {\n      this.actualBaseDataProvider.notifyInsertItem(a, b);\n    }\n\n    ;\n  };\n\n  BaseDataSource.prototype.notifyRemoveItem = function (a, b) {\n    if (this.actualBaseDataProvider != null) {\n      this.actualBaseDataProvider.notifyRemoveItem(a, b);\n    }\n\n    ;\n  };\n\n  BaseDataSource.prototype.queueAutoRefresh = function () {\n    if (this.deferAutoRefresh) {\n      return;\n    }\n\n    if (this.actualBaseDataProvider != null) {\n      this.actualBaseDataProvider.queueAutoRefresh();\n    }\n\n    if (this.u) {\n      return;\n    }\n\n    if (this.executionContext != null) {\n      this.u = true;\n      this.executionContext.enqueueAction(runOn(this, this.bo));\n    }\n  };\n\n  BaseDataSource.prototype.bo = function () {\n    if (this.deferAutoRefresh) {\n      this.u = false;\n      return;\n    }\n\n    if (this.actualBaseDataProvider != null) {\n      this.actualBaseDataProvider.flushAutoRefresh();\n    }\n\n    if (!this.u) {\n      return;\n    }\n\n    this.u = false;\n    this.cm();\n  };\n\n  BaseDataSource.prototype.cm = function () {\n    if (this.actualBaseDataProvider != null) {\n      this.actualSchema = this.actualBaseDataProvider.actualSchema;\n      this.actualCount = this.resolveFullCount(this.actualBaseDataProvider.actualCount);\n    }\n\n    if (this.actualSchema != null && this.primaryKey == null) {\n      this.actualPrimaryKey = this.actualSchema.primaryKey;\n    }\n\n    this.refreshInternalOverride();\n\n    if (this.ag) {\n      this.ag = false;\n      this.bw();\n    }\n  };\n\n  BaseDataSource.prototype.refreshInternalOverride = function () {};\n\n  BaseDataSource.prototype.flushAutoRefresh = function () {\n    this.bo();\n  };\n\n  BaseDataSource.prototype.refresh = function () {\n    if (this.actualBaseDataProvider != null) {\n      this.actualBaseDataProvider.refresh();\n    }\n\n    this.cm();\n  };\n\n  BaseDataSource.prototype.indexOfItem = function (a) {\n    return -1;\n  };\n\n  BaseDataSource.prototype.indexOfKey = function (a) {\n    return -1;\n  };\n\n  BaseDataSource.prototype.getPrimaryKeyValue = function (a, b) {\n    var c = this.actualPrimaryKey;\n\n    if (c == null || c.length < 1 || this.actualBaseDataProvider == null) {\n      return;\n    }\n\n    for (var d = 0; d < c.length; d++) {\n      b[d] = this.actualBaseDataProvider.getItemValue(a, c[d]);\n    }\n  };\n\n  BaseDataSource.prototype.getRowType = function (a) {\n    return 0;\n  };\n\n  BaseDataSource.prototype.getMainValuePath = function (a) {\n    return \"SectionInformation\";\n  };\n\n  BaseDataSource.prototype.getStickyRows = function () {\n    return this.getStickyRowsInRange(this.firstVisibleIndexRequested, this.lastVisibleIndexRequested);\n  };\n\n  BaseDataSource.prototype.getStickyRowsInRange = function (a, b) {\n    return null;\n  };\n\n  BaseDataSource.prototype.isRowSpanning = function (a) {\n    return a == 1 || a == 2;\n  };\n\n  BaseDataSource.prototype.getStickyRowPriority = function (a) {\n    return -1;\n  };\n\n  BaseDataSource.prototype.isExclusivelySticky = function (a) {\n    return false;\n  };\n\n  BaseDataSource.prototype.pinRow = function (a) {};\n\n  BaseDataSource.prototype.unpinRow = function (a) {};\n\n  BaseDataSource.prototype.clearPinnedRows = function () {};\n\n  BaseDataSource.prototype.isRowPinned = function (a) {\n    return false;\n  };\n\n  BaseDataSource.prototype.get_isGroupingSupported = function () {\n    return false;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isGroupingSupported\", {\n    get: function () {\n      return this.get_isGroupingSupported();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_sectionHeaderDisplayMode = function () {\n    return this.f;\n  };\n\n  BaseDataSource.prototype.set_sectionHeaderDisplayMode = function (a) {\n    var b = this.f;\n    this.f = a;\n\n    if (b != this.f) {\n      this.onPropertyUpdated(\"SectionHeaderDisplayMode\", enumGetBox(DataSourceSectionHeaderDisplayMode_$type, b), enumGetBox(DataSourceSectionHeaderDisplayMode_$type, this.f));\n    }\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"sectionHeaderDisplayMode\", {\n    get: function () {\n      return this.get_sectionHeaderDisplayMode();\n    },\n    set: function (a) {\n      this.set_sectionHeaderDisplayMode(a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_isSectionCollapsable = function () {\n    return this.aa;\n  };\n\n  BaseDataSource.prototype.set_isSectionCollapsable = function (a) {\n    var b = this.aa;\n    this.aa = a;\n\n    if (this.aa != b) {\n      this.onPropertyUpdated(\"IsSectionCollapsable\", b, this.aa);\n    }\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isSectionCollapsable\", {\n    get: function () {\n      return this.get_isSectionCollapsable();\n    },\n    set: function (a) {\n      this.set_isSectionCollapsable(a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_isSectionExpandedDefault = function () {\n    return this.ac;\n  };\n\n  BaseDataSource.prototype.set_isSectionExpandedDefault = function (a) {\n    this.ac = a;\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isSectionExpandedDefault\", {\n    get: function () {\n      return this.get_isSectionExpandedDefault();\n    },\n    set: function (a) {\n      this.set_isSectionExpandedDefault(a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_includeSummaryRowsInSection = function () {\n    return this.x;\n  };\n\n  BaseDataSource.prototype.set_includeSummaryRowsInSection = function (a) {\n    var b = this.x;\n    this.x = a;\n\n    if (this.x != b) {\n      this.onPropertyUpdated(\"IncludeSummaryRowsInSection\", b, this.x);\n    }\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"includeSummaryRowsInSection\", {\n    get: function () {\n      return this.get_includeSummaryRowsInSection();\n    },\n    set: function (a) {\n      this.set_includeSummaryRowsInSection(a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_isSectionSummaryRowsAtBottom = function () {\n    return this.ae;\n  };\n\n  BaseDataSource.prototype.set_isSectionSummaryRowsAtBottom = function (a) {\n    var b = this.ae;\n    this.ae = a;\n\n    if (this.ae != b) {\n      this.onPropertyUpdated(\"IsSectionSummaryRowsAtBottom\", b, this.ae);\n    }\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isSectionSummaryRowsAtBottom\", {\n    get: function () {\n      return this.get_isSectionSummaryRowsAtBottom();\n    },\n    set: function (a) {\n      this.set_isSectionSummaryRowsAtBottom(a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_isSectionHeaderNormalRow = function () {\n    return this.ad;\n  };\n\n  BaseDataSource.prototype.set_isSectionHeaderNormalRow = function (a) {\n    var b = this.ad;\n    this.ad = a;\n\n    if (this.ad != b) {\n      this.onPropertyUpdated(\"IsSectionHeaderNormalRow\", b, this.ad);\n    }\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isSectionHeaderNormalRow\", {\n    get: function () {\n      return this.get_isSectionHeaderNormalRow();\n    },\n    set: function (a) {\n      this.set_isSectionHeaderNormalRow(a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.get_isSectionContentVisible = function () {\n    return this.ab;\n  };\n\n  BaseDataSource.prototype.set_isSectionContentVisible = function (a) {\n    var b = this.ab;\n    this.ab = a;\n\n    if (this.ab != b) {\n      this.onPropertyUpdated(\"IsSectionContentVisible\", b, this.ab);\n    }\n  };\n\n  Object.defineProperty(BaseDataSource.prototype, \"isSectionContentVisible\", {\n    get: function () {\n      return this.get_isSectionContentVisible();\n    },\n    set: function (a) {\n      this.set_isSectionContentVisible(a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"shouldEmitSectionHeaders\", {\n    get: function () {\n      return this.ai;\n    },\n    set: function (a) {\n      var b = this.ai;\n      this.ai = a;\n\n      if (this.ai != b) {\n        this.onPropertyUpdated(\"ShouldEmitSectionHeaders\", b, this.ai);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"shouldEmitSectionFooters\", {\n    get: function () {\n      return this.ah;\n    },\n    set: function (a) {\n      var b = this.ah;\n      this.ah = a;\n\n      if (this.ah != b) {\n        this.onPropertyUpdated(\"ShouldEmitSectionFooters\", b, this.ah);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseDataSource.prototype, \"shouldEmitShiftedRows\", {\n    get: function () {\n      return this.aj;\n    },\n    set: function (a) {\n      var b = this.aj;\n      this.aj = a;\n\n      if (this.aj != b) {\n        this.onPropertyUpdated(\"ShouldEmitShiftedRows\", b, this.aj);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseDataSource.prototype.ensureComparables = function (a) {\n    if (this.v && this.actualCount > 0 && this.actualBaseDataProvider != null) {\n      this.d = new Array(a.propertyNames.length);\n      this.v = false;\n    }\n  };\n\n  BaseDataSource.prototype.resolveSchemaPropertyType = function (a) {\n    return this.actualBaseDataProvider.resolveSchemaPropertyType(a);\n  };\n\n  BaseDataSource.prototype.setIsRowExpandedAtIndex = function (a, b) {};\n\n  BaseDataSource.prototype.getIsRowExpandedAtIndex = function (a) {\n    return true;\n  };\n\n  BaseDataSource.prototype.getRowLevel = function (a) {\n    return 0;\n  };\n\n  BaseDataSource.prototype.getRootSummaryRowCount = function () {\n    return 0;\n  };\n\n  BaseDataSource.prototype.getRootSummaryResults = function () {\n    return null;\n  };\n\n  BaseDataSource.prototype.getSectionSummaryResults = function (a) {\n    return null;\n  };\n\n  BaseDataSource.prototype.clone = function () {\n    return null;\n  };\n\n  BaseDataSource.prototype.cloneProperties = function (a) {\n    var b = typeCast(BaseDataSource.$, a);\n\n    if (b != null) {\n      b.executionContext = this.executionContext;\n      b.includeSummaryRowsInSection = this.includeSummaryRowsInSection;\n      b.isSectionCollapsable = this.isSectionCollapsable;\n      b.isSectionExpandedDefault = this.isSectionExpandedDefault;\n      b.isSectionHeaderNormalRow = this.isSectionHeaderNormalRow;\n      b.isSectionSummaryRowsAtBottom = this.isSectionSummaryRowsAtBottom;\n      b.isSectionContentVisible = this.isSectionContentVisible;\n      b.primaryKey = this.primaryKey;\n      b.propertiesRequested = this.propertiesRequested;\n      b.sectionHeaderDisplayMode = this.sectionHeaderDisplayMode;\n      b.shouldEmitSectionFooters = this.shouldEmitSectionFooters;\n      b.shouldEmitSectionHeaders = this.shouldEmitSectionHeaders;\n      b.shouldEmitShiftedRows = this.shouldEmitShiftedRows;\n      b.summaryScope = this.summaryScope;\n\n      for (var c = 0; c < this.groupDescriptions.k.count; c++) {\n        b.groupDescriptions.add(this.groupDescriptions.k.item(c));\n      }\n\n      for (var d = 0; d < this.sortDescriptions.k.count; d++) {\n        b.sortDescriptions.add(this.sortDescriptions.k.item(d));\n      }\n\n      for (var e = 0; e < this.filterExpressions.j.count; e++) {\n        b.filterExpressions.add(this.filterExpressions.j.item(e));\n      }\n\n      for (var f = 0; f < this.summaryDescriptions.k.count; f++) {\n        b.summaryDescriptions.add(this.summaryDescriptions.k.item(f));\n      }\n    }\n  };\n\n  BaseDataSource.$t = markType(BaseDataSource, 'BaseDataSource', Base.$, [IDataSource_$type, IEditableDataSource_$type]);\n  return BaseDataSource;\n}(Base);\n\nexport { BaseDataSource };\n/**\n * @hidden\n */\n\nvar DefaultDataSourceDataProviderUpdateNotifier =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DefaultDataSourceDataProviderUpdateNotifier, _super);\n\n  function DefaultDataSourceDataProviderUpdateNotifier(a) {\n    var _this = _super.call(this) || this;\n\n    _this.a = null;\n    _this.a = a;\n    return _this;\n  }\n\n  DefaultDataSourceDataProviderUpdateNotifier.prototype.notifySetItem = function (a, b, c) {\n    this.a.onSetItem(a, b, c);\n  };\n\n  DefaultDataSourceDataProviderUpdateNotifier.prototype.notifyClearItems = function () {\n    this.a.onClearItems();\n  };\n\n  DefaultDataSourceDataProviderUpdateNotifier.prototype.notifyInsertItem = function (a, b) {\n    this.a.onInsertItem(a, b);\n  };\n\n  DefaultDataSourceDataProviderUpdateNotifier.prototype.notifyRemoveItem = function (a, b) {\n    this.a.onRemoveItem(a, b);\n  };\n\n  DefaultDataSourceDataProviderUpdateNotifier.$t = markType(DefaultDataSourceDataProviderUpdateNotifier, 'DefaultDataSourceDataProviderUpdateNotifier', Base.$, [IDataSourceDataProviderUpdateNotifier_$type]);\n  return DefaultDataSourceDataProviderUpdateNotifier;\n}(Base);\n\nexport { DefaultDataSourceDataProviderUpdateNotifier };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/BaseDataSource_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, PropertyChangedEventArgs, runOn, delegateCombine, typeCast, fromEnum, String_$type, delegateRemove, enumGetBox, markType } from \"./type\";\nimport { IDataSource_$type } from \"./IDataSource\";\nimport { IEditableDataSource_$type } from \"./IEditableDataSource\";\nimport { TransactionService } from \"./TransactionService\";\nimport { IDataSourceDataProviderUpdateNotifier_$type } from \"./IDataSourceDataProviderUpdateNotifier\";\nimport { SortDescriptionCollection } from \"./SortDescriptionCollection\";\nimport { FilterExpressionCollection } from \"./FilterExpressionCollection\";\nimport { SummaryDescriptionCollection } from \"./SummaryDescriptionCollection\";\nimport { DataSourceSummaryScope_$type } from \"./DataSourceSummaryScope\";\nimport { DataSourceSectionHeaderDisplayMode_$type } from \"./DataSourceSectionHeaderDisplayMode\";\nimport { TransactionKeyEqualityComparer } from \"./TransactionKeyEqualityComparer\";\nimport { Transaction } from \"./Transaction\";\nimport { DataSourceSpecialRow } from \"./DataSourceSpecialRow\";\nimport { List$1 } from \"./List$1\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { DataSourceAggregatedResult } from \"./DataSourceAggregatedResult\";\nimport { DataSourceDataCommittedEventArgs } from \"./DataSourceDataCommittedEventArgs\";\nimport { DataSourceRowExpansionChangedEventArgs } from \"./DataSourceRowExpansionChangedEventArgs\";\nimport { DataSourceSchemaChangedEventArgs } from \"./DataSourceSchemaChangedEventArgs\";\nimport { TransactionType } from \"./TransactionType\";\n/**\n * @hidden\n */\nvar BaseDataSource = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BaseDataSource, _super);\n    function BaseDataSource() {\n        var _this = _super.call(this) || this;\n        _this.t = null;\n        _this._isReadOnly = false;\n        _this.y = false;\n        _this.dataCommitted = null;\n        _this.an = false;\n        _this.aw = null;\n        _this._externalDataSource = null;\n        _this.r = null;\n        _this.q = null;\n        _this.h = null;\n        _this.s = null;\n        _this.i = null;\n        _this.n = null;\n        _this.ar = 0;\n        _this.as = 0;\n        _this.at = 0;\n        _this.o = null;\n        _this.propertyChanged = null;\n        _this.k = null;\n        _this.m = null;\n        _this.schemaChanged = null;\n        _this.rowExpansionChanged = null;\n        _this.z = false;\n        _this.g = 0;\n        _this.w = false;\n        _this.b = null;\n        _this.a = null;\n        _this.c = null;\n        _this.af = false;\n        _this.ag = false;\n        _this.u = false;\n        _this.f = 0;\n        _this.aa = false;\n        _this.ac = true;\n        _this.x = false;\n        _this.ae = false;\n        _this.ad = false;\n        _this.ab = true;\n        _this.ai = true;\n        _this.ah = false;\n        _this.aj = true;\n        _this.v = false;\n        _this.d = null;\n        _this.k = new DefaultDataSourceDataProviderUpdateNotifier(_this);\n        _this.r = new SortDescriptionCollection();\n        _this.q = new SortDescriptionCollection();\n        _this.s = new SummaryDescriptionCollection();\n        _this.r.n(runOn(_this, _this.co));\n        _this.q.n(runOn(_this, _this.bs));\n        _this.s.n(runOn(_this, _this.cp));\n        _this.h = new FilterExpressionCollection();\n        _this.h.m(runOn(_this, _this.bq));\n        _this.t = new TransactionService(runOn(_this, _this.bu), runOn(_this, _this.clone1), new TransactionKeyEqualityComparer());\n        var a = _this.t;\n        a.stateChanged = delegateCombine(a.stateChanged, runOn(_this, _this.ck));\n        return _this;\n    }\n    BaseDataSource.prototype.ck = function (a, b) {\n        if (a == 0 || a == 1) {\n            if (this.updateNotifier != null) {\n                var c = b;\n                var d = c.transactions._inner[0];\n                if (d.type == 1 || d.type == TransactionType.Delete) {\n                    var e = d.id;\n                    var f = this.indexOfKey(e);\n                    if (f > -1) {\n                        var g = this.getItemAtIndex(f);\n                        this.updateNotifier.notifySetItem(f, g, g);\n                        var h = this.getStickyRows();\n                        if (h != null) {\n                            for (var i = 0; i < h.length; i++) {\n                                var j = h[i];\n                                var k = typeCast(DataSourceSpecialRow.$, this.getItemAtIndex(j));\n                                if (k != null && k.rowType == 3 && k.targetRow == g) {\n                                    this.updateNotifier.notifySetItem(j, k, k);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (d.type == 0) {\n                }\n            }\n        }\n        this.cj(a, b);\n    };\n    BaseDataSource.prototype.cj = function (a, b) {\n    };\n    BaseDataSource.prototype.ao = function () {\n        return !this.isReadOnly && this.actualPrimaryKey != null && this.actualBaseDataProvider != null && this.t != null;\n    };\n    BaseDataSource.prototype.bu = function (a, b) {\n        var e_1, _a;\n        if (a != null && b != null) {\n            var c = a;\n            var d = b;\n            try {\n                for (var _b = tslib_1.__values(fromEnum(d)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    if (c.containsKey(e.key)) {\n                        c.item(e.key, e.value);\n                    }\n                    else {\n                        c.addItem(e.key, e.value);\n                    }\n                }\n            }\n            catch (e_1_1) {\n                e_1 = { error: e_1_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_1)\n                        throw e_1.error;\n                }\n            }\n        }\n    };\n    BaseDataSource.prototype.clone1 = function (a) {\n        var e_2, _a;\n        if (a != null) {\n            var b = a;\n            var c = new Dictionary$2(String_$type, Base.$, 0);\n            try {\n                for (var _b = tslib_1.__values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var d = _c.value;\n                    c.addItem(d.key, d.value);\n                }\n            }\n            catch (e_2_1) {\n                e_2 = { error: e_2_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_2)\n                        throw e_2.error;\n                }\n            }\n            return c;\n        }\n        return null;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isReadOnly\", {\n        get: function () {\n            return this._isReadOnly;\n        },\n        set: function (a) {\n            this._isReadOnly = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_isBatchingEnabled = function () {\n        return this.y;\n    };\n    BaseDataSource.prototype.set_isBatchingEnabled = function (a) {\n        this.y = a;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isBatchingEnabled\", {\n        get: function () {\n            return this.get_isBatchingEnabled();\n        },\n        set: function (a) {\n            this.set_isBatchingEnabled(a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"canUndo\", {\n        get: function () {\n            return this.t.k;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"canRedo\", {\n        get: function () {\n            return this.t.j;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"canCommit\", {\n        get: function () {\n            return this.t.a(-1).length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.updatePropertyAtKey = function (a, b, c, d) {\n        if (d === void 0) {\n            d = false;\n        }\n        if (this.ao()) {\n            var e = null;\n            if (a.length == 1 && typeCast(DataSourceSpecialRow.$, a[0]) !== null) {\n                var f = typeCast(DataSourceSpecialRow.$, a[0]);\n                if (f.rowType == 3) {\n                    e = f;\n                    if (this.actualPrimaryKey != null) {\n                        a = new Array(this.actualPrimaryKey.length);\n                        this.getPrimaryKeyValue(e.targetRow, a);\n                    }\n                    else {\n                        a = [e.targetRow];\n                    }\n                }\n            }\n            var g = new Dictionary$2(String_$type, Base.$, 0);\n            g.addItem(b, c);\n            var h = new Transaction();\n            h.id = a;\n            h.value = g;\n            h.type = 1;\n            this.t.v(h, d);\n            if (this.isBatchingEnabled || d) {\n                if (this.updateNotifier != null) {\n                    var i = this.indexOfKey(a);\n                    if (i > -1) {\n                        var j = this.getItemAtIndex(i);\n                        this.updateNotifier.notifySetItem(i, j, j);\n                    }\n                    if (this.isRowPinned(i)) {\n                        var k = -1;\n                        if (e != null) {\n                            k = this.indexOfItem(e);\n                        }\n                        else {\n                            var l = this.getStickyRows();\n                            if (l != null) {\n                                for (var m = 0; m < l.length; m++) {\n                                    var n = typeCast(DataSourceSpecialRow.$, this.getItemAtIndex(l[m]));\n                                    if (n != null && n.rowType == 3) {\n                                        e = n;\n                                        k = l[m];\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        if (k > -1) {\n                            this.updateNotifier.notifySetItem(k, e, e);\n                        }\n                    }\n                }\n            }\n            return h.transactionID;\n        }\n        return -1;\n    };\n    BaseDataSource.prototype.removeItemByKey = function (a) {\n        if (this.ao()) {\n            var b = null;\n            if (a.length == 1 && typeCast(DataSourceSpecialRow.$, a[0]) !== null) {\n                var c = typeCast(DataSourceSpecialRow.$, a[0]);\n                if (c.rowType == 3) {\n                    b = c;\n                    if (this.actualPrimaryKey != null) {\n                        a = new Array(this.actualPrimaryKey.length);\n                        this.getPrimaryKeyValue(b.targetRow, a);\n                    }\n                    else {\n                        a = [b.targetRow];\n                    }\n                }\n            }\n            var d = new Transaction();\n            d.id = a;\n            d.type = TransactionType.Delete;\n            this.t.v(d, false);\n            if (this.isBatchingEnabled) {\n                if (this.updateNotifier != null) {\n                    var e = this.indexOfKey(a);\n                    if (e > -1) {\n                        var f = this.getItemAtIndex(e);\n                        this.updateNotifier.notifySetItem(e, f, f);\n                    }\n                    if (this.isRowPinned(e)) {\n                        var g = -1;\n                        if (b != null) {\n                            g = this.indexOfItem(b);\n                        }\n                        else {\n                            var h = this.getStickyRows();\n                            if (h != null) {\n                                for (var i = 0; i < h.length; i++) {\n                                    var j = typeCast(DataSourceSpecialRow.$, this.getItemAtIndex(h[i]));\n                                    if (j != null && j.rowType == 3) {\n                                        b = j;\n                                        g = h[i];\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        if (g > -1) {\n                            this.updateNotifier.notifySetItem(g, b, b);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    BaseDataSource.prototype.removeItem = function (a) {\n        if (this.ao()) {\n            var b = void 0;\n            if (typeCast(DataSourceSpecialRow.$, a) !== null) {\n                b = [a];\n            }\n            else if (this.actualPrimaryKey == null || this.actualPrimaryKey.length < 1) {\n                b = [a];\n            }\n            else {\n                b = new Array(this.actualPrimaryKey.length);\n                this.getPrimaryKeyValue(a, b);\n            }\n            this.removeItemByKey(b);\n        }\n    };\n    BaseDataSource.prototype.addItem = function (a) {\n        if (this.ao()) {\n            if (typeCast(DataSourceSpecialRow.$, a) !== null) {\n                return;\n            }\n            var b = new Transaction();\n            b.id = [a];\n            b.type = 0;\n            this.t.v(b, false);\n        }\n    };\n    BaseDataSource.prototype.acceptPendingTransaction = function (a) {\n        if (this.ao()) {\n            var b = this.t.d(a);\n            if (b != null) {\n                this.t.ap(a);\n            }\n        }\n    };\n    BaseDataSource.prototype.rejectPendingTransaction = function (a) {\n        if (this.ao()) {\n            var b = this.t.d(a);\n            if (b != null) {\n                this.t.x(a);\n                if (this.updateNotifier != null) {\n                    if (b.type != 0) {\n                        var c = b.id;\n                        var d = this.indexOfKey(c);\n                        if (d > -1) {\n                            var e = this.getItemAtIndex(d);\n                            this.updateNotifier.notifySetItem(d, e, e);\n                            var f = this.getStickyRows();\n                            if (f != null) {\n                                for (var g = 0; g < f.length; g++) {\n                                    var h = typeCast(DataSourceSpecialRow.$, this.getItemAtIndex(f[g]));\n                                    if (h != null && h.rowType == 3) {\n                                        if (h.targetRow == e) {\n                                            this.updateNotifier.notifySetItem(f[g], h, h);\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    BaseDataSource.prototype.commitEdits = function (a) {\n        if (this.ao()) {\n            var b = this.t.c(null).length > 0;\n            var c = this.t.s(a, this.isBatchingEnabled);\n            if (c == -1 && b) {\n                if (this.updateNotifier != null) {\n                    this.updateNotifier.notifyClearItems();\n                }\n            }\n            return c;\n        }\n        return -1;\n    };\n    BaseDataSource.prototype.cancelEdits = function () {\n        if (this.ao()) {\n            this.t.w(true, null);\n            if (this.updateNotifier != null) {\n                this.updateNotifier.notifyClearItems();\n            }\n        }\n    };\n    BaseDataSource.prototype.acceptPendingCommit = function (a) {\n        if (this.ao()) {\n            var b = this.t.e(a);\n            if (b != null) {\n                this.t.u(a);\n                if (this.updateNotifier != null) {\n                    for (var c = 0; c < b.a.length; c++) {\n                        if (b.a[c].transactionType != 0) {\n                            var d = b.a[c].id;\n                            var e = this.indexOfKey(d);\n                            if (e > -1) {\n                                var f = this.getItemAtIndex(e);\n                                this.updateNotifier.notifySetItem(e, f, f);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    BaseDataSource.prototype.rejectPendingCommit = function (a) {\n        if (this.ao()) {\n            var b = this.t.e(a);\n            if (b != null) {\n                this.t.ac(a);\n                if (this.updateNotifier != null) {\n                    for (var c = 0; c < b.a.length; c++) {\n                        if (b.a[c].transactionType != 0) {\n                            var d = b.a[c].id;\n                            var e = this.indexOfKey(d);\n                            if (e > -1) {\n                                var f = this.getItemAtIndex(e);\n                                this.updateNotifier.notifySetItem(e, f, f);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    BaseDataSource.prototype.undo = function () {\n        if (this.ao()) {\n            this.t.ae();\n        }\n    };\n    BaseDataSource.prototype.redo = function () {\n        if (this.ao()) {\n            this.t.ab();\n        }\n    };\n    BaseDataSource.prototype.hasEdit = function (a, b) {\n        if (this.ao()) {\n            a = this.e(a);\n            var c = this.t.g(a);\n            if (c != null) {\n                var d = typeCast(Dictionary$2.$.specialize(String_$type, Base.$), c.value);\n                if (d != null && d.containsKey(b)) {\n                    return true;\n                }\n            }\n            c = this.t.ah(a);\n            if (c != null) {\n                var e = typeCast(Dictionary$2.$.specialize(String_$type, Base.$), c.value);\n                if (e != null && e.containsKey(b)) {\n                    return true;\n                }\n            }\n            c = this.t.ag(a);\n            if (c != null) {\n                var f = typeCast(Dictionary$2.$.specialize(String_$type, Base.$), c.value);\n                if (f != null && f.containsKey(b)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    BaseDataSource.prototype.hasDelete = function (a) {\n        if (this.ao()) {\n            a = this.e(a);\n            var b = this.t.g(a);\n            if (b != null && b.transactionType == TransactionType.Delete) {\n                return true;\n            }\n            b = this.t.ah(a);\n            if (b != null && b.transactionType == TransactionType.Delete) {\n                return true;\n            }\n            b = this.t.ag(a);\n            if (b != null && b.transactionType == TransactionType.Delete) {\n                return true;\n            }\n        }\n        return false;\n    };\n    BaseDataSource.prototype.hasAdd = function (a) {\n        if (this.ao()) {\n            var b = this.t.g(a);\n            if (b != null && b.transactionType == 0) {\n                return true;\n            }\n            b = this.t.ah(a);\n            if (b != null && b.transactionType == 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    BaseDataSource.prototype.getAggregatedChanges = function (a) {\n        var e_3, _a;\n        if (this.ao()) {\n            var b = this.t.a(a);\n            var c = new List$1(DataSourceAggregatedResult.$, 0);\n            for (var d = 0; d < b.length; d++) {\n                var e = b[d].id;\n                var f = new DataSourceAggregatedResult();\n                if (b[d].transactionType == 0) {\n                    f.transactionType = 0;\n                    f.item = e[0];\n                }\n                else if (b[d].transactionType == TransactionType.Delete) {\n                    f.transactionType = TransactionType.Delete;\n                    var g = this.indexOfKey(e);\n                    if (g > -1) {\n                        f.item = this.getItemAtIndex(g);\n                    }\n                    else {\n                        f.item = e;\n                    }\n                }\n                else if (b[d].transactionType == 1) {\n                    f.transactionType = 1;\n                    var h = b[d].value;\n                    f.keys = new Array(h.count);\n                    f.values = new Array(h.count);\n                    var i = 0;\n                    try {\n                        for (var _b = (e_3 = void 0, tslib_1.__values(fromEnum(h))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                            var j = _c.value;\n                            f.keys[i] = j.key;\n                            f.values[i] = j.value;\n                            i++;\n                        }\n                    }\n                    catch (e_3_1) {\n                        e_3 = { error: e_3_1 };\n                    }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_a = _b.return))\n                                _a.call(_b);\n                        }\n                        finally {\n                            if (e_3)\n                                throw e_3.error;\n                        }\n                    }\n                    var k = this.getItemFromKey(e);\n                    if (k != null) {\n                        f.item = k;\n                    }\n                    else {\n                        f.item = e;\n                    }\n                }\n                c.add(f);\n            }\n            return c.toArray();\n        }\n        return new Array(0);\n    };\n    BaseDataSource.prototype.isPendingTransaction = function (a) {\n        return this.t.d(a) != null;\n    };\n    BaseDataSource.prototype.isPendingCommit = function (a) {\n        return this.t.e(a) != null;\n    };\n    BaseDataSource.prototype.setTransactionError = function (a, b) {\n        var c = this.t.d(a);\n        if (c != null) {\n            c.error = b;\n            if (this.updateNotifier != null) {\n                var d = c.id;\n                var e = this.indexOfKey(d);\n                if (e > -1) {\n                    var f = this.getItemAtIndex(e);\n                    this.updateNotifier.notifySetItem(e, f, f);\n                }\n            }\n        }\n    };\n    BaseDataSource.prototype.getTransactionErrorByKey = function (a, b) {\n        a = this.e(a);\n        var c = this.t.c(a);\n        for (var d = 0; d < c.length; d++) {\n            if (c[d].error != null) {\n                if (c[d].type == 1) {\n                    var e = c[d].value;\n                    if (e.containsKey(b)) {\n                        return c[d].error;\n                    }\n                }\n            }\n        }\n        return null;\n    };\n    BaseDataSource.prototype.getTransactionErrorByID = function (a) {\n        var b = this.t.d(a);\n        if (b != null) {\n            return b.error;\n        }\n        return null;\n    };\n    BaseDataSource.prototype.getTransactionID = function (a, b) {\n        a = this.e(a);\n        var c = this.t.c(a);\n        for (var d = 0; d < c.length; d++) {\n            if (c[d].type == 1) {\n                var e = c[d].value;\n                if (e.containsKey(b)) {\n                    return c[d].transactionID;\n                }\n            }\n        }\n        return -1;\n    };\n    BaseDataSource.prototype.e = function (a) {\n        if (a.length == 1 && typeCast(DataSourceSpecialRow.$, a[0]) !== null) {\n            var b = typeCast(DataSourceSpecialRow.$, a[0]);\n            if (b.rowType == 3) {\n                if (this.actualPrimaryKey != null) {\n                    a = new Array(this.actualPrimaryKey.length);\n                    this.getPrimaryKeyValue(b.targetRow, a);\n                }\n                else {\n                    a = [b.targetRow];\n                }\n            }\n        }\n        return a;\n    };\n    BaseDataSource.prototype.bv = function (a, b) {\n        if (this.dataCommitted != null) {\n            this.dataCommitted(this, new DataSourceDataCommittedEventArgs(a, b));\n        }\n    };\n    BaseDataSource.prototype.co = function (a, b) {\n        this.onSortDescriptionsChanged(b);\n    };\n    BaseDataSource.prototype.bs = function (a, b) {\n        this.onGroupDescriptionsChanged(b);\n    };\n    BaseDataSource.prototype.cp = function (a, b) {\n        this.onSummaryDescriptionsChanged(b);\n    };\n    BaseDataSource.prototype.bq = function (a, b) {\n        this.onFilterExpressionsChanged(b);\n    };\n    BaseDataSource.prototype.onSortDescriptionsChanged = function (a) {\n        this.queueAutoRefresh();\n    };\n    BaseDataSource.prototype.onGroupDescriptionsChanged = function (a) {\n        if (this.isGroupingSupported) {\n            if (this.groupDescriptions != null && this.groupDescriptions.k.count > 0) {\n                this.an = true;\n            }\n            else {\n                this.an = false;\n            }\n            this.queueAutoRefresh();\n        }\n    };\n    BaseDataSource.prototype.onSummaryDescriptionsChanged = function (a) {\n        this.queueAutoRefresh();\n    };\n    BaseDataSource.prototype.onFilterExpressionsChanged = function (a) {\n        this.queueAutoRefresh();\n    };\n    BaseDataSource.prototype.onRowExpansionChanged = function (a, b, c) {\n        if (this.rowExpansionChanged != null) {\n            this.rowExpansionChanged(this, new DataSourceRowExpansionChangedEventArgs(a, b, c));\n        }\n    };\n    BaseDataSource.prototype.isPlaceholderItem = function (a) {\n        return false;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"externalDataSource\", {\n        get: function () {\n            return this._externalDataSource;\n        },\n        set: function (a) {\n            this._externalDataSource = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"actualSchema\", {\n        get: function () {\n            return this.n;\n        },\n        set: function (a) {\n            var b = this.n;\n            this.n = a;\n            if (b != this.n) {\n                this.onPropertyUpdated(\"ActualSchema\", b, this.n);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"actualCount\", {\n        get: function () {\n            return this.ar;\n        },\n        set: function (a) {\n            var b = this.ar;\n            this.ar = a;\n            if (b != this.ar) {\n                this.onPropertyUpdated(\"ActualCount\", b, this.ar);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"firstVisibleIndexRequested\", {\n        get: function () {\n            return this.as;\n        },\n        set: function (a) {\n            var b = this.as;\n            this.as = a;\n            if (b != this.as) {\n                this.onPropertyUpdated(\"FirstVisibleIndexRequested\", b, this.as);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"lastVisibleIndexRequested\", {\n        get: function () {\n            return this.at;\n        },\n        set: function (a) {\n            var b = this.at;\n            this.at = a;\n            if (b != this.at) {\n                this.onPropertyUpdated(\"LastVisibleIndexRequested\", b, this.at);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"updateNotifier\", {\n        get: function () {\n            return this.o;\n        },\n        set: function (a) {\n            var b = this.o;\n            this.o = a;\n            if (b != this.o) {\n                this.onPropertyUpdated(\"UpdateNotifier\", b, this.o);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.getItemAtIndex = function (a) {\n        return null;\n    };\n    BaseDataSource.prototype.getItemFromKey = function (a) {\n        return null;\n    };\n    BaseDataSource.prototype.getItemProperty = function (a, b) {\n        if (this.actualBaseDataProvider != null) {\n            var item_ = a;\n            if ((item_ != null && item_.$$isSpecialRow !== undefined)) {\n                return this.getSpecialRowItemValue(a, b);\n            }\n            return this.actualBaseDataProvider.getItemValue(a, b);\n        }\n        return null;\n    };\n    BaseDataSource.prototype.getSpecialRowItemValue = function (a, b) {\n        if (a.rowType == 3) {\n            if (this.ao()) {\n                var c = this.ay(a.targetRow, b);\n                if (c != null) {\n                    return c;\n                }\n            }\n            return this.getItemProperty(a.targetRow, b);\n        }\n        return a.getSectionValue(b);\n    };\n    BaseDataSource.prototype.ay = function (a, b) {\n        var c;\n        if (this.actualPrimaryKey == null || this.actualPrimaryKey.length < 1) {\n            c = [a];\n        }\n        else {\n            c = new Array(this.actualPrimaryKey.length);\n            this.getPrimaryKeyValue(a, c);\n        }\n        var d = this.t.g(c);\n        if (d != null && d.transactionType == 1) {\n            var e = d.value;\n            if (e.containsKey(b)) {\n                return e.item(b);\n            }\n        }\n        d = this.t.ah(c);\n        if (d != null && d.transactionType == 1) {\n            var f = d.value;\n            if (f.containsKey(b)) {\n                return f.item(b);\n            }\n        }\n        d = this.t.ag(c);\n        if (d != null && d.transactionType == 1) {\n            var g = d.value;\n            if (g.containsKey(b)) {\n                return g.item(b);\n            }\n        }\n        return null;\n    };\n    BaseDataSource.prototype.al = function (a, b) {\n        var c;\n        if (this.actualPrimaryKey == null || this.actualPrimaryKey.length < 1) {\n            c = [a];\n        }\n        else {\n            c = new Array(this.actualPrimaryKey.length);\n            this.getPrimaryKeyValue(a, c);\n        }\n        var d = this.t.g(c);\n        if (d != null && d.transactionType == 1) {\n            var e = d.value;\n            if (e.containsKey(b)) {\n                return true;\n            }\n        }\n        d = this.t.ah(c);\n        if (d != null && d.transactionType == 1) {\n            var f = d.value;\n            if (f.containsKey(b)) {\n                return true;\n            }\n        }\n        d = this.t.ag(c);\n        if (d != null && d.transactionType == 1) {\n            var g = d.value;\n            if (g.containsKey(b)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    BaseDataSource.prototype.getItemPropertyAtIndex = function (a, b) {\n        return null;\n    };\n    BaseDataSource.prototype.get_fullSectionInformationWillForceLoad = function () {\n        return false;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"fullSectionInformationWillForceLoad\", {\n        get: function () {\n            return this.get_fullSectionInformationWillForceLoad();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.onPropertyUpdated = function (a, b, c) {\n        if (this.propertyChanged != null) {\n            this.propertyChanged(this, new PropertyChangedEventArgs(a));\n        }\n        this.propertyUpdatedOverride(a, b, c);\n    };\n    BaseDataSource.prototype.propertyUpdatedOverride = function (a, b, c) {\n        switch (a) {\n            case \"PrimaryKey\":\n                this.actualPrimaryKey = this.primaryKey;\n                break;\n            case \"ActualPrimaryKey\":\n                this.onActualPrimaryKeyChanged(b, c);\n                break;\n            case \"ExecutionContext\":\n                if (this.actualBaseDataProvider != null) {\n                    this.actualBaseDataProvider.executionContext = this.executionContext;\n                }\n                this.queueAutoRefresh();\n                break;\n            case \"LastVisibleIndexRequested\":\n            case \"FirstVisibleIndexRequested\":\n                this.onRequestedVisibleRangeChanged();\n                break;\n            case \"ActualDataProvider\":\n                this.onActualDataProviderChanged(b, c);\n                break;\n            case \"DeferAutoRefresh\":\n                if (this.actualBaseDataProvider != null) {\n                    this.actualBaseDataProvider.deferAutoRefresh = this.deferAutoRefresh;\n                }\n                if (!c) {\n                    this.queueAutoRefresh();\n                }\n                break;\n            case \"PropertiesRequested\":\n                if (this.actualBaseDataProvider != null) {\n                    this.actualBaseDataProvider.propertiesRequested = this.propertiesRequested;\n                }\n                break;\n            case \"ShouldEmitSectionFooters\":\n            case \"ShouldEmitSectionHeaders\":\n            case \"ShouldEmitShiftedRows\":\n            case \"SectionHeaderDisplayMode\":\n            case \"IsSectionCollapsable\":\n            case \"IncludeSummaryRowsInSection\":\n            case \"IsSectionSummaryRowsAtBottom\":\n            case \"IsSectionContentVisible\":\n                this.queueAutoRefresh();\n                break;\n            case \"SummaryScope\":\n                if (this.actualBaseDataProvider != null) {\n                    this.actualBaseDataProvider.summaryScope = this.summaryScope;\n                }\n                this.queueAutoRefresh();\n                break;\n        }\n    };\n    BaseDataSource.prototype.onActualPrimaryKeyChanged = function (a, b) {\n        this.onActualPrimaryKeyChangedOverrride(a, b);\n    };\n    BaseDataSource.prototype.onActualPrimaryKeyChangedOverrride = function (a, b) {\n    };\n    BaseDataSource.prototype.get_isVirtual = function () {\n        return false;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isVirtual\", {\n        get: function () {\n            return this.get_isVirtual();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"dataProviderUpdateNotifier\", {\n        get: function () {\n            return this.k;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.onActualDataProviderChanged = function (a, b) {\n        var c = a;\n        var d = b;\n        if (c != null) {\n            c.updateNotifier = null;\n        }\n        if (d != null) {\n            d.updateNotifier = this.k;\n        }\n        if (c != null) {\n            c.schemaChanged = delegateRemove(c.schemaChanged, runOn(this, this.bm));\n        }\n        if (d != null) {\n            d.schemaChanged = delegateCombine(d.schemaChanged, runOn(this, this.bm));\n            d.executionContext = this.executionContext;\n            this.notifyUsingSourceIndexes = this.actualBaseDataProvider.notifyUsingSourceIndexes;\n        }\n        else {\n            this.notifyUsingSourceIndexes = false;\n        }\n        if (c != null) {\n            this.sortDescriptions.syncTarget = null;\n            this.groupDescriptions.syncTarget = null;\n            this.filterExpressions.syncTarget = null;\n            this.summaryDescriptions.syncTarget = null;\n        }\n        if (d != null) {\n            this.sortDescriptions.syncTarget = d.sortDescriptions;\n            this.groupDescriptions.syncTarget = d.groupDescriptions;\n            this.filterExpressions.syncTarget = d.filterExpressions;\n            this.summaryDescriptions.syncTarget = d.summaryDescriptions;\n            if (this.propertiesRequested != null) {\n                d.propertiesRequested = this.propertiesRequested;\n            }\n            d.summaryScope = this.summaryScope;\n        }\n        this.queueAutoRefresh();\n    };\n    BaseDataSource.prototype.onRequestedVisibleRangeChanged = function () {\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"executionContext\", {\n        get: function () {\n            return this.m;\n        },\n        set: function (a) {\n            var b = this.m;\n            this.m = a;\n            if (this.m != b) {\n                this.onPropertyUpdated(\"ExecutionContext\", b, this.m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.canInitialize = function () {\n        if (this.m != null && this.actualBaseDataProvider != null) {\n            return true;\n        }\n        return false;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isInitializing\", {\n        get: function () {\n            return this.z;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_isSortingSupported = function () {\n        return false;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isSortingSupported\", {\n        get: function () {\n            return this.get_isSortingSupported();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_isFilteringSupported = function () {\n        return false;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isFilteringSupported\", {\n        get: function () {\n            return this.get_isFilteringSupported();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"sortDescriptions\", {\n        get: function () {\n            return this.r;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"groupDescriptions\", {\n        get: function () {\n            return this.q;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"filterExpressions\", {\n        get: function () {\n            return this.h;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"summaryDescriptions\", {\n        get: function () {\n            return this.s;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"summaryScope\", {\n        get: function () {\n            return this.g;\n        },\n        set: function (a) {\n            var b = this.g;\n            this.g = a;\n            if (this.g != b) {\n                this.onPropertyUpdated(\"SummaryScope\", enumGetBox(DataSourceSummaryScope_$type, b), enumGetBox(DataSourceSummaryScope_$type, this.g));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"deferAutoRefresh\", {\n        get: function () {\n            return this.w;\n        },\n        set: function (a) {\n            var b = this.w;\n            this.w = a;\n            if (this.w != b) {\n                this.onPropertyUpdated(\"DeferAutoRefresh\", b, this.w);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"primaryKey\", {\n        get: function () {\n            return this.b;\n        },\n        set: function (a) {\n            var b = this.b;\n            this.b = a;\n            if (this.b != b) {\n                this.onPropertyUpdated(\"PrimaryKey\", b, this.b);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"actualPrimaryKey\", {\n        get: function () {\n            return this.a;\n        },\n        set: function (a) {\n            var b = this.a;\n            this.a = a;\n            if (this.a != b) {\n                this.onPropertyUpdated(\"ActualPrimaryKey\", b, this.a);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"propertiesRequested\", {\n        get: function () {\n            return this.c;\n        },\n        set: function (a) {\n            var b = this.c;\n            this.c = a;\n            if (this.c != b) {\n                this.onPropertyUpdated(\"PropertiesRequested\", b, this.c);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"notifyUsingSourceIndexes\", {\n        get: function () {\n            return this.af;\n        },\n        set: function (a) {\n            var b = this.af;\n            this.af = a;\n            if (this.af != b) {\n                this.onPropertyUpdated(\"NotifyUsingSourceIndexes\", b, this.af);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_isItemIndexLookupSupported = function () {\n        return false;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isItemIndexLookupSupported\", {\n        get: function () {\n            return this.get_isItemIndexLookupSupported();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_isKeyIndexLookupSupported = function () {\n        return false;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isKeyIndexLookupSupported\", {\n        get: function () {\n            return this.get_isKeyIndexLookupSupported();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.initializeOverride = function () {\n    };\n    BaseDataSource.prototype.resolveFullCount = function (a) {\n        return a;\n    };\n    BaseDataSource.prototype.bm = function (a, b) {\n        var _this = this;\n        var c = this.executionContext;\n        c.execute(function () {\n            _this.ag = true;\n            _this.v = true;\n            _this.queueAutoRefresh();\n            if (_this.deferAutoRefresh) {\n                _this.actualSchema = b.schema;\n                _this.actualCount = _this.resolveFullCount(b.count);\n                _this.bw();\n            }\n        });\n    };\n    BaseDataSource.prototype.bw = function () {\n        if (this.schemaChanged != null) {\n            this.schemaChanged(this, new DataSourceSchemaChangedEventArgs(this.actualSchema, this.actualCount));\n        }\n    };\n    BaseDataSource.prototype.onSetItem = function (a, b, c) {\n        this.onSetItemOverride(a, b, c);\n    };\n    BaseDataSource.prototype.onBroadcastSetItem = function (a, b, c) {\n        if (this.updateNotifier != null) {\n            this.updateNotifier.notifySetItem(a, b, c);\n        }\n    };\n    BaseDataSource.prototype.onSetItemOverride = function (a, b, c) {\n        if (this.actualBaseDataProvider != null) {\n            this.actualCount = this.resolveFullCount(this.actualBaseDataProvider.actualCount);\n        }\n        this.onBroadcastSetItem(a, b, c);\n    };\n    BaseDataSource.prototype.onClearItems = function () {\n        this.onClearItemsOverride();\n    };\n    BaseDataSource.prototype.onBroadcastClearItems = function () {\n        if (this.updateNotifier != null) {\n            this.updateNotifier.notifyClearItems();\n        }\n    };\n    BaseDataSource.prototype.onClearItemsOverride = function () {\n        if (this.actualBaseDataProvider != null) {\n            this.actualCount = this.resolveFullCount(this.actualBaseDataProvider.actualCount);\n        }\n        this.onBroadcastClearItems();\n    };\n    BaseDataSource.prototype.onInsertItem = function (a, b) {\n        this.onInsertItemOverride(a, b);\n    };\n    BaseDataSource.prototype.onBroadcastInsertItem = function (a, b) {\n        if (this.updateNotifier != null) {\n            this.updateNotifier.notifyInsertItem(a, b);\n        }\n    };\n    BaseDataSource.prototype.onInsertItemOverride = function (a, b) {\n        if (this.actualBaseDataProvider != null) {\n            this.actualCount = this.resolveFullCount(this.actualBaseDataProvider.actualCount);\n        }\n        this.onBroadcastInsertItem(a, b);\n    };\n    BaseDataSource.prototype.onRemoveItem = function (a, b) {\n        this.onRemoveItemOverride(a, b);\n    };\n    BaseDataSource.prototype.onBroadcastRemoveItem = function (a, b) {\n        if (this.updateNotifier != null) {\n            this.updateNotifier.notifyRemoveItem(a, b);\n        }\n    };\n    BaseDataSource.prototype.onRemoveItemOverride = function (a, b) {\n        if (this.actualBaseDataProvider != null) {\n            this.actualCount = this.resolveFullCount(this.actualBaseDataProvider.actualCount);\n        }\n        this.onBroadcastRemoveItem(a, b);\n    };\n    BaseDataSource.prototype.notifySetItem = function (a, b, c) {\n        if (this.actualBaseDataProvider != null) {\n            this.actualBaseDataProvider.notifySetItem(a, b, c);\n        }\n    };\n    BaseDataSource.prototype.notifyClearItems = function () {\n        if (this.actualBaseDataProvider != null) {\n            this.actualBaseDataProvider.notifyClearItems();\n        }\n    };\n    BaseDataSource.prototype.notifyInsertItem = function (a, b) {\n        if (this.actualBaseDataProvider != null) {\n            this.actualBaseDataProvider.notifyInsertItem(a, b);\n        }\n        ;\n    };\n    BaseDataSource.prototype.notifyRemoveItem = function (a, b) {\n        if (this.actualBaseDataProvider != null) {\n            this.actualBaseDataProvider.notifyRemoveItem(a, b);\n        }\n        ;\n    };\n    BaseDataSource.prototype.queueAutoRefresh = function () {\n        if (this.deferAutoRefresh) {\n            return;\n        }\n        if (this.actualBaseDataProvider != null) {\n            this.actualBaseDataProvider.queueAutoRefresh();\n        }\n        if (this.u) {\n            return;\n        }\n        if (this.executionContext != null) {\n            this.u = true;\n            this.executionContext.enqueueAction(runOn(this, this.bo));\n        }\n    };\n    BaseDataSource.prototype.bo = function () {\n        if (this.deferAutoRefresh) {\n            this.u = false;\n            return;\n        }\n        if (this.actualBaseDataProvider != null) {\n            this.actualBaseDataProvider.flushAutoRefresh();\n        }\n        if (!this.u) {\n            return;\n        }\n        this.u = false;\n        this.cm();\n    };\n    BaseDataSource.prototype.cm = function () {\n        if (this.actualBaseDataProvider != null) {\n            this.actualSchema = this.actualBaseDataProvider.actualSchema;\n            this.actualCount = this.resolveFullCount(this.actualBaseDataProvider.actualCount);\n        }\n        if (this.actualSchema != null && this.primaryKey == null) {\n            this.actualPrimaryKey = this.actualSchema.primaryKey;\n        }\n        this.refreshInternalOverride();\n        if (this.ag) {\n            this.ag = false;\n            this.bw();\n        }\n    };\n    BaseDataSource.prototype.refreshInternalOverride = function () {\n    };\n    BaseDataSource.prototype.flushAutoRefresh = function () {\n        this.bo();\n    };\n    BaseDataSource.prototype.refresh = function () {\n        if (this.actualBaseDataProvider != null) {\n            this.actualBaseDataProvider.refresh();\n        }\n        this.cm();\n    };\n    BaseDataSource.prototype.indexOfItem = function (a) {\n        return -1;\n    };\n    BaseDataSource.prototype.indexOfKey = function (a) {\n        return -1;\n    };\n    BaseDataSource.prototype.getPrimaryKeyValue = function (a, b) {\n        var c = this.actualPrimaryKey;\n        if (c == null || c.length < 1 || this.actualBaseDataProvider == null) {\n            return;\n        }\n        for (var d = 0; d < c.length; d++) {\n            b[d] = this.actualBaseDataProvider.getItemValue(a, c[d]);\n        }\n    };\n    BaseDataSource.prototype.getRowType = function (a) {\n        return 0;\n    };\n    BaseDataSource.prototype.getMainValuePath = function (a) {\n        return \"SectionInformation\";\n    };\n    BaseDataSource.prototype.getStickyRows = function () {\n        return this.getStickyRowsInRange(this.firstVisibleIndexRequested, this.lastVisibleIndexRequested);\n    };\n    BaseDataSource.prototype.getStickyRowsInRange = function (a, b) {\n        return null;\n    };\n    BaseDataSource.prototype.isRowSpanning = function (a) {\n        return a == 1 || a == 2;\n    };\n    BaseDataSource.prototype.getStickyRowPriority = function (a) {\n        return -1;\n    };\n    BaseDataSource.prototype.isExclusivelySticky = function (a) {\n        return false;\n    };\n    BaseDataSource.prototype.pinRow = function (a) {\n    };\n    BaseDataSource.prototype.unpinRow = function (a) {\n    };\n    BaseDataSource.prototype.clearPinnedRows = function () {\n    };\n    BaseDataSource.prototype.isRowPinned = function (a) {\n        return false;\n    };\n    BaseDataSource.prototype.get_isGroupingSupported = function () {\n        return false;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isGroupingSupported\", {\n        get: function () {\n            return this.get_isGroupingSupported();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_sectionHeaderDisplayMode = function () {\n        return this.f;\n    };\n    BaseDataSource.prototype.set_sectionHeaderDisplayMode = function (a) {\n        var b = this.f;\n        this.f = a;\n        if (b != this.f) {\n            this.onPropertyUpdated(\"SectionHeaderDisplayMode\", enumGetBox(DataSourceSectionHeaderDisplayMode_$type, b), enumGetBox(DataSourceSectionHeaderDisplayMode_$type, this.f));\n        }\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"sectionHeaderDisplayMode\", {\n        get: function () {\n            return this.get_sectionHeaderDisplayMode();\n        },\n        set: function (a) {\n            this.set_sectionHeaderDisplayMode(a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_isSectionCollapsable = function () {\n        return this.aa;\n    };\n    BaseDataSource.prototype.set_isSectionCollapsable = function (a) {\n        var b = this.aa;\n        this.aa = a;\n        if (this.aa != b) {\n            this.onPropertyUpdated(\"IsSectionCollapsable\", b, this.aa);\n        }\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isSectionCollapsable\", {\n        get: function () {\n            return this.get_isSectionCollapsable();\n        },\n        set: function (a) {\n            this.set_isSectionCollapsable(a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_isSectionExpandedDefault = function () {\n        return this.ac;\n    };\n    BaseDataSource.prototype.set_isSectionExpandedDefault = function (a) {\n        this.ac = a;\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isSectionExpandedDefault\", {\n        get: function () {\n            return this.get_isSectionExpandedDefault();\n        },\n        set: function (a) {\n            this.set_isSectionExpandedDefault(a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_includeSummaryRowsInSection = function () {\n        return this.x;\n    };\n    BaseDataSource.prototype.set_includeSummaryRowsInSection = function (a) {\n        var b = this.x;\n        this.x = a;\n        if (this.x != b) {\n            this.onPropertyUpdated(\"IncludeSummaryRowsInSection\", b, this.x);\n        }\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"includeSummaryRowsInSection\", {\n        get: function () {\n            return this.get_includeSummaryRowsInSection();\n        },\n        set: function (a) {\n            this.set_includeSummaryRowsInSection(a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_isSectionSummaryRowsAtBottom = function () {\n        return this.ae;\n    };\n    BaseDataSource.prototype.set_isSectionSummaryRowsAtBottom = function (a) {\n        var b = this.ae;\n        this.ae = a;\n        if (this.ae != b) {\n            this.onPropertyUpdated(\"IsSectionSummaryRowsAtBottom\", b, this.ae);\n        }\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isSectionSummaryRowsAtBottom\", {\n        get: function () {\n            return this.get_isSectionSummaryRowsAtBottom();\n        },\n        set: function (a) {\n            this.set_isSectionSummaryRowsAtBottom(a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_isSectionHeaderNormalRow = function () {\n        return this.ad;\n    };\n    BaseDataSource.prototype.set_isSectionHeaderNormalRow = function (a) {\n        var b = this.ad;\n        this.ad = a;\n        if (this.ad != b) {\n            this.onPropertyUpdated(\"IsSectionHeaderNormalRow\", b, this.ad);\n        }\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isSectionHeaderNormalRow\", {\n        get: function () {\n            return this.get_isSectionHeaderNormalRow();\n        },\n        set: function (a) {\n            this.set_isSectionHeaderNormalRow(a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.get_isSectionContentVisible = function () {\n        return this.ab;\n    };\n    BaseDataSource.prototype.set_isSectionContentVisible = function (a) {\n        var b = this.ab;\n        this.ab = a;\n        if (this.ab != b) {\n            this.onPropertyUpdated(\"IsSectionContentVisible\", b, this.ab);\n        }\n    };\n    Object.defineProperty(BaseDataSource.prototype, \"isSectionContentVisible\", {\n        get: function () {\n            return this.get_isSectionContentVisible();\n        },\n        set: function (a) {\n            this.set_isSectionContentVisible(a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"shouldEmitSectionHeaders\", {\n        get: function () {\n            return this.ai;\n        },\n        set: function (a) {\n            var b = this.ai;\n            this.ai = a;\n            if (this.ai != b) {\n                this.onPropertyUpdated(\"ShouldEmitSectionHeaders\", b, this.ai);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"shouldEmitSectionFooters\", {\n        get: function () {\n            return this.ah;\n        },\n        set: function (a) {\n            var b = this.ah;\n            this.ah = a;\n            if (this.ah != b) {\n                this.onPropertyUpdated(\"ShouldEmitSectionFooters\", b, this.ah);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDataSource.prototype, \"shouldEmitShiftedRows\", {\n        get: function () {\n            return this.aj;\n        },\n        set: function (a) {\n            var b = this.aj;\n            this.aj = a;\n            if (this.aj != b) {\n                this.onPropertyUpdated(\"ShouldEmitShiftedRows\", b, this.aj);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDataSource.prototype.ensureComparables = function (a) {\n        if (this.v && this.actualCount > 0 && this.actualBaseDataProvider != null) {\n            this.d = new Array(a.propertyNames.length);\n            this.v = false;\n        }\n    };\n    BaseDataSource.prototype.resolveSchemaPropertyType = function (a) {\n        return this.actualBaseDataProvider.resolveSchemaPropertyType(a);\n    };\n    BaseDataSource.prototype.setIsRowExpandedAtIndex = function (a, b) {\n    };\n    BaseDataSource.prototype.getIsRowExpandedAtIndex = function (a) {\n        return true;\n    };\n    BaseDataSource.prototype.getRowLevel = function (a) {\n        return 0;\n    };\n    BaseDataSource.prototype.getRootSummaryRowCount = function () {\n        return 0;\n    };\n    BaseDataSource.prototype.getRootSummaryResults = function () {\n        return null;\n    };\n    BaseDataSource.prototype.getSectionSummaryResults = function (a) {\n        return null;\n    };\n    BaseDataSource.prototype.clone = function () {\n        return null;\n    };\n    BaseDataSource.prototype.cloneProperties = function (a) {\n        var b = typeCast(BaseDataSource.$, a);\n        if (b != null) {\n            b.executionContext = this.executionContext;\n            b.includeSummaryRowsInSection = this.includeSummaryRowsInSection;\n            b.isSectionCollapsable = this.isSectionCollapsable;\n            b.isSectionExpandedDefault = this.isSectionExpandedDefault;\n            b.isSectionHeaderNormalRow = this.isSectionHeaderNormalRow;\n            b.isSectionSummaryRowsAtBottom = this.isSectionSummaryRowsAtBottom;\n            b.isSectionContentVisible = this.isSectionContentVisible;\n            b.primaryKey = this.primaryKey;\n            b.propertiesRequested = this.propertiesRequested;\n            b.sectionHeaderDisplayMode = this.sectionHeaderDisplayMode;\n            b.shouldEmitSectionFooters = this.shouldEmitSectionFooters;\n            b.shouldEmitSectionHeaders = this.shouldEmitSectionHeaders;\n            b.shouldEmitShiftedRows = this.shouldEmitShiftedRows;\n            b.summaryScope = this.summaryScope;\n            for (var c = 0; c < this.groupDescriptions.k.count; c++) {\n                b.groupDescriptions.add(this.groupDescriptions.k.item(c));\n            }\n            for (var d = 0; d < this.sortDescriptions.k.count; d++) {\n                b.sortDescriptions.add(this.sortDescriptions.k.item(d));\n            }\n            for (var e = 0; e < this.filterExpressions.j.count; e++) {\n                b.filterExpressions.add(this.filterExpressions.j.item(e));\n            }\n            for (var f = 0; f < this.summaryDescriptions.k.count; f++) {\n                b.summaryDescriptions.add(this.summaryDescriptions.k.item(f));\n            }\n        }\n    };\n    BaseDataSource.$t = markType(BaseDataSource, 'BaseDataSource', Base.$, [IDataSource_$type, IEditableDataSource_$type]);\n    return BaseDataSource;\n}(Base));\nexport { BaseDataSource };\n/**\n * @hidden\n */\nvar DefaultDataSourceDataProviderUpdateNotifier = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DefaultDataSourceDataProviderUpdateNotifier, _super);\n    function DefaultDataSourceDataProviderUpdateNotifier(a) {\n        var _this = _super.call(this) || this;\n        _this.a = null;\n        _this.a = a;\n        return _this;\n    }\n    DefaultDataSourceDataProviderUpdateNotifier.prototype.notifySetItem = function (a, b, c) {\n        this.a.onSetItem(a, b, c);\n    };\n    DefaultDataSourceDataProviderUpdateNotifier.prototype.notifyClearItems = function () {\n        this.a.onClearItems();\n    };\n    DefaultDataSourceDataProviderUpdateNotifier.prototype.notifyInsertItem = function (a, b) {\n        this.a.onInsertItem(a, b);\n    };\n    DefaultDataSourceDataProviderUpdateNotifier.prototype.notifyRemoveItem = function (a, b) {\n        this.a.onRemoveItem(a, b);\n    };\n    DefaultDataSourceDataProviderUpdateNotifier.$t = markType(DefaultDataSourceDataProviderUpdateNotifier, 'DefaultDataSourceDataProviderUpdateNotifier', Base.$, [IDataSourceDataProviderUpdateNotifier_$type]);\n    return DefaultDataSourceDataProviderUpdateNotifier;\n}(Base));\nexport { DefaultDataSourceDataProviderUpdateNotifier };\n//# sourceMappingURL=BaseDataSource_combined.js.map\n"]},"metadata":{},"sourceType":"module"}