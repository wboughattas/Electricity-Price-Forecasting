{"ast":null,"code":"//\n// System.Xml.XmlConvert\n//\n// Authors:\n//      Dwivedi, Ajay kumar (Adwiv@Yahoo.com)\n//\tGonzalo Paniagua Javier (gonzalo@ximian.com)\n//      Alan Tam Siu Lung (Tam@SiuLung.com)\n//\tAtsushi Enomoto (ginga@kit.hi-ho.ne.jp)\n//\n// (C) 2002 Ximian, Inc (http://www.ximian.com)\n//\nimport * as tslib_1 from \"tslib\"; //\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { Base, FormatException, markType } from \"./type\";\nimport { CultureInfo } from \"./culture\";\nimport { XmlChar } from \"./XmlChar\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { XmlException } from \"./XmlException\";\nimport { StringWriter } from \"./StringWriter\";\nimport { ArgumentNullException } from \"./ArgumentNullException\";\nimport { ArgumentOutOfRangeException } from \"./ArgumentOutOfRangeException\";\nimport { parseInt32_2, parseUInt8_2, parseNumber, parseNumber1, parseInt16_2, parseInt64_2, parseInt8_2, numberToString, parseInt32_1, parseUInt16_2, parseUInt32_2, parseUInt64_2 } from \"./numberExtended\";\nimport { intDivide, isNegativeInfinity, isPositiveInfinity, isNaN_ } from \"./number\";\nimport { stringReplace, stringEmpty, stringToCharArray } from \"./string\";\nimport { trim, stringCompareOrdinal } from \"./stringExtended\";\nimport { ConvertUtil } from \"./convertUtil\";\nimport { timeSpanTicks, timeSpanNegate, timeSpanDays, timeSpanHours, timeSpanMinutes, timeSpanSeconds, timeSpanMilliseconds, timeSpanInit3, timeSpanFromTicks } from \"./timespan\";\nimport { dateToStringFormat } from \"./dateExtended\";\n/**\n * @hidden\n */\n\nvar XmlConvert =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(XmlConvert, _super);\n\n  function XmlConvert() {\n    return _super.call(this) || this;\n  }\n\n  XmlConvert.ap = function (a) {\n    if (a == null || a.length < 6) {\n      return a;\n    }\n\n    var b = '\\uffff';\n\n    try {\n      b = String.fromCharCode(parseInt32_2(a.substr(1, 4), 515, CultureInfo.invariantCulture));\n    } catch (c) {\n      return a.charAt(0) + XmlConvert.s(a.substr(1));\n    }\n\n    if (a.length == 6) {\n      return b.toString();\n    }\n\n    return b + XmlConvert.s(a.substr(6));\n  };\n\n  XmlConvert.s = function (a) {\n    if (a == null || a.length == 0) {\n      return a;\n    }\n\n    var b = a.indexOf('_');\n\n    if (b == -1 || b + 6 >= a.length) {\n      return a;\n    }\n\n    if (a.charAt(b + 1) != 'X' && a.charAt(b + 1) != 'x' || a.charAt(b + 6) != '_') {\n      return a.charAt(0) + XmlConvert.s(a.substr(1));\n    }\n\n    return a.substr(0, b) + XmlConvert.ap(a.substr(b + 1));\n  };\n\n  XmlConvert.u = function (a) {\n    if (a == null) {\n      return a;\n    }\n\n    var b = XmlConvert.v(a);\n    var c = b.indexOf(':');\n\n    if (c == -1) {\n      return b;\n    }\n\n    return stringReplace(b, \":\", \"_x003A_\");\n  };\n\n  XmlConvert.c = function (a, b) {\n    if (a == ':') {\n      return false;\n    }\n\n    if (b) {\n      return !XmlChar.e(a.charCodeAt(0));\n    } else {\n      return !XmlChar.h(a.charCodeAt(0));\n    }\n  };\n\n  XmlConvert.w = function (a, b) {\n    if (a == null || a.length == 0) {\n      return a;\n    }\n\n    var c = new StringBuilder(0);\n    var d = a.length;\n\n    for (var e = 0; e < d; e++) {\n      var f = a.charAt(e);\n\n      if (XmlConvert.c(f, e == 0 && !b)) {\n        c.q(\"_x{0:X4}_\", f.charCodeAt(0));\n      } else if (f == '_' && e + 6 < d && a.charAt(e + 1) == 'x' && a.charAt(e + 6) == '_') {\n        c.l(\"_x005F_\");\n      } else {\n        c.h(f);\n      }\n    }\n\n    return c.toString();\n  };\n\n  XmlConvert.v = function (a) {\n    return XmlConvert.w(a, false);\n  };\n\n  XmlConvert.x = function (a) {\n    if (a == stringEmpty()) {\n      throw new XmlException(3, \"Invalid NmToken: ''\");\n    }\n\n    return XmlConvert.w(a, true);\n  };\n\n  XmlConvert.d = function (a) {\n    a = trim.apply(void 0, tslib_1.__spread([a], XmlChar.d));\n\n    switch (a) {\n      case \"1\":\n        return true;\n\n      case \"true\":\n        return true;\n\n      case \"0\":\n        return false;\n\n      case \"false\":\n        return false;\n\n      default:\n        throw new FormatException(1, a + \" is not a valid boolean value\");\n    }\n  };\n\n  XmlConvert.y = function (a) {\n    var b = new StringWriter(0);\n    XmlConvert.ay(a, 0, a.length, b);\n    return b.toString();\n  };\n\n  XmlConvert.ay = function (a, b, c, d) {\n    if (a == null) {\n      throw new ArgumentNullException(0, \"buffer\");\n    }\n\n    if (b < 0) {\n      throw new ArgumentOutOfRangeException(3, \"index\", b, \"index must be non negative integer.\");\n    }\n\n    if (c < 0) {\n      throw new ArgumentOutOfRangeException(3, \"count\", c, \"count must be non negative integer.\");\n    }\n\n    if (a.length < b + c) {\n      throw new ArgumentOutOfRangeException(1, \"index and count must be smaller than the length of the buffer.\");\n    }\n\n    var e = b + c;\n\n    for (var f = b; f < e; f++) {\n      var g = a[f];\n      var h = g >> 4;\n      var i = g & 15;\n\n      if (h > 9) {\n        d.o(String.fromCharCode(h + 55));\n      } else {\n        d.o(String.fromCharCode(h + 48));\n      }\n\n      if (i > 9) {\n        d.o(String.fromCharCode(i + 55));\n      } else {\n        d.o(String.fromCharCode(i + 48));\n      }\n    }\n  };\n\n  XmlConvert.f = function (a) {\n    return parseUInt8_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.g = function (a) {\n    return ConvertUtil.toChar(a);\n  };\n\n  XmlConvert.h = function (a) {\n    return parseNumber(a, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.i = function (a) {\n    if (a == null) {\n      throw new ArgumentNullException(1);\n    }\n\n    var b = XmlConvert.r(a);\n\n    if (b != 0) {\n      return b;\n    }\n\n    return parseNumber1(a, 423, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.r = function (a) {\n    var b = 0;\n\n    while (b < a.length && /\\s/i.test(a.charAt(b))) {\n      b++;\n    }\n\n    if (b == a.length) {\n      throw new FormatException(0);\n    }\n\n    var c = a.length - 1;\n\n    while (/\\s/i.test(a.charAt(c))) {\n      c--;\n    }\n\n    if (XmlConvert.e(\"NaN\", a, b, c)) {\n      return NaN;\n    }\n\n    if (XmlConvert.e(\"INF\", a, b, c)) {\n      return Number.POSITIVE_INFINITY;\n    }\n\n    if (XmlConvert.e(\"-INF\", a, b, c)) {\n      return Number.NEGATIVE_INFINITY;\n    }\n\n    if (XmlConvert.e(\"Infinity\", a, b, c)) {\n      return Number.POSITIVE_INFINITY;\n    }\n\n    if (XmlConvert.e(\"-Infinity\", a, b, c)) {\n      return Number.NEGATIVE_INFINITY;\n    }\n\n    return 0;\n  };\n\n  XmlConvert.e = function (a, b, c, d) {\n    return d - c + 1 == a.length && stringCompareOrdinal(a, 0, b, c, a.length) == 0;\n  };\n\n  XmlConvert.l = function (a) {\n    return parseInt16_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.n = function (a) {\n    return parseInt32_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.o = function (a) {\n    return parseInt64_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.p = function (a) {\n    return parseInt8_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.q = function (a) {\n    if (a == null) {\n      throw new ArgumentNullException(1);\n    }\n\n    var b = XmlConvert.r(a);\n\n    if (b != 0) {\n      return b;\n    }\n\n    return parseNumber1(a, 423, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.ah = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.ag = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.aa = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.ai = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.ab = function (a) {\n    return ConvertUtil.toString1(a, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.z = function (a) {\n    if (a) {\n      return \"true\";\n    }\n\n    return \"false\";\n  };\n\n  XmlConvert.aj = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.ae = function (a) {\n    return numberToString(a, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.ao = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.al = function (a) {\n    if (a == 0) {\n      return \"PT0S\";\n    }\n\n    var b = new StringBuilder(0);\n\n    if (timeSpanTicks(a) < 0) {\n      if (a == -9007199254740991) {\n        return \"-P10675199DT2H48M5.4775808S\";\n      }\n\n      b.h('-');\n      a = timeSpanNegate(a);\n    }\n\n    b.h('P');\n\n    if (timeSpanDays(a) > 0) {\n      b.j(timeSpanDays(a)).h('D');\n    }\n\n    var c = timeSpanTicks(a) % 10000;\n\n    if (timeSpanDays(a) > 0 || timeSpanHours(a) > 0 || timeSpanMinutes(a) > 0 || timeSpanSeconds(a) > 0 || timeSpanMilliseconds(a) > 0 || c > 0) {\n      b.h('T');\n\n      if (timeSpanHours(a) > 0) {\n        b.j(timeSpanHours(a)).h('H');\n      }\n\n      if (timeSpanMinutes(a) > 0) {\n        b.j(timeSpanMinutes(a)).h('M');\n      }\n\n      if (timeSpanSeconds(a) > 0 || timeSpanMilliseconds(a) > 0 || c > 0) {\n        b.j(timeSpanSeconds(a));\n        var d = true;\n\n        if (c > 0) {\n          b.h('.').q(\"{0:0000000}\", timeSpanTicks(a) % 10000000);\n        } else if (timeSpanMilliseconds(a) > 0) {\n          b.h('.').q(\"{0:000}\", timeSpanMilliseconds(a));\n        } else {\n          d = false;\n        }\n\n        if (d) {\n          while (b.item(b.c - 1) == '0') {\n            b.y(b.c - 1, 1);\n          }\n        }\n\n        b.h('S');\n      }\n    }\n\n    return b.toString();\n  };\n\n  XmlConvert.af = function (a) {\n    if (isNegativeInfinity(a)) {\n      return \"-INF\";\n    }\n\n    if (isPositiveInfinity(a)) {\n      return \"INF\";\n    }\n\n    if (isNaN_(a)) {\n      return \"NaN\";\n    }\n\n    return a.toString();\n  };\n\n  XmlConvert.ak = function (a) {\n    if (isNegativeInfinity(a)) {\n      return \"-INF\";\n    }\n\n    if (isPositiveInfinity(a)) {\n      return \"INF\";\n    }\n\n    if (isNaN_(a)) {\n      return \"NaN\";\n    }\n\n    return a.toString();\n  };\n\n  XmlConvert.an = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.am = function (a) {\n    return a.toString();\n  };\n\n  XmlConvert.ac = function (a) {\n    return dateToStringFormat(a, \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\", CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.ad = function (a, b) {\n    return dateToStringFormat(a, b, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.au = function (a) {\n    a = trim.apply(void 0, tslib_1.__spread([a], XmlChar.d));\n\n    if (a.length == 0) {\n      throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n    }\n\n    var b = 0;\n\n    if (a.charAt(0) == '-') {\n      b = 1;\n    }\n\n    var c = b == 1;\n\n    if (a.charAt(b) != 'P') {\n      throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n    }\n\n    b++;\n    var d = 0;\n    var e = 0;\n    var f = false;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = false;\n    var m = b;\n\n    while (m < a.length) {\n      if (a.charAt(m) == 'T') {\n        f = true;\n        d = 4;\n        m++;\n        b = m;\n        continue;\n      }\n\n      for (; m < a.length; m++) {\n        if (a.charAt(m).charCodeAt(0) < '0'.charCodeAt(0) || '9'.charCodeAt(0) < a.charAt(m).charCodeAt(0)) {\n          break;\n        }\n      }\n\n      if (d == 7) {\n        k = m - b;\n      }\n\n      var n = parseInt32_1(a.substr(b, m - b), CultureInfo.invariantCulture);\n\n      if (d == 7) {\n        for (; k > 7; k--) {\n          n = intDivide(n, 10);\n        }\n\n        for (; k < 7; k++) {\n          n *= 10;\n        }\n      }\n\n      switch (a.charAt(m)) {\n        case 'Y':\n          e += n * 365;\n\n          if (d > 0) {\n            l = true;\n          } else {\n            d = 1;\n          }\n\n          break;\n\n        case 'M':\n          if (d < 2) {\n            e += 365 * intDivide(n, 12) + 30 * (n % 12);\n            d = 2;\n          } else if (f && d < 6) {\n            h = n;\n            d = 6;\n          } else {\n            l = true;\n          }\n\n          break;\n\n        case 'D':\n          e += n;\n\n          if (d > 2) {\n            l = true;\n          } else {\n            d = 3;\n          }\n\n          break;\n\n        case 'H':\n          g = n;\n\n          if (!f || d > 4) {\n            l = true;\n          } else {\n            d = 5;\n          }\n\n          break;\n\n        case 'S':\n          if (d == 7) {\n            j = n;\n          } else {\n            i = n;\n          }\n\n          if (!f || d > 7) {\n            l = true;\n          } else {\n            d = 8;\n          }\n\n          break;\n\n        case '.':\n          if (d > 7) {\n            l = true;\n          }\n\n          i = n;\n          d = 7;\n          break;\n\n        default:\n          l = true;\n          break;\n      }\n\n      if (l) {\n        break;\n      }\n\n      ++m;\n      b = m;\n    }\n\n    if (l) {\n      throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n    }\n\n    var o = timeSpanInit3(e, g, h, i);\n\n    if (c) {\n      return timeSpanFromTicks(-(timeSpanTicks(o) + j));\n    } else {\n      return timeSpanFromTicks(timeSpanTicks(o) + j);\n    }\n  };\n\n  XmlConvert.av = function (a) {\n    return parseUInt16_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.aw = function (a) {\n    return parseUInt32_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.ax = function (a) {\n    return parseUInt64_2(a, 7, CultureInfo.invariantCulture);\n  };\n\n  XmlConvert.aq = function (a) {\n    if (a == null || a.length == 0) {\n      throw new ArgumentNullException(0, \"name\");\n    }\n\n    if (!XmlChar.g(a)) {\n      throw new XmlException(3, \"'\" + a + \"' is not a valid XML Name\");\n    }\n\n    return a;\n  };\n\n  XmlConvert.ar = function (a) {\n    if (a == null || a.length == 0) {\n      throw new ArgumentNullException(0, \"ncname\");\n    }\n\n    if (!XmlChar.i(a)) {\n      throw new XmlException(3, \"'\" + a + \"' is not a valid XML NCName\");\n    }\n\n    return a;\n  };\n\n  XmlConvert.at = function (a) {\n    if (a == null) {\n      throw new ArgumentNullException(0, \"name\");\n    }\n\n    if (a.length == 0) {\n      return a;\n    }\n\n    if (XmlChar.p(a.charAt(0).charCodeAt(0)) || XmlChar.p(a.charAt(a.length - 1).charCodeAt(0))) {\n      throw new XmlException(3, \"Whitespace characters (#xA, #xD, #x9, #x20) are not allowed as leading or trailing whitespaces of xs:token.\");\n    }\n\n    for (var b = 0; b < a.length; b++) {\n      if (XmlChar.p(a.charAt(b).charCodeAt(0)) && a.charAt(b) != ' ') {\n        throw new XmlException(3, \"Either #xA, #xD or #x9 are not allowed inside xs:token.\");\n      }\n    }\n\n    return a;\n  };\n\n  XmlConvert.as = function (a) {\n    if (a == null) {\n      throw new ArgumentNullException(0, \"name\");\n    }\n\n    if (!XmlChar.k(a)) {\n      throw new XmlException(3, \"'\" + a + \"' is not a valid XML NMTOKEN\");\n    }\n\n    return a;\n  };\n\n  XmlConvert.b = function (a) {\n    var b = stringToCharArray(a);\n    var c = new Array(intDivide(b.length, 2) + b.length % 2);\n    XmlConvert.m(b, 0, b.length, c);\n    return c;\n  };\n\n  XmlConvert.m = function (a, b, c, d) {\n    var e = b;\n\n    for (var f = 0; f < c - 1; f += 2) {\n      d[e] = a[f].charCodeAt(0) > '9'.charCodeAt(0) ? a[f].charCodeAt(0) - 'A'.charCodeAt(0) + 10 : a[f].charCodeAt(0) - '0'.charCodeAt(0);\n      d[e] <<= 4;\n      d[e] += a[f + 1].charCodeAt(0) > '9'.charCodeAt(0) ? a[f + 1].charCodeAt(0) - 'A'.charCodeAt(0) + 10 : a[f + 1].charCodeAt(0) - '0'.charCodeAt(0);\n      e++;\n    }\n\n    if (c % 2 != 0) {\n      d[e++] = (a[c - 1].charCodeAt(0) > '9'.charCodeAt(0) ? a[c - 1].charCodeAt(0) - 'A'.charCodeAt(0) + 10 : a[c - 1].charCodeAt(0) - '0'.charCodeAt(0)) << 4;\n    }\n\n    return e - b;\n  };\n\n  XmlConvert.$t = markType(XmlConvert, 'XmlConvert');\n  XmlConvert.a = [\"yyyy-MM-ddTHH:mm:sszzz\", \"yyyy-MM-ddTHH:mm:ss.fzzz\", \"yyyy-MM-ddTHH:mm:ss.ffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffzzz\", \"yyyy-MM-ddTHH:mm:ss.ffffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffffzzz\", \"yyyy-MM-ddTHH:mm:ss.ffffffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\", \"yyyy-MM-ddTHH:mm:ssZ\", \"yyyy-MM-ddTHH:mm:ss.fZ\", \"yyyy-MM-ddTHH:mm:ss.ffZ\", \"yyyy-MM-ddTHH:mm:ss.fffZ\", \"yyyy-MM-ddTHH:mm:ss.ffffZ\", \"yyyy-MM-ddTHH:mm:ss.fffffZ\", \"yyyy-MM-ddTHH:mm:ss.ffffffZ\", \"yyyy-MM-ddTHH:mm:ss.fffffffZ\", \"yyyy-MM-ddTHH:mm:ss\", \"yyyy-MM-ddTHH:mm:ss.f\", \"yyyy-MM-ddTHH:mm:ss.ff\", \"yyyy-MM-ddTHH:mm:ss.fff\", \"yyyy-MM-ddTHH:mm:ss.ffff\", \"yyyy-MM-ddTHH:mm:ss.fffff\", \"yyyy-MM-ddTHH:mm:ss.ffffff\", \"yyyy-MM-ddTHH:mm:ss.fffffff\", \"HH:mm:ss\", \"HH:mm:ss.f\", \"HH:mm:ss.ff\", \"HH:mm:ss.fff\", \"HH:mm:ss.ffff\", \"HH:mm:ss.fffff\", \"HH:mm:ss.ffffff\", \"HH:mm:ss.fffffff\", \"HH:mm:sszzz\", \"HH:mm:ss.fzzz\", \"HH:mm:ss.ffzzz\", \"HH:mm:ss.fffzzz\", \"HH:mm:ss.ffffzzz\", \"HH:mm:ss.fffffzzz\", \"HH:mm:ss.ffffffzzz\", \"HH:mm:ss.fffffffzzz\", \"HH:mm:ssZ\", \"HH:mm:ss.fZ\", \"HH:mm:ss.ffZ\", \"HH:mm:ss.fffZ\", \"HH:mm:ss.ffffZ\", \"HH:mm:ss.fffffZ\", \"HH:mm:ss.ffffffZ\", \"HH:mm:ss.fffffffZ\", \"yyyy-MM-dd\", \"yyyy-MM-ddzzz\", \"yyyy-MM-ddZ\", \"yyyy-MM\", \"yyyy-MMzzz\", \"yyyy-MMZ\", \"yyyy\", \"yyyyzzz\", \"yyyyZ\", \"--MM-dd\", \"--MM-ddzzz\", \"--MM-ddZ\", \"---dd\", \"---ddzzz\", \"---ddZ\"];\n  return XmlConvert;\n}(Base);\n\nexport { XmlConvert };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/XmlConvert.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["//\n// System.Xml.XmlConvert\n//\n// Authors:\n//      Dwivedi, Ajay kumar (Adwiv@Yahoo.com)\n//\tGonzalo Paniagua Javier (gonzalo@ximian.com)\n//      Alan Tam Siu Lung (Tam@SiuLung.com)\n//\tAtsushi Enomoto (ginga@kit.hi-ho.ne.jp)\n//\n// (C) 2002 Ximian, Inc (http://www.ximian.com)\n//\nimport * as tslib_1 from \"tslib\";\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport { Base, FormatException, markType } from \"./type\";\nimport { CultureInfo } from \"./culture\";\nimport { XmlChar } from \"./XmlChar\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { XmlException } from \"./XmlException\";\nimport { StringWriter } from \"./StringWriter\";\nimport { ArgumentNullException } from \"./ArgumentNullException\";\nimport { ArgumentOutOfRangeException } from \"./ArgumentOutOfRangeException\";\nimport { parseInt32_2, parseUInt8_2, parseNumber, parseNumber1, parseInt16_2, parseInt64_2, parseInt8_2, numberToString, parseInt32_1, parseUInt16_2, parseUInt32_2, parseUInt64_2 } from \"./numberExtended\";\nimport { intDivide, isNegativeInfinity, isPositiveInfinity, isNaN_ } from \"./number\";\nimport { stringReplace, stringEmpty, stringToCharArray } from \"./string\";\nimport { trim, stringCompareOrdinal } from \"./stringExtended\";\nimport { ConvertUtil } from \"./convertUtil\";\nimport { timeSpanTicks, timeSpanNegate, timeSpanDays, timeSpanHours, timeSpanMinutes, timeSpanSeconds, timeSpanMilliseconds, timeSpanInit3, timeSpanFromTicks } from \"./timespan\";\nimport { dateToStringFormat } from \"./dateExtended\";\n/**\n * @hidden\n */\nvar XmlConvert = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(XmlConvert, _super);\n    function XmlConvert() {\n        return _super.call(this) || this;\n    }\n    XmlConvert.ap = function (a) {\n        if (a == null || a.length < 6) {\n            return a;\n        }\n        var b = '\\uffff';\n        try {\n            b = String.fromCharCode(parseInt32_2(a.substr(1, 4), 515, CultureInfo.invariantCulture));\n        }\n        catch (c) {\n            return a.charAt(0) + XmlConvert.s(a.substr(1));\n        }\n        if (a.length == 6) {\n            return b.toString();\n        }\n        return b + XmlConvert.s(a.substr(6));\n    };\n    XmlConvert.s = function (a) {\n        if (a == null || a.length == 0) {\n            return a;\n        }\n        var b = a.indexOf('_');\n        if (b == -1 || b + 6 >= a.length) {\n            return a;\n        }\n        if ((a.charAt(b + 1) != 'X' && a.charAt(b + 1) != 'x') || a.charAt(b + 6) != '_') {\n            return a.charAt(0) + XmlConvert.s(a.substr(1));\n        }\n        return a.substr(0, b) + XmlConvert.ap(a.substr(b + 1));\n    };\n    XmlConvert.u = function (a) {\n        if (a == null) {\n            return a;\n        }\n        var b = XmlConvert.v(a);\n        var c = b.indexOf(':');\n        if (c == -1) {\n            return b;\n        }\n        return stringReplace(b, \":\", \"_x003A_\");\n    };\n    XmlConvert.c = function (a, b) {\n        if (a == ':') {\n            return false;\n        }\n        if (b) {\n            return !XmlChar.e(a.charCodeAt(0));\n        }\n        else {\n            return !XmlChar.h(a.charCodeAt(0));\n        }\n    };\n    XmlConvert.w = function (a, b) {\n        if (a == null || a.length == 0) {\n            return a;\n        }\n        var c = new StringBuilder(0);\n        var d = a.length;\n        for (var e = 0; e < d; e++) {\n            var f = a.charAt(e);\n            if (XmlConvert.c(f, e == 0 && !b)) {\n                c.q(\"_x{0:X4}_\", f.charCodeAt(0));\n            }\n            else if (f == '_' && e + 6 < d && a.charAt(e + 1) == 'x' && a.charAt(e + 6) == '_') {\n                c.l(\"_x005F_\");\n            }\n            else {\n                c.h(f);\n            }\n        }\n        return c.toString();\n    };\n    XmlConvert.v = function (a) {\n        return XmlConvert.w(a, false);\n    };\n    XmlConvert.x = function (a) {\n        if (a == stringEmpty()) {\n            throw new XmlException(3, \"Invalid NmToken: ''\");\n        }\n        return XmlConvert.w(a, true);\n    };\n    XmlConvert.d = function (a) {\n        a = trim.apply(void 0, tslib_1.__spread([a], XmlChar.d));\n        switch (a) {\n            case \"1\": return true;\n            case \"true\": return true;\n            case \"0\": return false;\n            case \"false\": return false;\n            default: throw new FormatException(1, a + \" is not a valid boolean value\");\n        }\n    };\n    XmlConvert.y = function (a) {\n        var b = new StringWriter(0);\n        XmlConvert.ay(a, 0, a.length, b);\n        return b.toString();\n    };\n    XmlConvert.ay = function (a, b, c, d) {\n        if (a == null) {\n            throw new ArgumentNullException(0, \"buffer\");\n        }\n        if (b < 0) {\n            throw new ArgumentOutOfRangeException(3, \"index\", b, \"index must be non negative integer.\");\n        }\n        if (c < 0) {\n            throw new ArgumentOutOfRangeException(3, \"count\", c, \"count must be non negative integer.\");\n        }\n        if (a.length < b + c) {\n            throw new ArgumentOutOfRangeException(1, \"index and count must be smaller than the length of the buffer.\");\n        }\n        var e = b + c;\n        for (var f = b; f < e; f++) {\n            var g = a[f];\n            var h = g >> 4;\n            var i = g & 15;\n            if (h > 9) {\n                d.o(String.fromCharCode((h + 55)));\n            }\n            else {\n                d.o(String.fromCharCode((h + 48)));\n            }\n            if (i > 9) {\n                d.o(String.fromCharCode((i + 55)));\n            }\n            else {\n                d.o(String.fromCharCode((i + 48)));\n            }\n        }\n    };\n    XmlConvert.f = function (a) {\n        return parseUInt8_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.g = function (a) {\n        return ConvertUtil.toChar(a);\n    };\n    XmlConvert.h = function (a) {\n        return parseNumber(a, CultureInfo.invariantCulture);\n    };\n    XmlConvert.i = function (a) {\n        if (a == null) {\n            throw new ArgumentNullException(1);\n        }\n        var b = XmlConvert.r(a);\n        if (b != 0) {\n            return b;\n        }\n        return parseNumber1(a, 423, CultureInfo.invariantCulture);\n    };\n    XmlConvert.r = function (a) {\n        var b = 0;\n        while (b < a.length && /\\s/i.test(a.charAt(b))) {\n            b++;\n        }\n        if (b == a.length) {\n            throw new FormatException(0);\n        }\n        var c = a.length - 1;\n        while (/\\s/i.test(a.charAt(c))) {\n            c--;\n        }\n        if (XmlConvert.e(\"NaN\", a, b, c)) {\n            return NaN;\n        }\n        if (XmlConvert.e(\"INF\", a, b, c)) {\n            return Number.POSITIVE_INFINITY;\n        }\n        if (XmlConvert.e(\"-INF\", a, b, c)) {\n            return Number.NEGATIVE_INFINITY;\n        }\n        if (XmlConvert.e(\"Infinity\", a, b, c)) {\n            return Number.POSITIVE_INFINITY;\n        }\n        if (XmlConvert.e(\"-Infinity\", a, b, c)) {\n            return Number.NEGATIVE_INFINITY;\n        }\n        return 0;\n    };\n    XmlConvert.e = function (a, b, c, d) {\n        return d - c + 1 == a.length && stringCompareOrdinal(a, 0, b, c, a.length) == 0;\n    };\n    XmlConvert.l = function (a) {\n        return parseInt16_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.n = function (a) {\n        return parseInt32_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.o = function (a) {\n        return parseInt64_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.p = function (a) {\n        return parseInt8_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.q = function (a) {\n        if (a == null) {\n            throw new ArgumentNullException(1);\n        }\n        var b = XmlConvert.r(a);\n        if (b != 0) {\n            return b;\n        }\n        return parseNumber1(a, 423, CultureInfo.invariantCulture);\n    };\n    XmlConvert.ah = function (a) {\n        return a.toString();\n    };\n    XmlConvert.ag = function (a) {\n        return a.toString();\n    };\n    XmlConvert.aa = function (a) {\n        return a.toString();\n    };\n    XmlConvert.ai = function (a) {\n        return a.toString();\n    };\n    XmlConvert.ab = function (a) {\n        return ConvertUtil.toString1(a, CultureInfo.invariantCulture);\n    };\n    XmlConvert.z = function (a) {\n        if (a) {\n            return \"true\";\n        }\n        return \"false\";\n    };\n    XmlConvert.aj = function (a) {\n        return a.toString();\n    };\n    XmlConvert.ae = function (a) {\n        return numberToString(a, CultureInfo.invariantCulture);\n    };\n    XmlConvert.ao = function (a) {\n        return a.toString();\n    };\n    XmlConvert.al = function (a) {\n        if (a == (0)) {\n            return \"PT0S\";\n        }\n        var b = new StringBuilder(0);\n        if (timeSpanTicks(a) < 0) {\n            if (a == (-9007199254740991)) {\n                return \"-P10675199DT2H48M5.4775808S\";\n            }\n            b.h('-');\n            a = timeSpanNegate(a);\n        }\n        b.h('P');\n        if (timeSpanDays(a) > 0) {\n            b.j(timeSpanDays(a)).h('D');\n        }\n        var c = timeSpanTicks(a) % (10000);\n        if (timeSpanDays(a) > 0 || timeSpanHours(a) > 0 || timeSpanMinutes(a) > 0 || timeSpanSeconds(a) > 0 || timeSpanMilliseconds(a) > 0 || c > 0) {\n            b.h('T');\n            if (timeSpanHours(a) > 0) {\n                b.j(timeSpanHours(a)).h('H');\n            }\n            if (timeSpanMinutes(a) > 0) {\n                b.j(timeSpanMinutes(a)).h('M');\n            }\n            if (timeSpanSeconds(a) > 0 || timeSpanMilliseconds(a) > 0 || c > 0) {\n                b.j(timeSpanSeconds(a));\n                var d = true;\n                if (c > 0) {\n                    b.h('.').q(\"{0:0000000}\", timeSpanTicks(a) % (10000000));\n                }\n                else if (timeSpanMilliseconds(a) > 0) {\n                    b.h('.').q(\"{0:000}\", timeSpanMilliseconds(a));\n                }\n                else {\n                    d = false;\n                }\n                if (d) {\n                    while (b.item(b.c - 1) == '0') {\n                        b.y(b.c - 1, 1);\n                    }\n                }\n                b.h('S');\n            }\n        }\n        return b.toString();\n    };\n    XmlConvert.af = function (a) {\n        if (isNegativeInfinity(a)) {\n            return \"-INF\";\n        }\n        if (isPositiveInfinity(a)) {\n            return \"INF\";\n        }\n        if (isNaN_(a)) {\n            return \"NaN\";\n        }\n        return a.toString();\n    };\n    XmlConvert.ak = function (a) {\n        if (isNegativeInfinity(a)) {\n            return \"-INF\";\n        }\n        if (isPositiveInfinity(a)) {\n            return \"INF\";\n        }\n        if (isNaN_(a)) {\n            return \"NaN\";\n        }\n        return a.toString();\n    };\n    XmlConvert.an = function (a) {\n        return a.toString();\n    };\n    XmlConvert.am = function (a) {\n        return a.toString();\n    };\n    XmlConvert.ac = function (a) {\n        return dateToStringFormat(a, \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\", CultureInfo.invariantCulture);\n    };\n    XmlConvert.ad = function (a, b) {\n        return dateToStringFormat(a, b, CultureInfo.invariantCulture);\n    };\n    XmlConvert.au = function (a) {\n        a = trim.apply(void 0, tslib_1.__spread([a], XmlChar.d));\n        if (a.length == 0) {\n            throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n        }\n        var b = 0;\n        if (a.charAt(0) == '-') {\n            b = 1;\n        }\n        var c = (b == 1);\n        if (a.charAt(b) != 'P') {\n            throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n        }\n        b++;\n        var d = 0;\n        var e = 0;\n        var f = false;\n        var g = 0;\n        var h = 0;\n        var i = 0;\n        var j = 0;\n        var k = 0;\n        var l = false;\n        var m = b;\n        while (m < a.length) {\n            if (a.charAt(m) == 'T') {\n                f = true;\n                d = 4;\n                m++;\n                b = m;\n                continue;\n            }\n            for (; m < a.length; m++) {\n                if (a.charAt(m).charCodeAt(0) < '0'.charCodeAt(0) || '9'.charCodeAt(0) < a.charAt(m).charCodeAt(0)) {\n                    break;\n                }\n            }\n            if (d == 7) {\n                k = m - b;\n            }\n            var n = parseInt32_1(a.substr(b, m - b), CultureInfo.invariantCulture);\n            if (d == 7) {\n                for (; k > 7; k--) {\n                    n = intDivide(n, 10);\n                }\n                for (; k < 7; k++) {\n                    n *= 10;\n                }\n            }\n            switch (a.charAt(m)) {\n                case 'Y':\n                    e += n * 365;\n                    if (d > 0) {\n                        l = true;\n                    }\n                    else {\n                        d = 1;\n                    }\n                    break;\n                case 'M':\n                    if (d < 2) {\n                        e += 365 * (intDivide(n, 12)) + 30 * (n % 12);\n                        d = 2;\n                    }\n                    else if (f && d < 6) {\n                        h = n;\n                        d = 6;\n                    }\n                    else {\n                        l = true;\n                    }\n                    break;\n                case 'D':\n                    e += n;\n                    if (d > 2) {\n                        l = true;\n                    }\n                    else {\n                        d = 3;\n                    }\n                    break;\n                case 'H':\n                    g = n;\n                    if (!f || d > 4) {\n                        l = true;\n                    }\n                    else {\n                        d = 5;\n                    }\n                    break;\n                case 'S':\n                    if (d == 7) {\n                        j = n;\n                    }\n                    else {\n                        i = n;\n                    }\n                    if (!f || d > 7) {\n                        l = true;\n                    }\n                    else {\n                        d = 8;\n                    }\n                    break;\n                case '.':\n                    if (d > 7) {\n                        l = true;\n                    }\n                    i = n;\n                    d = 7;\n                    break;\n                default:\n                    l = true;\n                    break;\n            }\n            if (l) {\n                break;\n            }\n            ++m;\n            b = m;\n        }\n        if (l) {\n            throw new FormatException(1, \"Invalid format string for duration schema datatype.\");\n        }\n        var o = timeSpanInit3(e, g, h, i);\n        if (c) {\n            return timeSpanFromTicks(-(timeSpanTicks(o) + j));\n        }\n        else {\n            return timeSpanFromTicks(timeSpanTicks(o) + j);\n        }\n    };\n    XmlConvert.av = function (a) {\n        return parseUInt16_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.aw = function (a) {\n        return parseUInt32_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.ax = function (a) {\n        return parseUInt64_2(a, 7, CultureInfo.invariantCulture);\n    };\n    XmlConvert.aq = function (a) {\n        if (a == null || a.length == 0) {\n            throw new ArgumentNullException(0, \"name\");\n        }\n        if (!XmlChar.g(a)) {\n            throw new XmlException(3, \"'\" + a + \"' is not a valid XML Name\");\n        }\n        return a;\n    };\n    XmlConvert.ar = function (a) {\n        if (a == null || a.length == 0) {\n            throw new ArgumentNullException(0, \"ncname\");\n        }\n        if (!XmlChar.i(a)) {\n            throw new XmlException(3, \"'\" + a + \"' is not a valid XML NCName\");\n        }\n        return a;\n    };\n    XmlConvert.at = function (a) {\n        if (a == null) {\n            throw new ArgumentNullException(0, \"name\");\n        }\n        if (a.length == 0) {\n            return a;\n        }\n        if (XmlChar.p(a.charAt(0).charCodeAt(0)) || XmlChar.p(a.charAt(a.length - 1).charCodeAt(0))) {\n            throw new XmlException(3, \"Whitespace characters (#xA, #xD, #x9, #x20) are not allowed as leading or trailing whitespaces of xs:token.\");\n        }\n        for (var b = 0; b < a.length; b++) {\n            if (XmlChar.p(a.charAt(b).charCodeAt(0)) && a.charAt(b) != ' ') {\n                throw new XmlException(3, \"Either #xA, #xD or #x9 are not allowed inside xs:token.\");\n            }\n        }\n        return a;\n    };\n    XmlConvert.as = function (a) {\n        if (a == null) {\n            throw new ArgumentNullException(0, \"name\");\n        }\n        if (!XmlChar.k(a)) {\n            throw new XmlException(3, \"'\" + a + \"' is not a valid XML NMTOKEN\");\n        }\n        return a;\n    };\n    XmlConvert.b = function (a) {\n        var b = stringToCharArray(a);\n        var c = new Array(intDivide(b.length, 2) + b.length % 2);\n        XmlConvert.m(b, 0, b.length, c);\n        return c;\n    };\n    XmlConvert.m = function (a, b, c, d) {\n        var e = b;\n        for (var f = 0; f < c - 1; f += 2) {\n            d[e] = (a[f].charCodeAt(0) > '9'.charCodeAt(0) ? (a[f].charCodeAt(0) - 'A'.charCodeAt(0) + 10) : (a[f].charCodeAt(0) - '0'.charCodeAt(0)));\n            d[e] <<= 4;\n            d[e] += a[f + 1].charCodeAt(0) > '9'.charCodeAt(0) ? (a[f + 1].charCodeAt(0) - 'A'.charCodeAt(0) + 10) : (a[f + 1].charCodeAt(0) - '0'.charCodeAt(0));\n            e++;\n        }\n        if (c % 2 != 0) {\n            d[e++] = ((a[c - 1].charCodeAt(0) > '9'.charCodeAt(0) ? (a[c - 1].charCodeAt(0) - 'A'.charCodeAt(0) + 10) : (a[c - 1].charCodeAt(0) - '0'.charCodeAt(0))) << 4);\n        }\n        return e - b;\n    };\n    XmlConvert.$t = markType(XmlConvert, 'XmlConvert');\n    XmlConvert.a = [\"yyyy-MM-ddTHH:mm:sszzz\", \"yyyy-MM-ddTHH:mm:ss.fzzz\", \"yyyy-MM-ddTHH:mm:ss.ffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffzzz\", \"yyyy-MM-ddTHH:mm:ss.ffffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffffzzz\", \"yyyy-MM-ddTHH:mm:ss.ffffffzzz\", \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\", \"yyyy-MM-ddTHH:mm:ssZ\", \"yyyy-MM-ddTHH:mm:ss.fZ\", \"yyyy-MM-ddTHH:mm:ss.ffZ\", \"yyyy-MM-ddTHH:mm:ss.fffZ\", \"yyyy-MM-ddTHH:mm:ss.ffffZ\", \"yyyy-MM-ddTHH:mm:ss.fffffZ\", \"yyyy-MM-ddTHH:mm:ss.ffffffZ\", \"yyyy-MM-ddTHH:mm:ss.fffffffZ\", \"yyyy-MM-ddTHH:mm:ss\", \"yyyy-MM-ddTHH:mm:ss.f\", \"yyyy-MM-ddTHH:mm:ss.ff\", \"yyyy-MM-ddTHH:mm:ss.fff\", \"yyyy-MM-ddTHH:mm:ss.ffff\", \"yyyy-MM-ddTHH:mm:ss.fffff\", \"yyyy-MM-ddTHH:mm:ss.ffffff\", \"yyyy-MM-ddTHH:mm:ss.fffffff\", \"HH:mm:ss\", \"HH:mm:ss.f\", \"HH:mm:ss.ff\", \"HH:mm:ss.fff\", \"HH:mm:ss.ffff\", \"HH:mm:ss.fffff\", \"HH:mm:ss.ffffff\", \"HH:mm:ss.fffffff\", \"HH:mm:sszzz\", \"HH:mm:ss.fzzz\", \"HH:mm:ss.ffzzz\", \"HH:mm:ss.fffzzz\", \"HH:mm:ss.ffffzzz\", \"HH:mm:ss.fffffzzz\", \"HH:mm:ss.ffffffzzz\", \"HH:mm:ss.fffffffzzz\", \"HH:mm:ssZ\", \"HH:mm:ss.fZ\", \"HH:mm:ss.ffZ\", \"HH:mm:ss.fffZ\", \"HH:mm:ss.ffffZ\", \"HH:mm:ss.fffffZ\", \"HH:mm:ss.ffffffZ\", \"HH:mm:ss.fffffffZ\", \"yyyy-MM-dd\", \"yyyy-MM-ddzzz\", \"yyyy-MM-ddZ\", \"yyyy-MM\", \"yyyy-MMzzz\", \"yyyy-MMZ\", \"yyyy\", \"yyyyzzz\", \"yyyyZ\", \"--MM-dd\", \"--MM-ddzzz\", \"--MM-ddZ\", \"---dd\", \"---ddzzz\", \"---ddZ\"];\n    return XmlConvert;\n}(Base));\nexport { XmlConvert };\n//# sourceMappingURL=XmlConvert.js.map\n"]},"metadata":{},"sourceType":"module"}