{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { MarkerSeriesDescription } from \"./MarkerSeriesDescription\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar RadialBaseDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RadialBaseDescription, _super);\n\n  function RadialBaseDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.cg = null;\n    _this.ch = null;\n    _this.ce = false;\n    return _this;\n  }\n\n  RadialBaseDescription.prototype.get_type = function () {\n    return \"RadialBase\";\n  };\n\n  Object.defineProperty(RadialBaseDescription.prototype, \"angleAxisRef\", {\n    get: function () {\n      return this.cg;\n    },\n    set: function (a) {\n      this.cg = a;\n      this.e(\"AngleAxisRef\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RadialBaseDescription.prototype, \"valueAxisRef\", {\n    get: function () {\n      return this.ch;\n    },\n    set: function (a) {\n      this.ch = a;\n      this.e(\"ValueAxisRef\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RadialBaseDescription.prototype, \"clipSeriesToBounds\", {\n    get: function () {\n      return this.ce;\n    },\n    set: function (a) {\n      this.ce = a;\n      this.e(\"ClipSeriesToBounds\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  RadialBaseDescription.$t = markType(RadialBaseDescription, 'RadialBaseDescription', MarkerSeriesDescription.$);\n  return RadialBaseDescription;\n}(MarkerSeriesDescription);\n\nexport { RadialBaseDescription };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/RadialBaseDescription.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,uBAAT,QAAwC,2BAAxC;AAEA,SAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,qBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoD,EAAA,OAAA,CAAA,SAAA,CAAA,qBAAA,EAAA,MAAA;;AAKnD,WAAA,qBAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAGQ,IAAA,KAAA,CAAA,EAAA,GAAa,IAAb;AAQA,IAAA,KAAA,CAAA,EAAA,GAAa,IAAb;AAQA,IAAA,KAAA,CAAA,EAAA,GAAc,KAAd;;AAjBP;;AALS,EAAA,qBAAA,CAAA,SAAA,CAAA,QAAA,GAAV,YAAA;AACC,WAAO,YAAP;AACA,GAFS;;AAOV,EAAA,MAAA,CAAA,cAAA,CAAI,qBAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;SAAhB,YAAA;AACC,aAAO,KAAK,EAAZ;AACA,KAFe;SAGhB,UAAiB,CAAjB,EAA0B;AACzB,WAAK,EAAL,GAAU,CAAV;AACA,WAAK,CAAL,CAAO,cAAP;AACA,KANe;oBAAA;;AAAA,GAAhB;AAQA,EAAA,MAAA,CAAA,cAAA,CAAI,qBAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;SAAhB,YAAA;AACC,aAAO,KAAK,EAAZ;AACA,KAFe;SAGhB,UAAiB,CAAjB,EAA0B;AACzB,WAAK,EAAL,GAAU,CAAV;AACA,WAAK,CAAL,CAAO,cAAP;AACA,KANe;oBAAA;;AAAA,GAAhB;AAQA,EAAA,MAAA,CAAA,cAAA,CAAI,qBAAA,CAAA,SAAJ,EAAI,oBAAJ,EAAsB;SAAtB,YAAA;AACC,aAAO,KAAK,EAAZ;AACA,KAFqB;SAGtB,UAAuB,CAAvB,EAAiC;AAChC,WAAK,EAAL,GAAU,CAAV;AACA,WAAK,CAAL,CAAO,oBAAP;AACA,KANqB;oBAAA;;AAAA,GAAtB;AAxBO,EAAA,qBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,qBAAD,EAAwB,uBAAxB,EAAuD,uBAAwB,CAAC,CAAhF,CAAnB;AA+BR,SAAA,qBAAA;AAAC,CAhCD,CAAoD,uBAApD,CAAA;;SAAsB,qB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { MarkerSeriesDescription } from \"./MarkerSeriesDescription\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar RadialBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RadialBaseDescription, _super);\n    function RadialBaseDescription() {\n        var _this = _super.call(this) || this;\n        _this.cg = null;\n        _this.ch = null;\n        _this.ce = false;\n        return _this;\n    }\n    RadialBaseDescription.prototype.get_type = function () {\n        return \"RadialBase\";\n    };\n    Object.defineProperty(RadialBaseDescription.prototype, \"angleAxisRef\", {\n        get: function () {\n            return this.cg;\n        },\n        set: function (a) {\n            this.cg = a;\n            this.e(\"AngleAxisRef\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadialBaseDescription.prototype, \"valueAxisRef\", {\n        get: function () {\n            return this.ch;\n        },\n        set: function (a) {\n            this.ch = a;\n            this.e(\"ValueAxisRef\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadialBaseDescription.prototype, \"clipSeriesToBounds\", {\n        get: function () {\n            return this.ce;\n        },\n        set: function (a) {\n            this.ce = a;\n            this.e(\"ClipSeriesToBounds\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadialBaseDescription.$t = markType(RadialBaseDescription, 'RadialBaseDescription', MarkerSeriesDescription.$);\n    return RadialBaseDescription;\n}(MarkerSeriesDescription));\nexport { RadialBaseDescription };\n//# sourceMappingURL=RadialBaseDescription.js.map\n"]},"metadata":{},"sourceType":"module"}