{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar TransactionState =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TransactionState, _super);\n\n  function TransactionState(a, b, c) {\n    var _this = _super.call(this) || this;\n\n    _this._id = null;\n    _this._transactionType = 0;\n    _this._value = null;\n    _this._version = null;\n    _this.id = a;\n    _this.transactionType = b;\n    _this.value = c;\n    return _this;\n  }\n\n  Object.defineProperty(TransactionState.prototype, \"id\", {\n    get: function () {\n      return this._id;\n    },\n    set: function (a) {\n      this._id = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TransactionState.prototype, \"transactionType\", {\n    get: function () {\n      return this._transactionType;\n    },\n    set: function (a) {\n      this._transactionType = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TransactionState.prototype, \"value\", {\n    get: function () {\n      return this._value;\n    },\n    set: function (a) {\n      this._value = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TransactionState.prototype, \"version\", {\n    get: function () {\n      return this._version;\n    },\n    set: function (a) {\n      this._version = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  TransactionState.$t = markType(TransactionState, 'TransactionState');\n  return TransactionState;\n}(Base);\n\nexport { TransactionState };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TransactionState.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAqB,QAArB,QAAqC,QAArC;AAGA;;AAEG;;AACH,IAAA,gBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,OAAA,CAAA,SAAA,CAAA,gBAAA,EAAA,MAAA;;AA8BrC,WAAA,gBAAA,CAAY,CAAZ,EAAoB,CAApB,EAAwC,CAAxC,EAA8C;AAA9C,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AA5BQ,IAAA,KAAA,CAAA,GAAA,GAAW,IAAX;AAOA,IAAA,KAAA,CAAA,gBAAA,GAAqD,CAArD;AAOA,IAAA,KAAA,CAAA,MAAA,GAAc,IAAd;AAOA,IAAA,KAAA,CAAA,QAAA,GAAgB,IAAhB;AASP,IAAA,KAAI,CAAC,EAAL,GAAU,CAAV;AACA,IAAA,KAAI,CAAC,eAAL,GAAuB,CAAvB;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,CAAb;;AACA;;AAhCD,EAAA,MAAA,CAAA,cAAA,CAAI,gBAAA,CAAA,SAAJ,EAAI,IAAJ,EAAM;SAAN,YAAA;AACC,aAAO,KAAK,GAAZ;AACA,KAFK;SAGN,UAAO,CAAP,EAAa;AACZ,WAAK,GAAL,GAAW,CAAX;AACA,KALK;oBAAA;;AAAA,GAAN;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,gBAAA,CAAA,SAAJ,EAAI,iBAAJ,EAAmB;SAAnB,YAAA;AACC,aAAO,KAAK,gBAAZ;AACA,KAFkB;SAGnB,UAAoB,CAApB,EAAsC;AACrC,WAAK,gBAAL,GAAwB,CAAxB;AACA,KALkB;oBAAA;;AAAA,GAAnB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,gBAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;SAAT,YAAA;AACC,aAAO,KAAK,MAAZ;AACA,KAFQ;SAGT,UAAU,CAAV,EAAgB;AACf,WAAK,MAAL,GAAc,CAAd;AACA,KALQ;oBAAA;;AAAA,GAAT;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,gBAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;SAAX,YAAA;AACC,aAAO,KAAK,QAAZ;AACA,KAFU;SAGX,UAAY,CAAZ,EAAkB;AACjB,WAAK,QAAL,GAAgB,CAAhB;AACA,KALU;oBAAA;;AAAA,GAAX;AAvBO,EAAA,gBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,gBAAD,EAAmB,kBAAnB,CAAnB;AAmCR,SAAA,gBAAA;AAAC,CApCD,CAAsC,IAAtC,CAAA;;SAAa,gB","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, markType } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar TransactionState = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(TransactionState, _super);\r\n    function TransactionState(a, b, c) {\r\n        var _this = _super.call(this) || this;\r\n        _this._id = null;\r\n        _this._transactionType = 0;\r\n        _this._value = null;\r\n        _this._version = null;\r\n        _this.id = a;\r\n        _this.transactionType = b;\r\n        _this.value = c;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TransactionState.prototype, \"id\", {\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n        set: function (a) {\r\n            this._id = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionState.prototype, \"transactionType\", {\r\n        get: function () {\r\n            return this._transactionType;\r\n        },\r\n        set: function (a) {\r\n            this._transactionType = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionState.prototype, \"value\", {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (a) {\r\n            this._value = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TransactionState.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        set: function (a) {\r\n            this._version = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TransactionState.$t = markType(TransactionState, 'TransactionState');\r\n    return TransactionState;\r\n}(Base));\r\nexport { TransactionState };\r\n//# sourceMappingURL=TransactionState.js.map\r\n"]},"metadata":{},"sourceType":"module"}