{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { Color } from \"./Color\";\n/**\r\n * @hidden\r\n */\n\nvar TileWorkSettings =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TileWorkSettings, _super);\n\n  function TileWorkSettings() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._scaler = null;\n    _this._blurRadius = 0;\n    _this._maxBlurRadius = 0;\n    _this._useBlurRadiusAdjustedForZoom = false;\n    _this._minimumColor = new Color();\n    _this._maximumColor = new Color();\n    _this._tileViewport = null;\n    _this._yValues = null;\n    _this._xValues = null;\n    _this._values = null;\n    _this._isNewData = false;\n    _this._minimumVisibleLatitude = 0;\n    _this._maximumVisibleLatitude = 0;\n    _this._minimumVisibleLongitude = 0;\n    _this._maximumVisibleLongitude = 0;\n    _this._z = 0;\n    _this._x = 0;\n    _this._y = 0;\n    _this._window = null;\n    _this._testRun = false;\n    _this._globalMinimum = 0;\n    _this._globalMaximum = 0;\n    _this._useGlobalMinMax = false;\n    _this._minimumValue = 0;\n    _this._maximumValue = 0;\n    _this._scaleColors = null;\n    _this._scaleColorOffsets = null;\n    _this._useLogarithmicScale = false;\n    _this._logarithmBase = 0;\n    _this._image = null;\n    return _this;\n  }\n\n  Object.defineProperty(TileWorkSettings.prototype, \"scaler\", {\n    get: function () {\n      return this._scaler;\n    },\n    set: function (a) {\n      this._scaler = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"blurRadius\", {\n    get: function () {\n      return this._blurRadius;\n    },\n    set: function (a) {\n      this._blurRadius = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"maxBlurRadius\", {\n    get: function () {\n      return this._maxBlurRadius;\n    },\n    set: function (a) {\n      this._maxBlurRadius = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"useBlurRadiusAdjustedForZoom\", {\n    get: function () {\n      return this._useBlurRadiusAdjustedForZoom;\n    },\n    set: function (a) {\n      this._useBlurRadiusAdjustedForZoom = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"minimumColor\", {\n    get: function () {\n      return this._minimumColor;\n    },\n    set: function (a) {\n      this._minimumColor = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"maximumColor\", {\n    get: function () {\n      return this._maximumColor;\n    },\n    set: function (a) {\n      this._maximumColor = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"tileViewport\", {\n    get: function () {\n      return this._tileViewport;\n    },\n    set: function (a) {\n      this._tileViewport = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"yValues\", {\n    get: function () {\n      return this._yValues;\n    },\n    set: function (a) {\n      this._yValues = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"xValues\", {\n    get: function () {\n      return this._xValues;\n    },\n    set: function (a) {\n      this._xValues = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"values\", {\n    get: function () {\n      return this._values;\n    },\n    set: function (a) {\n      this._values = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"isNewData\", {\n    get: function () {\n      return this._isNewData;\n    },\n    set: function (a) {\n      this._isNewData = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"minimumVisibleLatitude\", {\n    get: function () {\n      return this._minimumVisibleLatitude;\n    },\n    set: function (a) {\n      this._minimumVisibleLatitude = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"maximumVisibleLatitude\", {\n    get: function () {\n      return this._maximumVisibleLatitude;\n    },\n    set: function (a) {\n      this._maximumVisibleLatitude = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"minimumVisibleLongitude\", {\n    get: function () {\n      return this._minimumVisibleLongitude;\n    },\n    set: function (a) {\n      this._minimumVisibleLongitude = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"maximumVisibleLongitude\", {\n    get: function () {\n      return this._maximumVisibleLongitude;\n    },\n    set: function (a) {\n      this._maximumVisibleLongitude = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"z\", {\n    get: function () {\n      return this._z;\n    },\n    set: function (a) {\n      this._z = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"x\", {\n    get: function () {\n      return this._x;\n    },\n    set: function (a) {\n      this._x = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"y\", {\n    get: function () {\n      return this._y;\n    },\n    set: function (a) {\n      this._y = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"window\", {\n    get: function () {\n      return this._window;\n    },\n    set: function (a) {\n      this._window = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"testRun\", {\n    get: function () {\n      return this._testRun;\n    },\n    set: function (a) {\n      this._testRun = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"globalMinimum\", {\n    get: function () {\n      return this._globalMinimum;\n    },\n    set: function (a) {\n      this._globalMinimum = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"globalMaximum\", {\n    get: function () {\n      return this._globalMaximum;\n    },\n    set: function (a) {\n      this._globalMaximum = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"useGlobalMinMax\", {\n    get: function () {\n      return this._useGlobalMinMax;\n    },\n    set: function (a) {\n      this._useGlobalMinMax = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"minimumValue\", {\n    get: function () {\n      return this._minimumValue;\n    },\n    set: function (a) {\n      this._minimumValue = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"maximumValue\", {\n    get: function () {\n      return this._maximumValue;\n    },\n    set: function (a) {\n      this._maximumValue = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"scaleColors\", {\n    get: function () {\n      return this._scaleColors;\n    },\n    set: function (a) {\n      this._scaleColors = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"scaleColorOffsets\", {\n    get: function () {\n      return this._scaleColorOffsets;\n    },\n    set: function (a) {\n      this._scaleColorOffsets = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"useLogarithmicScale\", {\n    get: function () {\n      return this._useLogarithmicScale;\n    },\n    set: function (a) {\n      this._useLogarithmicScale = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"logarithmBase\", {\n    get: function () {\n      return this._logarithmBase;\n    },\n    set: function (a) {\n      this._logarithmBase = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TileWorkSettings.prototype, \"image\", {\n    get: function () {\n      return this._image;\n    },\n    set: function (a) {\n      this._image = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TileWorkSettings.prototype.flatten = function () {\n    var minA_ = this.minimumColor.l;\n    var minR_ = this.minimumColor.o;\n    var minG_ = this.minimumColor.n;\n    var minB_ = this.minimumColor.m;\n    var maxA_ = this.maximumColor.l;\n    var maxR_ = this.maximumColor.o;\n    var maxG_ = this.maximumColor.n;\n    var maxB_ = this.maximumColor.m;\n    var scaleColors_ = null;\n\n    if (this.scaleColors != null) {\n      scaleColors_ = new Array(this.scaleColors.length);\n\n      for (var a = 0; a < this.scaleColors.length; a++) {\n        var a_ = this.scaleColors[a].l;\n        var r_ = this.scaleColors[a].o;\n        var g_ = this.scaleColors[a].n;\n        var b_ = this.scaleColors[a].m;\n        var color_ = {\n          a: a_,\n          r: r_,\n          g: g_,\n          b: b_\n        };\n        scaleColors_[a] = color_;\n      }\n    }\n\n    return {\n      blurRadius: this.blurRadius,\n      maxBlurRadius: this.maxBlurRadius,\n      //isLinearScaler: this.isLinearScaler,\n      //linearScalerMinimumXValue: this.linearScalerMinimumXValue,\n      //linearScalerMinimumYValue: this.linearScalerMinimumYValue,\n      //linearScalerMaximumXValue: this.linearScalerMaximumXValue,\n      //linearScalerMaximumYValue: this.linearScalerMaximumYValue,\n      //linearScalerXIsInverted: this.linearScalerXIsInverted,\n      //linearScalerYIsInverted: this.linearScalerYIsInverted,\n      useBlurRadiusAdjustedForZoom: this.useBlurRadiusAdjustedForZoom,\n      minimumColor: {\n        a: minA_,\n        r: minR_,\n        g: minG_,\n        b: minB_\n      },\n      maximumColor: {\n        a: maxA_,\n        r: maxR_,\n        g: maxG_,\n        b: maxB_\n      },\n      tileViewport: {\n        left: this.tileViewport.left,\n        top: this.tileViewport.top,\n        width: this.tileViewport.width,\n        height: this.tileViewport.height\n      },\n      yValues: this.yValues,\n      xValues: this.xValues,\n      values: this.values,\n      isNewData: this.isNewData,\n      minimumVisibleLatitude: this.minimumVisibleLatitude,\n      minimumVisibleLongitude: this.minimumVisibleLongitude,\n      maximumVisibleLatitude: this.maximumVisibleLatitude,\n      maximumVisibleLongitude: this.maximumVisibleLongitude,\n      z: this.z,\n      x: this.x,\n      y: this.y,\n      window: {\n        left: this.window.left,\n        top: this.window.top,\n        width: this.window.width,\n        height: this.window.height\n      },\n      testRun: this.testRun,\n      globalMinimum: this.globalMinimum,\n      globalMaximum: this.globalMaximum,\n      useGlobalMinMax: this.useGlobalMinMax,\n      minimumValue: this.minimumValue,\n      maximumValue: this.maximumValue,\n      scaleColorOffsets: this.scaleColorOffsets,\n      scaleColors: scaleColors_,\n      useLogarithmicScale: this.useLogarithmicScale,\n      logarithmBase: this.logarithmBase\n    };\n  };\n\n  TileWorkSettings.$t = markType(TileWorkSettings, 'TileWorkSettings');\n  return TileWorkSettings;\n}(Base);\n\nexport { TileWorkSettings };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TileWorkSettings.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, markType } from \"./type\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * @hidden\r\n */\r\nvar TileWorkSettings = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(TileWorkSettings, _super);\r\n    function TileWorkSettings() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._scaler = null;\r\n        _this._blurRadius = 0;\r\n        _this._maxBlurRadius = 0;\r\n        _this._useBlurRadiusAdjustedForZoom = false;\r\n        _this._minimumColor = new Color();\r\n        _this._maximumColor = new Color();\r\n        _this._tileViewport = null;\r\n        _this._yValues = null;\r\n        _this._xValues = null;\r\n        _this._values = null;\r\n        _this._isNewData = false;\r\n        _this._minimumVisibleLatitude = 0;\r\n        _this._maximumVisibleLatitude = 0;\r\n        _this._minimumVisibleLongitude = 0;\r\n        _this._maximumVisibleLongitude = 0;\r\n        _this._z = 0;\r\n        _this._x = 0;\r\n        _this._y = 0;\r\n        _this._window = null;\r\n        _this._testRun = false;\r\n        _this._globalMinimum = 0;\r\n        _this._globalMaximum = 0;\r\n        _this._useGlobalMinMax = false;\r\n        _this._minimumValue = 0;\r\n        _this._maximumValue = 0;\r\n        _this._scaleColors = null;\r\n        _this._scaleColorOffsets = null;\r\n        _this._useLogarithmicScale = false;\r\n        _this._logarithmBase = 0;\r\n        _this._image = null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TileWorkSettings.prototype, \"scaler\", {\r\n        get: function () {\r\n            return this._scaler;\r\n        },\r\n        set: function (a) {\r\n            this._scaler = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"blurRadius\", {\r\n        get: function () {\r\n            return this._blurRadius;\r\n        },\r\n        set: function (a) {\r\n            this._blurRadius = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"maxBlurRadius\", {\r\n        get: function () {\r\n            return this._maxBlurRadius;\r\n        },\r\n        set: function (a) {\r\n            this._maxBlurRadius = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"useBlurRadiusAdjustedForZoom\", {\r\n        get: function () {\r\n            return this._useBlurRadiusAdjustedForZoom;\r\n        },\r\n        set: function (a) {\r\n            this._useBlurRadiusAdjustedForZoom = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"minimumColor\", {\r\n        get: function () {\r\n            return this._minimumColor;\r\n        },\r\n        set: function (a) {\r\n            this._minimumColor = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"maximumColor\", {\r\n        get: function () {\r\n            return this._maximumColor;\r\n        },\r\n        set: function (a) {\r\n            this._maximumColor = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"tileViewport\", {\r\n        get: function () {\r\n            return this._tileViewport;\r\n        },\r\n        set: function (a) {\r\n            this._tileViewport = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"yValues\", {\r\n        get: function () {\r\n            return this._yValues;\r\n        },\r\n        set: function (a) {\r\n            this._yValues = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"xValues\", {\r\n        get: function () {\r\n            return this._xValues;\r\n        },\r\n        set: function (a) {\r\n            this._xValues = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"values\", {\r\n        get: function () {\r\n            return this._values;\r\n        },\r\n        set: function (a) {\r\n            this._values = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"isNewData\", {\r\n        get: function () {\r\n            return this._isNewData;\r\n        },\r\n        set: function (a) {\r\n            this._isNewData = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"minimumVisibleLatitude\", {\r\n        get: function () {\r\n            return this._minimumVisibleLatitude;\r\n        },\r\n        set: function (a) {\r\n            this._minimumVisibleLatitude = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"maximumVisibleLatitude\", {\r\n        get: function () {\r\n            return this._maximumVisibleLatitude;\r\n        },\r\n        set: function (a) {\r\n            this._maximumVisibleLatitude = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"minimumVisibleLongitude\", {\r\n        get: function () {\r\n            return this._minimumVisibleLongitude;\r\n        },\r\n        set: function (a) {\r\n            this._minimumVisibleLongitude = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"maximumVisibleLongitude\", {\r\n        get: function () {\r\n            return this._maximumVisibleLongitude;\r\n        },\r\n        set: function (a) {\r\n            this._maximumVisibleLongitude = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"z\", {\r\n        get: function () {\r\n            return this._z;\r\n        },\r\n        set: function (a) {\r\n            this._z = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"x\", {\r\n        get: function () {\r\n            return this._x;\r\n        },\r\n        set: function (a) {\r\n            this._x = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"y\", {\r\n        get: function () {\r\n            return this._y;\r\n        },\r\n        set: function (a) {\r\n            this._y = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"window\", {\r\n        get: function () {\r\n            return this._window;\r\n        },\r\n        set: function (a) {\r\n            this._window = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"testRun\", {\r\n        get: function () {\r\n            return this._testRun;\r\n        },\r\n        set: function (a) {\r\n            this._testRun = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"globalMinimum\", {\r\n        get: function () {\r\n            return this._globalMinimum;\r\n        },\r\n        set: function (a) {\r\n            this._globalMinimum = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"globalMaximum\", {\r\n        get: function () {\r\n            return this._globalMaximum;\r\n        },\r\n        set: function (a) {\r\n            this._globalMaximum = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"useGlobalMinMax\", {\r\n        get: function () {\r\n            return this._useGlobalMinMax;\r\n        },\r\n        set: function (a) {\r\n            this._useGlobalMinMax = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"minimumValue\", {\r\n        get: function () {\r\n            return this._minimumValue;\r\n        },\r\n        set: function (a) {\r\n            this._minimumValue = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"maximumValue\", {\r\n        get: function () {\r\n            return this._maximumValue;\r\n        },\r\n        set: function (a) {\r\n            this._maximumValue = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"scaleColors\", {\r\n        get: function () {\r\n            return this._scaleColors;\r\n        },\r\n        set: function (a) {\r\n            this._scaleColors = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"scaleColorOffsets\", {\r\n        get: function () {\r\n            return this._scaleColorOffsets;\r\n        },\r\n        set: function (a) {\r\n            this._scaleColorOffsets = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"useLogarithmicScale\", {\r\n        get: function () {\r\n            return this._useLogarithmicScale;\r\n        },\r\n        set: function (a) {\r\n            this._useLogarithmicScale = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"logarithmBase\", {\r\n        get: function () {\r\n            return this._logarithmBase;\r\n        },\r\n        set: function (a) {\r\n            this._logarithmBase = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TileWorkSettings.prototype, \"image\", {\r\n        get: function () {\r\n            return this._image;\r\n        },\r\n        set: function (a) {\r\n            this._image = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TileWorkSettings.prototype.flatten = function () {\r\n        var minA_ = this.minimumColor.l;\r\n        var minR_ = this.minimumColor.o;\r\n        var minG_ = this.minimumColor.n;\r\n        var minB_ = this.minimumColor.m;\r\n        var maxA_ = this.maximumColor.l;\r\n        var maxR_ = this.maximumColor.o;\r\n        var maxG_ = this.maximumColor.n;\r\n        var maxB_ = this.maximumColor.m;\r\n        var scaleColors_ = null;\r\n        if (this.scaleColors != null) {\r\n            scaleColors_ = new Array(this.scaleColors.length);\r\n            for (var a = 0; a < this.scaleColors.length; a++) {\r\n                var a_ = this.scaleColors[a].l;\r\n                var r_ = this.scaleColors[a].o;\r\n                var g_ = this.scaleColors[a].n;\r\n                var b_ = this.scaleColors[a].m;\r\n                var color_ = { a: a_, r: r_, g: g_, b: b_ };\r\n                scaleColors_[a] = color_;\r\n            }\r\n        }\r\n        return {\r\n            blurRadius: this.blurRadius,\r\n            maxBlurRadius: this.maxBlurRadius,\r\n            //isLinearScaler: this.isLinearScaler,\r\n            //linearScalerMinimumXValue: this.linearScalerMinimumXValue,\r\n            //linearScalerMinimumYValue: this.linearScalerMinimumYValue,\r\n            //linearScalerMaximumXValue: this.linearScalerMaximumXValue,\r\n            //linearScalerMaximumYValue: this.linearScalerMaximumYValue,\r\n            //linearScalerXIsInverted: this.linearScalerXIsInverted,\r\n            //linearScalerYIsInverted: this.linearScalerYIsInverted,\r\n            useBlurRadiusAdjustedForZoom: this.useBlurRadiusAdjustedForZoom,\r\n            minimumColor: { a: minA_, r: minR_, g: minG_, b: minB_ },\r\n            maximumColor: { a: maxA_, r: maxR_, g: maxG_, b: maxB_ },\r\n            tileViewport: { left: this.tileViewport.left, top: this.tileViewport.top, width: this.tileViewport.width, height: this.tileViewport.height },\r\n            yValues: this.yValues,\r\n            xValues: this.xValues,\r\n            values: this.values,\r\n            isNewData: this.isNewData,\r\n            minimumVisibleLatitude: this.minimumVisibleLatitude,\r\n            minimumVisibleLongitude: this.minimumVisibleLongitude,\r\n            maximumVisibleLatitude: this.maximumVisibleLatitude,\r\n            maximumVisibleLongitude: this.maximumVisibleLongitude,\r\n            z: this.z,\r\n            x: this.x,\r\n            y: this.y,\r\n            window: { left: this.window.left, top: this.window.top, width: this.window.width, height: this.window.height },\r\n            testRun: this.testRun,\r\n            globalMinimum: this.globalMinimum,\r\n            globalMaximum: this.globalMaximum,\r\n            useGlobalMinMax: this.useGlobalMinMax,\r\n            minimumValue: this.minimumValue,\r\n            maximumValue: this.maximumValue,\r\n            scaleColorOffsets: this.scaleColorOffsets,\r\n            scaleColors: scaleColors_,\r\n            useLogarithmicScale: this.useLogarithmicScale,\r\n            logarithmBase: this.logarithmBase\r\n        };\r\n    };\r\n    TileWorkSettings.$t = markType(TileWorkSettings, 'TileWorkSettings');\r\n    return TileWorkSettings;\r\n}(Base));\r\nexport { TileWorkSettings };\r\n//# sourceMappingURL=TileWorkSettings.js.map\r\n"]},"metadata":{},"sourceType":"module"}