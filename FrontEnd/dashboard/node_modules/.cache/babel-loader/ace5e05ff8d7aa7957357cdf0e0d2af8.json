{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, IList$1_$type, IList_$type, fromEnum, getBoxIfEnum, typeCast, typeCastObjTo$t, fromEn, Number_$type, typeGetValue, Date_$type, runOn, markType, getEnumeratorObject } from \"./type\";\nimport { IArray_$type } from \"./IArray\";\nimport { IArrayList_$type } from \"./IArrayList\";\nimport { arrayCopyTo } from \"./array\";\nimport { Comparer$1 } from \"./Comparer$1\";\nimport { ReadOnlyCollection$1 } from \"./ReadOnlyCollection$1\";\nimport { NotImplementedException } from \"./NotImplementedException\";\nimport { intDivide } from \"./number\";\nimport { stringCompareTo } from \"./string\";\n/**\n * @hidden\n */\n\nvar List$1 =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(List$1, _super);\n\n  function List$1($t, a) {\n    var e_1, _a;\n\n    var _rest = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      _rest[_i - 2] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.$t = null;\n    _this._inner = null;\n    _this.c = false;\n    _this.h = 0;\n    _this.m = {};\n    _this.$t = $t;\n    _this.$type = _this.$type.specialize(_this.$t);\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        {\n          _this._inner = [];\n          _this.c = _this.$t.InstanceConstructor && _this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals;\n        }\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          {\n            _this._inner = [];\n            _this.c = _this.$t.InstanceConstructor && _this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals;\n          }\n\n          if (_this.d(0, c, true)) {\n            return _this;\n          }\n\n          try {\n            for (var _b = tslib_1.__values(fromEnum(c)), _c = _b.next(); !_c.done; _c = _b.next()) {\n              var d = _c.value;\n\n              _this.add(d);\n            }\n          } catch (e_1_1) {\n            e_1 = {\n              error: e_1_1\n            };\n          } finally {\n            try {\n              if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n          }\n        }\n        break;\n\n      case 2:\n        {\n          var c = _rest[0];\n          {\n            _this._inner = [];\n            _this.c = _this.$t.InstanceConstructor && _this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals;\n          }\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  List$1.prototype.x = function (a, b) {\n    this._inner[a] = b;\n  };\n\n  List$1.prototype.r = function (a, b) {\n    this._inner.splice(a, 0, b);\n  };\n\n  List$1.prototype.n = function (a) {\n    this._inner.push(a);\n  };\n\n  List$1.prototype.u = function (a) {\n    if (a == 0) {\n      this._inner.shift();\n\n      return;\n    }\n\n    this._inner.splice(a, 1);\n  };\n\n  List$1.prototype.p = function () {\n    this._inner = [];\n  };\n\n  List$1.prototype.item = function (a, b) {\n    if (arguments.length === 2) {\n      this.x(a, b);\n      return b;\n    } else {\n      return this._inner[a];\n    }\n  };\n\n  List$1.prototype.indexOf = function (a) {\n    if (this.c) {\n      return this._inner.indexOf(a);\n    }\n\n    for (var b = 0; b < this._inner.length; b++) {\n      if (Base.equalsStatic(getBoxIfEnum(this.$t, a), getBoxIfEnum(this.$t, this._inner[b]))) {\n        return b;\n      }\n    }\n\n    return -1;\n  };\n\n  List$1.prototype.indexOf2 = function (a, b) {\n    if (this.c) {\n      return this._inner.indexOf(a, b);\n    }\n\n    for (; b < this._inner.length; b++) {\n      if (Base.equalsStatic(getBoxIfEnum(this.$t, a), getBoxIfEnum(this.$t, this._inner[b]))) {\n        return b;\n      }\n    }\n\n    return -1;\n  };\n\n  List$1.prototype.k = function (a) {\n    if (this.c) {\n      return this._inner.lastIndexOf(a);\n    }\n\n    for (var b = this._inner.length - 1; b >= 0; b--) {\n      if (Base.equalsStatic(getBoxIfEnum(this.$t, a), getBoxIfEnum(this.$t, this._inner[b]))) {\n        return b;\n      }\n    }\n\n    return -1;\n  };\n\n  List$1.prototype.insert = function (a, b) {\n    this.r(a, b);\n  };\n\n  List$1.prototype.removeAt = function (a) {\n    this.u(a);\n  };\n\n  Object.defineProperty(List$1.prototype, \"count\", {\n    get: function () {\n      return this._inner.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(List$1.prototype, \"isReadOnly\", {\n    get: function () {\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  List$1.prototype.add = function (a) {\n    this.n(a);\n  };\n\n  List$1.prototype.clear = function () {\n    this.p();\n  };\n\n  List$1.prototype.contains = function (a) {\n    return this.indexOf(a) >= 0;\n  };\n\n  List$1.prototype.copyTo = function (a, b) {\n    for (var c = 0; c < this._inner.length; c++) {\n      a[b + c] = this._inner[c];\n    }\n  };\n\n  List$1.prototype.remove = function (a) {\n    var b = this.indexOf(a);\n\n    if (b < 0) {\n      return false;\n    }\n\n    this.u(b);\n    return true;\n  };\n\n  List$1.prototype.getEnumerator = function () {\n    return getEnumeratorObject(this._inner);\n  };\n\n  List$1.prototype.getEnumeratorObject = function () {\n    return getEnumeratorObject(this._inner);\n  };\n\n  List$1.prototype.asArray = function () {\n    return this._inner;\n  };\n\n  List$1.prototype.d = function (index_, collection_, a) {\n    var b = typeCast(IArrayList_$type, collection_);\n\n    if (b != null) {\n      var a_ = b.asArrayList();\n      Array.prototype.splice.apply(this._inner, Array.prototype.concat.apply([index_, 0], a_));\n      return true;\n    }\n\n    var c = typeCast(IArray_$type, collection_);\n\n    if (c != null) {\n      var a_ = c.asArray();\n      Array.prototype.splice.apply(this._inner, Array.prototype.concat.apply([index_, 0], a_));\n      return true;\n    }\n\n    var asList_ = typeCast(IList$1_$type.specialize(this.$t), collection_);\n\n    if (asList_ != null) {\n      for (var i_ = 0; i_ < asList_.count; i_++) {\n        var item_ = asList_.item(i_);\n\n        this._inner.splice(index_ + i_, 0, item_);\n      }\n\n      return true;\n    }\n\n    var arr_ = Array.isArray(collection_) ? collection_ : null;\n\n    if (arr_ != null) {\n      var inn_ = this._inner;\n\n      if (this._inner.length == 0) {\n        if (a) {\n          var parr_ = arr_;\n          var d = arr_.length;\n\n          for (var i_ = 0; i_ < d; i_++) {\n            inn_[index_++] = parr_[i_];\n          }\n        } else {\n          var e = arr_.length;\n\n          for (var i_ = 0; i_ < e; i_++) {\n            inn_[index_++] = typeCastObjTo$t(this.$t, arr_[i_]);\n          }\n        }\n      } else {\n        for (var i_ = 0; i_ < arr_.length; i_++) {\n          inn_.splice(index_++, 0, arr_[i_]);\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  List$1.prototype.t = function (a, b) {\n    var e_2, _a;\n\n    if (this.d(a, b, false)) {\n      return;\n    }\n\n    var j_ = a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEn(b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var item_ = _c.value;\n\n        this._inner.splice(j_, 0, item_);\n\n        j_++;\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n\n  List$1.prototype.s = function (a, b) {\n    var e_3, _a;\n\n    if (this.d(a, b, true)) {\n      return;\n    }\n\n    var j_ = a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var item_ = _c.value;\n\n        this._inner.splice(j_, 0, item_);\n\n        j_++;\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  List$1.prototype.v = function (index_, numToRemove_) {\n    if (index_ == 0 && numToRemove_ == 1) {\n      this._inner.shift();\n\n      return;\n    }\n\n    this._inner.splice(index_, numToRemove_);\n  };\n\n  List$1.prototype.copyTo1 = function (a, b) {\n    arrayCopyTo(this._inner, a, b);\n  };\n\n  Object.defineProperty(List$1.prototype, \"isFixedSize\", {\n    get: function () {\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  List$1.prototype.add1 = function (a) {\n    this.n(typeCastObjTo$t(this.$t, a));\n    return this._inner.length - 1;\n  };\n\n  List$1.prototype.contains1 = function (a) {\n    return this.indexOf1(a) >= 0;\n  };\n\n  List$1.prototype.indexOf1 = function (a) {\n    return this.indexOf(typeCastObjTo$t(this.$t, a));\n  };\n\n  List$1.prototype.insert1 = function (a, b) {\n    this.r(a, typeCastObjTo$t(this.$t, b));\n  };\n\n  List$1.prototype.remove1 = function (a) {\n    var b = this.indexOf1(a);\n\n    if (b < 0) {\n      return;\n    }\n\n    this.u(b);\n  };\n\n  List$1.prototype.y = function () {\n    var a = null;\n\n    if (this.$t == Number_$type) {\n      a = function (b, c) {\n        var d = b;\n        var e = c;\n\n        if (d < e) {\n          return -1;\n        }\n\n        if (d == e) {\n          return 0;\n        }\n\n        return 1;\n      };\n    } else if (this.$t == Number_$type) {\n      a = function (b, c) {\n        var d = b;\n        var e = c;\n\n        if (d < e) {\n          return -1;\n        }\n\n        if (d == e) {\n          return 0;\n        }\n\n        return 1;\n      };\n    } else if (this.$t == Number_$type) {\n      a = function (b, c) {\n        var d = typeGetValue(b);\n        var e = typeGetValue(c);\n\n        if (d < e) {\n          return -1;\n        }\n\n        if (d == e) {\n          return 0;\n        }\n\n        return 1;\n      };\n    } else if (this.$t == Date_$type) {\n      a = function (b, c) {\n        var d = b;\n        var e = c;\n\n        if (d.getTime() < e.getTime()) {\n          return -1;\n        }\n\n        if (d.getTime() == e.getTime()) {\n          return 0;\n        }\n\n        return 1;\n      };\n    } else {\n      a = function (b, c) {\n        return stringCompareTo(b, c);\n      };\n    }\n\n    this.ab(a);\n  };\n\n  List$1.prototype.ab = function (compare_) {\n    this._inner.sort(compare_);\n  };\n\n  List$1.prototype.aa = function (compare_) {\n    this._inner.sort(compare_);\n  };\n\n  List$1.prototype.o = function (a) {\n    var e_4, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var item_ = _c.value;\n\n        this._inner.push(item_);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  };\n\n  List$1.prototype.toArray = function () {\n    return this._inner;\n  };\n\n  List$1.prototype.q = function (a) {\n    for (var b = 0; b < this._inner.length; b++) {\n      a(this._inner[b]);\n    }\n  };\n\n  Object.defineProperty(List$1.prototype, \"isSynchronized\", {\n    get: function () {\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(List$1.prototype, \"syncRoot\", {\n    get: function () {\n      return this.m;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  List$1.prototype.f = function (a) {\n    return this.g(a, Comparer$1.defaultComparerValue(this.$t));\n  };\n\n  List$1.prototype.g = function (a, b) {\n    var c = 0;\n    var d = this.count - 1;\n\n    while (c <= d) {\n      var e = c + intDivide(d - c, 2);\n      var f = this._inner[e];\n      var g = b.compare(f, a);\n\n      if (g == 0) {\n        return e;\n      }\n\n      if (g < 0) {\n        c = e + 1;\n      } else {\n        d = e - 1;\n      }\n    }\n\n    return ~c;\n  };\n\n  List$1.prototype.e = function () {\n    return new ReadOnlyCollection$1(this.$t, 1, this);\n  };\n\n  List$1.prototype.w = function () {\n    for (var a = 0; a < intDivide(this.count, 2); a++) {\n      var b = this.count - a - 1;\n      var c = this._inner[a];\n      this._inner[a] = this._inner[b];\n      this._inner[b] = c;\n    }\n  };\n\n  List$1.prototype.z = function (a) {\n    this.aa(runOn(a, a.compare));\n  };\n\n  List$1.prototype.i = function (a) {\n    for (var b = 0; b < this._inner.length; b++) {\n      if (a(this._inner[b])) {\n        return b;\n      }\n    }\n\n    return -1;\n  };\n\n  List$1.prototype.l = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  List$1.$t = markType(List$1, 'List$1', Base.$, [IList$1_$type.specialize(0), IArray_$type, IList_$type]);\n  return List$1;\n}(Base);\n\nexport { List$1 };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/List$1.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAwB,aAAxB,EAAsJ,WAAtJ,EAA6S,QAA7S,EAAuT,YAAvT,EAAqU,QAArU,EAA+U,eAA/U,EAAgW,MAAhW,EAAwW,YAAxW,EAAsX,YAAtX,EAAoY,UAApY,EAAgZ,KAAhZ,EAAuZ,QAAvZ,EAA+a,mBAA/a,QAA0c,QAA1c;AACA,SAAiB,YAAjB,QAAqC,UAArC;AACA,SAAqB,gBAArB,QAA6C,cAA7C;AACA,SAAqB,WAArB,QAAwC,SAAxC;AACA,SAAS,UAAT,QAA2B,cAA3B;AAEA,SAAS,oBAAT,QAAqC,wBAArC;AACA,SAAS,uBAAT,QAAwC,2BAAxC;AACA,SAAS,SAAT,QAA0B,UAA1B;AACA,SAAS,eAAT,QAAgC,UAAhC;AAEA;;AAEG;;AACH,IAAA,MAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,EAAA,MAAA;;AAS9B,WAAA,MAAA,CAAY,EAAZ,EAAsB,CAAtB,EAA+B;;;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAe;AAAf,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAjC,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAPU,IAAA,KAAA,CAAA,EAAA,GAAW,IAAX;AACV,IAAA,KAAA,CAAA,MAAA,GAAc,IAAd;AACiB,IAAA,KAAA,CAAA,CAAA,GAAa,KAAb;AAsTjB,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AAiBiB,IAAA,KAAA,CAAA,CAAA,GAAS,EAAT;AAhUhB,IAAA,KAAI,CAAC,EAAL,GAAU,EAAV;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,KAAI,CAAC,KAAL,CAAW,UAAX,CAAsB,KAAI,CAAC,EAA3B,CAAb;AACA,IAAA,CAAC,GAAI,CAAC,IAAI,KAAK,CAAX,GAAgB,CAAhB,GAAoB,CAAxB;;AACA,YAAQ,CAAR;AACC,WAAK,CAAL;AACA;AACC,UAAA,KAAI,CAAC,MAAL,GAAoB,EAApB;AACA,UAAA,KAAI,CAAC,CAAL,GAAmB,KAAI,CAAC,EAAL,CAAQ,mBAAR,IAA+B,KAAI,CAAC,EAAL,CAAQ,mBAAR,CAA4B,SAA5B,CAAsC,MAAtC,KAAiD,IAAI,CAAC,SAAL,CAAe,MAAlH;AACA;AACD;;AAEA,WAAK,CAAL;AACA;AACC,cAAI,CAAC,GAAuC,KAAK,CAAC,CAAD,CAAjD;AACA;AACC,YAAA,KAAI,CAAC,MAAL,GAAoB,EAApB;AACA,YAAA,KAAI,CAAC,CAAL,GAAmB,KAAI,CAAC,EAAL,CAAQ,mBAAR,IAA+B,KAAI,CAAC,EAAL,CAAQ,mBAAR,CAA4B,SAA5B,CAAsC,MAAtC,KAAiD,IAAI,CAAC,SAAL,CAAe,MAAlH;AACA;;AACD,cAAI,KAAI,CAAC,CAAL,CAAO,CAAP,EAAU,CAAV,EAAa,IAAb,CAAJ,EAAwB;;AAEvB;;;AACD,iBAAc,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,QAAQ,CAAI,CAAJ,CAAR,CAAA,EAAc,EAAA,GAAA,EAAA,CAAA,IAAA,EAA5B,EAA4B,CAAA,EAAA,CAAA,IAA5B,EAA4B,EAAA,GAAA,EAAA,CAAA,IAAA,EAA5B,EAA8B;AAAzB,kBAAI,CAAC,GAAA,EAAA,CAAA,KAAL;;AACJ,cAAA,KAAI,CAAC,GAAL,CAAS,CAAT;AACA;;;;;;;;AACD,a,SACK;AAEA,kBAAA,GAAA,EACN,MAAA,GAAA,CAAA,KAAA;AACM;AACL;AACC;AACA;;WACA,C;AACD;AACD,cAAM,CAAA,GAAA,KAAA,CAAA,CAAA,CAAN;AAEA;;AAED,YAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,EAAA,CAAA,mBAAA,IAAA,KAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,SAAA,CAAA,MAAA,KAAA,IAAA,CAAA,SAAA,CAAA,MAAA;AACD;AACM;AACL;AAvCA;;AAyCA,WAAK,KAAL;AACA;;AACS,EAAA,MAAA,CAAA,SAAA,CAAA,CAAA,GAAV,UAAY,CAAZ,EAAgB,CAAhB,EAAgB;AACf,SAAK,MAAL,CAAY,CAAZ,IAAiB,CAAjB;AACA,GAFS;;AAGA,EAAA,MAAA,CAAA,SAAA,CAAA,CAAA,GAAV,UAAY,CAAZ,EAAqB,CAArB,EAAqB;AACpB,SAAK,MAAL,CAAY,MAAZ,CAAY,CAAZ,EAAY,CAAZ,EAAY,CAAZ;AACC,GAFQ;;SAGR,S,CAAO,C,GAAA,UAAA,CAAA,EAAA;AACP,SAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACD,G;;AACD,EAAA,MAAC,CAAA,SAAD,CAAC,CAAD,GAAC,UAAA,CAAA,EAAA;AACS,QAAA,CAAA,IAAA,CAAA,EAAV;AACK,WAAC,MAAD,CAAgB,KAAhB;;AACJ;AACD;;AACC,SAAI,MAAJ,CAAI,MAAJ,CAAc,CAAd,EAAoB,CAApB;AACC,GANF;;SAOE,S,CAAS,C,GAAA,YAAA;AACT,SAAA,MAAA,GAAA,EAAA;AAAM,G;;SACN,S,CAAO,I,GAAK,UAAU,CAAV,EAAU,CAAV,EAAU;AACtB,QAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACD,WAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AACD,aAAA,CAAA;AACC,KAHC,MAIA;AACA,aAAA,KAAA,MAAA,CAAA,CAAA,CAAA;AACD;AACC,G;;SACC,S,CAAA,O,GAAS,UAAA,CAAA,EAAA;QACT,KAAA,C,EAAA;AACD,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACD;;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACD,UAAA,IAAA,CAAA,YAAA,CAAA,YAAwB,CAAA,KAAA,EAAA,EAAA,CAAA,CAAxB,EAAwB,YAAA,CAAA,KAAA,EAAA,EAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAxB,CAAA,EAAwB;AACf,eAAI,CAAJ;AACP;AACA;;AACD,WAAO,CAAC,CAAR;AACC,G;;SACC,S,CAAA,Q,GAAS,UAAA,CAAA,EAAA,CAAA,EAAA;QACT,KAAA,C,EAAA;AACD,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACD;;AACA,WAAA,CAAA,GAAA,KAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACD,UAAA,IAAA,CAAA,YAAA,CAAA,YAAM,CAAA,KAAA,EAAA,EAAA,CAAA,CAAN,EAAM,YAAA,CAAA,KAAA,EAAA,EAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAN,CAAA,EAAM;AACG,eAAI,CAAJ;AACP;AACA;;AACD,WAAK,CAAA,CAAL;AACC,G;;SACC,S,CAAA,C,GAAS,UAAA,CAAA,EAAA;QACT,KAAA,C,EAAA;AACD,aAAA,KAAA,MAAA,CAAA,WAAA,CAAA,CAAA,CAAA;AACD;;AACA,SAAA,IAAA,CAAA,GAAA,KAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACD,UAAA,IAAA,CAAA,YAAA,CAAA,YAAsB,CAAA,KAAA,EAAA,EAAA,CAAA,CAAtB,EAAsB,YAAA,CAAA,KAAA,EAAA,EAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAtB,CAAA,EAAsB;AACb,eAAK,CAAL;AACR;AACD;;AACC,WAAO,CAAC,CAAR;AACA,G;;AACD,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA,GAAI,UAAA,CAAA,EAAA,CAAA,EAAA;SAAJ,C,CAAA,C,EAAA,C;AACC,GADD;;AAEA,EAAA,MAAC,CAAA,SAAD,CAAC,QAAD,GAAC,UAAA,CAAA,EAAA;;GAAD;;AAAC,EAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,SAAA,EAAA,OAAA,EAAA;AACD,IAAA,GAAA,EAAA,YAAA;AAAA,aAAA,KAAA,MAAA,CAAA,MAAA;AACC,KAFA;AAGD,IAAA,UAAC,EAAA,IAHA;;AAAA,GAAA;AAGA,EAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,SAAA,EAAA,YAAA,EAAA;AACD,IAAA,GAAA,EAAA,YAAA;AACK,aAAM,KAAN;AACJ,KAHA;AAID,IAAA,UAAA,EAAA,IAJC;AAKA,IAAA,YAAS,EAAA;AALT,GAAA;;AAOD,EAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAA,CAAA,EAAA;AACC,SAAA,CAAA,CAAO,CAAP;AACA,GAFD;;AAGA,EAAA,MAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAa;AACZ,SAAK,CAAL;AACC,GAFF;;AAGE,EAAA,MAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAA,CAAA,EAAA;AACD,WAAA,KAAA,OAAA,CAAA,CAAA,KAAA,CAAA;AACD,GAFE;;AAGD,EAAA,MAAA,CAAA,SAAA,CAAqB,MAArB,GAA8B,UAAE,CAAF,EAAE,CAAF,EAAE;AAChC,SAAK,IAAI,CAAA,GAAE,CAAX,EAAW,CAAA,GAAA,KAAA,MAAA,CAAA,MAAX,EAAW,CAAA,EAAX,EAAW;AACV,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,GAAO,KAAM,MAAN,CAAM,CAAN,CAAP;AACA;AACD,GAJA;;AAKA,EAAA,MAAA,CAAA,SAAA,CAAY,MAAZ,GAAY,UAAA,CAAA,EAAA;AACZ,QAAA,CAAA,GAAA,KAAA,OAAA,CAAA,CAAA,CAAA;;AACD,QAAA,CAAA,GAAA,CAAA,EAAA;AACC,aAA8B,KAA9B;AACA;;AACD,SAAA,CAAA,CAAA,CAAA;AACC,WAAO,IAAP;AACA,GAPA;;AAQD,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACC,WAAO,mBAAY,CAAA,KAAA,MAAA,CAAnB;AACA,GAFD;;AAGQ,EAAA,MAAA,CAAA,SAAA,CAAR,mBAAQ,GAAkB,YAAgB;AACzC,WAAK,mBAAwB,CAAA,KAAA,MAAA,CAA7B;AACA,GAFO;;SAGN,S,CAAS,O,GAAE,YAAc;AACzB,WAAA,KAAM,MAAN;AACA,G;;AACA,EAAA,MAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAA,MAAA,EAAA,WAAA,EAAA,CAAA,EAAA;AACD,QAAI,CAAC,GAAG,QAAQ,CAAS,gBAAT,EAAuB,WAAvB,CAAhB;;AACA,QAAI,CAAC,IAAI,IAAT,EAAe;AACd,UAAI,EAAE,GAAG,CAAC,CAAC,WAAF,EAAT;AACA,MAAA,KAAK,CAAC,SAAN,CAAgB,MAAhB,CAAuB,KAAvB,CAA6B,KAAK,MAAlC,EAA0C,KAAK,CAAC,SAAN,CAAgB,MAAhB,CAAuB,KAAvB,CAA6B,CAAC,MAAD,EAAS,CAAT,CAA7B,EAA0C,EAA1C,CAA1C;AACA,aAAO,IAAP;AACA;;AACD,QAAI,CAAA,GAAA,QAAU,CAAA,YAAA,EAAqB,WAArB,CAAd;;AACA,QAAI,CAAA,IAAA,IAAJ,EAAe;AACd,UAAA,EAAK,GAAI,CAAA,CAAE,OAAF,EAAT;AACC,MAAA,KAAA,CAAA,SAAA,CAAY,MAAZ,CAAmB,KAAnB,CAAyB,KAAI,MAA7B,EAA6B,KAAA,CAAA,SAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAA7B;AACA,aAAA,IAAA;AACA;;QACD,OAAO,GAAA,QAAK,CAAA,aAAA,CAAA,UAAA,CAAA,KAAA,EAAA,CAAA,EAAA,WAAA,C;;AACZ,QAAA,OAAA,IAAA,IAAA,EAAA;AACG,WAAI,IAAW,EAAA,GAAM,CAArB,EAAqB,EAAA,GAAQ,OAAA,CAAA,KAA7B,EAA4C,EAAA,EAA5C,EAA4C;AACxC,YAAI,KAAI,GAAE,OAAA,CAAA,IAAA,CAAA,EAAA,CAAV;;AACH,aAAI,MAAJ,CAAY,MAAZ,CAAmB,MAAA,GAAA,EAAnB,EAAmB,CAAnB,EAAmB,KAAnB;AACJ;;AACC,aAAA,IAAA;AACC;;eACA,KAAK,CAAA,OAAL,CAAa,WAAb,IAAoB,WAApB,GAAoB,I;;gBACpB,I,EAAK;iBACJ,KAAI,M;;eACJ,M,CAAA,M,IAAA,C,EAAA;AACD,YAAA,CAAA,EAAA;AAAM,cAAA,KAAA,GAAA,IAAA;AACN,cAAI,CAAC,GAAG,IAAI,CAAC,MAAb;;AACA,eAAK,IAAI,EAAE,GAAG,CAAd,EAAiB,EAAE,GAAG,CAAtB,EAAyB,EAAE,EAA3B,EAA+B;AAC9B,YAAA,IAAI,CAAC,MAAM,EAAP,CAAJ,GAAiB,KAAA,CAAA,EAAA,CAAjB;AACA;AACD,SALA,MAMD;AAAM,cAAA,CAAA,GAAA,IAAA,CAAA,MAAA;;AACN,eAAS,IAAE,EAAI,GAAE,CAAjB,EAAmB,EAAG,GAAI,CAA1B,EAA2B,EAAA,EAA3B,EAAmC;AAC9B,YAAA,IAAC,CAAA,MAAO,EAAP,CAAD,GAAgB,eAAe,CAAA,KAAA,EAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAA/B;AACJ;AACD;AACD,O,MACA;AACM,aAAM,IAAA,EAAA,GAAA,CAAN,EAAM,EAAA,GAAA,IAAA,CAAA,MAAN,EAAM,EAAA,EAAN,EAAM;AACb,UAAA,IAAA,CAAA,MAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA;AACD;;;AACK,aAAO,IAAP;AACH;;AACA,WAAA,KAAA;AACD,GA5CC;;;QA6CD,G,EAAkB,E;;QAAb,KAAA,CAAA,CAAA,CAAA,EAAI,CAAJ,EAAS,KAAT,C,EAAS;AACb;AACA;;QACA,EAAA,GAAA,C;;;;;;;;;;;AACD,MAAA,GAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACD,K;AACK,UAAI;AACP,YAAO,EAAA,IAAA,CAAA,EAAA,CAAA,IAAA,KAAA,EAAA,GAAA,EAAA,CAAA,MAAA,CAAP,EACA,EAAA,CAAA,IAAA,CAAA,EAAA;AACG,OAHA,S;AAIJ,YAAkB,GAAlB,EAAS,MAAK,GAAA,CAAA,KAAL;AACR;AACA;AACA,G;;;;;;;;;;;;;AACD,YAAA,KAAA,GAAA,EAAA,CAAA,KAAA;;AACD,aAAA,MAAA,CAAA,MAAA,CAAE,EAAF,EAAE,CAAF,EAAgB,KAAhB;;AACK,QAAA,EAAM;AACT;AACA,K,CACA,OAAA,KAAA,EAAA;AACG,MAAA,GAAC,GAAA;AAAO,QAAA,KAAA,EAAO;AAAd,OAAD;AACJ,K,SACD;AACC,UAAA;AACA,YAAA,EAAA,IAAA,CAAA,EAAA,CAAA,IAAA,KAAA,EAAA,GAAA,EAAA,CAAA,MAAA,CAAA,EACD,EAAA,CAAA,IAAA,CAAI,EAAJ;AAAA,OAFC,SAGO;AACP,YAAA,GAAA,E;;AAAA;AACD,G;;AACC,EAAA,MAAA,CAAA,SAAA,CAAO,CAAP,GAAO,UAAuB,MAAvB,EAA+B,YAA/B,EAAgC;AACvC,QAAA,MAAO,IAAK,CAAZ,IAAmB,YAAW,IAAA,CAA9B,EAA8B;AAC9B,WAAA,MAAA,CAAA,KAAA;;AACD;AACC;;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,YAAA;AACD,GANC;;AAOA,EAAA,MAAA,CAAA,SAAA,CAAY,OAAZ,GAAoB,UAAA,CAAA,EAAmB,CAAnB,EAAmB;AACvC,IAAA,WAAA,CAAA,KAAA,MAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AACD,GAFC;;AAGA,EAAA,MAAA,CAAA,cAAA,CAAU,MAAA,CAAe,SAAzB,EAAuC,aAAvC,EAA0C;AAC1C,IAAA,GAAA,EAAA,YAAA;AACD,aAAA,KAAA;AACC,KAH0C;AAI1C,IAAA,UAAS,EAAE,IAJ+B;AAKzC,IAAA,YAAO,EAAA;AALkC,GAA1C;;AAOA,EAAA,MAAA,CAAA,SAAA,CAAU,IAAV,GAAU,UAAA,CAAA,EAAA;AACV,SAAA,CAAA,CAAA,eAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA;AACD,WAAA,KAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACC,GAHA;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAW,SAAX,GAAe,UAAc,CAAd,EAAc;AAC5B,WAAC,KAAG,QAAH,CAAY,CAAZ,KAAkB,CAAnB;AACC,GAFF;;SAGE,S,CAAK,Q,GAAa,UAAA,CAAA,EAAA;WAClB,KAAI,OAAJ,CAAW,eAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAX,C;AACC,G;;SACA,S,CAAA,O,GAAA,UAAA,CAAA,EAAA,CAAA,EAAA;WACD,C,EAAA,eAAY,CAAA,KAAA,EAAA,EAAA,CAAA,C;AACX,G;;SACA,S,CAAA,O,GAAA,UAAA,CAAA,EAAA;YACD,KAAA,QAAA,CAAS,CAAT,C;;QACD,CAAC,GAAC,C,EAAA;AACF;AAAM;;AACN,SAAC,CAAD,CAAC,CAAD;AACC,G;;SACA,S,CAAK,C,GAAY,YAAC;YAClB,I;;aACC,E,IAAA,Y,EAAU;UACV,UAAA,CAAA,EAAA,CAAA,EAAA;AACD,YAAI,CAAC,GAAA,CAAL;YACC,CAAA,GAAA,C;;AACA,YAAA,CAAA,GAAA,CAAA,EAAA;AACD,iBAAS,CAAA,CAAT;AACC;;AACF,YAAA,CAAA,IAAA,CAAA,EAAA;AAAU,iBAAO,CAAP;AACN;;AACH,eAAK,CAAL;AACA,O;AACA,K,UACC,KAAA,EAAA,IAAQ,Y,EAAE;UACV,UAAA,CAAA,EAAA,CAAA,EAAA;AACD,YAAI,CAAC,GAAA,CAAL;YACC,CAAA,GAAA,C;;AACA,YAAA,CAAA,GAAA,CAAA,EAAA;AACD,iBAAS,CAAA,CAAT;AACC;;AACF,YAAA,CAAA,IAAA,CAAA,EAAA;AAAU,iBAAO,CAAP;AACN;;AACH,eAAK,CAAL;AACA,O;AACA,K,UACC,KAAA,EAAA,IAAQ,Y,EAAE;UACV,UAAA,CAAA,EAAA,CAAA,EAAA;AACD,YAAI,CAAC,GAAC,YAAc,CAAC,CAAD,CAApB;YACC,CAAA,GAAA,YAAS,CAAA,CAAA,C;;AACT,YAAA,CAAA,GAAA,CAAA,EAAA;AACD,iBAAS,CAAA,CAAT;AACC;;AACF,YAAA,CAAA,IAAA,CAAA,EAAA;AAAM,iBAAA,CAAA;AACF;;AACJ,eAAA,CAAA;AACI,O;AACL,K,MACO,IAAA,KAAR,EAAQ,IAAR,UAAQ,EAAG;AACN,MAAA,CAAC,GAAA,UAAY,CAAZ,EAAY,CAAZ,EAAY;AACjB,YAAA,CAAA,GAAA,CAAA;AACD,YAAA,CAAA,GAAA,CAAA;;AACM,YAAO,CAAA,CAAA,OAAA,KAAc,CAAC,CAAA,OAAD,EAArB,EAAsB;AAC3B,iBAAA,CAAA,CAAA;AAED;;;;AACmB;;AAAb,eAAI,CAAJ;AACJ,OARG;AASH,KAVM,M;;;;;;;;;;;;;AAWR,EAAA,MAAC,CAAA,SAAD,CAAC,EAAD,GAAC,UAAA,QAAA,EAAA;AACD,SAAA,MAAA,CAAA,IAAA,CAAA,QAAA;AACC,GAFD;;AAGA,EAAA,MAAC,CAAA,SAAD,CAAC,CAAD,GAAC,UAAA,CAAA,EAAA;AACD,QAAA,GAAA,EAAA,EAAA;;AACC,QAAA;AACC,WAAE,IAAK,EAAA,GAAO,OAAI,CAAA,QAAJ,CAAI,QAAA,CAAA,CAAA,CAAJ,CAAZ,EAAgB,EAAA,GAAA,EAAA,CAAA,IAAA,EAAlB,EAAkB,CAAA,EAAA,CAAA,IAAlB,EAAkB,EAAA,GAAA,EAAA,CAAA,IAAA,EAAlB,EAAkB;AAClB,YAAA,KAAA,GAAA,EAAA,CAAA,KAAA;;AACD,aAAA,MAAA,CAAA,IAAA,CAAA,KAAA;AACD;AAAA,KAJC,CAKA,OAAA,KAAA,EAAO;AACP,MAAA,GAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;KANA,S;AAMA,UAAA;AAED,YAAA,EAAA,IAAI,CAAA,EAAA,CAAA,IAAJ,KAAI,EAAA,GAAA,EAAA,CAAA,MAAJ,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACC,OAHA,SAIA;;AAAA;AACD;AACC,GAdD;;AAeA,EAAA,MAAC,CAAA,SAAD,CAAC,OAAD,GAAC,YAAA;AACD,WAAA,KAAA,MAAA;AACC,GAFD;;AAGC,EAAA,MAAA,CAAA,SAAA,CAAqB,CAArB,GAAqB,UAAU,CAAV,EAAU;AAC/B,SAAA,IAAQ,CAAA,GAAK,CAAb,EAAe,CAAA,GAAA,KAAA,MAAA,CAAA,MAAf,EAAe,CAAA,EAAf,EAAe;AACd,MAAA,CAAA,CAAA,KAAK,MAAL,CAAqB,CAArB,CAAA,CAAA;AACA;AACA,GAJD;;SAKC,c,CAAY,MAAA,CAAA,S,EAAA,gB,EAAA;SACX,YAAS;AACT,aAAA,IAAA;AACD,KAHY;AAIX,IAAA,UAAC,EAAG,IAJO;AAKX,IAAA,YAAA,EAAA;AALW,G;SAMX,c,CAAU,MAAA,CAAA,S,EAAA,U,EAAA;SACV,YAAA;AACD,aAAA,KAAA,CAAA;AACD,KAHY;AAIZ,IAAA,UAAA,EAAA,IAJY;AAKb,IAAA,YAAA,EAAA;AALa,G;;AAOb,EAAA,MAAC,CAAA,SAAD,CAAC,CAAD,GAAC,UAAA,CAAA,EAAA;AACD,WAAA,KAAA,CAAA,CAAC,CAAD,EAAA,UAAA,CAAA,oBAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACC,GAFD;;SAGE,S,CAAQ,C,GAAK,UAAS,CAAT,EAAa,CAAb,EAAc;QAC3B,CAAA,GAAI,C;QACJ,CAAA,GAAI,KAAC,KAAD,GAAa,C;;AACjB,WAAA,CAAI,IAAC,CAAL,EAAW;AACX,UAAA,CAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA;AACD,UAAA,CAAA,GAAA,KAAA,MAAA,CAAA,CAAA,CAAA;AACD,UAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AACK,UAAI,CAAA,IAAK,CAAT,EAAW;AACf,eAAA,CAAA;AACD;;AACC,UAAK,CAAI,GAAC,CAAV,EAAsB;AACjB,QAAA,CAAC,GAAC,CAAA,GAAK,CAAP;AACH,OAFF,MAGE;AACD,QAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AACD;AACA;;AACD,WAAA,CAAA,CAAA;AACC,G;;AACD,EAAA,MAAC,CAAA,SAAD,CAAC,CAAD,GAAC,YAAA;AA3XM,WAAE,IAAS,oBAAT,CAA0B,KAAgB,EAA1C,EAAiD,CAAjD,EAAoD,IAApD,CAAF;AA4XR,GADC;;AA5X8B,EAAA,MA6X9B,CAAA,SA7X8B,CA6X9B,CA7X8B,GA6X9B,YAAA;AA7XY,SAAA,IAAM,CAAA,GAAA,CAAN,EAAM,CAAA,GAAA,SAAA,CAAA,KAAA,KAAA,EAAA,CAAA,CAAN,EAAM,CAAA,EAAN,EAAM;;;;;;GAAY;;;;;;;;;;;;;;;;;;;;;;CAA/B,C,IAAA,CAAA","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, IList$1_$type, IList_$type, fromEnum, getBoxIfEnum, typeCast, typeCastObjTo$t, fromEn, Number_$type, typeGetValue, Date_$type, runOn, markType, getEnumeratorObject } from \"./type\";\nimport { IArray_$type } from \"./IArray\";\nimport { IArrayList_$type } from \"./IArrayList\";\nimport { arrayCopyTo } from \"./array\";\nimport { Comparer$1 } from \"./Comparer$1\";\nimport { ReadOnlyCollection$1 } from \"./ReadOnlyCollection$1\";\nimport { NotImplementedException } from \"./NotImplementedException\";\nimport { intDivide } from \"./number\";\nimport { stringCompareTo } from \"./string\";\n/**\n * @hidden\n */\nvar List$1 = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(List$1, _super);\n    function List$1($t, a) {\n        var e_1, _a;\n        var _rest = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            _rest[_i - 2] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this.$t = null;\n        _this._inner = null;\n        _this.c = false;\n        _this.h = 0;\n        _this.m = {};\n        _this.$t = $t;\n        _this.$type = _this.$type.specialize(_this.$t);\n        a = (a == void 0) ? 0 : a;\n        switch (a) {\n            case 0:\n                {\n                    _this._inner = ([]);\n                    _this.c = (_this.$t.InstanceConstructor && _this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\n                }\n                break;\n            case 1:\n                {\n                    var c = _rest[0];\n                    {\n                        _this._inner = ([]);\n                        _this.c = (_this.$t.InstanceConstructor && _this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\n                    }\n                    if (_this.d(0, c, true)) {\n                        return _this;\n                    }\n                    try {\n                        for (var _b = tslib_1.__values(fromEnum(c)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                            var d = _c.value;\n                            _this.add(d);\n                        }\n                    }\n                    catch (e_1_1) {\n                        e_1 = { error: e_1_1 };\n                    }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_a = _b.return))\n                                _a.call(_b);\n                        }\n                        finally {\n                            if (e_1)\n                                throw e_1.error;\n                        }\n                    }\n                }\n                break;\n            case 2:\n                {\n                    var c = _rest[0];\n                    {\n                        _this._inner = ([]);\n                        _this.c = (_this.$t.InstanceConstructor && _this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\n                    }\n                }\n                break;\n        }\n        return _this;\n    }\n    List$1.prototype.x = function (a, b) {\n        this._inner[a] = b;\n    };\n    List$1.prototype.r = function (a, b) {\n        this._inner.splice(a, 0, b);\n    };\n    List$1.prototype.n = function (a) {\n        this._inner.push(a);\n    };\n    List$1.prototype.u = function (a) {\n        if (a == 0) {\n            this._inner.shift();\n            return;\n        }\n        this._inner.splice(a, 1);\n    };\n    List$1.prototype.p = function () {\n        this._inner = ([]);\n    };\n    List$1.prototype.item = function (a, b) {\n        if (arguments.length === 2) {\n            this.x(a, b);\n            return b;\n        }\n        else {\n            return this._inner[a];\n        }\n    };\n    List$1.prototype.indexOf = function (a) {\n        if (this.c) {\n            return (this._inner.indexOf(a));\n        }\n        for (var b = 0; b < this._inner.length; b++) {\n            if (Base.equalsStatic(getBoxIfEnum(this.$t, a), getBoxIfEnum(this.$t, this._inner[b]))) {\n                return b;\n            }\n        }\n        return -1;\n    };\n    List$1.prototype.indexOf2 = function (a, b) {\n        if (this.c) {\n            return (this._inner.indexOf(a, b));\n        }\n        for (; b < this._inner.length; b++) {\n            if (Base.equalsStatic(getBoxIfEnum(this.$t, a), getBoxIfEnum(this.$t, this._inner[b]))) {\n                return b;\n            }\n        }\n        return -1;\n    };\n    List$1.prototype.k = function (a) {\n        if (this.c) {\n            return (this._inner.lastIndexOf(a));\n        }\n        for (var b = this._inner.length - 1; b >= 0; b--) {\n            if (Base.equalsStatic(getBoxIfEnum(this.$t, a), getBoxIfEnum(this.$t, this._inner[b]))) {\n                return b;\n            }\n        }\n        return -1;\n    };\n    List$1.prototype.insert = function (a, b) {\n        this.r(a, b);\n    };\n    List$1.prototype.removeAt = function (a) {\n        this.u(a);\n    };\n    Object.defineProperty(List$1.prototype, \"count\", {\n        get: function () {\n            return this._inner.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List$1.prototype, \"isReadOnly\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    List$1.prototype.add = function (a) {\n        this.n(a);\n    };\n    List$1.prototype.clear = function () {\n        this.p();\n    };\n    List$1.prototype.contains = function (a) {\n        return this.indexOf(a) >= 0;\n    };\n    List$1.prototype.copyTo = function (a, b) {\n        for (var c = 0; c < this._inner.length; c++) {\n            a[b + c] = this._inner[c];\n        }\n    };\n    List$1.prototype.remove = function (a) {\n        var b = this.indexOf(a);\n        if (b < 0) {\n            return false;\n        }\n        this.u(b);\n        return true;\n    };\n    List$1.prototype.getEnumerator = function () {\n        return getEnumeratorObject(this._inner);\n    };\n    List$1.prototype.getEnumeratorObject = function () {\n        return getEnumeratorObject(this._inner);\n    };\n    List$1.prototype.asArray = function () {\n        return this._inner;\n    };\n    List$1.prototype.d = function (index_, collection_, a) {\n        var b = typeCast(IArrayList_$type, collection_);\n        if (b != null) {\n            var a_ = b.asArrayList();\n            Array.prototype.splice.apply(this._inner, Array.prototype.concat.apply([index_, 0], a_));\n            return true;\n        }\n        var c = typeCast(IArray_$type, collection_);\n        if (c != null) {\n            var a_ = c.asArray();\n            Array.prototype.splice.apply(this._inner, Array.prototype.concat.apply([index_, 0], a_));\n            return true;\n        }\n        var asList_ = typeCast(IList$1_$type.specialize(this.$t), collection_);\n        if (asList_ != null) {\n            for (var i_ = 0; i_ < asList_.count; i_++) {\n                var item_ = asList_.item(i_);\n                this._inner.splice(index_ + i_, 0, item_);\n            }\n            return true;\n        }\n        var arr_ = (Array.isArray(collection_) ? collection_ : null);\n        if (arr_ != null) {\n            var inn_ = this._inner;\n            if (this._inner.length == 0) {\n                if (a) {\n                    var parr_ = arr_;\n                    var d = arr_.length;\n                    for (var i_ = 0; i_ < d; i_++) {\n                        inn_[index_++] = parr_[i_];\n                    }\n                }\n                else {\n                    var e = arr_.length;\n                    for (var i_ = 0; i_ < e; i_++) {\n                        inn_[index_++] = typeCastObjTo$t(this.$t, arr_[i_]);\n                    }\n                }\n            }\n            else {\n                for (var i_ = 0; i_ < arr_.length; i_++) {\n                    inn_.splice(index_++, 0, arr_[i_]);\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    List$1.prototype.t = function (a, b) {\n        var e_2, _a;\n        if (this.d(a, b, false)) {\n            return;\n        }\n        var j_ = a;\n        try {\n            for (var _b = tslib_1.__values(fromEn(b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var item_ = _c.value;\n                this._inner.splice(j_, 0, item_);\n                j_++;\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n    };\n    List$1.prototype.s = function (a, b) {\n        var e_3, _a;\n        if (this.d(a, b, true)) {\n            return;\n        }\n        var j_ = a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var item_ = _c.value;\n                this._inner.splice(j_, 0, item_);\n                j_++;\n            }\n        }\n        catch (e_3_1) {\n            e_3 = { error: e_3_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_3)\n                    throw e_3.error;\n            }\n        }\n    };\n    List$1.prototype.v = function (index_, numToRemove_) {\n        if (index_ == 0 && numToRemove_ == 1) {\n            this._inner.shift();\n            return;\n        }\n        this._inner.splice(index_, numToRemove_);\n    };\n    List$1.prototype.copyTo1 = function (a, b) {\n        arrayCopyTo(this._inner, a, b);\n    };\n    Object.defineProperty(List$1.prototype, \"isFixedSize\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    List$1.prototype.add1 = function (a) {\n        this.n(typeCastObjTo$t(this.$t, a));\n        return this._inner.length - 1;\n    };\n    List$1.prototype.contains1 = function (a) {\n        return this.indexOf1(a) >= 0;\n    };\n    List$1.prototype.indexOf1 = function (a) {\n        return this.indexOf(typeCastObjTo$t(this.$t, a));\n    };\n    List$1.prototype.insert1 = function (a, b) {\n        this.r(a, typeCastObjTo$t(this.$t, b));\n    };\n    List$1.prototype.remove1 = function (a) {\n        var b = this.indexOf1(a);\n        if (b < 0) {\n            return;\n        }\n        this.u(b);\n    };\n    List$1.prototype.y = function () {\n        var a = null;\n        if (this.$t == Number_$type) {\n            a = function (b, c) {\n                var d = b;\n                var e = c;\n                if (d < e) {\n                    return -1;\n                }\n                if (d == e) {\n                    return 0;\n                }\n                return 1;\n            };\n        }\n        else if (this.$t == Number_$type) {\n            a = function (b, c) {\n                var d = b;\n                var e = c;\n                if (d < e) {\n                    return -1;\n                }\n                if (d == e) {\n                    return 0;\n                }\n                return 1;\n            };\n        }\n        else if (this.$t == Number_$type) {\n            a = function (b, c) {\n                var d = typeGetValue(b);\n                var e = typeGetValue(c);\n                if (d < e) {\n                    return -1;\n                }\n                if (d == e) {\n                    return 0;\n                }\n                return 1;\n            };\n        }\n        else if (this.$t == Date_$type) {\n            a = function (b, c) {\n                var d = b;\n                var e = c;\n                if (d.getTime() < e.getTime()) {\n                    return -1;\n                }\n                if (d.getTime() == e.getTime()) {\n                    return 0;\n                }\n                return 1;\n            };\n        }\n        else {\n            a = function (b, c) { return stringCompareTo(b, c); };\n        }\n        this.ab(a);\n    };\n    List$1.prototype.ab = function (compare_) {\n        this._inner.sort(compare_);\n    };\n    List$1.prototype.aa = function (compare_) {\n        this._inner.sort(compare_);\n    };\n    List$1.prototype.o = function (a) {\n        var e_4, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var item_ = _c.value;\n                this._inner.push(item_);\n            }\n        }\n        catch (e_4_1) {\n            e_4 = { error: e_4_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_4)\n                    throw e_4.error;\n            }\n        }\n    };\n    List$1.prototype.toArray = function () {\n        return this._inner;\n    };\n    List$1.prototype.q = function (a) {\n        for (var b = 0; b < this._inner.length; b++) {\n            a(this._inner[b]);\n        }\n    };\n    Object.defineProperty(List$1.prototype, \"isSynchronized\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List$1.prototype, \"syncRoot\", {\n        get: function () {\n            return this.m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    List$1.prototype.f = function (a) {\n        return this.g(a, Comparer$1.defaultComparerValue(this.$t));\n    };\n    List$1.prototype.g = function (a, b) {\n        var c = 0;\n        var d = this.count - 1;\n        while (c <= d) {\n            var e = c + (intDivide((d - c), 2));\n            var f = this._inner[e];\n            var g = b.compare(f, a);\n            if (g == 0) {\n                return e;\n            }\n            if (g < 0) {\n                c = e + 1;\n            }\n            else {\n                d = e - 1;\n            }\n        }\n        return ~c;\n    };\n    List$1.prototype.e = function () {\n        return new ReadOnlyCollection$1(this.$t, 1, this);\n    };\n    List$1.prototype.w = function () {\n        for (var a = 0; a < intDivide(this.count, 2); a++) {\n            var b = this.count - a - 1;\n            var c = this._inner[a];\n            this._inner[a] = this._inner[b];\n            this._inner[b] = c;\n        }\n    };\n    List$1.prototype.z = function (a) {\n        this.aa(runOn(a, a.compare));\n    };\n    List$1.prototype.i = function (a) {\n        for (var b = 0; b < this._inner.length; b++) {\n            if (a(this._inner[b])) {\n                return b;\n            }\n        }\n        return -1;\n    };\n    List$1.prototype.l = function (a) {\n        throw new NotImplementedException(0);\n    };\n    List$1.$t = markType(List$1, 'List$1', Base.$, [IList$1_$type.specialize(0), IArray_$type, IList_$type]);\n    return List$1;\n}(Base));\nexport { List$1 };\n//# sourceMappingURL=List$1.js.map\n"]},"metadata":{},"sourceType":"module"}