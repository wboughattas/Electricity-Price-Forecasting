{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { RingSeriesBaseDescriptionMetadata } from \"./RingSeriesBaseDescriptionMetadata\";\nimport { RingDescription } from \"./RingDescription\";\n/**\n * @hidden\n */\n\nvar RingDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RingDescriptionMetadata, _super);\n\n  function RingDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RingDescriptionMetadata.b = function (a) {\n    if (RingDescriptionMetadata.a == null) {\n      RingDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      RingDescriptionMetadata.c(a, RingDescriptionMetadata.a);\n      RingSeriesBaseDescriptionMetadata.d(a);\n    }\n  };\n\n  RingDescriptionMetadata.c = function (a, b) {\n    b.item(\"Index\", \"Number:int\");\n    b.item(\"InnerExtend\", \"Number:double\");\n    b.item(\"ControlSize\", \"Size\");\n    b.item(\"Center\", \"Point\");\n    b.item(\"RingSeries\", \"ExportedType:RingSeriesBase\");\n    b.item(\"RingBreadth\", \"Number:double\");\n  };\n\n  RingDescriptionMetadata.d = function (a) {\n    RingDescriptionMetadata.b(a);\n    a.n(\"Ring\", function () {\n      return new RingDescription();\n    });\n    a.m(\"Ring\", RingDescriptionMetadata.a);\n  };\n\n  RingDescriptionMetadata.$t = markType(RingDescriptionMetadata, 'RingDescriptionMetadata');\n  RingDescriptionMetadata.a = null;\n  return RingDescriptionMetadata;\n}(Base);\n\nexport { RingDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/RingDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,iCAAT,QAAkD,qCAAlD;AACA,SAAS,eAAT,QAAgC,mBAAhC;AAEA;;AAEG;;AACH,IAAA,uBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,OAAA,CAAA,SAAA,CAAA,uBAAA,EAAA,MAAA;;AAA7C,WAAA,uBAAA,GAAA;;AAuBC;;AApBe,EAAA,uBAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,uBAAuB,CAAC,CAAxB,IAA6B,IAAjC,EAAuC;AACtC,MAAA,uBAAuB,CAAC,CAAxB,GAA4B,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA5B;AACA,MAAA,uBAAuB,CAAC,CAAxB,CAA0B,CAA1B,EAA6B,uBAAuB,CAAC,CAArD;AACA,MAAA,iCAAiC,CAAC,CAAlC,CAAoC,CAApC;AACA;AACD,GANc;;AAOR,EAAA,uBAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,YAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,eAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,MAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,OAAjB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,6BAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,eAAtB;AACA,GAPM;;AAQA,EAAA,uBAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,uBAAuB,CAAC,CAAxB,CAA0B,CAA1B;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,MAAJ,EAAY,YAAA;AAAM,aAAA,IAAA,eAAA,EAAA;AAAqB,KAAvC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,MAAJ,EAAY,uBAAuB,CAAC,CAApC;AACA,GAJM;;AAjBA,EAAA,uBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uBAAD,EAA0B,yBAA1B,CAAnB;AACQ,EAAA,uBAAA,CAAA,CAAA,GAAkC,IAAlC;AAqBhB,SAAA,uBAAA;AAAC,CAvBD,CAA6C,IAA7C,CAAA;;SAAa,uB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { RingSeriesBaseDescriptionMetadata } from \"./RingSeriesBaseDescriptionMetadata\";\nimport { RingDescription } from \"./RingDescription\";\n/**\n * @hidden\n */\nvar RingDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RingDescriptionMetadata, _super);\n    function RingDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RingDescriptionMetadata.b = function (a) {\n        if (RingDescriptionMetadata.a == null) {\n            RingDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            RingDescriptionMetadata.c(a, RingDescriptionMetadata.a);\n            RingSeriesBaseDescriptionMetadata.d(a);\n        }\n    };\n    RingDescriptionMetadata.c = function (a, b) {\n        b.item(\"Index\", \"Number:int\");\n        b.item(\"InnerExtend\", \"Number:double\");\n        b.item(\"ControlSize\", \"Size\");\n        b.item(\"Center\", \"Point\");\n        b.item(\"RingSeries\", \"ExportedType:RingSeriesBase\");\n        b.item(\"RingBreadth\", \"Number:double\");\n    };\n    RingDescriptionMetadata.d = function (a) {\n        RingDescriptionMetadata.b(a);\n        a.n(\"Ring\", function () { return new RingDescription(); });\n        a.m(\"Ring\", RingDescriptionMetadata.a);\n    };\n    RingDescriptionMetadata.$t = markType(RingDescriptionMetadata, 'RingDescriptionMetadata');\n    RingDescriptionMetadata.a = null;\n    return RingDescriptionMetadata;\n}(Base));\nexport { RingDescriptionMetadata };\n//# sourceMappingURL=RingDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}