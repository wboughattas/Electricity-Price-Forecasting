{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { DependencyObjectNotifier } from \"./DependencyObjectNotifier\";\nimport { IList$1_$type, BaseError, delegateCombine, Point_$type, fromEnum, markType, markDep } from \"./type\";\nimport { ShapefileRecord } from \"./ShapefileRecord\";\nimport { INotifyCollectionChanged_$type } from \"./INotifyCollectionChanged\";\nimport { Rect } from \"./Rect\";\nimport { DependencyProperty } from \"./DependencyProperty\";\nimport { ObservableCollection$1 } from \"./ObservableCollection$1\";\nimport { List$1 } from \"./List$1\";\nimport { AsyncCompletedEventArgs } from \"./AsyncCompletedEventArgs\";\nimport { BinaryReader } from \"./BinaryReader\";\nimport { BinaryFileDownloader } from \"./BinaryFileDownloader\";\nimport { ShapeFilterRecordEventArgs } from \"./ShapeFilterRecordEventArgs\";\nimport { ShapeFileUtil } from \"./ShapeFileUtil\";\nimport { PropertyMetadata } from \"./PropertyMetadata\";\nimport { isNaN_, isInfinity } from \"./number\";\n/**\r\n * @hidden\r\n */\n\nvar ShapefileConverter =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ShapefileConverter, _super);\n\n  function ShapefileConverter() {\n    var _this = _super.call(this) || this;\n\n    _this._name = null;\n    _this.a8 = null;\n    _this.a7 = Rect.empty;\n    _this._shapeHeader = null;\n    _this.q = false;\n    _this.importPending = null;\n    _this.importCompleted = null;\n    _this.x = null;\n    _this.collectionChanged = null;\n    _this.filter = null;\n    _this.records = new ObservableCollection$1(ShapefileRecord.$, 0);\n    var a = _this.records;\n    a.collectionChanged = delegateCombine(a.collectionChanged, function (a, b) {\n      if (_this.collectionChanged != null) {\n        _this.collectionChanged(_this, b);\n      }\n    });\n    return _this;\n  }\n\n  Object.defineProperty(ShapefileConverter.prototype, \"name\", {\n    get: function () {\n      return this._name;\n    },\n    set: function (a) {\n      this._name = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ShapefileConverter.prototype, \"worldRect\", {\n    get: function () {\n      return this.a8;\n    },\n    set: function (a) {\n      if (Rect.l_op_Inequality(this.a8, a)) {\n        var b = this.a8;\n        this.a8 = a;\n        this.aw(\"WorldRect\", b, this.a8);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ShapefileConverter.prototype, \"computedWorldRect\", {\n    get: function () {\n      return this.a7;\n    },\n    set: function (a) {\n      if (Rect.l_op_Inequality(this.a7, a)) {\n        var b = this.a7;\n        this.a7 = a;\n        this.aw(\"ComputedWorldRect\", b, this.a7);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ShapefileConverter.prototype.getWorldBounds = function (a) {\n    if (a && this.computedWorldRect.isEmpty == false) {\n      return this.computedWorldRect;\n    }\n\n    return this.worldRect;\n  };\n\n  ShapefileConverter.prototype.setWorldBounds = function (a, b) {\n    if (a) {\n      this.computedWorldRect = b;\n    } else {\n      this.worldRect = b;\n    }\n  };\n\n  Object.defineProperty(ShapefileConverter.prototype, \"shapeType\", {\n    get: function () {\n      return this.shapeHeader.a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ShapefileConverter.prototype, \"shapeHeader\", {\n    get: function () {\n      return this._shapeHeader;\n    },\n    set: function (a) {\n      this._shapeHeader = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ShapefileConverter.prototype.aw = function (a, b, c) {\n    switch (a) {\n      case ShapefileConverter.$$p[2]:\n      case ShapefileConverter.$$p[0]:\n        if (this.shapefileSource != null && this.databaseSource != null) {\n          this.at();\n        }\n\n        break;\n    }\n\n    this.j(a);\n  };\n\n  ShapefileConverter.prototype.sendImportCompleted = function () {\n    if (this.deferImportCompleted && this.q) {\n      this.deferImportCompleted = false;\n\n      if (this.importCompleted != null) {\n        this.importCompleted(this, new AsyncCompletedEventArgs(null, false, null));\n      }\n    }\n  };\n\n  ShapefileConverter.prototype.au = function (a) {\n    this.q = true;\n\n    if (this.deferImportCompleted) {\n      if (this.importPending != null) {\n        this.importPending(this, a);\n      }\n\n      return;\n    }\n\n    if (this.importCompleted != null) {\n      this.importCompleted(this, a);\n    }\n  };\n\n  ShapefileConverter.prototype.at = function () {\n    var _this = this;\n\n    this.q = false;\n    var a = null;\n    var b = null;\n\n    var c = function () {\n      if (a != null && b != null) {\n        _this.av(a, b);\n\n        _this.au(new AsyncCompletedEventArgs(null, false, null));\n      }\n    };\n\n    BinaryFileDownloader.a(this.shapefileSource, function (d) {\n      a = new BinaryReader(0, d, false);\n      c();\n    }, function (d) {\n      throw new BaseError(1, \"shape file download error: \" + d);\n    });\n    BinaryFileDownloader.a(this.databaseSource, function (d) {\n      b = new BinaryReader(0, d, false);\n      c();\n    }, function (d) {\n      throw new BaseError(1, \"dbf file download error: \" + d);\n    });\n  };\n\n  ShapefileConverter.prototype.av = function (a, b) {\n    this.shapeHeader = ShapeFileUtil.a(a, b);\n    this.worldRect = this.shapeHeader.e;\n    var c = a.currentPosition;\n    var d = a.length;\n    var e = Rect.empty;\n\n    while (c < d) {\n      var f = ShapeFileUtil.e(this.shapeHeader, a, b);\n      var record_ = f;\n      var g = true;\n\n      if (this.filter != null) {\n        var h = new ShapeFilterRecordEventArgs();\n        h.b = true;\n        h.a = f;\n        this.filter(this, h);\n\n        if (!h.b) {\n          g = false;\n        }\n      }\n\n      if (g) {\n        this.records.add(f);\n\n        if (e.isEmpty) {\n          e = f.bounds;\n        } else {\n          e.union(f.bounds);\n        }\n      }\n\n      c = a.currentPosition;\n      d = a.length;\n    }\n\n    this.computedWorldRect = e.isEmpty ? this.worldRect : e;\n  };\n\n  Object.defineProperty(ShapefileConverter.prototype, \"records\", {\n    get: function () {\n      return this.x;\n    },\n    set: function (a) {\n      this.x = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ShapefileConverter.prototype.indexOf = function (a) {\n    return this.x.indexOf(a);\n  };\n\n  ShapefileConverter.prototype.insert = function (a, b) {\n    this.x.insert(a, b);\n  };\n\n  ShapefileConverter.prototype.removeAt = function (a) {\n    this.x.removeAt(a);\n  };\n\n  ShapefileConverter.prototype.item = function (a, b) {\n    if (arguments.length === 2) {\n      this.x.item(a, b);\n      return b;\n    } else {\n      return this.x._inner[a];\n    }\n  };\n\n  ShapefileConverter.prototype.add = function (a) {\n    this.x.add(a);\n  };\n\n  ShapefileConverter.prototype.clear = function () {\n    this.x.clear();\n  };\n\n  ShapefileConverter.prototype.contains = function (a) {\n    return this.x.contains(a);\n  };\n\n  ShapefileConverter.prototype.copyTo = function (a, b) {\n    this.x.copyTo(a, b);\n  };\n\n  Object.defineProperty(ShapefileConverter.prototype, \"count\", {\n    get: function () {\n      return this.x.count;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ShapefileConverter.prototype, \"isReadOnly\", {\n    get: function () {\n      return this.x.isReadOnly;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ShapefileConverter.prototype.remove = function (a) {\n    return this.x.remove(a);\n  };\n\n  ShapefileConverter.prototype.getEnumerator = function () {\n    return this.x.getEnumerator();\n  };\n\n  ShapefileConverter.prototype.getEnumeratorObject = function () {\n    return this.x.getEnumerator();\n  };\n\n  ShapefileConverter.prototype.getPointData = function () {\n    return new List$1(ShapefileRecord.$, 1, this.records);\n  };\n\n  ShapefileConverter.prototype.getRecordsCount = function () {\n    if (this.records == null) {\n      return 0;\n    }\n\n    return this.records.count;\n  };\n\n  ShapefileConverter.prototype.getRecord = function (a) {\n    return this.records._inner[a];\n  };\n\n  ShapefileConverter.prototype.getRecordBounds = function (a) {\n    if (this.records == null) {\n      return Rect.empty;\n    }\n\n    if (a < 0 || a > this.records.count - 1) {\n      return Rect.empty;\n    }\n\n    return this.records._inner[a].bounds;\n  };\n\n  ShapefileConverter.prototype.getRecordFieldNames = function (a) {\n    if (this.records == null) {\n      return null;\n    }\n\n    if (a < 0 || a > this.records.count - 1) {\n      return null;\n    }\n\n    var b = this.records._inner[a];\n\n    if (b == null || b.fieldsNames == null) {\n      return null;\n    }\n\n    return b.fieldsNames.toArray();\n  };\n\n  ShapefileConverter.prototype.getRecordValue = function (a, b) {\n    if (this.records == null) {\n      return null;\n    }\n\n    if (a < 0 || a > this.records.count - 1) {\n      return null;\n    }\n\n    var c = this.records._inner[a];\n\n    if (c == null || c.fieldsNames == null) {\n      return null;\n    }\n\n    return c.getFieldValue(b);\n  };\n\n  ShapefileConverter.prototype.removeRecord = function (a) {\n    if (this.records == null) {\n      return;\n    }\n\n    if (a < 0 || a > this.records.count - 1) {\n      return;\n    }\n\n    this.records.removeAt(a);\n  };\n\n  ShapefileConverter.prototype.shiftAllShapes = function (a, b) {\n    if (this.records == null) {\n      return;\n    }\n\n    for (var c = 0; c < this.records.count; c++) {\n      this.shiftShapes(c, a, b);\n    }\n  };\n\n  ShapefileConverter.prototype.shiftShapes = function (a, b, c) {\n    var e_1, _a, e_2, _b;\n\n    if (this.records == null) {\n      return;\n    }\n\n    if (a < 0 || a > this.records.count - 1) {\n      return;\n    }\n\n    var d = new List$1(List$1.$.specialize(Point_$type), 0);\n    var e = this.records._inner[a].points;\n\n    try {\n      for (var _c = tslib_1.__values(fromEnum(e)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var f = _d.value;\n        var g = ShapefileConverter.w(f, b, c);\n\n        try {\n          for (var _e = (e_2 = void 0, tslib_1.__values(fromEnum(g))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var h = _f.value;\n            d.add(h);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    this.records._inner[a].points = d;\n  };\n\n  ShapefileConverter.ai = function (a, b) {\n    return ShapefileConverter.ag(a, b, -180, 180);\n  };\n\n  ShapefileConverter.ah = function (a, b) {\n    return ShapefileConverter.ag(a, b, -85.05112878, 85.05112878);\n  };\n\n  ShapefileConverter.ag = function (a, b, c, d) {\n    var e = a;\n\n    if (isNaN_(b) || b == 0) {\n      return e;\n    }\n\n    if (e + b < c) {\n      e += 2 * d;\n      e += b;\n    } else if (e + b > d) {\n      e -= 2 * d;\n      e += b;\n    } else {\n      e += b;\n    }\n\n    return e;\n  };\n\n  ShapefileConverter.isValidGeoPoint = function (a) {\n    if (a.x < -180 || a.x > 180) {\n      return false;\n    }\n\n    if (a.y < -90 || a.y > 90) {\n      return false;\n    }\n\n    return true;\n  };\n\n  ShapefileConverter.isValidGeoShape = function (a) {\n    var e_3, _a;\n\n    if (a.count < 3) {\n      return false;\n    }\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var b = _c.value;\n\n        if (!ShapefileConverter.isValidGeoPoint(b)) {\n          return false;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return true;\n  };\n\n  ShapefileConverter.w = function (a, b, c, d) {\n    var e_4, _a, e_5, _b;\n\n    if (d === void 0) {\n      d = \"\";\n    }\n\n    var e = 1.7976931348623157E+308;\n    var f = -1.7976931348623157E+308;\n    var g = new List$1(Point_$type, 0);\n\n    try {\n      for (var _c = tslib_1.__values(fromEnum(a)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var h = _d.value;\n        var i = ShapefileConverter.ag(h.x, b, -180, 180);\n        var j = ShapefileConverter.ag(h.y, c, -85.05112878, 85.05112878);\n        e = Math.min(e, i);\n        f = Math.max(f, i);\n        g.add({\n          $type: Point_$type,\n          x: i,\n          y: j\n        });\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var k = new List$1(List$1.$.specialize(Point_$type), 0);\n    var l = ShapefileConverter.ba(g);\n    var m = l.width;\n\n    if (l.left >= -180 && l.right <= 180 && l.width > 180) {\n      var n = new List$1(Point_$type, 0);\n      var o = new List$1(Point_$type, 0);\n\n      try {\n        for (var _e = tslib_1.__values(fromEnum(g)), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var p = _f.value;\n\n          if (p.x >= -180 && p.x < 0) {\n            n.add(p);\n          } else {\n            o.add(p);\n          }\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      var q = ShapefileConverter.ba(n);\n      var r = q.width;\n      var s = ShapefileConverter.ba(o);\n      var t = s.width;\n\n      if (ShapefileConverter.isValidGeoShape(n)) {\n        k.add(n);\n      }\n\n      if (ShapefileConverter.isValidGeoShape(o)) {\n        k.add(o);\n      }\n    } else {\n      if (ShapefileConverter.isValidGeoShape(g)) {\n        k.add(g);\n      }\n    }\n\n    return k;\n  };\n\n  ShapefileConverter.prototype.getMaxLongitude = function (a, b, c, d) {\n    var e_6, _a, e_7, _b, e_8, _c;\n\n    if (this.records == null) {\n      return NaN;\n    }\n\n    if (a < 0 || a > this.records.count - 1) {\n      return NaN;\n    }\n\n    var e = this.records._inner[a].points;\n    var f = c;\n\n    if (b) {\n      var g = ShapefileConverter.v(e);\n\n      try {\n        for (var _d = tslib_1.__values(fromEnum(g)), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var h = _e.value;\n\n          if (h.x < d) {\n            f = Math.max(f, h.x);\n          }\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n    } else {\n      try {\n        for (var _f = tslib_1.__values(fromEnum(e)), _g = _f.next(); !_g.done; _g = _f.next()) {\n          var i = _g.value;\n\n          try {\n            for (var _h = (e_8 = void 0, tslib_1.__values(fromEnum(i))), _j = _h.next(); !_j.done; _j = _h.next()) {\n              var j = _j.value;\n\n              if (j.x < d) {\n                f = Math.max(f, j.x);\n              }\n            }\n          } catch (e_8_1) {\n            e_8 = {\n              error: e_8_1\n            };\n          } finally {\n            try {\n              if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n            } finally {\n              if (e_8) throw e_8.error;\n            }\n          }\n        }\n      } catch (e_7_1) {\n        e_7 = {\n          error: e_7_1\n        };\n      } finally {\n        try {\n          if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n        } finally {\n          if (e_7) throw e_7.error;\n        }\n      }\n    }\n\n    return f;\n  };\n\n  ShapefileConverter.prototype.setRecordValue = function (a, b, c) {\n    if (this.records == null) {\n      return;\n    }\n\n    if (a < 0 || a > this.records.count - 1) {\n      return;\n    }\n\n    var d = this.records._inner[a];\n\n    if (d == null || d.fieldsNames == null) {\n      return;\n    }\n\n    d.setFieldValue(b, c);\n  };\n\n  ShapefileConverter.prototype.getRecordValues = function (a) {\n    if (this.records == null) {\n      return null;\n    }\n\n    var b = new Array(this.records.count);\n\n    for (var c = 0; c < this.records.count; c++) {\n      var d = this.getRecordValue(c, a);\n      b[c] = d;\n    }\n\n    return b;\n  };\n\n  ShapefileConverter.prototype.setRecordValues = function (a, b) {\n    if (this.records == null) {\n      return;\n    }\n\n    var c = Math.min(b.length, this.records.count);\n\n    for (var d = 0; d < c; d++) {\n      this.setRecordValue(d, a, b[d]);\n    }\n  };\n\n  ShapefileConverter.ba = function (a) {\n    var b = Number.POSITIVE_INFINITY;\n    var c = Number.POSITIVE_INFINITY;\n    var d = Number.NEGATIVE_INFINITY;\n    var e = Number.NEGATIVE_INFINITY;\n\n    for (var f = 0; f < a.count; f++) {\n      var g = a._inner[f];\n      b = Math.min(b, g.x);\n      c = Math.min(c, g.y);\n      d = Math.max(d, g.x);\n      e = Math.max(e, g.y);\n    }\n\n    if (isInfinity(b) || isInfinity(c) || isInfinity(c) || isInfinity(e)) {\n      return Rect.empty;\n    }\n\n    return new Rect(0, b, c, d - b, e - c);\n  };\n\n  ShapefileConverter.prototype.getLargestShapeBoundsForRecord = function (a) {\n    if (this.records == null) {\n      return Rect.empty;\n    }\n\n    if (a < 0 || a > this.records.count - 1) {\n      return Rect.empty;\n    }\n\n    var b = this.records._inner[a];\n\n    if (b == null || b.fieldsNames == null) {\n      return Rect.empty;\n    }\n\n    var c = ShapefileConverter.v(b.points);\n    return ShapefileConverter.ba(c);\n  };\n\n  ShapefileConverter.v = function (a) {\n    var e_9, _a, e_10, _b;\n\n    var b = new List$1(Point_$type, 0);\n    var c = -1.7976931348623157E+308;\n\n    try {\n      for (var _c = tslib_1.__values(fromEnum(a)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var d = _d.value;\n        var e = 1.7976931348623157E+308;\n        var f = -1.7976931348623157E+308;\n        var g = 1.7976931348623157E+308;\n        var h = -1.7976931348623157E+308;\n\n        try {\n          for (var _e = (e_10 = void 0, tslib_1.__values(fromEnum(d))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var i = _f.value;\n            g = Math.min(g, i.y);\n            h = Math.max(h, i.y);\n            e = Math.min(e, i.x);\n            f = Math.max(f, i.x);\n          }\n        } catch (e_10_1) {\n          e_10 = {\n            error: e_10_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_10) throw e_10.error;\n          }\n        }\n\n        var j = f - e;\n        var k = h - g;\n        var l = new Rect(0, e, g, j, k);\n        var m = l.width * l.height;\n\n        if (m > c) {\n          c = m;\n          b = d;\n        }\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    return b;\n  };\n\n  ShapefileConverter.$t = markType(ShapefileConverter, 'ShapefileConverter', DependencyObjectNotifier.$, [IList$1_$type.specialize(ShapefileRecord.$), INotifyCollectionChanged_$type]);\n  ShapefileConverter.minLatitude = -85.05112878;\n  ShapefileConverter.maxLatitude = 85.05112878;\n  ShapefileConverter.minLongitude = -180;\n  ShapefileConverter.maxLongitude = 180;\n  ShapefileConverter.$$p = markDep(DependencyProperty, PropertyMetadata, ShapefileConverter, 'aw', ['DatabaseSource', [2, null], 'DeferImportCompleted', [0, false], 'ShapefileSource', [2, null]]);\n  return ShapefileConverter;\n}(DependencyObjectNotifier);\n\nexport { ShapefileConverter };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ShapefileConverter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DependencyObjectNotifier } from \"./DependencyObjectNotifier\";\r\nimport { IList$1_$type, BaseError, delegateCombine, Point_$type, fromEnum, markType, markDep } from \"./type\";\r\nimport { ShapefileRecord } from \"./ShapefileRecord\";\r\nimport { INotifyCollectionChanged_$type } from \"./INotifyCollectionChanged\";\r\nimport { Rect } from \"./Rect\";\r\nimport { DependencyProperty } from \"./DependencyProperty\";\r\nimport { ObservableCollection$1 } from \"./ObservableCollection$1\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { AsyncCompletedEventArgs } from \"./AsyncCompletedEventArgs\";\r\nimport { BinaryReader } from \"./BinaryReader\";\r\nimport { BinaryFileDownloader } from \"./BinaryFileDownloader\";\r\nimport { ShapeFilterRecordEventArgs } from \"./ShapeFilterRecordEventArgs\";\r\nimport { ShapeFileUtil } from \"./ShapeFileUtil\";\r\nimport { PropertyMetadata } from \"./PropertyMetadata\";\r\nimport { isNaN_, isInfinity } from \"./number\";\r\n/**\r\n * @hidden\r\n */\r\nvar ShapefileConverter = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(ShapefileConverter, _super);\r\n    function ShapefileConverter() {\r\n        var _this = _super.call(this) || this;\r\n        _this._name = null;\r\n        _this.a8 = null;\r\n        _this.a7 = Rect.empty;\r\n        _this._shapeHeader = null;\r\n        _this.q = false;\r\n        _this.importPending = null;\r\n        _this.importCompleted = null;\r\n        _this.x = null;\r\n        _this.collectionChanged = null;\r\n        _this.filter = null;\r\n        _this.records = new ObservableCollection$1(ShapefileRecord.$, 0);\r\n        var a = _this.records;\r\n        a.collectionChanged = delegateCombine(a.collectionChanged, function (a, b) {\r\n            if (_this.collectionChanged != null) {\r\n                _this.collectionChanged(_this, b);\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ShapefileConverter.prototype, \"name\", {\r\n        get: function () {\r\n            return this._name;\r\n        },\r\n        set: function (a) {\r\n            this._name = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ShapefileConverter.prototype, \"worldRect\", {\r\n        get: function () {\r\n            return this.a8;\r\n        },\r\n        set: function (a) {\r\n            if (Rect.l_op_Inequality(this.a8, a)) {\r\n                var b = this.a8;\r\n                this.a8 = a;\r\n                this.aw(\"WorldRect\", b, this.a8);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ShapefileConverter.prototype, \"computedWorldRect\", {\r\n        get: function () {\r\n            return this.a7;\r\n        },\r\n        set: function (a) {\r\n            if (Rect.l_op_Inequality(this.a7, a)) {\r\n                var b = this.a7;\r\n                this.a7 = a;\r\n                this.aw(\"ComputedWorldRect\", b, this.a7);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ShapefileConverter.prototype.getWorldBounds = function (a) {\r\n        if (a && this.computedWorldRect.isEmpty == false) {\r\n            return this.computedWorldRect;\r\n        }\r\n        return this.worldRect;\r\n    };\r\n    ShapefileConverter.prototype.setWorldBounds = function (a, b) {\r\n        if (a) {\r\n            this.computedWorldRect = b;\r\n        }\r\n        else {\r\n            this.worldRect = b;\r\n        }\r\n    };\r\n    Object.defineProperty(ShapefileConverter.prototype, \"shapeType\", {\r\n        get: function () {\r\n            return this.shapeHeader.a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ShapefileConverter.prototype, \"shapeHeader\", {\r\n        get: function () {\r\n            return this._shapeHeader;\r\n        },\r\n        set: function (a) {\r\n            this._shapeHeader = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ShapefileConverter.prototype.aw = function (a, b, c) {\r\n        switch (a) {\r\n            case ShapefileConverter.$$p[2]:\r\n            case ShapefileConverter.$$p[0]:\r\n                if (this.shapefileSource != null && this.databaseSource != null) {\r\n                    this.at();\r\n                }\r\n                break;\r\n        }\r\n        this.j(a);\r\n    };\r\n    ShapefileConverter.prototype.sendImportCompleted = function () {\r\n        if (this.deferImportCompleted && this.q) {\r\n            this.deferImportCompleted = false;\r\n            if (this.importCompleted != null) {\r\n                this.importCompleted(this, new AsyncCompletedEventArgs(null, false, null));\r\n            }\r\n        }\r\n    };\r\n    ShapefileConverter.prototype.au = function (a) {\r\n        this.q = true;\r\n        if (this.deferImportCompleted) {\r\n            if (this.importPending != null) {\r\n                this.importPending(this, a);\r\n            }\r\n            return;\r\n        }\r\n        if (this.importCompleted != null) {\r\n            this.importCompleted(this, a);\r\n        }\r\n    };\r\n    ShapefileConverter.prototype.at = function () {\r\n        var _this = this;\r\n        this.q = false;\r\n        var a = null;\r\n        var b = null;\r\n        var c = function () {\r\n            if (a != null && b != null) {\r\n                _this.av(a, b);\r\n                _this.au(new AsyncCompletedEventArgs(null, false, null));\r\n            }\r\n        };\r\n        BinaryFileDownloader.a(this.shapefileSource, function (d) {\r\n            a = new BinaryReader(0, d, false);\r\n            c();\r\n        }, function (d) {\r\n            throw new BaseError(1, \"shape file download error: \" + d);\r\n        });\r\n        BinaryFileDownloader.a(this.databaseSource, function (d) {\r\n            b = new BinaryReader(0, d, false);\r\n            c();\r\n        }, function (d) {\r\n            throw new BaseError(1, \"dbf file download error: \" + d);\r\n        });\r\n    };\r\n    ShapefileConverter.prototype.av = function (a, b) {\r\n        this.shapeHeader = ShapeFileUtil.a(a, b);\r\n        this.worldRect = this.shapeHeader.e;\r\n        var c = a.currentPosition;\r\n        var d = a.length;\r\n        var e = Rect.empty;\r\n        while (c < d) {\r\n            var f = ShapeFileUtil.e(this.shapeHeader, a, b);\r\n            var record_ = f;\r\n            var g = true;\r\n            if (this.filter != null) {\r\n                var h = new ShapeFilterRecordEventArgs();\r\n                h.b = true;\r\n                h.a = f;\r\n                this.filter(this, h);\r\n                if (!h.b) {\r\n                    g = false;\r\n                }\r\n            }\r\n            if (g) {\r\n                this.records.add(f);\r\n                if (e.isEmpty) {\r\n                    e = f.bounds;\r\n                }\r\n                else {\r\n                    e.union(f.bounds);\r\n                }\r\n            }\r\n            c = a.currentPosition;\r\n            d = a.length;\r\n        }\r\n        this.computedWorldRect = e.isEmpty ? this.worldRect : e;\r\n    };\r\n    Object.defineProperty(ShapefileConverter.prototype, \"records\", {\r\n        get: function () {\r\n            return this.x;\r\n        },\r\n        set: function (a) {\r\n            this.x = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ShapefileConverter.prototype.indexOf = function (a) {\r\n        return this.x.indexOf(a);\r\n    };\r\n    ShapefileConverter.prototype.insert = function (a, b) {\r\n        this.x.insert(a, b);\r\n    };\r\n    ShapefileConverter.prototype.removeAt = function (a) {\r\n        this.x.removeAt(a);\r\n    };\r\n    ShapefileConverter.prototype.item = function (a, b) {\r\n        if (arguments.length === 2) {\r\n            this.x.item(a, b);\r\n            return b;\r\n        }\r\n        else {\r\n            return this.x._inner[a];\r\n        }\r\n    };\r\n    ShapefileConverter.prototype.add = function (a) {\r\n        this.x.add(a);\r\n    };\r\n    ShapefileConverter.prototype.clear = function () {\r\n        this.x.clear();\r\n    };\r\n    ShapefileConverter.prototype.contains = function (a) {\r\n        return this.x.contains(a);\r\n    };\r\n    ShapefileConverter.prototype.copyTo = function (a, b) {\r\n        this.x.copyTo(a, b);\r\n    };\r\n    Object.defineProperty(ShapefileConverter.prototype, \"count\", {\r\n        get: function () {\r\n            return this.x.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ShapefileConverter.prototype, \"isReadOnly\", {\r\n        get: function () {\r\n            return this.x.isReadOnly;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ShapefileConverter.prototype.remove = function (a) {\r\n        return this.x.remove(a);\r\n    };\r\n    ShapefileConverter.prototype.getEnumerator = function () {\r\n        return this.x.getEnumerator();\r\n    };\r\n    ShapefileConverter.prototype.getEnumeratorObject = function () {\r\n        return this.x.getEnumerator();\r\n    };\r\n    ShapefileConverter.prototype.getPointData = function () {\r\n        return new List$1(ShapefileRecord.$, 1, this.records);\r\n    };\r\n    ShapefileConverter.prototype.getRecordsCount = function () {\r\n        if (this.records == null) {\r\n            return 0;\r\n        }\r\n        return this.records.count;\r\n    };\r\n    ShapefileConverter.prototype.getRecord = function (a) {\r\n        return this.records._inner[a];\r\n    };\r\n    ShapefileConverter.prototype.getRecordBounds = function (a) {\r\n        if (this.records == null) {\r\n            return Rect.empty;\r\n        }\r\n        if (a < 0 || a > this.records.count - 1) {\r\n            return Rect.empty;\r\n        }\r\n        return this.records._inner[a].bounds;\r\n    };\r\n    ShapefileConverter.prototype.getRecordFieldNames = function (a) {\r\n        if (this.records == null) {\r\n            return null;\r\n        }\r\n        if (a < 0 || a > this.records.count - 1) {\r\n            return null;\r\n        }\r\n        var b = this.records._inner[a];\r\n        if (b == null || b.fieldsNames == null) {\r\n            return null;\r\n        }\r\n        return b.fieldsNames.toArray();\r\n    };\r\n    ShapefileConverter.prototype.getRecordValue = function (a, b) {\r\n        if (this.records == null) {\r\n            return null;\r\n        }\r\n        if (a < 0 || a > this.records.count - 1) {\r\n            return null;\r\n        }\r\n        var c = this.records._inner[a];\r\n        if (c == null || c.fieldsNames == null) {\r\n            return null;\r\n        }\r\n        return c.getFieldValue(b);\r\n    };\r\n    ShapefileConverter.prototype.removeRecord = function (a) {\r\n        if (this.records == null) {\r\n            return;\r\n        }\r\n        if (a < 0 || a > this.records.count - 1) {\r\n            return;\r\n        }\r\n        this.records.removeAt(a);\r\n    };\r\n    ShapefileConverter.prototype.shiftAllShapes = function (a, b) {\r\n        if (this.records == null) {\r\n            return;\r\n        }\r\n        for (var c = 0; c < this.records.count; c++) {\r\n            this.shiftShapes(c, a, b);\r\n        }\r\n    };\r\n    ShapefileConverter.prototype.shiftShapes = function (a, b, c) {\r\n        var e_1, _a, e_2, _b;\r\n        if (this.records == null) {\r\n            return;\r\n        }\r\n        if (a < 0 || a > this.records.count - 1) {\r\n            return;\r\n        }\r\n        var d = new List$1(List$1.$.specialize(Point_$type), 0);\r\n        var e = this.records._inner[a].points;\r\n        try {\r\n            for (var _c = tslib_1.__values(fromEnum(e)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var f = _d.value;\r\n                var g = ShapefileConverter.w(f, b, c);\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib_1.__values(fromEnum(g))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var h = _f.value;\r\n                        d.add(h);\r\n                    }\r\n                }\r\n                catch (e_2_1) {\r\n                    e_2 = { error: e_2_1 };\r\n                }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return))\r\n                            _b.call(_e);\r\n                    }\r\n                    finally {\r\n                        if (e_2)\r\n                            throw e_2.error;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) {\r\n            e_1 = { error: e_1_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return))\r\n                    _a.call(_c);\r\n            }\r\n            finally {\r\n                if (e_1)\r\n                    throw e_1.error;\r\n            }\r\n        }\r\n        this.records._inner[a].points = d;\r\n    };\r\n    ShapefileConverter.ai = function (a, b) {\r\n        return ShapefileConverter.ag(a, b, -180, 180);\r\n    };\r\n    ShapefileConverter.ah = function (a, b) {\r\n        return ShapefileConverter.ag(a, b, -85.05112878, 85.05112878);\r\n    };\r\n    ShapefileConverter.ag = function (a, b, c, d) {\r\n        var e = a;\r\n        if (isNaN_(b) || b == 0) {\r\n            return e;\r\n        }\r\n        if (e + b < c) {\r\n            e += 2 * d;\r\n            e += b;\r\n        }\r\n        else if (e + b > d) {\r\n            e -= 2 * d;\r\n            e += b;\r\n        }\r\n        else {\r\n            e += b;\r\n        }\r\n        return e;\r\n    };\r\n    ShapefileConverter.isValidGeoPoint = function (a) {\r\n        if (a.x < -180 || a.x > 180) {\r\n            return false;\r\n        }\r\n        if (a.y < -90 || a.y > 90) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    ShapefileConverter.isValidGeoShape = function (a) {\r\n        var e_3, _a;\r\n        if (a.count < 3) {\r\n            return false;\r\n        }\r\n        try {\r\n            for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var b = _c.value;\r\n                if (!ShapefileConverter.isValidGeoPoint(b)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) {\r\n            e_3 = { error: e_3_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return))\r\n                    _a.call(_b);\r\n            }\r\n            finally {\r\n                if (e_3)\r\n                    throw e_3.error;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    ShapefileConverter.w = function (a, b, c, d) {\r\n        var e_4, _a, e_5, _b;\r\n        if (d === void 0) {\r\n            d = \"\";\r\n        }\r\n        var e = 1.7976931348623157E+308;\r\n        var f = -1.7976931348623157E+308;\r\n        var g = new List$1(Point_$type, 0);\r\n        try {\r\n            for (var _c = tslib_1.__values(fromEnum(a)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var h = _d.value;\r\n                var i = ShapefileConverter.ag(h.x, b, -180, 180);\r\n                var j = ShapefileConverter.ag(h.y, c, -85.05112878, 85.05112878);\r\n                e = Math.min(e, i);\r\n                f = Math.max(f, i);\r\n                g.add({ $type: Point_$type, x: i, y: j });\r\n            }\r\n        }\r\n        catch (e_4_1) {\r\n            e_4 = { error: e_4_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return))\r\n                    _a.call(_c);\r\n            }\r\n            finally {\r\n                if (e_4)\r\n                    throw e_4.error;\r\n            }\r\n        }\r\n        var k = new List$1(List$1.$.specialize(Point_$type), 0);\r\n        var l = ShapefileConverter.ba(g);\r\n        var m = l.width;\r\n        if (l.left >= -180 && l.right <= 180 && l.width > 180) {\r\n            var n = new List$1(Point_$type, 0);\r\n            var o = new List$1(Point_$type, 0);\r\n            try {\r\n                for (var _e = tslib_1.__values(fromEnum(g)), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                    var p = _f.value;\r\n                    if (p.x >= -180 && p.x < 0) {\r\n                        n.add(p);\r\n                    }\r\n                    else {\r\n                        o.add(p);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_5_1) {\r\n                e_5 = { error: e_5_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_f && !_f.done && (_b = _e.return))\r\n                        _b.call(_e);\r\n                }\r\n                finally {\r\n                    if (e_5)\r\n                        throw e_5.error;\r\n                }\r\n            }\r\n            var q = ShapefileConverter.ba(n);\r\n            var r = q.width;\r\n            var s = ShapefileConverter.ba(o);\r\n            var t = s.width;\r\n            if (ShapefileConverter.isValidGeoShape(n)) {\r\n                k.add(n);\r\n            }\r\n            if (ShapefileConverter.isValidGeoShape(o)) {\r\n                k.add(o);\r\n            }\r\n        }\r\n        else {\r\n            if (ShapefileConverter.isValidGeoShape(g)) {\r\n                k.add(g);\r\n            }\r\n        }\r\n        return k;\r\n    };\r\n    ShapefileConverter.prototype.getMaxLongitude = function (a, b, c, d) {\r\n        var e_6, _a, e_7, _b, e_8, _c;\r\n        if (this.records == null) {\r\n            return NaN;\r\n        }\r\n        if (a < 0 || a > this.records.count - 1) {\r\n            return NaN;\r\n        }\r\n        var e = this.records._inner[a].points;\r\n        var f = c;\r\n        if (b) {\r\n            var g = ShapefileConverter.v(e);\r\n            try {\r\n                for (var _d = tslib_1.__values(fromEnum(g)), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                    var h = _e.value;\r\n                    if (h.x < d) {\r\n                        f = Math.max(f, h.x);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_6_1) {\r\n                e_6 = { error: e_6_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_e && !_e.done && (_a = _d.return))\r\n                        _a.call(_d);\r\n                }\r\n                finally {\r\n                    if (e_6)\r\n                        throw e_6.error;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                for (var _f = tslib_1.__values(fromEnum(e)), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                    var i = _g.value;\r\n                    try {\r\n                        for (var _h = (e_8 = void 0, tslib_1.__values(fromEnum(i))), _j = _h.next(); !_j.done; _j = _h.next()) {\r\n                            var j = _j.value;\r\n                            if (j.x < d) {\r\n                                f = Math.max(f, j.x);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_8_1) {\r\n                        e_8 = { error: e_8_1 };\r\n                    }\r\n                    finally {\r\n                        try {\r\n                            if (_j && !_j.done && (_c = _h.return))\r\n                                _c.call(_h);\r\n                        }\r\n                        finally {\r\n                            if (e_8)\r\n                                throw e_8.error;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_7_1) {\r\n                e_7 = { error: e_7_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_g && !_g.done && (_b = _f.return))\r\n                        _b.call(_f);\r\n                }\r\n                finally {\r\n                    if (e_7)\r\n                        throw e_7.error;\r\n                }\r\n            }\r\n        }\r\n        return f;\r\n    };\r\n    ShapefileConverter.prototype.setRecordValue = function (a, b, c) {\r\n        if (this.records == null) {\r\n            return;\r\n        }\r\n        if (a < 0 || a > this.records.count - 1) {\r\n            return;\r\n        }\r\n        var d = this.records._inner[a];\r\n        if (d == null || d.fieldsNames == null) {\r\n            return;\r\n        }\r\n        d.setFieldValue(b, c);\r\n    };\r\n    ShapefileConverter.prototype.getRecordValues = function (a) {\r\n        if (this.records == null) {\r\n            return null;\r\n        }\r\n        var b = new Array(this.records.count);\r\n        for (var c = 0; c < this.records.count; c++) {\r\n            var d = this.getRecordValue(c, a);\r\n            b[c] = d;\r\n        }\r\n        return b;\r\n    };\r\n    ShapefileConverter.prototype.setRecordValues = function (a, b) {\r\n        if (this.records == null) {\r\n            return;\r\n        }\r\n        var c = Math.min(b.length, this.records.count);\r\n        for (var d = 0; d < c; d++) {\r\n            this.setRecordValue(d, a, b[d]);\r\n        }\r\n    };\r\n    ShapefileConverter.ba = function (a) {\r\n        var b = Number.POSITIVE_INFINITY;\r\n        var c = Number.POSITIVE_INFINITY;\r\n        var d = Number.NEGATIVE_INFINITY;\r\n        var e = Number.NEGATIVE_INFINITY;\r\n        for (var f = 0; f < a.count; f++) {\r\n            var g = a._inner[f];\r\n            b = Math.min(b, g.x);\r\n            c = Math.min(c, g.y);\r\n            d = Math.max(d, g.x);\r\n            e = Math.max(e, g.y);\r\n        }\r\n        if (isInfinity(b) || isInfinity(c) || isInfinity(c) || isInfinity(e)) {\r\n            return Rect.empty;\r\n        }\r\n        return new Rect(0, b, c, d - b, e - c);\r\n    };\r\n    ShapefileConverter.prototype.getLargestShapeBoundsForRecord = function (a) {\r\n        if (this.records == null) {\r\n            return Rect.empty;\r\n        }\r\n        if (a < 0 || a > this.records.count - 1) {\r\n            return Rect.empty;\r\n        }\r\n        var b = this.records._inner[a];\r\n        if (b == null || b.fieldsNames == null) {\r\n            return Rect.empty;\r\n        }\r\n        var c = ShapefileConverter.v(b.points);\r\n        return ShapefileConverter.ba(c);\r\n    };\r\n    ShapefileConverter.v = function (a) {\r\n        var e_9, _a, e_10, _b;\r\n        var b = new List$1(Point_$type, 0);\r\n        var c = -1.7976931348623157E+308;\r\n        try {\r\n            for (var _c = tslib_1.__values(fromEnum(a)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var d = _d.value;\r\n                var e = 1.7976931348623157E+308;\r\n                var f = -1.7976931348623157E+308;\r\n                var g = 1.7976931348623157E+308;\r\n                var h = -1.7976931348623157E+308;\r\n                try {\r\n                    for (var _e = (e_10 = void 0, tslib_1.__values(fromEnum(d))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var i = _f.value;\r\n                        g = Math.min(g, i.y);\r\n                        h = Math.max(h, i.y);\r\n                        e = Math.min(e, i.x);\r\n                        f = Math.max(f, i.x);\r\n                    }\r\n                }\r\n                catch (e_10_1) {\r\n                    e_10 = { error: e_10_1 };\r\n                }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return))\r\n                            _b.call(_e);\r\n                    }\r\n                    finally {\r\n                        if (e_10)\r\n                            throw e_10.error;\r\n                    }\r\n                }\r\n                var j = f - e;\r\n                var k = h - g;\r\n                var l = new Rect(0, e, g, j, k);\r\n                var m = l.width * l.height;\r\n                if (m > c) {\r\n                    c = m;\r\n                    b = d;\r\n                }\r\n            }\r\n        }\r\n        catch (e_9_1) {\r\n            e_9 = { error: e_9_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return))\r\n                    _a.call(_c);\r\n            }\r\n            finally {\r\n                if (e_9)\r\n                    throw e_9.error;\r\n            }\r\n        }\r\n        return b;\r\n    };\r\n    ShapefileConverter.$t = markType(ShapefileConverter, 'ShapefileConverter', DependencyObjectNotifier.$, [IList$1_$type.specialize(ShapefileRecord.$), INotifyCollectionChanged_$type]);\r\n    ShapefileConverter.minLatitude = -85.05112878;\r\n    ShapefileConverter.maxLatitude = 85.05112878;\r\n    ShapefileConverter.minLongitude = -180;\r\n    ShapefileConverter.maxLongitude = 180;\r\n    ShapefileConverter.$$p = markDep(DependencyProperty, PropertyMetadata, ShapefileConverter, 'aw', ['DatabaseSource', [2, null], 'DeferImportCompleted', [0, false], 'ShapefileSource', [2, null]]);\r\n    return ShapefileConverter;\r\n}(DependencyObjectNotifier));\r\nexport { ShapefileConverter };\r\n//# sourceMappingURL=ShapefileConverter.js.map\r\n"]},"metadata":{},"sourceType":"module"}