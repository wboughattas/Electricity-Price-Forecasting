{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Point_$type, markType } from \"igniteui-react-core\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { LineSegment } from \"igniteui-react-core\";\nimport { BrushUtil } from \"igniteui-react-core\";\n/**\r\n * @hidden\r\n */\n\nvar LinearGraphRectFrame =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(LinearGraphRectFrame, _super);\n\n  function LinearGraphRectFrame() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.e = 0;\n    _this.f = 0;\n    _this.b = 0;\n    _this.c = 0;\n    _this.g = 0;\n    _this.d = 0;\n    _this.i = null;\n    _this.j = null;\n    _this.h = 0;\n    return _this;\n  }\n\n  LinearGraphRectFrame.prototype.k = function (a, b, c, d) {\n    var _this = this;\n\n    var e = new PathGeometry();\n    var f = new PathFigure();\n    var g, h, i, j;\n\n    if (d == 1) {\n      g = function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: a.x + b * _this.b,\n          y: c - _this.d\n        };\n        return $ret;\n      }();\n\n      h = function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: a.x + b * _this.c,\n          y: c - _this.d\n        };\n        return $ret;\n      }();\n\n      i = function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: a.x + b * _this.f,\n          y: c - _this.g\n        };\n        return $ret;\n      }();\n\n      j = function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: a.x + b * _this.e,\n          y: c - _this.g\n        };\n        return $ret;\n      }();\n    } else {\n      g = function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: _this.g,\n          y: b * (1 - _this.f)\n        };\n        return $ret;\n      }();\n\n      h = function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: _this.d,\n          y: b * (1 - _this.c)\n        };\n        return $ret;\n      }();\n\n      i = function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: _this.d,\n          y: b * (1 - _this.b)\n        };\n        return $ret;\n      }();\n\n      j = function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: _this.g,\n          y: b * (1 - _this.e)\n        };\n        return $ret;\n      }();\n    }\n\n    f._startPoint = g.c;\n\n    f._segments.add(h);\n\n    f._segments.add(i);\n\n    f._segments.add(j);\n\n    f._isClosed = true;\n    e.c.add(f);\n    return e;\n  };\n\n  LinearGraphRectFrame.a = function (a, b, c, d) {\n    var e = new LinearGraphRectFrame();\n    e.i = BrushUtil.k(c.i, a, d.i, 0);\n    e.j = BrushUtil.k(c.j, a, d.j, 0);\n    e.h = b * c.h + a * d.h;\n    e.e = b * c.e + a * d.e;\n    e.f = b * c.f + a * d.f;\n    e.g = b * c.g + a * d.g;\n    e.d = b * c.d + a * d.d;\n    e.b = b * c.b + a * d.b;\n    e.c = b * c.c + a * d.c;\n    return e;\n  };\n\n  LinearGraphRectFrame.$t = markType(LinearGraphRectFrame, 'LinearGraphRectFrame');\n  return LinearGraphRectFrame;\n}(Base);\n\nexport { LinearGraphRectFrame };","map":{"version":3,"sources":["../../../../src/igniteui-gauges/lib/LinearGraphRectFrame.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, Point_$type, markType } from \"igniteui-react-core\";\r\nimport { PathGeometry } from \"igniteui-react-core\";\r\nimport { PathFigure } from \"igniteui-react-core\";\r\nimport { LineSegment } from \"igniteui-react-core\";\r\nimport { BrushUtil } from \"igniteui-react-core\";\r\n/**\r\n * @hidden\r\n */\r\nvar LinearGraphRectFrame = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(LinearGraphRectFrame, _super);\r\n    function LinearGraphRectFrame() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.e = 0;\r\n        _this.f = 0;\r\n        _this.b = 0;\r\n        _this.c = 0;\r\n        _this.g = 0;\r\n        _this.d = 0;\r\n        _this.i = null;\r\n        _this.j = null;\r\n        _this.h = 0;\r\n        return _this;\r\n    }\r\n    LinearGraphRectFrame.prototype.k = function (a, b, c, d) {\r\n        var _this = this;\r\n        var e = new PathGeometry();\r\n        var f = new PathFigure();\r\n        var g, h, i, j;\r\n        if (d == 1) {\r\n            g = ((function () {\r\n                var $ret = new LineSegment(1);\r\n                $ret.c = { $type: Point_$type, x: a.x + b * _this.b, y: c - _this.d };\r\n                return $ret;\r\n            })());\r\n            h = ((function () {\r\n                var $ret = new LineSegment(1);\r\n                $ret.c = { $type: Point_$type, x: a.x + b * _this.c, y: c - _this.d };\r\n                return $ret;\r\n            })());\r\n            i = ((function () {\r\n                var $ret = new LineSegment(1);\r\n                $ret.c = { $type: Point_$type, x: a.x + b * _this.f, y: c - _this.g };\r\n                return $ret;\r\n            })());\r\n            j = ((function () {\r\n                var $ret = new LineSegment(1);\r\n                $ret.c = { $type: Point_$type, x: a.x + b * _this.e, y: c - _this.g };\r\n                return $ret;\r\n            })());\r\n        }\r\n        else {\r\n            g = ((function () {\r\n                var $ret = new LineSegment(1);\r\n                $ret.c = { $type: Point_$type, x: _this.g, y: b * (1 - _this.f) };\r\n                return $ret;\r\n            })());\r\n            h = ((function () {\r\n                var $ret = new LineSegment(1);\r\n                $ret.c = { $type: Point_$type, x: _this.d, y: b * (1 - _this.c) };\r\n                return $ret;\r\n            })());\r\n            i = ((function () {\r\n                var $ret = new LineSegment(1);\r\n                $ret.c = { $type: Point_$type, x: _this.d, y: b * (1 - _this.b) };\r\n                return $ret;\r\n            })());\r\n            j = ((function () {\r\n                var $ret = new LineSegment(1);\r\n                $ret.c = { $type: Point_$type, x: _this.g, y: b * (1 - _this.e) };\r\n                return $ret;\r\n            })());\r\n        }\r\n        f._startPoint = g.c;\r\n        f._segments.add(h);\r\n        f._segments.add(i);\r\n        f._segments.add(j);\r\n        f._isClosed = true;\r\n        e.c.add(f);\r\n        return e;\r\n    };\r\n    LinearGraphRectFrame.a = function (a, b, c, d) {\r\n        var e = new LinearGraphRectFrame();\r\n        e.i = BrushUtil.k(c.i, a, d.i, 0);\r\n        e.j = BrushUtil.k(c.j, a, d.j, 0);\r\n        e.h = b * c.h + a * d.h;\r\n        e.e = b * c.e + a * d.e;\r\n        e.f = b * c.f + a * d.f;\r\n        e.g = b * c.g + a * d.g;\r\n        e.d = b * c.d + a * d.d;\r\n        e.b = b * c.b + a * d.b;\r\n        e.c = b * c.c + a * d.c;\r\n        return e;\r\n    };\r\n    LinearGraphRectFrame.$t = markType(LinearGraphRectFrame, 'LinearGraphRectFrame');\r\n    return LinearGraphRectFrame;\r\n}(Base));\r\nexport { LinearGraphRectFrame };\r\n//# sourceMappingURL=LinearGraphRectFrame.js.map\r\n"]},"metadata":{},"sourceType":"module"}