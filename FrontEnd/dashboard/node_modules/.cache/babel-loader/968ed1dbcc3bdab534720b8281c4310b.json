{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StackedLineSeriesDescriptionMetadata } from \"./StackedLineSeriesDescriptionMetadata\";\nimport { Stacked100LineSeriesDescription } from \"./Stacked100LineSeriesDescription\";\n/**\r\n * @hidden\r\n */\n\nvar Stacked100LineSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(Stacked100LineSeriesDescriptionMetadata, _super);\n\n  function Stacked100LineSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Stacked100LineSeriesDescriptionMetadata.b = function (a) {\n    if (Stacked100LineSeriesDescriptionMetadata.a == null) {\n      Stacked100LineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      Stacked100LineSeriesDescriptionMetadata.c(a, Stacked100LineSeriesDescriptionMetadata.a);\n    }\n  };\n\n  Stacked100LineSeriesDescriptionMetadata.c = function (a, b) {\n    StackedLineSeriesDescriptionMetadata.c(a, b);\n  };\n\n  Stacked100LineSeriesDescriptionMetadata.d = function (a) {\n    Stacked100LineSeriesDescriptionMetadata.b(a);\n    a.n(\"Stacked100LineSeries\", function () {\n      return new Stacked100LineSeriesDescription();\n    });\n    a.m(\"Stacked100LineSeries\", Stacked100LineSeriesDescriptionMetadata.a);\n  };\n\n  Stacked100LineSeriesDescriptionMetadata.$t = markType(Stacked100LineSeriesDescriptionMetadata, 'Stacked100LineSeriesDescriptionMetadata');\n  Stacked100LineSeriesDescriptionMetadata.a = null;\n  return Stacked100LineSeriesDescriptionMetadata;\n}(Base);\n\nexport { Stacked100LineSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/Stacked100LineSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,oCAAT,QAAqD,wCAArD;AACA,SAAS,+BAAT,QAAgD,mCAAhD;AAEA;;AAEG;;AACH,IAAA,uCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6D,EAAA,OAAA,CAAA,SAAA,CAAA,uCAAA,EAAA,MAAA;;AAA7D,WAAA,uCAAA,GAAA;;AAiBC;;AAde,EAAA,uCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,uCAAuC,CAAC,CAAxC,IAA6C,IAAjD,EAAuD;AACtD,MAAA,uCAAuC,CAAC,CAAxC,GAA4C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA5C;AACA,MAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C,EAA6C,uCAAuC,CAAC,CAArF;AACA;AACD,GALc;;AAMR,EAAA,uCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,oCAAoC,CAAC,CAArC,CAAuC,CAAvC,EAA0C,CAA1C;AACA,GAFM;;AAGA,EAAA,uCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,sBAAJ,EAA4B,YAAA;AAAM,aAAA,IAAA,+BAAA,EAAA;AAAqC,KAAvE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,sBAAJ,EAA4B,uCAAuC,CAAC,CAApE;AACA,GAJM;;AAXA,EAAA,uCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uCAAD,EAA0C,yCAA1C,CAAnB;AACQ,EAAA,uCAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,uCAAA;AAAC,CAjBD,CAA6D,IAA7D,CAAA;;SAAa,uC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { StackedLineSeriesDescriptionMetadata } from \"./StackedLineSeriesDescriptionMetadata\";\r\nimport { Stacked100LineSeriesDescription } from \"./Stacked100LineSeriesDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar Stacked100LineSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(Stacked100LineSeriesDescriptionMetadata, _super);\r\n    function Stacked100LineSeriesDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Stacked100LineSeriesDescriptionMetadata.b = function (a) {\r\n        if (Stacked100LineSeriesDescriptionMetadata.a == null) {\r\n            Stacked100LineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            Stacked100LineSeriesDescriptionMetadata.c(a, Stacked100LineSeriesDescriptionMetadata.a);\r\n        }\r\n    };\r\n    Stacked100LineSeriesDescriptionMetadata.c = function (a, b) {\r\n        StackedLineSeriesDescriptionMetadata.c(a, b);\r\n    };\r\n    Stacked100LineSeriesDescriptionMetadata.d = function (a) {\r\n        Stacked100LineSeriesDescriptionMetadata.b(a);\r\n        a.n(\"Stacked100LineSeries\", function () { return new Stacked100LineSeriesDescription(); });\r\n        a.m(\"Stacked100LineSeries\", Stacked100LineSeriesDescriptionMetadata.a);\r\n    };\r\n    Stacked100LineSeriesDescriptionMetadata.$t = markType(Stacked100LineSeriesDescriptionMetadata, 'Stacked100LineSeriesDescriptionMetadata');\r\n    Stacked100LineSeriesDescriptionMetadata.a = null;\r\n    return Stacked100LineSeriesDescriptionMetadata;\r\n}(Base));\r\nexport { Stacked100LineSeriesDescriptionMetadata };\r\n//# sourceMappingURL=Stacked100LineSeriesDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}