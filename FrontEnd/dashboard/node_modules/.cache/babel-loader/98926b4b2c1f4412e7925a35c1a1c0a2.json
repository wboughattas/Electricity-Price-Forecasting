{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { EventArgs, markType } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar DataSourceSchemaChangedEventArgs =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DataSourceSchemaChangedEventArgs, _super);\n\n  function DataSourceSchemaChangedEventArgs(a, b) {\n    var _this = _super.call(this) || this;\n\n    _this.d = 0;\n    _this.b = null;\n    _this.b = a;\n    _this.d = b;\n    return _this;\n  }\n\n  Object.defineProperty(DataSourceSchemaChangedEventArgs.prototype, \"schema\", {\n    get: function () {\n      return this.b;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DataSourceSchemaChangedEventArgs.prototype, \"count\", {\n    get: function () {\n      return this.d;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  DataSourceSchemaChangedEventArgs.$t = markType(DataSourceSchemaChangedEventArgs, 'DataSourceSchemaChangedEventArgs', EventArgs.$);\n  return DataSourceSchemaChangedEventArgs;\n}(EventArgs);\n\nexport { DataSourceSchemaChangedEventArgs };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DataSourceSchemaChangedEventArgs.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,SAAT,EAAgC,QAAhC,QAAgD,QAAhD;AAGA;;AAEG;;AACH,IAAA,gCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,OAAA,CAAA,SAAA,CAAA,gCAAA,EAAA,MAAA;;AAIrD,WAAA,gCAAA,CAAY,CAAZ,EAAkC,CAAlC,EAA2C;AAA3C,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAFQ,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AACA,IAAA,KAAA,CAAA,CAAA,GAAuB,IAAvB;AAGP,IAAA,KAAI,CAAC,CAAL,GAAS,CAAT;AACA,IAAA,KAAI,CAAC,CAAL,GAAS,CAAT;;AACA;;AACD,EAAA,MAAA,CAAA,cAAA,CAAI,gCAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;SAAV,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFS;oBAAA;;AAAA,GAAV;AAGA,EAAA,MAAA,CAAA,cAAA,CAAI,gCAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;SAAT,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFQ;oBAAA;;AAAA,GAAT;AAXO,EAAA,gCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,gCAAD,EAAmC,kCAAnC,EAA6E,SAAU,CAAC,CAAxF,CAAnB;AAcR,SAAA,gCAAA;AAAC,CAfD,CAAsD,SAAtD,CAAA;;SAAa,gC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventArgs, markType } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar DataSourceSchemaChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(DataSourceSchemaChangedEventArgs, _super);\r\n    function DataSourceSchemaChangedEventArgs(a, b) {\r\n        var _this = _super.call(this) || this;\r\n        _this.d = 0;\r\n        _this.b = null;\r\n        _this.b = a;\r\n        _this.d = b;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DataSourceSchemaChangedEventArgs.prototype, \"schema\", {\r\n        get: function () {\r\n            return this.b;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSourceSchemaChangedEventArgs.prototype, \"count\", {\r\n        get: function () {\r\n            return this.d;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DataSourceSchemaChangedEventArgs.$t = markType(DataSourceSchemaChangedEventArgs, 'DataSourceSchemaChangedEventArgs', EventArgs.$);\r\n    return DataSourceSchemaChangedEventArgs;\r\n}(EventArgs));\r\nexport { DataSourceSchemaChangedEventArgs };\r\n//# sourceMappingURL=DataSourceSchemaChangedEventArgs.js.map\r\n"]},"metadata":{},"sourceType":"module"}