{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PropertyUpdatedEventArgsDescriptionMetadata } from \"./PropertyUpdatedEventArgsDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar ColorScaleDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ColorScaleDescriptionMetadata, _super);\n\n  function ColorScaleDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ColorScaleDescriptionMetadata.b = function (a) {\n    if (ColorScaleDescriptionMetadata.a == null) {\n      ColorScaleDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ColorScaleDescriptionMetadata.c(a, ColorScaleDescriptionMetadata.a);\n      PropertyUpdatedEventArgsDescriptionMetadata.d(a);\n    }\n  };\n\n  ColorScaleDescriptionMetadata.c = function (a, b) {\n    b.item(\"PropertyUpdatedRef\", \"EventRef::propertyUpdated\");\n  };\n\n  ColorScaleDescriptionMetadata.d = function (a) {\n    ColorScaleDescriptionMetadata.b(a);\n    a.m(\"ColorScale\", ColorScaleDescriptionMetadata.a);\n  };\n\n  ColorScaleDescriptionMetadata.$t = markType(ColorScaleDescriptionMetadata, 'ColorScaleDescriptionMetadata');\n  ColorScaleDescriptionMetadata.a = null;\n  return ColorScaleDescriptionMetadata;\n}(Base);\n\nexport { ColorScaleDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ColorScaleDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,2CAAT,QAA4D,+CAA5D;AAEA;;AAEG;;AACH,IAAA,6BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmD,EAAA,OAAA,CAAA,SAAA,CAAA,6BAAA,EAAA,MAAA;;AAAnD,WAAA,6BAAA,GAAA;;AAiBC;;AAde,EAAA,6BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,6BAA6B,CAAC,CAA9B,IAAmC,IAAvC,EAA6C;AAC5C,MAAA,6BAA6B,CAAC,CAA9B,GAAkC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAlC;AACA,MAAA,6BAA6B,CAAC,CAA9B,CAAgC,CAAhC,EAAmC,6BAA6B,CAAC,CAAjE;AACA,MAAA,2CAA2C,CAAC,CAA5C,CAA8C,CAA9C;AACA;AACD,GANc;;AAOR,EAAA,6BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,2BAA7B;AACA,GAFM;;AAGA,EAAA,6BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,6BAA6B,CAAC,CAA9B,CAAgC,CAAhC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,YAAJ,EAAkB,6BAA6B,CAAC,CAAhD;AACA,GAHM;;AAZA,EAAA,6BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,6BAAD,EAAgC,+BAAhC,CAAnB;AACQ,EAAA,6BAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,6BAAA;AAAC,CAjBD,CAAmD,IAAnD,CAAA;;SAAa,6B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PropertyUpdatedEventArgsDescriptionMetadata } from \"./PropertyUpdatedEventArgsDescriptionMetadata\";\n/**\n * @hidden\n */\nvar ColorScaleDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ColorScaleDescriptionMetadata, _super);\n    function ColorScaleDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColorScaleDescriptionMetadata.b = function (a) {\n        if (ColorScaleDescriptionMetadata.a == null) {\n            ColorScaleDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ColorScaleDescriptionMetadata.c(a, ColorScaleDescriptionMetadata.a);\n            PropertyUpdatedEventArgsDescriptionMetadata.d(a);\n        }\n    };\n    ColorScaleDescriptionMetadata.c = function (a, b) {\n        b.item(\"PropertyUpdatedRef\", \"EventRef::propertyUpdated\");\n    };\n    ColorScaleDescriptionMetadata.d = function (a) {\n        ColorScaleDescriptionMetadata.b(a);\n        a.m(\"ColorScale\", ColorScaleDescriptionMetadata.a);\n    };\n    ColorScaleDescriptionMetadata.$t = markType(ColorScaleDescriptionMetadata, 'ColorScaleDescriptionMetadata');\n    ColorScaleDescriptionMetadata.a = null;\n    return ColorScaleDescriptionMetadata;\n}(Base));\nexport { ColorScaleDescriptionMetadata };\n//# sourceMappingURL=ColorScaleDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}