{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ProgressiveLoadStatusEventArgsDescriptionMetadata } from \"./ProgressiveLoadStatusEventArgsDescriptionMetadata\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\nimport { HighDensityScatterSeriesDescription } from \"./HighDensityScatterSeriesDescription\";\n/**\r\n * @hidden\r\n */\n\nvar HighDensityScatterSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(HighDensityScatterSeriesDescriptionMetadata, _super);\n\n  function HighDensityScatterSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HighDensityScatterSeriesDescriptionMetadata.b = function (a) {\n    if (HighDensityScatterSeriesDescriptionMetadata.a == null) {\n      HighDensityScatterSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      HighDensityScatterSeriesDescriptionMetadata.c(a, HighDensityScatterSeriesDescriptionMetadata.a);\n      ProgressiveLoadStatusEventArgsDescriptionMetadata.d(a);\n    }\n  };\n\n  HighDensityScatterSeriesDescriptionMetadata.c = function (a, b) {\n    SeriesDescriptionMetadata.c(a, b);\n    b.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\n    b.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\n    b.item(\"XMemberPath\", \"String\");\n    b.item(\"YMemberPath\", \"String\");\n    b.item(\"UseBruteForce\", \"Boolean\");\n    b.item(\"ProgressiveLoad\", \"Boolean\");\n    b.item(\"HeatMinimum\", \"Number:double\");\n    b.item(\"HeatMaximum\", \"Number:double\");\n    b.item(\"HeatMinimumColor\", \"Color\");\n    b.item(\"HeatMaximumColor\", \"Color\");\n    b.item(\"PointExtent\", \"Number:int\");\n    b.item(\"ProgressiveStatus\", \"Number:int\");\n    b.item(\"ProgressiveLoadStatusChangedRef\", \"EventRef::progressiveLoadStatusChanged\");\n  };\n\n  HighDensityScatterSeriesDescriptionMetadata.d = function (a) {\n    HighDensityScatterSeriesDescriptionMetadata.b(a);\n    a.n(\"HighDensityScatterSeries\", function () {\n      return new HighDensityScatterSeriesDescription();\n    });\n    a.m(\"HighDensityScatterSeries\", HighDensityScatterSeriesDescriptionMetadata.a);\n  };\n\n  HighDensityScatterSeriesDescriptionMetadata.$t = markType(HighDensityScatterSeriesDescriptionMetadata, 'HighDensityScatterSeriesDescriptionMetadata');\n  HighDensityScatterSeriesDescriptionMetadata.a = null;\n  return HighDensityScatterSeriesDescriptionMetadata;\n}(Base);\n\nexport { HighDensityScatterSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/HighDensityScatterSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,iDAAT,QAAkE,qDAAlE;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AACA,SAAS,mCAAT,QAAoD,uCAApD;AAEA;;AAEG;;AACH,IAAA,2CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiE,EAAA,OAAA,CAAA,SAAA,CAAA,2CAAA,EAAA,MAAA;;AAAjE,WAAA,2CAAA,GAAA;;AA+BC;;AA5Be,EAAA,2CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,2CAA2C,CAAC,CAA5C,IAAiD,IAArD,EAA2D;AAC1D,MAAA,2CAA2C,CAAC,CAA5C,GAAgD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAhD;AACA,MAAA,2CAA2C,CAAC,CAA5C,CAA8C,CAA9C,EAAiD,2CAA2C,CAAC,CAA7F;AACA,MAAA,iDAAiD,CAAC,CAAlD,CAAoD,CAApD;AACA;AACD,GANc;;AAOR,EAAA,2CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,yBAAyB,CAAC,CAA1B,CAA4B,CAA5B,EAA+B,CAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,mCAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,mCAAnB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,QAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,QAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,SAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,SAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,eAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,eAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,OAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,OAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,YAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,YAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iCAAP,EAA0C,wCAA1C;AACA,GAfM;;AAgBA,EAAA,2CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,2CAA2C,CAAC,CAA5C,CAA8C,CAA9C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,0BAAJ,EAAgC,YAAA;AAAM,aAAA,IAAA,mCAAA,EAAA;AAAyC,KAA/E;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,0BAAJ,EAAgC,2CAA2C,CAAC,CAA5E;AACA,GAJM;;AAzBA,EAAA,2CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,2CAAD,EAA8C,6CAA9C,CAAnB;AACQ,EAAA,2CAAA,CAAA,CAAA,GAAkC,IAAlC;AA6BhB,SAAA,2CAAA;AAAC,CA/BD,CAAiE,IAAjE,CAAA;;SAAa,2C","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { ProgressiveLoadStatusEventArgsDescriptionMetadata } from \"./ProgressiveLoadStatusEventArgsDescriptionMetadata\";\r\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\r\nimport { HighDensityScatterSeriesDescription } from \"./HighDensityScatterSeriesDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar HighDensityScatterSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(HighDensityScatterSeriesDescriptionMetadata, _super);\r\n    function HighDensityScatterSeriesDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    HighDensityScatterSeriesDescriptionMetadata.b = function (a) {\r\n        if (HighDensityScatterSeriesDescriptionMetadata.a == null) {\r\n            HighDensityScatterSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            HighDensityScatterSeriesDescriptionMetadata.c(a, HighDensityScatterSeriesDescriptionMetadata.a);\r\n            ProgressiveLoadStatusEventArgsDescriptionMetadata.d(a);\r\n        }\r\n    };\r\n    HighDensityScatterSeriesDescriptionMetadata.c = function (a, b) {\r\n        SeriesDescriptionMetadata.c(a, b);\r\n        b.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\r\n        b.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\r\n        b.item(\"XMemberPath\", \"String\");\r\n        b.item(\"YMemberPath\", \"String\");\r\n        b.item(\"UseBruteForce\", \"Boolean\");\r\n        b.item(\"ProgressiveLoad\", \"Boolean\");\r\n        b.item(\"HeatMinimum\", \"Number:double\");\r\n        b.item(\"HeatMaximum\", \"Number:double\");\r\n        b.item(\"HeatMinimumColor\", \"Color\");\r\n        b.item(\"HeatMaximumColor\", \"Color\");\r\n        b.item(\"PointExtent\", \"Number:int\");\r\n        b.item(\"ProgressiveStatus\", \"Number:int\");\r\n        b.item(\"ProgressiveLoadStatusChangedRef\", \"EventRef::progressiveLoadStatusChanged\");\r\n    };\r\n    HighDensityScatterSeriesDescriptionMetadata.d = function (a) {\r\n        HighDensityScatterSeriesDescriptionMetadata.b(a);\r\n        a.n(\"HighDensityScatterSeries\", function () { return new HighDensityScatterSeriesDescription(); });\r\n        a.m(\"HighDensityScatterSeries\", HighDensityScatterSeriesDescriptionMetadata.a);\r\n    };\r\n    HighDensityScatterSeriesDescriptionMetadata.$t = markType(HighDensityScatterSeriesDescriptionMetadata, 'HighDensityScatterSeriesDescriptionMetadata');\r\n    HighDensityScatterSeriesDescriptionMetadata.a = null;\r\n    return HighDensityScatterSeriesDescriptionMetadata;\r\n}(Base));\r\nexport { HighDensityScatterSeriesDescriptionMetadata };\r\n//# sourceMappingURL=HighDensityScatterSeriesDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}