{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, typeGetValue, EnumUtil, enumGetBox, markType, IComparable_$type, String_$type, Number_$type, Boolean_$type, Date_$type, getInstanceType } from \"./type\";\nimport { IFilterExpression_$type } from \"./IFilterExpression\";\nimport { DataSourceSchemaPropertyType_$type } from \"./DataSourceSchemaPropertyType\";\nimport { FilterExpressionOperatorType_$type } from \"./FilterExpressionOperatorType\";\nimport { FilterExpressionFunctionType, FilterExpressionFunctionType_$type } from \"./FilterExpressionFunctionType\";\nimport { Convert } from \"./Convert\";\nimport { IOperationFilterExpression_$type } from \"./IOperationFilterExpression\";\nimport { NotImplementedException } from \"./NotImplementedException\";\nimport { InvalidOperationException } from \"./InvalidOperationException\";\nimport { intDivide, isNaN_ } from \"./number\";\nimport { CompareUtil } from \"./compareUtil\";\nimport { stringCompareTo, stringConcat, stringEndsWith, stringReplace, stringStartsWith, stringContains } from \"./string\";\nimport { IFunctionFilterExpression_$type } from \"./IFunctionFilterExpression\";\nimport { FilterExpressionCollection } from \"./FilterExpressionCollection\";\nimport { dateGetMonth, dateGetDate, dateNow } from \"./date\";\nimport { IPropertyReferenceFilterExpression_$type } from \"./IPropertyReferenceFilterExpression\";\nimport { ILiteralFilterExpression_$type } from \"./ILiteralFilterExpression\";\n/**\r\n * @hidden\r\n */\n\nvar FilterExpression =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(FilterExpression, _super);\n\n  function FilterExpression() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ay = false;\n    _this.az = false;\n    return _this;\n  }\n\n  FilterExpression.prototype.markAutoGenerated = function () {\n    this.az = true;\n  };\n\n  Object.defineProperty(FilterExpression.prototype, \"isAutoGenerated\", {\n    get: function () {\n      return this.az;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FilterExpression.isFilterExpression = function (a) {\n    return typeCast(IFilterExpression_$type, a) !== null;\n  };\n\n  FilterExpression.isSchemaType = function (a) {\n    return typeCast(DataSourceSchemaPropertyType_$type, a) !== null;\n  };\n\n  FilterExpression.operation = function (a, b, c) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var d = a;\n\n      if (FilterExpression.isFilterExpression(c)) {\n        var e = c;\n        return new OperationFilterExpression(d, b, e);\n      } else {\n        return new OperationFilterExpression(d, b, c);\n      }\n    } else {\n      var f = a;\n\n      if (FilterExpression.isFilterExpression(c)) {\n        var g = c;\n        return new OperationFilterExpression(f, b, g);\n      } else {\n        return new OperationFilterExpression(f, b, c);\n      }\n    }\n  };\n\n  FilterExpression.func = function (a) {\n    var b = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      b[_i - 1] = arguments[_i];\n    }\n\n    return new (FunctionFilterExpression.bind.apply(FunctionFilterExpression, tslib_1.__spread([void 0, a], b)))();\n  };\n\n  FilterExpression.prototype.a5 = function () {\n    this.ay = this.a3();\n  };\n\n  FilterExpression.property = function (a) {\n    if (a == null) {\n      return null;\n    }\n\n    var b = new PropertyReferenceFilterExpression(null);\n    b.propertyReference = a;\n    return b;\n  };\n\n  FilterExpression.nullLiteral = function () {\n    var a = new LiteralFilterExpression(null, false);\n    return a;\n  };\n\n  FilterExpression.literal = function (a) {\n    var b = new LiteralFilterExpression(a, false);\n    return b;\n  };\n\n  FilterExpression.unquotedLiteral = function (a) {\n    var b = new LiteralFilterExpression(a, true);\n    return b;\n  };\n\n  FilterExpression.prototype.match = function (a, b, c) {\n    var d = this.evaluate(a, b, c);\n    return this.a4(d, b, c);\n  };\n\n  FilterExpression.prototype.a4 = function (a, b, c) {\n    if (!this.ay) {\n      return this.a0(a, b, c);\n    }\n\n    return a;\n  };\n\n  FilterExpression.prototype.a0 = function (a, b, c) {\n    return Convert.toBoolean(a);\n  };\n\n  FilterExpression.prototype.get_isPropertyReference = function () {\n    return false;\n  };\n\n  Object.defineProperty(FilterExpression.prototype, \"isPropertyReference\", {\n    get: function () {\n      return this.get_isPropertyReference();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FilterExpression.prototype.get_isOperation = function () {\n    return false;\n  };\n\n  Object.defineProperty(FilterExpression.prototype, \"isOperation\", {\n    get: function () {\n      return this.get_isOperation();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FilterExpression.prototype.get_isFunction = function () {\n    return false;\n  };\n\n  Object.defineProperty(FilterExpression.prototype, \"isFunction\", {\n    get: function () {\n      return this.get_isFunction();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FilterExpression.prototype.get_isLiteral = function () {\n    return false;\n  };\n\n  Object.defineProperty(FilterExpression.prototype, \"isLiteral\", {\n    get: function () {\n      return this.get_isLiteral();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FilterExpression.prototype.get_isNull = function () {\n    return false;\n  };\n\n  Object.defineProperty(FilterExpression.prototype, \"isNull\", {\n    get: function () {\n      return this.get_isNull();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FilterExpression.prototype.group = function () {\n    return FilterExpression.operation(this, 15, null);\n  };\n\n  FilterExpression.prototype.and = function (a) {\n    return FilterExpression.operation(this, 7, a);\n  };\n\n  FilterExpression.prototype.or = function (a) {\n    return FilterExpression.operation(this, 8, a);\n  };\n\n  FilterExpression.prototype.not = function () {\n    return FilterExpression.operation(this, 9, null);\n  };\n\n  FilterExpression.prototype.add = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 10, b);\n    } else {\n      return FilterExpression.operation(this, 10, a);\n    }\n  };\n\n  FilterExpression.prototype.plus = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 10, b);\n    } else {\n      return FilterExpression.operation(this, 10, a);\n    }\n  };\n\n  FilterExpression.prototype.divide = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 13, b);\n    } else {\n      return FilterExpression.operation(this, 13, a);\n    }\n  };\n\n  FilterExpression.prototype.divideBy = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 13, b);\n    } else {\n      return FilterExpression.operation(this, 13, a);\n    }\n  };\n\n  FilterExpression.prototype.isEqualTo = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 1, b);\n    } else {\n      return FilterExpression.operation(this, 1, a);\n    }\n  };\n\n  FilterExpression.prototype.isGreaterThan = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 3, b);\n    } else {\n      return FilterExpression.operation(this, 3, a);\n    }\n  };\n\n  FilterExpression.prototype.isGreaterThanOrEqualTo = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 4, b);\n    } else {\n      return FilterExpression.operation(this, 4, a);\n    }\n  };\n\n  FilterExpression.prototype.isLessThan = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 5, b);\n    } else {\n      return FilterExpression.operation(this, 5, a);\n    }\n  };\n\n  FilterExpression.prototype.isLessThanOrEqualTo = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 6, b);\n    } else {\n      return FilterExpression.operation(this, 6, a);\n    }\n  };\n\n  FilterExpression.prototype.modulo = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 14, b);\n    } else {\n      return FilterExpression.operation(this, 14, a);\n    }\n  };\n\n  FilterExpression.prototype.multiply = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 12, b);\n    } else {\n      return FilterExpression.operation(this, 12, a);\n    }\n  };\n\n  FilterExpression.prototype.times = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 12, b);\n    } else {\n      return FilterExpression.operation(this, 12, a);\n    }\n  };\n\n  FilterExpression.prototype.isNotEqualTo = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 2, b);\n    } else {\n      return FilterExpression.operation(this, 2, a);\n    }\n  };\n\n  FilterExpression.prototype.subtract = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 11, b);\n    } else {\n      return FilterExpression.operation(this, 11, a);\n    }\n  };\n\n  FilterExpression.prototype.minus = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.operation(this, 11, b);\n    } else {\n      return FilterExpression.operation(this, 11, a);\n    }\n  };\n\n  FilterExpression.prototype.ceiling = function () {\n    return FilterExpression.func(19, this);\n  };\n\n  FilterExpression.prototype.concat = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.func(10, this, b);\n    } else {\n      var c = a;\n      return FilterExpression.func(10, this, FilterExpression.literal(c));\n    }\n  };\n\n  FilterExpression.prototype.contains = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.func(0, this, b);\n    } else {\n      var c = a;\n      return FilterExpression.func(0, this, FilterExpression.literal(c));\n    }\n  };\n\n  FilterExpression.prototype.day = function () {\n    return FilterExpression.func(11, this);\n  };\n\n  FilterExpression.prototype.endsWith = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.func(1, this, b);\n    } else {\n      var c = a;\n      return FilterExpression.func(1, this, FilterExpression.literal(c));\n    }\n  };\n\n  FilterExpression.prototype.floor = function () {\n    return FilterExpression.func(18, this);\n  };\n\n  FilterExpression.prototype.hour = function () {\n    return FilterExpression.func(12, this);\n  };\n\n  FilterExpression.prototype.indexOf = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.func(4, this, b);\n    } else {\n      var c = a;\n      return FilterExpression.func(4, this, FilterExpression.literal(c));\n    }\n  };\n\n  FilterExpression.prototype.length = function () {\n    return FilterExpression.func(FilterExpressionFunctionType.Length, this);\n  };\n\n  FilterExpression.prototype.minute = function () {\n    return FilterExpression.func(13, this);\n  };\n\n  FilterExpression.prototype.month = function () {\n    return FilterExpression.func(14, this);\n  };\n\n  FilterExpression.prototype.replace = function (a, b) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var c = a;\n\n      if (FilterExpression.isFilterExpression(b)) {\n        var d = b;\n        return FilterExpression.func(5, this, c, d);\n      } else {\n        var e = b;\n        return FilterExpression.func(5, this, c, FilterExpression.literal(e));\n      }\n    } else {\n      var f = a;\n\n      if (FilterExpression.isFilterExpression(b)) {\n        var g = b;\n        return FilterExpression.func(5, this, FilterExpression.literal(f), g);\n      } else {\n        var h = b;\n        return FilterExpression.func(5, this, FilterExpression.literal(f), FilterExpression.literal(h));\n      }\n    }\n  };\n\n  FilterExpression.prototype.round = function () {\n    return FilterExpression.func(17, this);\n  };\n\n  FilterExpression.prototype.second = function () {\n    return FilterExpression.func(15, this);\n  };\n\n  FilterExpression.prototype.startsWith = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.func(2, this, b);\n    } else {\n      var c = a;\n      return FilterExpression.func(2, this, FilterExpression.literal(c));\n    }\n  };\n\n  FilterExpression.prototype.substring = function (a, b) {\n    if (b === void 0) {\n      b = null;\n    }\n\n    if (FilterExpression.isFilterExpression(a)) {\n      var c = a;\n\n      if (b == null) {\n        return FilterExpression.func(6, this, c);\n      } else {\n        if (FilterExpression.isFilterExpression(b)) {\n          var d = b;\n          return FilterExpression.func(6, this, c, d);\n        } else {\n          var e = typeGetValue(b);\n          return FilterExpression.func(6, this, c, FilterExpression.literal(e));\n        }\n      }\n    } else {\n      var f = typeGetValue(a);\n\n      if (b == null) {\n        return FilterExpression.func(6, this, FilterExpression.literal(f));\n      } else {\n        if (FilterExpression.isFilterExpression(b)) {\n          var g = b;\n          return FilterExpression.func(6, this, FilterExpression.literal(f), g);\n        } else {\n          var h = typeGetValue(b);\n          return FilterExpression.func(6, this, FilterExpression.literal(f), FilterExpression.literal(h));\n        }\n      }\n    }\n  };\n\n  FilterExpression.prototype.toLower = function () {\n    return FilterExpression.func(7, this);\n  };\n\n  FilterExpression.prototype.toUpper = function () {\n    return FilterExpression.func(8, this);\n  };\n\n  FilterExpression.prototype.trim = function () {\n    return FilterExpression.func(9, this);\n  };\n\n  FilterExpression.prototype.year = function () {\n    return FilterExpression.func(16, this);\n  };\n\n  FilterExpression.prototype.date = function () {\n    return FilterExpression.func(20, this);\n  };\n\n  FilterExpression.prototype.time = function () {\n    return FilterExpression.func(21, this);\n  };\n\n  FilterExpression.prototype.now = function () {\n    return FilterExpression.func(22);\n  };\n\n  FilterExpression.prototype.isOf = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.func(23, this, b);\n    } else {\n      var c = a;\n      return FilterExpression.func(23, this, FilterExpression.literal(a));\n    }\n  };\n\n  FilterExpression.prototype.cast = function (a) {\n    if (FilterExpression.isFilterExpression(a)) {\n      var b = a;\n      return FilterExpression.func(24, this, b);\n    } else if (FilterExpression.isSchemaType(a)) {\n      var c = EnumUtil.getEnumValue(DataSourceSchemaPropertyType_$type, a);\n      return FilterExpression.func(24, this, FilterExpression.literal(enumGetBox(DataSourceSchemaPropertyType_$type, c)));\n    } else {\n      var d = a;\n      return FilterExpression.func(24, this, FilterExpression.literal(d));\n    }\n  };\n\n  FilterExpression.$t = markType(FilterExpression, 'FilterExpression', Base.$, [IFilterExpression_$type]);\n  return FilterExpression;\n}(Base);\n\nexport { FilterExpression };\n/**\r\n * @hidden\r\n */\n\nvar OperationFilterExpression =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(OperationFilterExpression, _super);\n\n  function OperationFilterExpression(a, b, c) {\n    var _this = _super.call(this) || this;\n\n    _this.a7 = null;\n    _this.a9 = false;\n    _this.a8 = null;\n    _this.ba = false;\n    _this.a6 = 0;\n\n    if (a != null) {\n      if (FilterExpression.isFilterExpression(a)) {\n        _this.a7 = a;\n      } else {\n        _this.propertyName = a;\n      }\n    }\n\n    if (c != null) {\n      if (FilterExpression.isFilterExpression(c)) {\n        _this.a8 = c;\n      } else {\n        _this.value = c;\n      }\n    }\n\n    _this.a6 = b;\n    return _this;\n  }\n\n  OperationFilterExpression.prototype.get_isOperation = function () {\n    return true;\n  };\n\n  OperationFilterExpression.prototype.a3 = function () {\n    return this.bg;\n  };\n\n  Object.defineProperty(OperationFilterExpression.prototype, \"isComparisonOperation\", {\n    get: function () {\n      var a = this.operator;\n\n      switch (a) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 5:\n        case 6:\n        case 4:\n          return true;\n      }\n\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"propertyName\", {\n    get: function () {\n      if (this.a7 == null || !this.a7.isPropertyReference) {\n        return null;\n      }\n\n      return this.a7.propertyReference;\n    },\n    set: function (a) {\n      this.left = FilterExpression.property(a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"hasPropertyName\", {\n    get: function () {\n      return this.a7 != null && this.a7.isPropertyReference;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"value\", {\n    get: function () {\n      if (this.a8 == null) {\n        return null;\n      }\n\n      if (this.a8.isNull) {\n        return null;\n      }\n\n      if (!this.a8.isLiteral) {\n        return null;\n      }\n\n      return this.a8.literalValue;\n    },\n    set: function (a) {\n      if (a == null) {\n        this.right = FilterExpression.nullLiteral();\n        return;\n      }\n\n      this.right = FilterExpression.literal(a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"hasValue\", {\n    get: function () {\n      return this.a8 != null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"left\", {\n    get: function () {\n      return this.a7;\n    },\n    set: function (a) {\n      this.a7 = a;\n      this.a9 = true;\n      this.a5();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"hasLeft\", {\n    get: function () {\n      return this.a9;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"right\", {\n    get: function () {\n      return this.a8;\n    },\n    set: function (a) {\n      this.a8 = a;\n      this.ba = true;\n      this.a5();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"hasRight\", {\n    get: function () {\n      return this.ba;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"operator\", {\n    get: function () {\n      return this.a6;\n    },\n    set: function (a) {\n      var b = enumGetBox(FilterExpressionOperatorType_$type, this.a6);\n      var c = a;\n\n      if (c == null) {\n        a = 0;\n      }\n\n      if (typeof c == \"number\") {\n        var d = typeGetValue(c);\n\n        if (EnumUtil.getName(FilterExpressionOperatorType_$type, d) == undefined) {\n          a = 0;\n        }\n\n        a = d;\n      } else {\n        a = typeGetValue(EnumUtil.parse(FilterExpressionOperatorType_$type, c, true));\n      }\n\n      this.a6 = a;\n      this.a5();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"hasOperator\", {\n    get: function () {\n      return this.a6 != 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OperationFilterExpression.prototype, \"bg\", {\n    get: function () {\n      switch (this.operator) {\n        case 7:\n        case 1:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 9:\n        case 2:\n        case 8:\n          return true;\n      }\n\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OperationFilterExpression.prototype.get_precedence = function () {\n    switch (this.operator) {\n      case 15:\n        return 0;\n\n      case 9:\n        return 4;\n\n      case 12:\n        return 6;\n\n      case 13:\n        return 7;\n\n      case 14:\n        return 8;\n\n      case 10:\n        return 9;\n\n      case 11:\n        return 10;\n\n      case 5:\n        return 11;\n\n      case 3:\n        return 12;\n\n      case 6:\n        return 13;\n\n      case 4:\n        return 14;\n\n      case 1:\n        return 16;\n\n      case 2:\n        return 17;\n\n      case 7:\n        return 18;\n\n      case 8:\n        return 19;\n\n      case 0:\n        return 99;\n    }\n\n    return 99;\n  };\n\n  Object.defineProperty(OperationFilterExpression.prototype, \"precedence\", {\n    get: function () {\n      return this.get_precedence();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OperationFilterExpression.prototype.evaluate = function (a, b, c) {\n    switch (this.operator) {\n      case 10:\n      case 13:\n      case 14:\n      case 12:\n      case 11:\n        return this.bi(a, b, c);\n\n      case 0:\n      case 1:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 2:\n        return this.bj(a, b, c);\n\n      case 7:\n      case 9:\n      case 8:\n        return this.bk(a, b, c);\n\n      case 15:\n        if (this.left != null) {\n          return this.left.evaluate(a, b, c);\n        } else {\n          if (this.right == null) {\n            return null;\n          }\n\n          return this.right.evaluate(a, b, c);\n        }\n\n    }\n\n    throw new NotImplementedException(0);\n  };\n\n  OperationFilterExpression.prototype.bj = function (a, b, c) {\n    var d = null;\n    var e = null;\n    var f = -1;\n\n    if (this.left != null) {\n      d = this.left.evaluate(a, b, c);\n    }\n\n    if (this.right != null) {\n      e = this.right.evaluate(a, b, c);\n    }\n\n    if (d == null && e == null) {\n      f = 0;\n    }\n\n    var g = null;\n    var h = null;\n\n    if (typeCast(IComparable_$type, d) !== null) {\n      g = d;\n    }\n\n    if (typeCast(IComparable_$type, e) !== null) {\n      h = e;\n    }\n\n    if (typeof d === 'number' && isNaN_(d) || typeof e === 'number' && isNaN_(e) || typeof d === 'number' && isNaN_(d) || typeof e === 'number' && isNaN_(e)) {\n      return false;\n    }\n\n    if (g != null) {\n      if (e == null) {\n        f = CompareUtil.compareToObject(g, 0);\n\n        if (f == 0) {\n          f = -1;\n        }\n      } else {\n        f = CompareUtil.compareToObject(g, e);\n      }\n    } else if (h != null) {\n      if (d == null) {\n        var i = CompareUtil.compareToObject(h, 0);\n\n        if (i == 0) {\n          f = 1;\n        } else {\n          f = 1;\n\n          if (i == 0) {\n            f = 0;\n          }\n\n          if (i > 0) {\n            f = -1;\n          }\n        }\n      } else {\n        var j = CompareUtil.compareToObject(h, d);\n        f = 1;\n\n        if (j == 0) {\n          f = 0;\n        }\n\n        if (j > 0) {\n          f = -1;\n        }\n      }\n    } else {\n      var k = null;\n      var l = null;\n\n      if (d != null) {\n        k = d.toString();\n      }\n\n      if (e != null) {\n        l = e.toString();\n      }\n\n      if (k != null) {\n        if (l == null) {\n          f = 1;\n        } else {\n          f = stringCompareTo(k, l);\n        }\n      } else if (l != null) {\n        if (k == null) {\n          f = -1;\n        } else {\n          var m = stringCompareTo(l, k);\n          f = 1;\n\n          if (m == 0) {\n            f = 0;\n          }\n\n          if (m > 0) {\n            f = -1;\n          }\n        }\n      } else {\n        f = 0;\n      }\n    }\n\n    switch (this.operator) {\n      case 0:\n      case 1:\n        return f == 0;\n\n      case 3:\n        return f > 0;\n\n      case 4:\n        return f >= 0;\n\n      case 5:\n        return f < 0;\n\n      case 6:\n        return f <= 0;\n\n      case 2:\n        return f != 0;\n    }\n\n    throw new InvalidOperationException(0);\n  };\n\n  OperationFilterExpression.prototype.bk = function (a, b, c) {\n    var d = null;\n    var e = null;\n\n    if (this.left != null) {\n      d = this.left.evaluate(a, b, c);\n    }\n\n    if (this.right != null) {\n      e = this.right.evaluate(a, b, c);\n    }\n\n    if (e == null && d == null) {\n      return false;\n    }\n\n    if (e == null) {\n      e = false;\n    }\n\n    if (d == null) {\n      d = false;\n    }\n\n    switch (this.operator) {\n      case 7:\n        return d && e;\n\n      case 9:\n        if (this.left == null) {\n          return !e;\n        } else {\n          return !d;\n        }\n\n      case 8:\n        return d || e;\n    }\n\n    return false;\n  };\n\n  OperationFilterExpression.prototype.bi = function (a, b, c) {\n    var d = null;\n    var e = null;\n\n    if (this.left != null) {\n      d = this.left.evaluate(a, b, c);\n    }\n\n    if (this.right != null) {\n      e = this.right.evaluate(a, b, c);\n    }\n\n    if (d == null) {\n      return e;\n    }\n\n    if (e == null) {\n      return d;\n    }\n\n    if (d == null && e == null) {\n      return 0;\n    }\n\n    if (typeof d === 'number' || typeof e === 'number') {\n      switch (this.operator) {\n        case 10:\n          return d + e;\n\n        case 13:\n          return d / e;\n\n        case 14:\n          return d % e;\n\n        case 12:\n          return d * e;\n\n        case 11:\n          return d - e;\n      }\n    }\n\n    if (typeof d === 'number' || typeof e === 'number') {\n      switch (this.operator) {\n        case 10:\n          return d + e;\n\n        case 13:\n          return d / e;\n\n        case 14:\n          return d % e;\n\n        case 12:\n          return d * e;\n\n        case 11:\n          return d - e;\n      }\n    }\n\n    if (typeof d === 'number' || typeof e === 'number') {\n      switch (this.operator) {\n        case 10:\n          return d + e;\n\n        case 13:\n          return d / e;\n\n        case 14:\n          return d % e;\n\n        case 12:\n          return d * e;\n\n        case 11:\n          return d - e;\n      }\n    }\n\n    if (typeof d === 'number' || typeof e === 'number') {\n      switch (this.operator) {\n        case 10:\n          return typeGetValue(d) + typeGetValue(e);\n\n        case 13:\n          return intDivide(typeGetValue(d), typeGetValue(e));\n\n        case 14:\n          return typeGetValue(d) % typeGetValue(e);\n\n        case 12:\n          return typeGetValue(d) * typeGetValue(e);\n\n        case 11:\n          return typeGetValue(d) - typeGetValue(e);\n      }\n    }\n\n    if (typeof d === 'number' || typeof e === 'number') {\n      switch (this.operator) {\n        case 10:\n          return typeGetValue(d) + typeGetValue(e);\n\n        case 13:\n          return intDivide(typeGetValue(d), typeGetValue(e));\n\n        case 14:\n          return typeGetValue(d) % typeGetValue(e);\n\n        case 12:\n          return typeGetValue(d) * typeGetValue(e);\n\n        case 11:\n          return typeGetValue(d) - typeGetValue(e);\n      }\n    }\n\n    if (typeof d === 'number' || typeof e === 'number') {\n      switch (this.operator) {\n        case 10:\n          return typeGetValue(d) + typeGetValue(e);\n\n        case 13:\n          return intDivide(typeGetValue(d), typeGetValue(e));\n\n        case 14:\n          return typeGetValue(d) % typeGetValue(e);\n\n        case 12:\n          return typeGetValue(d) * typeGetValue(e);\n\n        case 11:\n          return typeGetValue(d) - typeGetValue(e);\n      }\n    }\n\n    if (typeof d === 'number' || typeof e === 'number') {\n      switch (this.operator) {\n        case 10:\n          return typeGetValue(d) + typeGetValue(e);\n\n        case 13:\n          return intDivide(typeGetValue(d), typeGetValue(e));\n\n        case 14:\n          return typeGetValue(d) % typeGetValue(e);\n\n        case 12:\n          return typeGetValue(d) * typeGetValue(e);\n\n        case 11:\n          return typeGetValue(d) - typeGetValue(e);\n      }\n    }\n\n    throw new NotImplementedException(0);\n  };\n\n  OperationFilterExpression.$t = markType(OperationFilterExpression, 'OperationFilterExpression', FilterExpression.$, [IOperationFilterExpression_$type]);\n  return OperationFilterExpression;\n}(FilterExpression);\n\nexport { OperationFilterExpression };\n/**\r\n * @hidden\r\n */\n\nvar FunctionFilterExpression =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(FunctionFilterExpression, _super);\n\n  function FunctionFilterExpression(a) {\n    var b = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      b[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.a7 = 19;\n    _this.a6 = new FilterExpressionCollection();\n    _this.a7 = a;\n\n    for (var c = 0; c < b.length; c++) {\n      _this.a6.add(b[c]);\n    }\n\n    return _this;\n  }\n\n  FunctionFilterExpression.prototype.get_isFunction = function () {\n    return true;\n  };\n\n  FunctionFilterExpression.prototype.a3 = function () {\n    return this.a8;\n  };\n\n  Object.defineProperty(FunctionFilterExpression.prototype, \"functionType\", {\n    get: function () {\n      return this.a7;\n    },\n    set: function (a) {\n      var b = enumGetBox(FilterExpressionFunctionType_$type, this.a7);\n      var c = a;\n\n      if (c == null) {\n        a = 0;\n      }\n\n      if (typeof c == \"number\") {\n        var d = typeGetValue(c);\n\n        if (EnumUtil.getName(FilterExpressionFunctionType_$type, d) == undefined) {\n          a = 0;\n        }\n\n        a = d;\n      } else {\n        a = typeGetValue(EnumUtil.parse(FilterExpressionFunctionType_$type, c, true));\n      }\n\n      this.a7 = a;\n      this.a5();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunctionFilterExpression.prototype, \"a8\", {\n    get: function () {\n      switch (this.functionType) {\n        case 1:\n        case 2:\n        case 0:\n          return true;\n      }\n\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunctionFilterExpression.prototype, \"functionArguments\", {\n    get: function () {\n      return this.a6;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunctionFilterExpression.prototype, \"hasFunctionArguments\", {\n    get: function () {\n      return this.a6.j.count > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FunctionFilterExpression.prototype.evaluate = function (a, b, c) {\n    var d = null;\n    var e = null;\n    var f = null;\n    var g = null;\n    var h = this.functionArguments.j;\n\n    if (h.count > 0) {\n      for (var i = 0; i < h.count; i++) {\n        var j = null;\n\n        if (h.item(i) != null) {\n          j = h.item(i).evaluate(a, b, c);\n        }\n\n        switch (i) {\n          case 0:\n            d = j;\n            break;\n\n          case 1:\n            e = j;\n            break;\n\n          case 2:\n            f = j;\n            break;\n\n          case 3:\n            g = j;\n            break;\n        }\n\n        if (i > 3) {\n          break;\n        }\n      }\n    }\n\n    switch (this.functionType) {\n      case 19:\n        if (d == null) {\n          d = 0;\n        }\n\n        return Math.ceil(d);\n\n      case 18:\n        if (d == null) {\n          d = 0;\n        }\n\n        return Math.floor(d);\n\n      case 17:\n        if (d == null) {\n          d = 0;\n        }\n\n        if (typeof d === 'number') {\n          return Math.round(d);\n        }\n\n        return Math.round(d);\n\n      case 11:\n        if (d == null) {\n          return 0;\n        }\n\n        return d.getDate();\n\n      case 12:\n        if (d == null) {\n          return 0;\n        }\n\n        return d.getHours();\n\n      case 13:\n        if (d == null) {\n          return 0;\n        }\n\n        return d.getMinutes();\n\n      case 14:\n        if (d == null) {\n          return 0;\n        }\n\n        return dateGetMonth(d);\n\n      case 16:\n        if (d == null) {\n          return 0;\n        }\n\n        return d.getFullYear();\n\n      case 15:\n        if (d == null) {\n          return 0;\n        }\n\n        return d.getSeconds();\n\n      case 20:\n        if (d == null) {\n          return 0;\n        }\n\n        return dateGetDate(d);\n\n      case 21:\n        if (d == null) {\n          return 0;\n        }\n\n        return d;\n\n      case 22:\n        return dateNow();\n\n      case 23:\n        var k = this.bb(e, f);\n        var l = d;\n\n        if (l == null) {\n          return true;\n        }\n\n        if (k == null) {\n          return false;\n        }\n\n        if (k.isAssignableFrom(getInstanceType(l))) {\n          return true;\n        }\n\n        return false;\n\n      case 24:\n        var m = this.bb(e, d);\n        var n = d;\n\n        if (n == null) {\n          return null;\n        }\n\n        if (m == null) {\n          return null;\n        }\n\n        return this.a9(n, m);\n\n      case 10:\n        if (d == null) {\n          d = \"\";\n        }\n\n        if (e == null) {\n          e = \"\";\n        }\n\n        return stringConcat(d, e);\n\n      case 1:\n        if (d == null) {\n          d = \"\";\n        }\n\n        if (e == null) {\n          e = \"\";\n        }\n\n        return stringEndsWith(d, e);\n\n      case 4:\n        if (d == null) {\n          d = \"\";\n        }\n\n        if (e == null) {\n          e = \"\";\n        }\n\n        return d.indexOf(e);\n\n      case FilterExpressionFunctionType.Length:\n        if (d == null) {\n          d = \"\";\n        }\n\n        return d.length;\n\n      case 5:\n        if (d == null) {\n          d = \"\";\n        }\n\n        if (e == null) {\n          e = \"\";\n        }\n\n        if (f == null) {\n          f = \"\";\n        }\n\n        return stringReplace(d, e, f);\n\n      case 2:\n        if (d == null) {\n          d = \"\";\n        }\n\n        if (e == null) {\n          e = \"\";\n        }\n\n        return stringStartsWith(d, e);\n\n      case 6:\n        if (d == null) {\n          d = \"\";\n        }\n\n        if (e == null) {\n          e = 0;\n        }\n\n        if (f != null) {\n          return d.substr(typeGetValue(e), typeGetValue(f));\n        } else {\n          return d.substr(typeGetValue(e));\n        }\n\n      case 0:\n        if (d == null) {\n          d = \"\";\n        }\n\n        if (e == null) {\n          e = \"\";\n        }\n\n        return stringContains(d, e);\n\n      case 7:\n        if (d == null) {\n          d = \"\";\n        }\n\n        return d.toLowerCase();\n\n      case 8:\n        if (d == null) {\n          d = \"\";\n        }\n\n        return d.toUpperCase();\n\n      case 9:\n        if (d == null) {\n          d = \"\";\n        }\n\n        return d.trim();\n    }\n\n    throw new NotImplementedException(0);\n  };\n\n  FunctionFilterExpression.prototype.get_precedence = function () {\n    switch (this.functionType) {\n      case 23:\n        return 15;\n\n      case 24:\n        return 5;\n    }\n\n    return 2;\n  };\n\n  Object.defineProperty(FunctionFilterExpression.prototype, \"precedence\", {\n    get: function () {\n      return this.get_precedence();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FunctionFilterExpression.prototype.a9 = function (a, b) {\n    if (b == String_$type) {\n      if (a == null) {\n        return \"\";\n      }\n\n      return a.toString();\n    } else if (b == Number_$type || b == Number_$type || b == Number_$type) {\n      return Convert.toInt321(a);\n    } else if (b == Boolean_$type) {\n      return Convert.toBoolean(a);\n    } else if (b == Number_$type) {\n      return Convert.toByte1(a);\n    } else if (b == Date_$type) {\n      return Convert.toDateTime(a);\n    } else if (b == Number_$type || b == Number_$type) {\n      return Convert.toInt64(a);\n    } else if (b == Number_$type) {\n      return Convert.toDecimal2(a);\n    } else {\n      return a;\n    }\n  };\n\n  FunctionFilterExpression.prototype.bb = function (a, b) {\n    if (typeCast(DataSourceSchemaPropertyType_$type, a) !== null || typeof a === 'number') {\n      var c = typeGetValue(a);\n\n      switch (c) {\n        case 2:\n          return Boolean_$type;\n\n        case 10:\n          return Number_$type;\n\n        case 9:\n          return Date_$type;\n\n        case 8:\n          return Date_$type;\n\n        case 6:\n          return Number_$type;\n\n        case 5:\n          return Number_$type;\n\n        case 1:\n          return Number_$type;\n\n        case 3:\n          return Number_$type;\n\n        case 11:\n          if (b != null && typeof b === 'string') {\n            return this.ba(b);\n          }\n\n          return Base.$;\n\n        case 4:\n          return Number_$type;\n\n        case 7:\n          return Number_$type;\n\n        case 0:\n          return String_$type;\n      }\n    }\n\n    if (typeof a === 'string') {\n      return this.ba(b);\n    }\n\n    return Base.$;\n  };\n\n  FunctionFilterExpression.prototype.ba = function (a) {\n    switch (a) {\n      case \"Edm.Boolean\":\n      case \"Boolean\":\n      case \"bool\":\n      case \"boolean\":\n        return Boolean_$type;\n\n      case \"Edm.Byte\":\n      case \"Byte\":\n      case \"byte\":\n      case \"Edm.SByte\":\n      case \"SByte\":\n        return Number_$type;\n\n      case \"Edm.DateTimeOffset\":\n      case \"DateTimeOffset\":\n        return Date_$type;\n\n      case \"Edm.DateTime\":\n      case \"DateTime\":\n      case \"Calendar\":\n      case \"datetime\":\n      case \"calendar\":\n      case \"Edm.Time\":\n      case \"Time\":\n      case \"time\":\n        return Date_$type;\n\n      case \"Edm.Decimal\":\n      case \"Decimal\":\n      case \"decimal\":\n        return Number_$type;\n\n      case \"Edm.Double\":\n      case \"Double\":\n      case \"double\":\n        return Number_$type;\n\n      case \"Edm.Float\":\n      case \"Float\":\n      case \"float\":\n      case \"Edm.Single\":\n      case \"Single\":\n      case \"single\":\n        return Number_$type;\n\n      case \"Edm.Int16\":\n      case \"Int16\":\n      case \"Short\":\n      case \"short\":\n        return Number_$type;\n\n      case \"Edm.Int32\":\n      case \"Int32\":\n      case \"int\":\n      case \"Integer\":\n        return Number_$type;\n\n      case \"Edm.Int64\":\n      case \"Int64\":\n      case \"long\":\n      case \"Long\":\n        return Number_$type;\n\n      case \"Edm.String\":\n      case \"String\":\n      case \"string\":\n        return String_$type;\n    }\n\n    return Base.$;\n  };\n\n  FunctionFilterExpression.$t = markType(FunctionFilterExpression, 'FunctionFilterExpression', FilterExpression.$, [IFunctionFilterExpression_$type]);\n  return FunctionFilterExpression;\n}(FilterExpression);\n\nexport { FunctionFilterExpression };\n/**\r\n * @hidden\r\n */\n\nvar PropertyReferenceFilterExpression =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PropertyReferenceFilterExpression, _super);\n\n  function PropertyReferenceFilterExpression(a) {\n    var _this = _super.call(this) || this;\n\n    _this.a6 = null;\n    _this.a6 = a;\n    return _this;\n  }\n\n  PropertyReferenceFilterExpression.prototype.get_isPropertyReference = function () {\n    return true;\n  };\n\n  PropertyReferenceFilterExpression.prototype.get_precedence = function () {\n    return 99;\n  };\n\n  Object.defineProperty(PropertyReferenceFilterExpression.prototype, \"precedence\", {\n    get: function () {\n      return this.get_precedence();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PropertyReferenceFilterExpression.prototype.a3 = function () {\n    return false;\n  };\n\n  Object.defineProperty(PropertyReferenceFilterExpression.prototype, \"propertyReference\", {\n    get: function () {\n      return this.a6;\n    },\n    set: function (a) {\n      this.a6 = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PropertyReferenceFilterExpression.prototype.evaluate = function (a, b, c) {\n    var d = b.getItemValue(a, this.propertyReference);\n    return d;\n  };\n\n  PropertyReferenceFilterExpression.$t = markType(PropertyReferenceFilterExpression, 'PropertyReferenceFilterExpression', FilterExpression.$, [IPropertyReferenceFilterExpression_$type]);\n  return PropertyReferenceFilterExpression;\n}(FilterExpression);\n\nexport { PropertyReferenceFilterExpression };\n/**\r\n * @hidden\r\n */\n\nvar LiteralFilterExpression =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(LiteralFilterExpression, _super);\n\n  function LiteralFilterExpression(a, b) {\n    var _this = _super.call(this) || this;\n\n    _this.a7 = null;\n    _this.a6 = false;\n    _this.a7 = a;\n    return _this;\n  }\n\n  LiteralFilterExpression.prototype.get_precedence = function () {\n    return 99;\n  };\n\n  Object.defineProperty(LiteralFilterExpression.prototype, \"precedence\", {\n    get: function () {\n      return this.get_precedence();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LiteralFilterExpression.prototype.get_isLiteral = function () {\n    return true;\n  };\n\n  LiteralFilterExpression.prototype.get_isNull = function () {\n    return this.literalValue == null;\n  };\n\n  Object.defineProperty(LiteralFilterExpression.prototype, \"literalValue\", {\n    get: function () {\n      return this.a7;\n    },\n    set: function (a) {\n      this.a7 = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LiteralFilterExpression.prototype, \"leaveUnquoted\", {\n    get: function () {\n      return this.a6;\n    },\n    set: function (a) {\n      this.a6 = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LiteralFilterExpression.prototype.a3 = function () {\n    return typeCast(Boolean_$type, this.literalValue) !== null;\n  };\n\n  LiteralFilterExpression.prototype.evaluate = function (a, b, c) {\n    return this.literalValue;\n  };\n\n  LiteralFilterExpression.$t = markType(LiteralFilterExpression, 'LiteralFilterExpression', FilterExpression.$, [ILiteralFilterExpression_$type]);\n  return LiteralFilterExpression;\n}(FilterExpression);\n\nexport { LiteralFilterExpression };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FilterExpression_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, typeCast, typeGetValue, EnumUtil, enumGetBox, markType, IComparable_$type, String_$type, Number_$type, Boolean_$type, Date_$type, getInstanceType } from \"./type\";\r\nimport { IFilterExpression_$type } from \"./IFilterExpression\";\r\nimport { DataSourceSchemaPropertyType_$type } from \"./DataSourceSchemaPropertyType\";\r\nimport { FilterExpressionOperatorType_$type } from \"./FilterExpressionOperatorType\";\r\nimport { FilterExpressionFunctionType, FilterExpressionFunctionType_$type } from \"./FilterExpressionFunctionType\";\r\nimport { Convert } from \"./Convert\";\r\nimport { IOperationFilterExpression_$type } from \"./IOperationFilterExpression\";\r\nimport { NotImplementedException } from \"./NotImplementedException\";\r\nimport { InvalidOperationException } from \"./InvalidOperationException\";\r\nimport { intDivide, isNaN_ } from \"./number\";\r\nimport { CompareUtil } from \"./compareUtil\";\r\nimport { stringCompareTo, stringConcat, stringEndsWith, stringReplace, stringStartsWith, stringContains } from \"./string\";\r\nimport { IFunctionFilterExpression_$type } from \"./IFunctionFilterExpression\";\r\nimport { FilterExpressionCollection } from \"./FilterExpressionCollection\";\r\nimport { dateGetMonth, dateGetDate, dateNow } from \"./date\";\r\nimport { IPropertyReferenceFilterExpression_$type } from \"./IPropertyReferenceFilterExpression\";\r\nimport { ILiteralFilterExpression_$type } from \"./ILiteralFilterExpression\";\r\n/**\r\n * @hidden\r\n */\r\nvar FilterExpression = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(FilterExpression, _super);\r\n    function FilterExpression() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.ay = false;\r\n        _this.az = false;\r\n        return _this;\r\n    }\r\n    FilterExpression.prototype.markAutoGenerated = function () {\r\n        this.az = true;\r\n    };\r\n    Object.defineProperty(FilterExpression.prototype, \"isAutoGenerated\", {\r\n        get: function () {\r\n            return this.az;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FilterExpression.isFilterExpression = function (a) {\r\n        return typeCast(IFilterExpression_$type, a) !== null;\r\n    };\r\n    FilterExpression.isSchemaType = function (a) {\r\n        return typeCast(DataSourceSchemaPropertyType_$type, a) !== null;\r\n    };\r\n    FilterExpression.operation = function (a, b, c) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var d = a;\r\n            if (FilterExpression.isFilterExpression(c)) {\r\n                var e = c;\r\n                return new OperationFilterExpression(d, b, e);\r\n            }\r\n            else {\r\n                return new OperationFilterExpression(d, b, c);\r\n            }\r\n        }\r\n        else {\r\n            var f = a;\r\n            if (FilterExpression.isFilterExpression(c)) {\r\n                var g = c;\r\n                return new OperationFilterExpression(f, b, g);\r\n            }\r\n            else {\r\n                return new OperationFilterExpression(f, b, c);\r\n            }\r\n        }\r\n    };\r\n    FilterExpression.func = function (a) {\r\n        var b = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            b[_i - 1] = arguments[_i];\r\n        }\r\n        return new (FunctionFilterExpression.bind.apply(FunctionFilterExpression, tslib_1.__spread([void 0, a], b)))();\r\n    };\r\n    FilterExpression.prototype.a5 = function () {\r\n        this.ay = this.a3();\r\n    };\r\n    FilterExpression.property = function (a) {\r\n        if (a == null) {\r\n            return null;\r\n        }\r\n        var b = new PropertyReferenceFilterExpression(null);\r\n        b.propertyReference = a;\r\n        return b;\r\n    };\r\n    FilterExpression.nullLiteral = function () {\r\n        var a = new LiteralFilterExpression(null, false);\r\n        return a;\r\n    };\r\n    FilterExpression.literal = function (a) {\r\n        var b = new LiteralFilterExpression(a, false);\r\n        return b;\r\n    };\r\n    FilterExpression.unquotedLiteral = function (a) {\r\n        var b = new LiteralFilterExpression(a, true);\r\n        return b;\r\n    };\r\n    FilterExpression.prototype.match = function (a, b, c) {\r\n        var d = this.evaluate(a, b, c);\r\n        return this.a4(d, b, c);\r\n    };\r\n    FilterExpression.prototype.a4 = function (a, b, c) {\r\n        if (!this.ay) {\r\n            return this.a0(a, b, c);\r\n        }\r\n        return a;\r\n    };\r\n    FilterExpression.prototype.a0 = function (a, b, c) {\r\n        return Convert.toBoolean(a);\r\n    };\r\n    FilterExpression.prototype.get_isPropertyReference = function () {\r\n        return false;\r\n    };\r\n    Object.defineProperty(FilterExpression.prototype, \"isPropertyReference\", {\r\n        get: function () {\r\n            return this.get_isPropertyReference();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FilterExpression.prototype.get_isOperation = function () {\r\n        return false;\r\n    };\r\n    Object.defineProperty(FilterExpression.prototype, \"isOperation\", {\r\n        get: function () {\r\n            return this.get_isOperation();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FilterExpression.prototype.get_isFunction = function () {\r\n        return false;\r\n    };\r\n    Object.defineProperty(FilterExpression.prototype, \"isFunction\", {\r\n        get: function () {\r\n            return this.get_isFunction();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FilterExpression.prototype.get_isLiteral = function () {\r\n        return false;\r\n    };\r\n    Object.defineProperty(FilterExpression.prototype, \"isLiteral\", {\r\n        get: function () {\r\n            return this.get_isLiteral();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FilterExpression.prototype.get_isNull = function () {\r\n        return false;\r\n    };\r\n    Object.defineProperty(FilterExpression.prototype, \"isNull\", {\r\n        get: function () {\r\n            return this.get_isNull();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FilterExpression.prototype.group = function () {\r\n        return FilterExpression.operation(this, 15, null);\r\n    };\r\n    FilterExpression.prototype.and = function (a) {\r\n        return FilterExpression.operation(this, 7, a);\r\n    };\r\n    FilterExpression.prototype.or = function (a) {\r\n        return FilterExpression.operation(this, 8, a);\r\n    };\r\n    FilterExpression.prototype.not = function () {\r\n        return FilterExpression.operation(this, 9, null);\r\n    };\r\n    FilterExpression.prototype.add = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 10, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 10, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.plus = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 10, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 10, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.divide = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 13, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 13, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.divideBy = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 13, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 13, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.isEqualTo = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 1, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 1, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.isGreaterThan = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 3, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 3, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.isGreaterThanOrEqualTo = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 4, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 4, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.isLessThan = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 5, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 5, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.isLessThanOrEqualTo = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 6, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 6, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.modulo = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 14, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 14, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.multiply = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 12, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 12, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.times = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 12, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 12, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.isNotEqualTo = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 2, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 2, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.subtract = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 11, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 11, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.minus = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.operation(this, 11, b);\r\n        }\r\n        else {\r\n            return FilterExpression.operation(this, 11, a);\r\n        }\r\n    };\r\n    FilterExpression.prototype.ceiling = function () {\r\n        return FilterExpression.func(19, this);\r\n    };\r\n    FilterExpression.prototype.concat = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.func(10, this, b);\r\n        }\r\n        else {\r\n            var c = a;\r\n            return FilterExpression.func(10, this, FilterExpression.literal(c));\r\n        }\r\n    };\r\n    FilterExpression.prototype.contains = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.func(0, this, b);\r\n        }\r\n        else {\r\n            var c = a;\r\n            return FilterExpression.func(0, this, FilterExpression.literal(c));\r\n        }\r\n    };\r\n    FilterExpression.prototype.day = function () {\r\n        return FilterExpression.func(11, this);\r\n    };\r\n    FilterExpression.prototype.endsWith = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.func(1, this, b);\r\n        }\r\n        else {\r\n            var c = a;\r\n            return FilterExpression.func(1, this, FilterExpression.literal(c));\r\n        }\r\n    };\r\n    FilterExpression.prototype.floor = function () {\r\n        return FilterExpression.func(18, this);\r\n    };\r\n    FilterExpression.prototype.hour = function () {\r\n        return FilterExpression.func(12, this);\r\n    };\r\n    FilterExpression.prototype.indexOf = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.func(4, this, b);\r\n        }\r\n        else {\r\n            var c = a;\r\n            return FilterExpression.func(4, this, FilterExpression.literal(c));\r\n        }\r\n    };\r\n    FilterExpression.prototype.length = function () {\r\n        return FilterExpression.func(FilterExpressionFunctionType.Length, this);\r\n    };\r\n    FilterExpression.prototype.minute = function () {\r\n        return FilterExpression.func(13, this);\r\n    };\r\n    FilterExpression.prototype.month = function () {\r\n        return FilterExpression.func(14, this);\r\n    };\r\n    FilterExpression.prototype.replace = function (a, b) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var c = a;\r\n            if (FilterExpression.isFilterExpression(b)) {\r\n                var d = b;\r\n                return FilterExpression.func(5, this, c, d);\r\n            }\r\n            else {\r\n                var e = b;\r\n                return FilterExpression.func(5, this, c, FilterExpression.literal(e));\r\n            }\r\n        }\r\n        else {\r\n            var f = a;\r\n            if (FilterExpression.isFilterExpression(b)) {\r\n                var g = b;\r\n                return FilterExpression.func(5, this, FilterExpression.literal(f), g);\r\n            }\r\n            else {\r\n                var h = b;\r\n                return FilterExpression.func(5, this, FilterExpression.literal(f), FilterExpression.literal(h));\r\n            }\r\n        }\r\n    };\r\n    FilterExpression.prototype.round = function () {\r\n        return FilterExpression.func(17, this);\r\n    };\r\n    FilterExpression.prototype.second = function () {\r\n        return FilterExpression.func(15, this);\r\n    };\r\n    FilterExpression.prototype.startsWith = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.func(2, this, b);\r\n        }\r\n        else {\r\n            var c = a;\r\n            return FilterExpression.func(2, this, FilterExpression.literal(c));\r\n        }\r\n    };\r\n    FilterExpression.prototype.substring = function (a, b) {\r\n        if (b === void 0) {\r\n            b = null;\r\n        }\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var c = a;\r\n            if (b == null) {\r\n                return FilterExpression.func(6, this, c);\r\n            }\r\n            else {\r\n                if (FilterExpression.isFilterExpression(b)) {\r\n                    var d = b;\r\n                    return FilterExpression.func(6, this, c, d);\r\n                }\r\n                else {\r\n                    var e = typeGetValue(b);\r\n                    return FilterExpression.func(6, this, c, FilterExpression.literal(e));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var f = typeGetValue(a);\r\n            if (b == null) {\r\n                return FilterExpression.func(6, this, FilterExpression.literal(f));\r\n            }\r\n            else {\r\n                if (FilterExpression.isFilterExpression(b)) {\r\n                    var g = b;\r\n                    return FilterExpression.func(6, this, FilterExpression.literal(f), g);\r\n                }\r\n                else {\r\n                    var h = typeGetValue(b);\r\n                    return FilterExpression.func(6, this, FilterExpression.literal(f), FilterExpression.literal(h));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    FilterExpression.prototype.toLower = function () {\r\n        return FilterExpression.func(7, this);\r\n    };\r\n    FilterExpression.prototype.toUpper = function () {\r\n        return FilterExpression.func(8, this);\r\n    };\r\n    FilterExpression.prototype.trim = function () {\r\n        return FilterExpression.func(9, this);\r\n    };\r\n    FilterExpression.prototype.year = function () {\r\n        return FilterExpression.func(16, this);\r\n    };\r\n    FilterExpression.prototype.date = function () {\r\n        return FilterExpression.func(20, this);\r\n    };\r\n    FilterExpression.prototype.time = function () {\r\n        return FilterExpression.func(21, this);\r\n    };\r\n    FilterExpression.prototype.now = function () {\r\n        return FilterExpression.func(22);\r\n    };\r\n    FilterExpression.prototype.isOf = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.func(23, this, b);\r\n        }\r\n        else {\r\n            var c = a;\r\n            return FilterExpression.func(23, this, FilterExpression.literal(a));\r\n        }\r\n    };\r\n    FilterExpression.prototype.cast = function (a) {\r\n        if (FilterExpression.isFilterExpression(a)) {\r\n            var b = a;\r\n            return FilterExpression.func(24, this, b);\r\n        }\r\n        else if (FilterExpression.isSchemaType(a)) {\r\n            var c = EnumUtil.getEnumValue(DataSourceSchemaPropertyType_$type, a);\r\n            return FilterExpression.func(24, this, FilterExpression.literal(enumGetBox(DataSourceSchemaPropertyType_$type, c)));\r\n        }\r\n        else {\r\n            var d = a;\r\n            return FilterExpression.func(24, this, FilterExpression.literal(d));\r\n        }\r\n    };\r\n    FilterExpression.$t = markType(FilterExpression, 'FilterExpression', Base.$, [IFilterExpression_$type]);\r\n    return FilterExpression;\r\n}(Base));\r\nexport { FilterExpression };\r\n/**\r\n * @hidden\r\n */\r\nvar OperationFilterExpression = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(OperationFilterExpression, _super);\r\n    function OperationFilterExpression(a, b, c) {\r\n        var _this = _super.call(this) || this;\r\n        _this.a7 = null;\r\n        _this.a9 = false;\r\n        _this.a8 = null;\r\n        _this.ba = false;\r\n        _this.a6 = 0;\r\n        if (a != null) {\r\n            if (FilterExpression.isFilterExpression(a)) {\r\n                _this.a7 = a;\r\n            }\r\n            else {\r\n                _this.propertyName = a;\r\n            }\r\n        }\r\n        if (c != null) {\r\n            if (FilterExpression.isFilterExpression(c)) {\r\n                _this.a8 = c;\r\n            }\r\n            else {\r\n                _this.value = c;\r\n            }\r\n        }\r\n        _this.a6 = b;\r\n        return _this;\r\n    }\r\n    OperationFilterExpression.prototype.get_isOperation = function () {\r\n        return true;\r\n    };\r\n    OperationFilterExpression.prototype.a3 = function () {\r\n        return this.bg;\r\n    };\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"isComparisonOperation\", {\r\n        get: function () {\r\n            var a = this.operator;\r\n            switch (a) {\r\n                case 0:\r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 5:\r\n                case 6:\r\n                case 4: return true;\r\n            }\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"propertyName\", {\r\n        get: function () {\r\n            if (this.a7 == null || !this.a7.isPropertyReference) {\r\n                return null;\r\n            }\r\n            return this.a7.propertyReference;\r\n        },\r\n        set: function (a) {\r\n            this.left = FilterExpression.property(a);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"hasPropertyName\", {\r\n        get: function () {\r\n            return this.a7 != null && this.a7.isPropertyReference;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"value\", {\r\n        get: function () {\r\n            if (this.a8 == null) {\r\n                return null;\r\n            }\r\n            if (this.a8.isNull) {\r\n                return null;\r\n            }\r\n            if (!this.a8.isLiteral) {\r\n                return null;\r\n            }\r\n            return this.a8.literalValue;\r\n        },\r\n        set: function (a) {\r\n            if (a == null) {\r\n                this.right = FilterExpression.nullLiteral();\r\n                return;\r\n            }\r\n            this.right = FilterExpression.literal(a);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"hasValue\", {\r\n        get: function () {\r\n            return this.a8 != null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"left\", {\r\n        get: function () {\r\n            return this.a7;\r\n        },\r\n        set: function (a) {\r\n            this.a7 = a;\r\n            this.a9 = true;\r\n            this.a5();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"hasLeft\", {\r\n        get: function () {\r\n            return this.a9;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"right\", {\r\n        get: function () {\r\n            return this.a8;\r\n        },\r\n        set: function (a) {\r\n            this.a8 = a;\r\n            this.ba = true;\r\n            this.a5();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"hasRight\", {\r\n        get: function () {\r\n            return this.ba;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"operator\", {\r\n        get: function () {\r\n            return this.a6;\r\n        },\r\n        set: function (a) {\r\n            var b = enumGetBox(FilterExpressionOperatorType_$type, this.a6);\r\n            var c = a;\r\n            if (c == null) {\r\n                a = 0;\r\n            }\r\n            if ((typeof c == \"number\")) {\r\n                var d = typeGetValue(c);\r\n                if ((EnumUtil.getName(FilterExpressionOperatorType_$type, d) == undefined)) {\r\n                    a = 0;\r\n                }\r\n                a = d;\r\n            }\r\n            else {\r\n                a = (typeGetValue(EnumUtil.parse(FilterExpressionOperatorType_$type, c, true)));\r\n            }\r\n            this.a6 = a;\r\n            this.a5();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"hasOperator\", {\r\n        get: function () {\r\n            return this.a6 != 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"bg\", {\r\n        get: function () {\r\n            switch (this.operator) {\r\n                case 7:\r\n                case 1:\r\n                case 3:\r\n                case 4:\r\n                case 5:\r\n                case 6:\r\n                case 9:\r\n                case 2:\r\n                case 8: return true;\r\n            }\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    OperationFilterExpression.prototype.get_precedence = function () {\r\n        switch (this.operator) {\r\n            case 15: return 0;\r\n            case 9: return 4;\r\n            case 12: return 6;\r\n            case 13: return 7;\r\n            case 14: return 8;\r\n            case 10: return 9;\r\n            case 11: return 10;\r\n            case 5: return 11;\r\n            case 3: return 12;\r\n            case 6: return 13;\r\n            case 4: return 14;\r\n            case 1: return 16;\r\n            case 2: return 17;\r\n            case 7: return 18;\r\n            case 8: return 19;\r\n            case 0: return 99;\r\n        }\r\n        return 99;\r\n    };\r\n    Object.defineProperty(OperationFilterExpression.prototype, \"precedence\", {\r\n        get: function () {\r\n            return this.get_precedence();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    OperationFilterExpression.prototype.evaluate = function (a, b, c) {\r\n        switch (this.operator) {\r\n            case 10:\r\n            case 13:\r\n            case 14:\r\n            case 12:\r\n            case 11: return this.bi(a, b, c);\r\n            case 0:\r\n            case 1:\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n            case 6:\r\n            case 2: return this.bj(a, b, c);\r\n            case 7:\r\n            case 9:\r\n            case 8: return this.bk(a, b, c);\r\n            case 15: if (this.left != null) {\r\n                return this.left.evaluate(a, b, c);\r\n            }\r\n            else {\r\n                if (this.right == null) {\r\n                    return null;\r\n                }\r\n                return this.right.evaluate(a, b, c);\r\n            }\r\n        }\r\n        throw new NotImplementedException(0);\r\n    };\r\n    OperationFilterExpression.prototype.bj = function (a, b, c) {\r\n        var d = null;\r\n        var e = null;\r\n        var f = -1;\r\n        if (this.left != null) {\r\n            d = this.left.evaluate(a, b, c);\r\n        }\r\n        if (this.right != null) {\r\n            e = this.right.evaluate(a, b, c);\r\n        }\r\n        if (d == null && e == null) {\r\n            f = 0;\r\n        }\r\n        var g = null;\r\n        var h = null;\r\n        if (typeCast(IComparable_$type, d) !== null) {\r\n            g = d;\r\n        }\r\n        if (typeCast(IComparable_$type, e) !== null) {\r\n            h = e;\r\n        }\r\n        if (typeof d === 'number' && isNaN_(d) || typeof e === 'number' && isNaN_(e) || typeof d === 'number' && isNaN_(d) || typeof e === 'number' && isNaN_(e)) {\r\n            return false;\r\n        }\r\n        if (g != null) {\r\n            if (e == null) {\r\n                f = CompareUtil.compareToObject(g, 0);\r\n                if (f == 0) {\r\n                    f = -1;\r\n                }\r\n            }\r\n            else {\r\n                f = CompareUtil.compareToObject(g, e);\r\n            }\r\n        }\r\n        else if (h != null) {\r\n            if (d == null) {\r\n                var i = CompareUtil.compareToObject(h, 0);\r\n                if (i == 0) {\r\n                    f = 1;\r\n                }\r\n                else {\r\n                    f = 1;\r\n                    if (i == 0) {\r\n                        f = 0;\r\n                    }\r\n                    if (i > 0) {\r\n                        f = -1;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var j = CompareUtil.compareToObject(h, d);\r\n                f = 1;\r\n                if (j == 0) {\r\n                    f = 0;\r\n                }\r\n                if (j > 0) {\r\n                    f = -1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var k = null;\r\n            var l = null;\r\n            if (d != null) {\r\n                k = d.toString();\r\n            }\r\n            if (e != null) {\r\n                l = e.toString();\r\n            }\r\n            if (k != null) {\r\n                if (l == null) {\r\n                    f = 1;\r\n                }\r\n                else {\r\n                    f = stringCompareTo(k, l);\r\n                }\r\n            }\r\n            else if (l != null) {\r\n                if (k == null) {\r\n                    f = -1;\r\n                }\r\n                else {\r\n                    var m = stringCompareTo(l, k);\r\n                    f = 1;\r\n                    if (m == 0) {\r\n                        f = 0;\r\n                    }\r\n                    if (m > 0) {\r\n                        f = -1;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                f = 0;\r\n            }\r\n        }\r\n        switch (this.operator) {\r\n            case 0:\r\n            case 1: return f == 0;\r\n            case 3: return f > 0;\r\n            case 4: return f >= 0;\r\n            case 5: return f < 0;\r\n            case 6: return f <= 0;\r\n            case 2: return f != 0;\r\n        }\r\n        throw new InvalidOperationException(0);\r\n    };\r\n    OperationFilterExpression.prototype.bk = function (a, b, c) {\r\n        var d = null;\r\n        var e = null;\r\n        if (this.left != null) {\r\n            d = this.left.evaluate(a, b, c);\r\n        }\r\n        if (this.right != null) {\r\n            e = this.right.evaluate(a, b, c);\r\n        }\r\n        if (e == null && d == null) {\r\n            return false;\r\n        }\r\n        if (e == null) {\r\n            e = false;\r\n        }\r\n        if (d == null) {\r\n            d = false;\r\n        }\r\n        switch (this.operator) {\r\n            case 7: return d && e;\r\n            case 9: if (this.left == null) {\r\n                return !e;\r\n            }\r\n            else {\r\n                return !d;\r\n            }\r\n            case 8: return d || e;\r\n        }\r\n        return false;\r\n    };\r\n    OperationFilterExpression.prototype.bi = function (a, b, c) {\r\n        var d = null;\r\n        var e = null;\r\n        if (this.left != null) {\r\n            d = this.left.evaluate(a, b, c);\r\n        }\r\n        if (this.right != null) {\r\n            e = this.right.evaluate(a, b, c);\r\n        }\r\n        if (d == null) {\r\n            return e;\r\n        }\r\n        if (e == null) {\r\n            return d;\r\n        }\r\n        if (d == null && e == null) {\r\n            return 0;\r\n        }\r\n        if (typeof d === 'number' || typeof e === 'number') {\r\n            switch (this.operator) {\r\n                case 10: return d + e;\r\n                case 13: return d / e;\r\n                case 14: return d % e;\r\n                case 12: return d * e;\r\n                case 11: return d - e;\r\n            }\r\n        }\r\n        if (typeof d === 'number' || typeof e === 'number') {\r\n            switch (this.operator) {\r\n                case 10: return d + e;\r\n                case 13: return d / e;\r\n                case 14: return d % e;\r\n                case 12: return d * e;\r\n                case 11: return d - e;\r\n            }\r\n        }\r\n        if (typeof d === 'number' || typeof e === 'number') {\r\n            switch (this.operator) {\r\n                case 10: return d + e;\r\n                case 13: return d / e;\r\n                case 14: return d % e;\r\n                case 12: return d * e;\r\n                case 11: return d - e;\r\n            }\r\n        }\r\n        if (typeof d === 'number' || typeof e === 'number') {\r\n            switch (this.operator) {\r\n                case 10: return typeGetValue(d) + typeGetValue(e);\r\n                case 13: return intDivide(typeGetValue(d), typeGetValue(e));\r\n                case 14: return typeGetValue(d) % typeGetValue(e);\r\n                case 12: return typeGetValue(d) * typeGetValue(e);\r\n                case 11: return typeGetValue(d) - typeGetValue(e);\r\n            }\r\n        }\r\n        if (typeof d === 'number' || typeof e === 'number') {\r\n            switch (this.operator) {\r\n                case 10: return typeGetValue(d) + typeGetValue(e);\r\n                case 13: return intDivide(typeGetValue(d), typeGetValue(e));\r\n                case 14: return typeGetValue(d) % typeGetValue(e);\r\n                case 12: return typeGetValue(d) * typeGetValue(e);\r\n                case 11: return typeGetValue(d) - typeGetValue(e);\r\n            }\r\n        }\r\n        if (typeof d === 'number' || typeof e === 'number') {\r\n            switch (this.operator) {\r\n                case 10: return typeGetValue(d) + typeGetValue(e);\r\n                case 13: return intDivide(typeGetValue(d), typeGetValue(e));\r\n                case 14: return typeGetValue(d) % typeGetValue(e);\r\n                case 12: return typeGetValue(d) * typeGetValue(e);\r\n                case 11: return typeGetValue(d) - typeGetValue(e);\r\n            }\r\n        }\r\n        if (typeof d === 'number' || typeof e === 'number') {\r\n            switch (this.operator) {\r\n                case 10: return typeGetValue(d) + typeGetValue(e);\r\n                case 13: return intDivide(typeGetValue(d), typeGetValue(e));\r\n                case 14: return typeGetValue(d) % typeGetValue(e);\r\n                case 12: return typeGetValue(d) * typeGetValue(e);\r\n                case 11: return typeGetValue(d) - typeGetValue(e);\r\n            }\r\n        }\r\n        throw new NotImplementedException(0);\r\n    };\r\n    OperationFilterExpression.$t = markType(OperationFilterExpression, 'OperationFilterExpression', FilterExpression.$, [IOperationFilterExpression_$type]);\r\n    return OperationFilterExpression;\r\n}(FilterExpression));\r\nexport { OperationFilterExpression };\r\n/**\r\n * @hidden\r\n */\r\nvar FunctionFilterExpression = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(FunctionFilterExpression, _super);\r\n    function FunctionFilterExpression(a) {\r\n        var b = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            b[_i - 1] = arguments[_i];\r\n        }\r\n        var _this = _super.call(this) || this;\r\n        _this.a7 = 19;\r\n        _this.a6 = new FilterExpressionCollection();\r\n        _this.a7 = a;\r\n        for (var c = 0; c < b.length; c++) {\r\n            _this.a6.add(b[c]);\r\n        }\r\n        return _this;\r\n    }\r\n    FunctionFilterExpression.prototype.get_isFunction = function () {\r\n        return true;\r\n    };\r\n    FunctionFilterExpression.prototype.a3 = function () {\r\n        return this.a8;\r\n    };\r\n    Object.defineProperty(FunctionFilterExpression.prototype, \"functionType\", {\r\n        get: function () {\r\n            return this.a7;\r\n        },\r\n        set: function (a) {\r\n            var b = enumGetBox(FilterExpressionFunctionType_$type, this.a7);\r\n            var c = a;\r\n            if (c == null) {\r\n                a = 0;\r\n            }\r\n            if ((typeof c == \"number\")) {\r\n                var d = typeGetValue(c);\r\n                if ((EnumUtil.getName(FilterExpressionFunctionType_$type, d) == undefined)) {\r\n                    a = 0;\r\n                }\r\n                a = d;\r\n            }\r\n            else {\r\n                a = (typeGetValue(EnumUtil.parse(FilterExpressionFunctionType_$type, c, true)));\r\n            }\r\n            this.a7 = a;\r\n            this.a5();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunctionFilterExpression.prototype, \"a8\", {\r\n        get: function () {\r\n            switch (this.functionType) {\r\n                case 1:\r\n                case 2:\r\n                case 0: return true;\r\n            }\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunctionFilterExpression.prototype, \"functionArguments\", {\r\n        get: function () {\r\n            return this.a6;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunctionFilterExpression.prototype, \"hasFunctionArguments\", {\r\n        get: function () {\r\n            return this.a6.j.count > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FunctionFilterExpression.prototype.evaluate = function (a, b, c) {\r\n        var d = null;\r\n        var e = null;\r\n        var f = null;\r\n        var g = null;\r\n        var h = this.functionArguments.j;\r\n        if (h.count > 0) {\r\n            for (var i = 0; i < h.count; i++) {\r\n                var j = null;\r\n                if (h.item(i) != null) {\r\n                    j = h.item(i).evaluate(a, b, c);\r\n                }\r\n                switch (i) {\r\n                    case 0:\r\n                        d = j;\r\n                        break;\r\n                    case 1:\r\n                        e = j;\r\n                        break;\r\n                    case 2:\r\n                        f = j;\r\n                        break;\r\n                    case 3:\r\n                        g = j;\r\n                        break;\r\n                }\r\n                if (i > 3) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        switch (this.functionType) {\r\n            case 19:\r\n                if (d == null) {\r\n                    d = 0;\r\n                }\r\n                return Math.ceil(d);\r\n            case 18:\r\n                if (d == null) {\r\n                    d = 0;\r\n                }\r\n                return Math.floor(d);\r\n            case 17:\r\n                if (d == null) {\r\n                    d = 0;\r\n                }\r\n                if (typeof d === 'number') {\r\n                    return Math.round(d);\r\n                }\r\n                return Math.round(d);\r\n            case 11:\r\n                if (d == null) {\r\n                    return 0;\r\n                }\r\n                return d.getDate();\r\n            case 12:\r\n                if (d == null) {\r\n                    return 0;\r\n                }\r\n                return d.getHours();\r\n            case 13:\r\n                if (d == null) {\r\n                    return 0;\r\n                }\r\n                return d.getMinutes();\r\n            case 14:\r\n                if (d == null) {\r\n                    return 0;\r\n                }\r\n                return dateGetMonth(d);\r\n            case 16:\r\n                if (d == null) {\r\n                    return 0;\r\n                }\r\n                return d.getFullYear();\r\n            case 15:\r\n                if (d == null) {\r\n                    return 0;\r\n                }\r\n                return d.getSeconds();\r\n            case 20:\r\n                if (d == null) {\r\n                    return 0;\r\n                }\r\n                return dateGetDate(d);\r\n            case 21:\r\n                if (d == null) {\r\n                    return 0;\r\n                }\r\n                return d;\r\n            case 22: return dateNow();\r\n            case 23:\r\n                var k = this.bb(e, f);\r\n                var l = d;\r\n                if (l == null) {\r\n                    return true;\r\n                }\r\n                if (k == null) {\r\n                    return false;\r\n                }\r\n                if (k.isAssignableFrom(getInstanceType(l))) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            case 24:\r\n                var m = this.bb(e, d);\r\n                var n = d;\r\n                if (n == null) {\r\n                    return null;\r\n                }\r\n                if (m == null) {\r\n                    return null;\r\n                }\r\n                return this.a9(n, m);\r\n            case 10:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                if (e == null) {\r\n                    e = \"\";\r\n                }\r\n                return stringConcat(d, e);\r\n            case 1:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                if (e == null) {\r\n                    e = \"\";\r\n                }\r\n                return stringEndsWith(d, e);\r\n            case 4:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                if (e == null) {\r\n                    e = \"\";\r\n                }\r\n                return d.indexOf(e);\r\n            case FilterExpressionFunctionType.Length:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                return d.length;\r\n            case 5:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                if (e == null) {\r\n                    e = \"\";\r\n                }\r\n                if (f == null) {\r\n                    f = \"\";\r\n                }\r\n                return stringReplace(d, e, f);\r\n            case 2:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                if (e == null) {\r\n                    e = \"\";\r\n                }\r\n                return stringStartsWith(d, e);\r\n            case 6:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                if (e == null) {\r\n                    e = 0;\r\n                }\r\n                if (f != null) {\r\n                    return d.substr(typeGetValue(e), typeGetValue(f));\r\n                }\r\n                else {\r\n                    return d.substr(typeGetValue(e));\r\n                }\r\n            case 0:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                if (e == null) {\r\n                    e = \"\";\r\n                }\r\n                return stringContains(d, e);\r\n            case 7:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                return d.toLowerCase();\r\n            case 8:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                return d.toUpperCase();\r\n            case 9:\r\n                if (d == null) {\r\n                    d = \"\";\r\n                }\r\n                return d.trim();\r\n        }\r\n        throw new NotImplementedException(0);\r\n    };\r\n    FunctionFilterExpression.prototype.get_precedence = function () {\r\n        switch (this.functionType) {\r\n            case 23: return 15;\r\n            case 24: return 5;\r\n        }\r\n        return 2;\r\n    };\r\n    Object.defineProperty(FunctionFilterExpression.prototype, \"precedence\", {\r\n        get: function () {\r\n            return this.get_precedence();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FunctionFilterExpression.prototype.a9 = function (a, b) {\r\n        if (b == String_$type) {\r\n            if (a == null) {\r\n                return \"\";\r\n            }\r\n            return a.toString();\r\n        }\r\n        else if (b == Number_$type || b == Number_$type || b == Number_$type) {\r\n            return Convert.toInt321(a);\r\n        }\r\n        else if (b == Boolean_$type) {\r\n            return Convert.toBoolean(a);\r\n        }\r\n        else if (b == Number_$type) {\r\n            return Convert.toByte1(a);\r\n        }\r\n        else if (b == Date_$type) {\r\n            return Convert.toDateTime(a);\r\n        }\r\n        else if (b == Number_$type || b == Number_$type) {\r\n            return Convert.toInt64(a);\r\n        }\r\n        else if (b == Number_$type) {\r\n            return Convert.toDecimal2(a);\r\n        }\r\n        else {\r\n            return a;\r\n        }\r\n    };\r\n    FunctionFilterExpression.prototype.bb = function (a, b) {\r\n        if (typeCast(DataSourceSchemaPropertyType_$type, a) !== null || typeof a === 'number') {\r\n            var c = typeGetValue(a);\r\n            switch (c) {\r\n                case 2: return Boolean_$type;\r\n                case 10: return Number_$type;\r\n                case 9: return Date_$type;\r\n                case 8: return Date_$type;\r\n                case 6: return Number_$type;\r\n                case 5: return Number_$type;\r\n                case 1: return Number_$type;\r\n                case 3: return Number_$type;\r\n                case 11:\r\n                    if (b != null && typeof b === 'string') {\r\n                        return this.ba(b);\r\n                    }\r\n                    return Base.$;\r\n                case 4: return Number_$type;\r\n                case 7: return Number_$type;\r\n                case 0: return String_$type;\r\n            }\r\n        }\r\n        if (typeof a === 'string') {\r\n            return this.ba(b);\r\n        }\r\n        return Base.$;\r\n    };\r\n    FunctionFilterExpression.prototype.ba = function (a) {\r\n        switch (a) {\r\n            case \"Edm.Boolean\":\r\n            case \"Boolean\":\r\n            case \"bool\":\r\n            case \"boolean\": return Boolean_$type;\r\n            case \"Edm.Byte\":\r\n            case \"Byte\":\r\n            case \"byte\":\r\n            case \"Edm.SByte\":\r\n            case \"SByte\": return Number_$type;\r\n            case \"Edm.DateTimeOffset\":\r\n            case \"DateTimeOffset\": return Date_$type;\r\n            case \"Edm.DateTime\":\r\n            case \"DateTime\":\r\n            case \"Calendar\":\r\n            case \"datetime\":\r\n            case \"calendar\":\r\n            case \"Edm.Time\":\r\n            case \"Time\":\r\n            case \"time\": return Date_$type;\r\n            case \"Edm.Decimal\":\r\n            case \"Decimal\":\r\n            case \"decimal\": return Number_$type;\r\n            case \"Edm.Double\":\r\n            case \"Double\":\r\n            case \"double\": return Number_$type;\r\n            case \"Edm.Float\":\r\n            case \"Float\":\r\n            case \"float\":\r\n            case \"Edm.Single\":\r\n            case \"Single\":\r\n            case \"single\": return Number_$type;\r\n            case \"Edm.Int16\":\r\n            case \"Int16\":\r\n            case \"Short\":\r\n            case \"short\": return Number_$type;\r\n            case \"Edm.Int32\":\r\n            case \"Int32\":\r\n            case \"int\":\r\n            case \"Integer\": return Number_$type;\r\n            case \"Edm.Int64\":\r\n            case \"Int64\":\r\n            case \"long\":\r\n            case \"Long\": return Number_$type;\r\n            case \"Edm.String\":\r\n            case \"String\":\r\n            case \"string\": return String_$type;\r\n        }\r\n        return Base.$;\r\n    };\r\n    FunctionFilterExpression.$t = markType(FunctionFilterExpression, 'FunctionFilterExpression', FilterExpression.$, [IFunctionFilterExpression_$type]);\r\n    return FunctionFilterExpression;\r\n}(FilterExpression));\r\nexport { FunctionFilterExpression };\r\n/**\r\n * @hidden\r\n */\r\nvar PropertyReferenceFilterExpression = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(PropertyReferenceFilterExpression, _super);\r\n    function PropertyReferenceFilterExpression(a) {\r\n        var _this = _super.call(this) || this;\r\n        _this.a6 = null;\r\n        _this.a6 = a;\r\n        return _this;\r\n    }\r\n    PropertyReferenceFilterExpression.prototype.get_isPropertyReference = function () {\r\n        return true;\r\n    };\r\n    PropertyReferenceFilterExpression.prototype.get_precedence = function () {\r\n        return 99;\r\n    };\r\n    Object.defineProperty(PropertyReferenceFilterExpression.prototype, \"precedence\", {\r\n        get: function () {\r\n            return this.get_precedence();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PropertyReferenceFilterExpression.prototype.a3 = function () {\r\n        return false;\r\n    };\r\n    Object.defineProperty(PropertyReferenceFilterExpression.prototype, \"propertyReference\", {\r\n        get: function () {\r\n            return this.a6;\r\n        },\r\n        set: function (a) {\r\n            this.a6 = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PropertyReferenceFilterExpression.prototype.evaluate = function (a, b, c) {\r\n        var d = b.getItemValue(a, this.propertyReference);\r\n        return d;\r\n    };\r\n    PropertyReferenceFilterExpression.$t = markType(PropertyReferenceFilterExpression, 'PropertyReferenceFilterExpression', FilterExpression.$, [IPropertyReferenceFilterExpression_$type]);\r\n    return PropertyReferenceFilterExpression;\r\n}(FilterExpression));\r\nexport { PropertyReferenceFilterExpression };\r\n/**\r\n * @hidden\r\n */\r\nvar LiteralFilterExpression = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(LiteralFilterExpression, _super);\r\n    function LiteralFilterExpression(a, b) {\r\n        var _this = _super.call(this) || this;\r\n        _this.a7 = null;\r\n        _this.a6 = false;\r\n        _this.a7 = a;\r\n        return _this;\r\n    }\r\n    LiteralFilterExpression.prototype.get_precedence = function () {\r\n        return 99;\r\n    };\r\n    Object.defineProperty(LiteralFilterExpression.prototype, \"precedence\", {\r\n        get: function () {\r\n            return this.get_precedence();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LiteralFilterExpression.prototype.get_isLiteral = function () {\r\n        return true;\r\n    };\r\n    LiteralFilterExpression.prototype.get_isNull = function () {\r\n        return this.literalValue == null;\r\n    };\r\n    Object.defineProperty(LiteralFilterExpression.prototype, \"literalValue\", {\r\n        get: function () {\r\n            return this.a7;\r\n        },\r\n        set: function (a) {\r\n            this.a7 = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LiteralFilterExpression.prototype, \"leaveUnquoted\", {\r\n        get: function () {\r\n            return this.a6;\r\n        },\r\n        set: function (a) {\r\n            this.a6 = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LiteralFilterExpression.prototype.a3 = function () {\r\n        return typeCast(Boolean_$type, this.literalValue) !== null;\r\n    };\r\n    LiteralFilterExpression.prototype.evaluate = function (a, b, c) {\r\n        return this.literalValue;\r\n    };\r\n    LiteralFilterExpression.$t = markType(LiteralFilterExpression, 'LiteralFilterExpression', FilterExpression.$, [ILiteralFilterExpression_$type]);\r\n    return LiteralFilterExpression;\r\n}(FilterExpression));\r\nexport { LiteralFilterExpression };\r\n//# sourceMappingURL=FilterExpression_combined.js.map\r\n"]},"metadata":{},"sourceType":"module"}