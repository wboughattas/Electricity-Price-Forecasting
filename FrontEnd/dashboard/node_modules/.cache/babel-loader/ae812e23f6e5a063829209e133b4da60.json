{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SplineSeriesBaseDescriptionMetadata } from \"./SplineSeriesBaseDescriptionMetadata\";\nimport { SplineSeriesDescription } from \"./SplineSeriesDescription\";\n/**\n * @hidden\n */\n\nvar SplineSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SplineSeriesDescriptionMetadata, _super);\n\n  function SplineSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SplineSeriesDescriptionMetadata.b = function (a) {\n    if (SplineSeriesDescriptionMetadata.a == null) {\n      SplineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      SplineSeriesDescriptionMetadata.c(a, SplineSeriesDescriptionMetadata.a);\n    }\n  };\n\n  SplineSeriesDescriptionMetadata.c = function (a, b) {\n    SplineSeriesBaseDescriptionMetadata.c(a, b);\n  };\n\n  SplineSeriesDescriptionMetadata.d = function (a) {\n    SplineSeriesDescriptionMetadata.b(a);\n    a.n(\"SplineSeries\", function () {\n      return new SplineSeriesDescription();\n    });\n    a.m(\"SplineSeries\", SplineSeriesDescriptionMetadata.a);\n  };\n\n  SplineSeriesDescriptionMetadata.$t = markType(SplineSeriesDescriptionMetadata, 'SplineSeriesDescriptionMetadata');\n  SplineSeriesDescriptionMetadata.a = null;\n  return SplineSeriesDescriptionMetadata;\n}(Base);\n\nexport { SplineSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/SplineSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mCAAT,QAAoD,uCAApD;AACA,SAAS,uBAAT,QAAwC,2BAAxC;AAEA;;AAEG;;AACH,IAAA,+BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqD,EAAA,OAAA,CAAA,SAAA,CAAA,+BAAA,EAAA,MAAA;;AAArD,WAAA,+BAAA,GAAA;;AAiBC;;AAde,EAAA,+BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,+BAA+B,CAAC,CAAhC,IAAqC,IAAzC,EAA+C;AAC9C,MAAA,+BAA+B,CAAC,CAAhC,GAAoC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAApC;AACA,MAAA,+BAA+B,CAAC,CAAhC,CAAkC,CAAlC,EAAqC,+BAA+B,CAAC,CAArE;AACA;AACD,GALc;;AAMR,EAAA,+BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC,EAAyC,CAAzC;AACA,GAFM;;AAGA,EAAA,+BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,+BAA+B,CAAC,CAAhC,CAAkC,CAAlC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,cAAJ,EAAoB,YAAA;AAAM,aAAA,IAAA,uBAAA,EAAA;AAA6B,KAAvD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,cAAJ,EAAoB,+BAA+B,CAAC,CAApD;AACA,GAJM;;AAXA,EAAA,+BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,+BAAD,EAAkC,iCAAlC,CAAnB;AACQ,EAAA,+BAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,+BAAA;AAAC,CAjBD,CAAqD,IAArD,CAAA;;SAAa,+B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SplineSeriesBaseDescriptionMetadata } from \"./SplineSeriesBaseDescriptionMetadata\";\nimport { SplineSeriesDescription } from \"./SplineSeriesDescription\";\n/**\n * @hidden\n */\nvar SplineSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SplineSeriesDescriptionMetadata, _super);\n    function SplineSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SplineSeriesDescriptionMetadata.b = function (a) {\n        if (SplineSeriesDescriptionMetadata.a == null) {\n            SplineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            SplineSeriesDescriptionMetadata.c(a, SplineSeriesDescriptionMetadata.a);\n        }\n    };\n    SplineSeriesDescriptionMetadata.c = function (a, b) {\n        SplineSeriesBaseDescriptionMetadata.c(a, b);\n    };\n    SplineSeriesDescriptionMetadata.d = function (a) {\n        SplineSeriesDescriptionMetadata.b(a);\n        a.n(\"SplineSeries\", function () { return new SplineSeriesDescription(); });\n        a.m(\"SplineSeries\", SplineSeriesDescriptionMetadata.a);\n    };\n    SplineSeriesDescriptionMetadata.$t = markType(SplineSeriesDescriptionMetadata, 'SplineSeriesDescriptionMetadata');\n    SplineSeriesDescriptionMetadata.a = null;\n    return SplineSeriesDescriptionMetadata;\n}(Base));\nexport { SplineSeriesDescriptionMetadata };\n//# sourceMappingURL=SplineSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}