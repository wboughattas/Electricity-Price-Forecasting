{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"./type\";\nimport { Random } from \"./Random\";\nimport { StockPosition } from \"./StockPosition\";\nimport { StockPricePoint } from \"./StockPricePoint\";\nimport { StockDataLookup } from \"./StockDataLookup\";\nimport { StockDetails } from \"./StockDetails\";\nimport { List$1 } from \"./List$1\";\nimport { StockPriceHistory } from \"./StockPriceHistory\";\nimport { intDivide, truncate } from \"./number\";\nimport { dateNow, dateFromValues, dateGetMonth, dateAddMonths, dateAddMinutes, dateGetTimeOfDay } from \"./date\";\nimport { timeSpanTotalMinutes, timeSpanInit1 } from \"./timespan\";\nimport { stringIsNullOrEmpty } from \"./string\";\nimport { round10N } from \"./numberExtended\";\n/**\r\n * @hidden\r\n */\n\nvar StockDataGenerator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(StockDataGenerator, _super);\n\n  function StockDataGenerator() {\n    var _this = _super.call(this) || this;\n\n    _this._priceStart = 0;\n    _this._priceRange = 0;\n    _this._priceMinimum = 0;\n    _this._priceMaximum = 0;\n    _this._volumeStart = 0;\n    _this._volumeRange = 0;\n    _this._dateRange = 0;\n    _this._dateInterval = 0;\n    _this._stockInterval = 0;\n    _this._skipAfterHours = false;\n    _this.g = new Date();\n    _this.h = new Date();\n    _this.q = new Random(0);\n    _this.skipAfterHours = false;\n    _this.priceStart = 0;\n    _this.priceRange = NaN;\n    _this.priceMinimum = NaN;\n    _this.priceMaximum = NaN;\n    _this.volumeStart = 0;\n    _this.volumeRange = NaN;\n    _this.dateRange = 12;\n    _this.dateInterval = 24 * 60;\n    return _this;\n  }\n\n  Object.defineProperty(StockDataGenerator.prototype, \"priceStart\", {\n    get: function () {\n      return this._priceStart;\n    },\n    set: function (a) {\n      this._priceStart = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StockDataGenerator.prototype, \"priceRange\", {\n    get: function () {\n      return this._priceRange;\n    },\n    set: function (a) {\n      this._priceRange = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StockDataGenerator.prototype, \"priceMinimum\", {\n    get: function () {\n      return this._priceMinimum;\n    },\n    set: function (a) {\n      this._priceMinimum = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StockDataGenerator.prototype, \"priceMaximum\", {\n    get: function () {\n      return this._priceMaximum;\n    },\n    set: function (a) {\n      this._priceMaximum = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StockDataGenerator.prototype, \"volumeStart\", {\n    get: function () {\n      return this._volumeStart;\n    },\n    set: function (a) {\n      this._volumeStart = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StockDataGenerator.prototype, \"volumeRange\", {\n    get: function () {\n      return this._volumeRange;\n    },\n    set: function (a) {\n      this._volumeRange = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StockDataGenerator.prototype, \"dateRange\", {\n    get: function () {\n      return this._dateRange;\n    },\n    set: function (a) {\n      this._dateRange = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StockDataGenerator.prototype, \"dateInterval\", {\n    get: function () {\n      return this._dateInterval;\n    },\n    set: function (a) {\n      this._dateInterval = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StockDataGenerator.prototype, \"stockInterval\", {\n    get: function () {\n      return this._stockInterval;\n    },\n    set: function (a) {\n      this._stockInterval = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StockDataGenerator.prototype, \"skipAfterHours\", {\n    get: function () {\n      return this._skipAfterHours;\n    },\n    set: function (a) {\n      this._skipAfterHours = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  StockDataGenerator.prototype.generatePosition = function (a, b) {\n    if (b === void 0) {\n      b = \"\";\n    }\n\n    var c = StockDataLookup.get(a);\n    var d = intDivide(this.q.next2(1, 10), 100);\n    var e = new StockPosition();\n    e.symbol = c.symbol;\n    e.company = c.company;\n    e.sector = c.sector;\n    e.costPerShare = c.close - c.open * d;\n    e.marketPrice = c.close;\n    e.tradeDate = dateNow();\n    return e;\n  };\n\n  StockDataGenerator.prototype.generateDetails = function () {\n    var e_1, _a;\n\n    var a = new List$1(StockDetails.$, 0);\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(StockDataLookup.b.values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var b = _c.value;\n        var c = intDivide(this.q.next2(10, 30), 100);\n        var d = new StockDetails();\n        d.company = b.company;\n        d.symbol = b.symbol;\n        d.sector = b.sector;\n        d.marketPrice = b.close;\n        d.marketShares = intDivide(b.volume * this.q.next2(15, 20), 1000000);\n        d.annualLow = b.close - b.open * c;\n        d.annualHigh = b.close + b.open * c;\n        a.add(d);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return a.toArray();\n  };\n\n  StockDataGenerator.prototype.generateStockPrices = function (a, b) {\n    if (b === void 0) {\n      b = \"\";\n    }\n\n    var c = dateNow();\n    this.g = dateFromValues(c.getFullYear(), dateGetMonth(c), c.getDate(), 16, 30, 0, 0);\n    this.h = dateAddMonths(this.g, -this.dateRange);\n    var d = Math.ceil(timeSpanTotalMinutes(+this.g - +this.h) / this.dateInterval);\n    var e = d * this.dateInterval;\n    this.s(d + \" steps, \" + e + \" range\");\n\n    if (d > 100000) {\n      d = 100000;\n      e = d * this.dateInterval;\n      this.s(d + \"^steps, \" + e + \" range\");\n    }\n\n    var f = dateAddMinutes(this.g, -e);\n\n    if (this.h.getTime() > f.getTime()) {\n      this.h = f;\n    }\n\n    var g = StockDataLookup.get(a);\n    g.date = this.h;\n    var h = g.sector;\n\n    if (this.priceStart > 0) {\n      g.open = this.priceStart;\n    }\n\n    if (this.volumeStart > 0) {\n      g.volume = this.volumeStart;\n    }\n\n    this.volumeRange = g.volume * 0.05;\n    this.priceRange = g.open * 0.025;\n    this.priceMinimum = g.open - g.open * 0.75;\n    this.priceMaximum = g.open + g.open * 0.75;\n    g.high = g.open + g.open * 0.02;\n    g.low = g.open - g.open * 0.02;\n    g.close = g.open + (this.q.nextDouble() - 0.5) * this.priceRange;\n    var i = new StockPriceHistory();\n    i.symbol = a;\n\n    if (!stringIsNullOrEmpty(b)) {\n      g.company = b;\n      i.company = b;\n    } else if (!stringIsNullOrEmpty(g.company)) {\n      i.company = g.company;\n    }\n\n    do {\n      if (this.skipAfterHours) {\n        if (!this.e(g.date)) {\n          i.add(g);\n        }\n      } else {\n        i.add(g);\n      }\n\n      g = this.generateStockPricePoint(g);\n    } while (g.date.getTime() <= this.g.getTime());\n\n    this.s(\" \" + i.count + \" items\");\n    return i;\n  };\n\n  StockDataGenerator.prototype.e = function (a) {\n    if (a.getDay() == 6) {\n      return true;\n    }\n\n    if (a.getDay() == 0) {\n      return true;\n    }\n\n    var b = timeSpanInit1(9, 30, 0);\n    var c = timeSpanInit1(16, 30, 0);\n    var d = dateGetTimeOfDay(a);\n\n    if (d < b || d > c) {\n      return true;\n    }\n\n    return false;\n  };\n\n  StockDataGenerator.prototype.generateStockPricePoint = function (a) {\n    var _this = this;\n\n    var b = (this.q.nextDouble() - 0.499) * this.priceRange;\n    var c = a.close;\n    var d = a.close + b;\n\n    if (d < this.priceMinimum) {\n      d = this.priceMinimum + b;\n    }\n\n    if (d > this.priceMaximum) {\n      d = this.priceMaximum - b;\n    }\n\n    var e = this.q.nextDouble() * 1.5 * Math.abs(b);\n    var f = this.q.nextDouble() * 1.5 * Math.abs(b);\n\n    if (d > c) {\n      e = d + e;\n      f = c - f;\n    } else {\n      e = c + e;\n      f = d - f;\n    }\n\n    var g = (this.q.nextDouble() - 0.49) * this.volumeRange;\n    var h = truncate(Math.abs(a.volume + g));\n    var i = dateAddMinutes(a.date, this.dateInterval);\n\n    if (i.getTime() > this.g.getTime()) {\n      i = this.g;\n    }\n\n    var j = function () {\n      var $ret = new StockPricePoint();\n      $ret.date = dateAddMinutes(a.date, _this.dateInterval);\n      $ret.symbol = a.symbol;\n      $ret.company = a.company;\n      $ret.sector = a.sector;\n      $ret.close = round10N(d, 2);\n      $ret.open = round10N(c, 2);\n      $ret.high = round10N(e, 2);\n      $ret.low = round10N(f, 2);\n      $ret.volume = h;\n      return $ret;\n    }();\n\n    return j;\n  };\n\n  StockDataGenerator.prototype.s = function (message_) {};\n\n  StockDataGenerator.$t = markType(StockDataGenerator, 'StockDataGenerator');\n  return StockDataGenerator;\n}(Base);\n\nexport { StockDataGenerator };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/StockDataGenerator.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, fromEnum, markType } from \"./type\";\r\nimport { Random } from \"./Random\";\r\nimport { StockPosition } from \"./StockPosition\";\r\nimport { StockPricePoint } from \"./StockPricePoint\";\r\nimport { StockDataLookup } from \"./StockDataLookup\";\r\nimport { StockDetails } from \"./StockDetails\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { StockPriceHistory } from \"./StockPriceHistory\";\r\nimport { intDivide, truncate } from \"./number\";\r\nimport { dateNow, dateFromValues, dateGetMonth, dateAddMonths, dateAddMinutes, dateGetTimeOfDay } from \"./date\";\r\nimport { timeSpanTotalMinutes, timeSpanInit1 } from \"./timespan\";\r\nimport { stringIsNullOrEmpty } from \"./string\";\r\nimport { round10N } from \"./numberExtended\";\r\n/**\r\n * @hidden\r\n */\r\nvar StockDataGenerator = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(StockDataGenerator, _super);\r\n    function StockDataGenerator() {\r\n        var _this = _super.call(this) || this;\r\n        _this._priceStart = 0;\r\n        _this._priceRange = 0;\r\n        _this._priceMinimum = 0;\r\n        _this._priceMaximum = 0;\r\n        _this._volumeStart = 0;\r\n        _this._volumeRange = 0;\r\n        _this._dateRange = 0;\r\n        _this._dateInterval = 0;\r\n        _this._stockInterval = 0;\r\n        _this._skipAfterHours = false;\r\n        _this.g = new Date();\r\n        _this.h = new Date();\r\n        _this.q = new Random(0);\r\n        _this.skipAfterHours = false;\r\n        _this.priceStart = 0;\r\n        _this.priceRange = NaN;\r\n        _this.priceMinimum = NaN;\r\n        _this.priceMaximum = NaN;\r\n        _this.volumeStart = 0;\r\n        _this.volumeRange = NaN;\r\n        _this.dateRange = 12;\r\n        _this.dateInterval = 24 * 60;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StockDataGenerator.prototype, \"priceStart\", {\r\n        get: function () {\r\n            return this._priceStart;\r\n        },\r\n        set: function (a) {\r\n            this._priceStart = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StockDataGenerator.prototype, \"priceRange\", {\r\n        get: function () {\r\n            return this._priceRange;\r\n        },\r\n        set: function (a) {\r\n            this._priceRange = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StockDataGenerator.prototype, \"priceMinimum\", {\r\n        get: function () {\r\n            return this._priceMinimum;\r\n        },\r\n        set: function (a) {\r\n            this._priceMinimum = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StockDataGenerator.prototype, \"priceMaximum\", {\r\n        get: function () {\r\n            return this._priceMaximum;\r\n        },\r\n        set: function (a) {\r\n            this._priceMaximum = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StockDataGenerator.prototype, \"volumeStart\", {\r\n        get: function () {\r\n            return this._volumeStart;\r\n        },\r\n        set: function (a) {\r\n            this._volumeStart = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StockDataGenerator.prototype, \"volumeRange\", {\r\n        get: function () {\r\n            return this._volumeRange;\r\n        },\r\n        set: function (a) {\r\n            this._volumeRange = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StockDataGenerator.prototype, \"dateRange\", {\r\n        get: function () {\r\n            return this._dateRange;\r\n        },\r\n        set: function (a) {\r\n            this._dateRange = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StockDataGenerator.prototype, \"dateInterval\", {\r\n        get: function () {\r\n            return this._dateInterval;\r\n        },\r\n        set: function (a) {\r\n            this._dateInterval = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StockDataGenerator.prototype, \"stockInterval\", {\r\n        get: function () {\r\n            return this._stockInterval;\r\n        },\r\n        set: function (a) {\r\n            this._stockInterval = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StockDataGenerator.prototype, \"skipAfterHours\", {\r\n        get: function () {\r\n            return this._skipAfterHours;\r\n        },\r\n        set: function (a) {\r\n            this._skipAfterHours = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StockDataGenerator.prototype.generatePosition = function (a, b) {\r\n        if (b === void 0) {\r\n            b = \"\";\r\n        }\r\n        var c = StockDataLookup.get(a);\r\n        var d = (intDivide(this.q.next2(1, 10), 100));\r\n        var e = new StockPosition();\r\n        e.symbol = c.symbol;\r\n        e.company = c.company;\r\n        e.sector = c.sector;\r\n        e.costPerShare = c.close - (c.open * d);\r\n        e.marketPrice = c.close;\r\n        e.tradeDate = dateNow();\r\n        return e;\r\n    };\r\n    StockDataGenerator.prototype.generateDetails = function () {\r\n        var e_1, _a;\r\n        var a = new List$1(StockDetails.$, 0);\r\n        try {\r\n            for (var _b = tslib_1.__values(fromEnum(StockDataLookup.b.values)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var b = _c.value;\r\n                var c = (intDivide(this.q.next2(10, 30), 100));\r\n                var d = new StockDetails();\r\n                d.company = b.company;\r\n                d.symbol = b.symbol;\r\n                d.sector = b.sector;\r\n                d.marketPrice = b.close;\r\n                d.marketShares = intDivide((b.volume * this.q.next2(15, 20)), 1000000);\r\n                d.annualLow = b.close - (b.open * c);\r\n                d.annualHigh = b.close + (b.open * c);\r\n                a.add(d);\r\n            }\r\n        }\r\n        catch (e_1_1) {\r\n            e_1 = { error: e_1_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return))\r\n                    _a.call(_b);\r\n            }\r\n            finally {\r\n                if (e_1)\r\n                    throw e_1.error;\r\n            }\r\n        }\r\n        return a.toArray();\r\n    };\r\n    StockDataGenerator.prototype.generateStockPrices = function (a, b) {\r\n        if (b === void 0) {\r\n            b = \"\";\r\n        }\r\n        var c = dateNow();\r\n        this.g = dateFromValues(c.getFullYear(), dateGetMonth(c), c.getDate(), 16, 30, 0, 0);\r\n        this.h = dateAddMonths(this.g, -this.dateRange);\r\n        var d = Math.ceil(timeSpanTotalMinutes((+(this.g) - +(this.h))) / this.dateInterval);\r\n        var e = d * this.dateInterval;\r\n        this.s(d + \" steps, \" + e + \" range\");\r\n        if (d > 100000) {\r\n            d = 100000;\r\n            e = d * this.dateInterval;\r\n            this.s(d + \"^steps, \" + e + \" range\");\r\n        }\r\n        var f = dateAddMinutes(this.g, -e);\r\n        if (this.h.getTime() > f.getTime()) {\r\n            this.h = f;\r\n        }\r\n        var g = StockDataLookup.get(a);\r\n        g.date = this.h;\r\n        var h = g.sector;\r\n        if (this.priceStart > 0) {\r\n            g.open = this.priceStart;\r\n        }\r\n        if (this.volumeStart > 0) {\r\n            g.volume = this.volumeStart;\r\n        }\r\n        this.volumeRange = g.volume * 0.05;\r\n        this.priceRange = g.open * 0.025;\r\n        this.priceMinimum = g.open - (g.open * 0.75);\r\n        this.priceMaximum = g.open + (g.open * 0.75);\r\n        g.high = g.open + (g.open * 0.02);\r\n        g.low = g.open - (g.open * 0.02);\r\n        g.close = g.open + ((this.q.nextDouble() - 0.5) * this.priceRange);\r\n        var i = new StockPriceHistory();\r\n        i.symbol = a;\r\n        if (!stringIsNullOrEmpty(b)) {\r\n            g.company = b;\r\n            i.company = b;\r\n        }\r\n        else if (!stringIsNullOrEmpty(g.company)) {\r\n            i.company = g.company;\r\n        }\r\n        do {\r\n            if (this.skipAfterHours) {\r\n                if (!this.e(g.date)) {\r\n                    i.add(g);\r\n                }\r\n            }\r\n            else {\r\n                i.add(g);\r\n            }\r\n            g = this.generateStockPricePoint(g);\r\n        } while (g.date.getTime() <= this.g.getTime());\r\n        this.s(\" \" + i.count + \" items\");\r\n        return i;\r\n    };\r\n    StockDataGenerator.prototype.e = function (a) {\r\n        if (a.getDay() == 6) {\r\n            return true;\r\n        }\r\n        if (a.getDay() == 0) {\r\n            return true;\r\n        }\r\n        var b = timeSpanInit1(9, 30, 0);\r\n        var c = timeSpanInit1(16, 30, 0);\r\n        var d = dateGetTimeOfDay(a);\r\n        if (d < b || d > c) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    StockDataGenerator.prototype.generateStockPricePoint = function (a) {\r\n        var _this = this;\r\n        var b = (this.q.nextDouble() - 0.499) * this.priceRange;\r\n        var c = a.close;\r\n        var d = a.close + b;\r\n        if (d < this.priceMinimum) {\r\n            d = this.priceMinimum + b;\r\n        }\r\n        if (d > this.priceMaximum) {\r\n            d = this.priceMaximum - b;\r\n        }\r\n        var e = (this.q.nextDouble() * 1.5 * Math.abs(b));\r\n        var f = (this.q.nextDouble() * 1.5 * Math.abs(b));\r\n        if (d > c) {\r\n            e = d + e;\r\n            f = c - f;\r\n        }\r\n        else {\r\n            e = c + e;\r\n            f = d - f;\r\n        }\r\n        var g = (this.q.nextDouble() - 0.49) * this.volumeRange;\r\n        var h = truncate(Math.abs(a.volume + g));\r\n        var i = dateAddMinutes(a.date, this.dateInterval);\r\n        if (i.getTime() > this.g.getTime()) {\r\n            i = this.g;\r\n        }\r\n        var j = ((function () {\r\n            var $ret = new StockPricePoint();\r\n            $ret.date = dateAddMinutes(a.date, _this.dateInterval);\r\n            $ret.symbol = a.symbol;\r\n            $ret.company = a.company;\r\n            $ret.sector = a.sector;\r\n            $ret.close = round10N(d, 2);\r\n            $ret.open = round10N(c, 2);\r\n            $ret.high = round10N(e, 2);\r\n            $ret.low = round10N(f, 2);\r\n            $ret.volume = h;\r\n            return $ret;\r\n        })());\r\n        return j;\r\n    };\r\n    StockDataGenerator.prototype.s = function (message_) {\r\n    };\r\n    StockDataGenerator.$t = markType(StockDataGenerator, 'StockDataGenerator');\r\n    return StockDataGenerator;\r\n}(Base));\r\nexport { StockDataGenerator };\r\n//# sourceMappingURL=StockDataGenerator.js.map\r\n"]},"metadata":{},"sourceType":"module"}