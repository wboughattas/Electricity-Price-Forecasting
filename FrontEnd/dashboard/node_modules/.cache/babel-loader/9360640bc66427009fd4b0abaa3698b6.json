{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { InputChangeEventArgsDescription } from \"./InputChangeEventArgsDescription\";\n/**\r\n * @hidden\r\n */\n\nvar InputChangeEventArgsDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(InputChangeEventArgsDescriptionMetadata, _super);\n\n  function InputChangeEventArgsDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  InputChangeEventArgsDescriptionMetadata.b = function (a) {\n    if (InputChangeEventArgsDescriptionMetadata.a == null) {\n      InputChangeEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      InputChangeEventArgsDescriptionMetadata.c(a, InputChangeEventArgsDescriptionMetadata.a);\n    }\n  };\n\n  InputChangeEventArgsDescriptionMetadata.c = function (a, b) {\n    b.item(\"Value\", \"String\");\n    b.item(\"IsCompositionInProgress\", \"Boolean\");\n  };\n\n  InputChangeEventArgsDescriptionMetadata.d = function (a) {\n    InputChangeEventArgsDescriptionMetadata.b(a);\n    a.n(\"InputChangeEventArgs\", function () {\n      return new InputChangeEventArgsDescription();\n    });\n    a.m(\"InputChangeEventArgs\", InputChangeEventArgsDescriptionMetadata.a);\n  };\n\n  InputChangeEventArgsDescriptionMetadata.$t = markType(InputChangeEventArgsDescriptionMetadata, 'InputChangeEventArgsDescriptionMetadata');\n  InputChangeEventArgsDescriptionMetadata.a = null;\n  return InputChangeEventArgsDescriptionMetadata;\n}(Base);\n\nexport { InputChangeEventArgsDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/InputChangeEventArgsDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,+BAAT,QAAgD,mCAAhD;AAEA;;AAEG;;AACH,IAAA,uCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6D,EAAA,OAAA,CAAA,SAAA,CAAA,uCAAA,EAAA,MAAA;;AAA7D,WAAA,uCAAA,GAAA;;AAkBC;;AAfe,EAAA,uCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,uCAAuC,CAAC,CAAxC,IAA6C,IAAjD,EAAuD;AACtD,MAAA,uCAAuC,CAAC,CAAxC,GAA4C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA5C;AACA,MAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C,EAA6C,uCAAuC,CAAC,CAArF;AACA;AACD,GALc;;AAMR,EAAA,uCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,QAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,yBAAP,EAAkC,SAAlC;AACA,GAHM;;AAIA,EAAA,uCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,sBAAJ,EAA4B,YAAA;AAAM,aAAA,IAAA,+BAAA,EAAA;AAAqC,KAAvE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,sBAAJ,EAA4B,uCAAuC,CAAC,CAApE;AACA,GAJM;;AAZA,EAAA,uCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uCAAD,EAA0C,yCAA1C,CAAnB;AACQ,EAAA,uCAAA,CAAA,CAAA,GAAkC,IAAlC;AAgBhB,SAAA,uCAAA;AAAC,CAlBD,CAA6D,IAA7D,CAAA;;SAAa,uC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { InputChangeEventArgsDescription } from \"./InputChangeEventArgsDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar InputChangeEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(InputChangeEventArgsDescriptionMetadata, _super);\r\n    function InputChangeEventArgsDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InputChangeEventArgsDescriptionMetadata.b = function (a) {\r\n        if (InputChangeEventArgsDescriptionMetadata.a == null) {\r\n            InputChangeEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            InputChangeEventArgsDescriptionMetadata.c(a, InputChangeEventArgsDescriptionMetadata.a);\r\n        }\r\n    };\r\n    InputChangeEventArgsDescriptionMetadata.c = function (a, b) {\r\n        b.item(\"Value\", \"String\");\r\n        b.item(\"IsCompositionInProgress\", \"Boolean\");\r\n    };\r\n    InputChangeEventArgsDescriptionMetadata.d = function (a) {\r\n        InputChangeEventArgsDescriptionMetadata.b(a);\r\n        a.n(\"InputChangeEventArgs\", function () { return new InputChangeEventArgsDescription(); });\r\n        a.m(\"InputChangeEventArgs\", InputChangeEventArgsDescriptionMetadata.a);\r\n    };\r\n    InputChangeEventArgsDescriptionMetadata.$t = markType(InputChangeEventArgsDescriptionMetadata, 'InputChangeEventArgsDescriptionMetadata');\r\n    InputChangeEventArgsDescriptionMetadata.a = null;\r\n    return InputChangeEventArgsDescriptionMetadata;\r\n}(Base));\r\nexport { InputChangeEventArgsDescriptionMetadata };\r\n//# sourceMappingURL=InputChangeEventArgsDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}