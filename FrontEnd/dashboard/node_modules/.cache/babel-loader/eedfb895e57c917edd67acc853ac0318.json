{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { markEnum } from \"./type\";\n/**\n * Enumerates the available property types on a data source schema.\n */\n\nexport var DataSourceSchemaPropertyType = /*@__PURE__*/function (DataSourceSchemaPropertyType) {\n  /**\n   * The property is of type string.\n   */\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"StringValue\"] = 0] = \"StringValue\";\n  /**\n   * The property is of type integer.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"IntValue\"] = 1] = \"IntValue\";\n  /**\n   * The property is of type boolean.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"BooleanValue\"] = 2] = \"BooleanValue\";\n  /**\n   * The property is of type long.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"LongValue\"] = 3] = \"LongValue\";\n  /**\n   * The property if of type short.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"ShortValue\"] = 4] = \"ShortValue\";\n  /**\n   * The property is of type double.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"DoubleValue\"] = 5] = \"DoubleValue\";\n  /**\n   * The property is of type decimal.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"DecimalValue\"] = 6] = \"DecimalValue\";\n  /**\n   * The property is of type single.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"SingleValue\"] = 7] = \"SingleValue\";\n  /**\n   * The property is of type datetime.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"DateTimeValue\"] = 8] = \"DateTimeValue\";\n  /**\n   * The property is of type datetimeoffset.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"DateTimeOffsetValue\"] = 9] = \"DateTimeOffsetValue\";\n  /**\n   * The property is of type byte.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"ByteValue\"] = 10] = \"ByteValue\";\n  /**\n   * The property is of type object.\n   */\n\n  DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"ObjectValue\"] = 11] = \"ObjectValue\";\n  return DataSourceSchemaPropertyType;\n}({});\n/**\n * @hidden\n */\n\nexport var DataSourceSchemaPropertyType_$type = /*@__PURE__*/markEnum('DataSourceSchemaPropertyType', 'StringValue,0|IntValue,1|BooleanValue,2|LongValue,3|ShortValue,4|DoubleValue,5|DecimalValue,6|SingleValue,7|DateTimeValue,8|DateTimeOffsetValue,9|ByteValue,10|ObjectValue,11');","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DataSourceSchemaPropertyType.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;AAEF,SAA0B,QAA1B,QAAgD,QAAhD;AAEA;;AAEG;;AACH,OAAA,IAAY,4BAiDX,GAAA,aAAA,UAAA,4BAAA,EAAA;AAjDD;AACC;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,qBAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,WAAA,CAAA,GAAA,EAAA,CAAA,GAAA,WAAA;AACH;AACA;;;AAEG,EAAA,4BAAA,CAAA,4BAAA,CAAA,aAAA,CAAA,GAAA,EAAA,CAAA,GAAA,aAAA;AACH,SAAA,4BAAA;AACA,CAAA,CAjDW,EAiDX,CAjDD;AAmDA;;AAEG;;AACH,OAAO,IAAI,kCAAkC,GAAG,aAAS,QAAA,CAAA,8BAAA,EAAgC,+KAAhC,CAAlD","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { markEnum } from \"./type\";\n/**\n * Enumerates the available property types on a data source schema.\n */\nexport var DataSourceSchemaPropertyType = /*@__PURE__*/ (function (DataSourceSchemaPropertyType) {\n    /**\n     * The property is of type string.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"StringValue\"] = 0] = \"StringValue\";\n    /**\n     * The property is of type integer.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"IntValue\"] = 1] = \"IntValue\";\n    /**\n     * The property is of type boolean.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"BooleanValue\"] = 2] = \"BooleanValue\";\n    /**\n     * The property is of type long.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"LongValue\"] = 3] = \"LongValue\";\n    /**\n     * The property if of type short.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"ShortValue\"] = 4] = \"ShortValue\";\n    /**\n     * The property is of type double.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"DoubleValue\"] = 5] = \"DoubleValue\";\n    /**\n     * The property is of type decimal.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"DecimalValue\"] = 6] = \"DecimalValue\";\n    /**\n     * The property is of type single.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"SingleValue\"] = 7] = \"SingleValue\";\n    /**\n     * The property is of type datetime.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"DateTimeValue\"] = 8] = \"DateTimeValue\";\n    /**\n     * The property is of type datetimeoffset.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"DateTimeOffsetValue\"] = 9] = \"DateTimeOffsetValue\";\n    /**\n     * The property is of type byte.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"ByteValue\"] = 10] = \"ByteValue\";\n    /**\n     * The property is of type object.\n     */\n    DataSourceSchemaPropertyType[DataSourceSchemaPropertyType[\"ObjectValue\"] = 11] = \"ObjectValue\";\n    return DataSourceSchemaPropertyType;\n})({});\n/**\n * @hidden\n */\nexport var DataSourceSchemaPropertyType_$type = /*@__PURE__*/ markEnum('DataSourceSchemaPropertyType', 'StringValue,0|IntValue,1|BooleanValue,2|LongValue,3|ShortValue,4|DoubleValue,5|DecimalValue,6|SingleValue,7|DateTimeValue,8|DateTimeOffsetValue,9|ByteValue,10|ObjectValue,11');\n//# sourceMappingURL=DataSourceSchemaPropertyType.js.map\n"]},"metadata":{},"sourceType":"module"}