{"ast":null,"code":"/**\r\n * Event args for KeyUp and KeyDown events.\r\n*/\nvar IgrKeyEventArgs =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrKeyEventArgs() {}\n\n  Object.defineProperty(IgrKeyEventArgs.prototype, \"i\", {\n    /**\r\n     * @hidden\r\n     */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrKeyEventArgs.prototype.onImplementationCreated = function () {};\n\n  IgrKeyEventArgs.prototype._provideImplementation = function (i) {\n    this._implementation = i;\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  };\n\n  Object.defineProperty(IgrKeyEventArgs.prototype, \"alt\", {\n    /**\r\n     * Gets a value indicating whether the ALT key was pressed.\r\n    */\n    get: function () {\n      return this.i.alt;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrKeyEventArgs.prototype, \"ctrl\", {\n    /**\r\n     * Gets a value indicating whether the CTRL key was pressed.\r\n    */\n    get: function () {\n      return this.i.ctrl;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrKeyEventArgs.prototype, \"keyCode\", {\n    /**\r\n     * Gets the keyboard code for a KeyDown or KeyUp event.\r\n    */\n    get: function () {\n      return this.i.keyCode;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrKeyEventArgs.prototype, \"modifiers\", {\n    /**\r\n     * Gets the modifier flags for a KeyDown or KeyUp event.\r\n     * The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.\r\n    */\n    get: function () {\n      return this.i.modifiers;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrKeyEventArgs.prototype, \"shift\", {\n    /**\r\n     * Gets a value indicating whether the SHIFT key was pressed.\r\n    */\n    get: function () {\n      return this.i.shift;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be.\r\n  \r\n  */\n\n  IgrKeyEventArgs.prototype.preventDefault = function () {\n    this.i.preventDefault();\n  };\n  /**\r\n   * Prevent the event from bubbling up.\r\n  \r\n  */\n\n\n  IgrKeyEventArgs.prototype.stopPropagation = function () {\n    this.i.stopPropagation();\n  };\n\n  return IgrKeyEventArgs;\n}();\n\nexport { IgrKeyEventArgs };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/igr-key-event-args.ts"],"names":[],"mappings":"AASA;;AAEE;AACF,IAAA,eAAA;AAAA;;AAAA;AAAA,YAAA;AAYC,WAAA,eAAA,GAAA,CACC;;AAPD,EAAA,MAAA,CAAA,cAAA,CAAW,eAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHgB;;AAEG;SAC/B,YAAA;AACC,aAAO,KAAK,eAAZ;AACA,KAFW;oBAAA;;AAAA,GAAZ;;AAGQ,EAAA,eAAA,CAAA,SAAA,CAAA,uBAAA,GAAR,YAAA,CAEC,CAFO;;AAKE,EAAA,eAAA,CAAA,SAAA,CAAA,sBAAA,GAAV,UAAiC,CAAjC,EAAuC;AACnC,SAAK,eAAL,GAAuB,CAAvB;AACC,SAAK,eAAL,CAA6B,cAA7B,GAA8C,IAA9C;AACL,SAAK,uBAAL;AACC,GAJS;;AAQV,EAAA,MAAA,CAAA,cAAA,CAAI,eAAA,CAAA,SAAJ,EAAI,KAAJ,EAAO;AAHP;;AAEE;SACF,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,GAAf;AACA,KAFM;oBAAA;;AAAA,GAAP;AAMA,EAAA,MAAA,CAAA,cAAA,CAAI,eAAA,CAAA,SAAJ,EAAI,MAAJ,EAAQ;AAHR;;AAEE;SACF,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,IAAf;AACA,KAFO;oBAAA;;AAAA,GAAR;AAMA,EAAA,MAAA,CAAA,cAAA,CAAI,eAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;AAHX;;AAEE;SACF,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,OAAf;AACA,KAFU;oBAAA;;AAAA,GAAX;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,eAAA,CAAA,SAAJ,EAAI,WAAJ,EAAa;AAJb;;;AAGE;SACF,YAAA;AACC,aAAO,KAAK,CAAL,CAAO,SAAd;AACA,KAFY;oBAAA;;AAAA,GAAb;AAMA,EAAA,MAAA,CAAA,cAAA,CAAI,eAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;AAHT;;AAEE;SACF,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,KAAf;AACA,KAFQ;oBAAA;;AAAA,GAAT;AAGA;;;AAGE;;AACK,EAAA,eAAA,CAAA,SAAA,CAAA,cAAA,GAAP,YAAA;AACC,SAAK,CAAL,CAAO,cAAP;AACA,GAFM;AAGP;;;AAGE;;;AACK,EAAA,eAAA,CAAA,SAAA,CAAA,eAAA,GAAP,YAAA;AACC,SAAK,CAAL,CAAO,eAAP;AACA,GAFM;;AAGR,SAAA,eAAA;AAAC,CAhED,EAAA","sourceRoot":"","sourcesContent":["/**\r\n * Event args for KeyUp and KeyDown events.\r\n*/\r\nvar IgrKeyEventArgs = /** @class */ /*@__PURE__*/ (function () {\r\n    function IgrKeyEventArgs() {\r\n    }\r\n    Object.defineProperty(IgrKeyEventArgs.prototype, \"i\", {\r\n        /**\r\n         * @hidden\r\n         */\r\n        get: function () {\r\n            return this._implementation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IgrKeyEventArgs.prototype.onImplementationCreated = function () {\r\n    };\r\n    IgrKeyEventArgs.prototype._provideImplementation = function (i) {\r\n        this._implementation = i;\r\n        this._implementation.externalObject = this;\r\n        this.onImplementationCreated();\r\n    };\r\n    Object.defineProperty(IgrKeyEventArgs.prototype, \"alt\", {\r\n        /**\r\n         * Gets a value indicating whether the ALT key was pressed.\r\n        */\r\n        get: function () {\r\n            return this.i.alt;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrKeyEventArgs.prototype, \"ctrl\", {\r\n        /**\r\n         * Gets a value indicating whether the CTRL key was pressed.\r\n        */\r\n        get: function () {\r\n            return this.i.ctrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrKeyEventArgs.prototype, \"keyCode\", {\r\n        /**\r\n         * Gets the keyboard code for a KeyDown or KeyUp event.\r\n        */\r\n        get: function () {\r\n            return this.i.keyCode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrKeyEventArgs.prototype, \"modifiers\", {\r\n        /**\r\n         * Gets the modifier flags for a KeyDown or KeyUp event.\r\n         * The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.\r\n        */\r\n        get: function () {\r\n            return this.i.modifiers;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IgrKeyEventArgs.prototype, \"shift\", {\r\n        /**\r\n         * Gets a value indicating whether the SHIFT key was pressed.\r\n        */\r\n        get: function () {\r\n            return this.i.shift;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be.\r\n    \r\n    */\r\n    IgrKeyEventArgs.prototype.preventDefault = function () {\r\n        this.i.preventDefault();\r\n    };\r\n    /**\r\n     * Prevent the event from bubbling up.\r\n    \r\n    */\r\n    IgrKeyEventArgs.prototype.stopPropagation = function () {\r\n        this.i.stopPropagation();\r\n    };\r\n    return IgrKeyEventArgs;\r\n}());\r\nexport { IgrKeyEventArgs };\r\n//# sourceMappingURL=igr-key-event-args.js.map\r\n"]},"metadata":{},"sourceType":"module"}