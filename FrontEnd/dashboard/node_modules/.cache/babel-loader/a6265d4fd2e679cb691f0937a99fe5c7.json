{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, BaseError, EnumUtil, String_$type, enumGetBox, fromEnum, Point_$type, callStaticConstructors, markType, PointUtil } from \"./type\";\nimport { Header } from \"./Header\";\nimport { XBaseField } from \"./XBaseField\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { XBaseDataType_$type } from \"./XBaseDataType\";\nimport { Rect } from \"./Rect\";\nimport { Encoding } from \"./Encoding\";\nimport { List$1 } from \"./List$1\";\nimport { ShapefileRecord } from \"./ShapefileRecord\";\nimport { ShapeType_$type } from \"./ShapeType\";\nimport { Size } from \"./Size\";\nimport { u32BitwiseAnd } from \"./numberExtended\";\nimport { stringReplace } from \"./string\";\nimport { isNaN_ } from \"./number\";\n/**\r\n * @hidden\r\n */\n\nvar ShapeFileUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ShapeFileUtil, _super);\n\n  function ShapeFileUtil() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ShapeFileUtil.a = function (a, b) {\n    if (ShapeFileUtil.j == null) {\n      ShapeFileUtil.m();\n    }\n\n    var c = new Header();\n    var d = ShapeFileUtil.k(a.readInt32());\n\n    if (d != 9994) {\n      throw new BaseError(1, \"Corrupt Shp file - incorrect file code\");\n    }\n\n    a.readInt32();\n    a.readInt32();\n    a.readInt32();\n    a.readInt32();\n    a.readInt32();\n    ShapeFileUtil.k(a.readInt32());\n    a.readInt32();\n    c.a = a.readInt32();\n    var e = PointUtil.create();\n    var f = PointUtil.create();\n    e.x = a.readDouble();\n    e.y = a.readDouble();\n    f.x = a.readDouble();\n    f.y = a.readDouble();\n    a.readDouble();\n    a.readDouble();\n    a.readDouble();\n    a.readDouble();\n    c.e = new Rect(0, e.x, e.y, f.x - e.x, f.y - e.y);\n\n    if (b != null) {\n      var g = b.readByte();\n\n      if (g != 3) {\n        throw new BaseError(1, \"Corrupt Dbf file - wrong version number\");\n      }\n\n      b.readByte();\n      b.readByte();\n      b.readByte();\n      b.readUInt32();\n      b.readUInt16();\n      var h = b.readUInt16();\n      b.readBytes(2);\n      b.readBytes(1);\n      b.readBytes(1);\n      b.readBytes(4);\n      b.readBytes(8);\n      b.readBytes(1);\n      b.readBytes(1);\n      b.readBytes(2);\n      var i = 0;\n\n      while (i < h - 1) {\n        var j = new XBaseField();\n        j.c = stringReplace(Encoding.uTF8.getString1(b.readBytes(11), 0, 10), \"\\0\", \"\");\n        var k = Encoding.uTF8.getString1(b.readBytes(1), 0, 1).charAt(0);\n        j.a = ShapeFileUtil.j.item(k);\n        b.readBytes(4);\n        j.b = b.readByte();\n        b.readBytes(15);\n        c.b.add(j);\n        i += j.b;\n      }\n\n      if (b.readByte() != 13) {\n        throw new BaseError(1, \"Corrupt Dbf file - Missing field descriptor array terminator\");\n      }\n    }\n\n    return c;\n  };\n\n  ShapeFileUtil.e = function (a, b, c) {\n    var e_1, _a;\n\n    var d = ShapeFileUtil.k(b.readInt32());\n    var e = ShapeFileUtil.k(b.readInt32());\n    var f = b.readInt32();\n    var g = null;\n\n    switch (f) {\n      case 0:\n        break;\n\n      case 1:\n        g = ShapeFileUtil.i(b);\n        break;\n\n      case 3:\n        g = ShapeFileUtil.b(b);\n        break;\n\n      case 5:\n        g = ShapeFileUtil.f(b);\n        break;\n\n      case 8:\n        break;\n\n      case 11:\n        break;\n\n      case 13:\n        g = ShapeFileUtil.d(b);\n        break;\n\n      case 15:\n        g = ShapeFileUtil.h(b);\n        break;\n\n      case 18:\n        break;\n\n      case 21:\n        break;\n\n      case 23:\n        break;\n\n      case 25:\n        break;\n\n      case 28:\n        break;\n\n      case 31:\n        break;\n\n      default:\n        break;\n    }\n\n    if (g == null) {\n      throw new BaseError(1, \"Corrupt Shp file - failed to read \" + EnumUtil.getName(ShapeType_$type, f));\n    }\n\n    g.shapeType = f;\n\n    if (c != null) {\n      c.readBytes(1);\n      g.fields = new Dictionary$2(String_$type, Base.$, 0);\n\n      try {\n        for (var _b = tslib_1.__values(fromEnum(a.b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var h = _c.value;\n          g.fieldsNames.add(h.c);\n          var i = c.readBytes(h.b);\n          var j = Encoding.uTF8.getString1(i, 0, h.b);\n\n          switch (h.a) {\n            case 1:\n              g.fieldsTypes.add(\"double\");\n              var k = parseFloat(j);\n\n              if (!isNaN_(k)) {\n                g.fields.addItem(h.c, k);\n                ShapeFileUtil.l(g, h.c, k);\n              }\n\n              break;\n\n            case 5:\n              g.fieldsTypes.add(\"float\");\n              var l = parseFloat(j);\n\n              if (!isNaN_(l)) {\n                g.fields.addItem(h.c, l);\n                ShapeFileUtil.l(g, h.c, l);\n              }\n\n              break;\n\n            case 0:\n              g.fieldsTypes.add(\"string\");\n              var m = j.trim();\n              g.fields.addItem(h.c, m);\n              ShapeFileUtil.l(g, h.c, m);\n              break;\n\n            case 3:\n              g.fieldsTypes.add(\"date\");\n              var str_ = j;\n              var n = Date.parse(str_);\n              g.fields.addItem(h.c, n);\n              ShapeFileUtil.l(g, h.c, n);\n              break;\n\n            default:\n              throw new BaseError(1, \"Unrecognized field type: \" + enumGetBox(XBaseDataType_$type, h.a));\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    return g;\n  };\n\n  ShapeFileUtil.l = function (row_, property_, val_) {\n    if (!row_.fieldValues) {\n      row_.fieldValues = {};\n    }\n\n    ;\n    row_.fieldValues[property_] = val_;\n  };\n\n  ShapeFileUtil.k = function (a) {\n    return (a & 255) << 24 | (a & 65280) << 8 | (a & 16711680) >> 8 | u32BitwiseAnd(a, 4278190080) >> 24;\n  };\n\n  ShapeFileUtil.i = function (a) {\n    var b = function () {\n      var $ret = PointUtil.create();\n      $ret.x = a.readDouble();\n      $ret.y = a.readDouble();\n      return $ret;\n    }();\n\n    return function () {\n      var $ret = new ShapefileRecord();\n      $ret.bounds = new Rect(3, b, Size.empty);\n      $ret.points = new List$1(List$1.$.specialize(Point_$type), 1, [new List$1(Point_$type, 1, [b])]);\n      return $ret;\n    }();\n  };\n\n  ShapeFileUtil.d = function (a) {\n    var b, c;\n\n    var d = function () {\n      var e = ShapeFileUtil.c(a, b, c);\n      b = e.p1;\n      c = e.p2;\n      return e.ret;\n    }();\n\n    a.readDouble();\n    a.readDouble();\n\n    for (var e = 0; e < c; e++) {\n      a.readDouble();\n    }\n\n    a.readDouble();\n    a.readDouble();\n\n    for (var f = 0; f < c; f++) {\n      a.readDouble();\n    }\n\n    return d;\n  };\n\n  ShapeFileUtil.c = function (a, b, c) {\n    var d = PointUtil.create();\n\n    var e = function () {\n      var $ret = PointUtil.create();\n      $ret.x = a.readDouble();\n      $ret.y = a.readDouble();\n      return $ret;\n    }();\n\n    var f = function () {\n      var $ret = PointUtil.create();\n      $ret.x = a.readDouble();\n      $ret.y = a.readDouble();\n      return $ret;\n    }();\n\n    var g = new Rect(0, e.x, e.y, f.x - e.x, f.y - e.y);\n    b = a.readInt32();\n    c = a.readInt32();\n    var h = new Array(b);\n\n    for (var i = 0; i < b; ++i) {\n      h[i] = a.readInt32();\n    }\n\n    var j = new List$1(List$1.$.specialize(Point_$type), 0);\n\n    for (var k = 0; k < b; ++k) {\n      var l = (k < b - 1 ? h[k + 1] : c) - h[k];\n      var m = new List$1(Point_$type, 2, l - 1);\n\n      for (var n = 0; n < l; ++n) {\n        d = PointUtil.create();\n        d.x = a.readDouble();\n        d.y = a.readDouble();\n        m.add(d);\n      }\n\n      if (m.count > 0) {\n        j.add(m);\n      }\n    }\n\n    return {\n      ret: function () {\n        var $ret = new ShapefileRecord();\n        $ret.bounds = g;\n        $ret.points = j;\n        return $ret;\n      }(),\n      p1: b,\n      p2: c\n    };\n  };\n\n  ShapeFileUtil.b = function (a) {\n    var b, c;\n    return function () {\n      var d = ShapeFileUtil.c(a, b, c);\n      b = d.p1;\n      c = d.p2;\n      return d.ret;\n    }();\n  };\n\n  ShapeFileUtil.h = function (a) {\n    var b, c;\n\n    var d = function () {\n      var e = ShapeFileUtil.g(a, b, c);\n      b = e.p1;\n      c = e.p2;\n      return e.ret;\n    }();\n\n    a.readDouble();\n    a.readDouble();\n\n    for (var e = 0; e < c; e++) {\n      a.readDouble();\n    }\n\n    a.readDouble();\n    a.readDouble();\n\n    for (var f = 0; f < c; f++) {\n      a.readDouble();\n    }\n\n    return d;\n  };\n\n  ShapeFileUtil.f = function (a) {\n    var b, c;\n    return function () {\n      var d = ShapeFileUtil.g(a, b, c);\n      b = d.p1;\n      c = d.p2;\n      return d.ret;\n    }();\n  };\n\n  ShapeFileUtil.g = function (a, b, c) {\n    var d = function () {\n      var $ret = PointUtil.create();\n      $ret.x = a.readDouble();\n      $ret.y = a.readDouble();\n      return $ret;\n    }();\n\n    var e = function () {\n      var $ret = PointUtil.create();\n      $ret.x = a.readDouble();\n      $ret.y = a.readDouble();\n      return $ret;\n    }();\n\n    var f = new Rect(0, d.x, d.y, e.x - d.x, e.y - d.y);\n    var g = PointUtil.create();\n    b = a.readInt32();\n    c = a.readInt32();\n    var h = new Array(b);\n\n    for (var i = 0; i < b; ++i) {\n      h[i] = a.readInt32();\n    }\n\n    var j = new List$1(List$1.$.specialize(Point_$type), 0);\n\n    for (var k = 0; k < b; ++k) {\n      var l = (k < b - 1 ? h[k + 1] : c) - h[k];\n      var m = new List$1(Point_$type, 2, l);\n      g = PointUtil.create();\n      g.x = a.readDouble();\n      g.y = a.readDouble();\n\n      for (var n = 1; n < l; ++n) {\n        g = PointUtil.create();\n        g.x = a.readDouble();\n        g.y = a.readDouble();\n        m.add(g);\n      }\n\n      if (m.count > 1) {\n        j.add(m);\n      }\n    }\n\n    return {\n      ret: function () {\n        var $ret = new ShapefileRecord();\n        $ret.bounds = f;\n        $ret.points = j;\n        return $ret;\n      }(),\n      p1: b,\n      p2: c\n    };\n  };\n\n  ShapeFileUtil.m = function () {\n    ShapeFileUtil.j = new Dictionary$2(String_$type, XBaseDataType_$type, 0);\n    ShapeFileUtil.j.item('C', 0);\n    ShapeFileUtil.j.item('N', 1);\n    ShapeFileUtil.j.item('L', 2);\n    ShapeFileUtil.j.item('D', 3);\n    ShapeFileUtil.j.item('M', 4);\n    ShapeFileUtil.j.item('F', 5);\n    ShapeFileUtil.j.item('B', 6);\n    ShapeFileUtil.j.item('G', 7);\n    ShapeFileUtil.j.item('P', 8);\n    ShapeFileUtil.j.item('Y', 9);\n    ShapeFileUtil.j.item('T', 10);\n    ShapeFileUtil.j.item('I', 11);\n    ShapeFileUtil.j.item('V', 12);\n    ShapeFileUtil.j.item('X', 13);\n    ShapeFileUtil.j.item('@', 14);\n    ShapeFileUtil.j.item('O', 15);\n    ShapeFileUtil.j.item('+', 16);\n  };\n\n  ShapeFileUtil.staticInit = function () {\n    ShapeFileUtil.m();\n  };\n\n  ShapeFileUtil.$t = markType(ShapeFileUtil, 'ShapeFileUtil');\n  ShapeFileUtil.j = null;\n  return ShapeFileUtil;\n}(Base);\n\nexport { ShapeFileUtil };\n\n(function (v) {\n  callStaticConstructors();\n})(true);","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ShapeFileUtil.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, BaseError, EnumUtil, String_$type, enumGetBox, fromEnum, Point_$type, callStaticConstructors, markType, PointUtil } from \"./type\";\r\nimport { Header } from \"./Header\";\r\nimport { XBaseField } from \"./XBaseField\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { XBaseDataType_$type } from \"./XBaseDataType\";\r\nimport { Rect } from \"./Rect\";\r\nimport { Encoding } from \"./Encoding\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { ShapefileRecord } from \"./ShapefileRecord\";\r\nimport { ShapeType_$type } from \"./ShapeType\";\r\nimport { Size } from \"./Size\";\r\nimport { u32BitwiseAnd } from \"./numberExtended\";\r\nimport { stringReplace } from \"./string\";\r\nimport { isNaN_ } from \"./number\";\r\n/**\r\n * @hidden\r\n */\r\nvar ShapeFileUtil = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(ShapeFileUtil, _super);\r\n    function ShapeFileUtil() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ShapeFileUtil.a = function (a, b) {\r\n        if (ShapeFileUtil.j == null) {\r\n            ShapeFileUtil.m();\r\n        }\r\n        var c = new Header();\r\n        var d = ShapeFileUtil.k(a.readInt32());\r\n        if (d != 9994) {\r\n            throw new BaseError(1, \"Corrupt Shp file - incorrect file code\");\r\n        }\r\n        a.readInt32();\r\n        a.readInt32();\r\n        a.readInt32();\r\n        a.readInt32();\r\n        a.readInt32();\r\n        ShapeFileUtil.k(a.readInt32());\r\n        a.readInt32();\r\n        c.a = a.readInt32();\r\n        var e = PointUtil.create();\r\n        var f = PointUtil.create();\r\n        e.x = a.readDouble();\r\n        e.y = a.readDouble();\r\n        f.x = a.readDouble();\r\n        f.y = a.readDouble();\r\n        a.readDouble();\r\n        a.readDouble();\r\n        a.readDouble();\r\n        a.readDouble();\r\n        c.e = new Rect(0, e.x, e.y, f.x - e.x, f.y - e.y);\r\n        if (b != null) {\r\n            var g = b.readByte();\r\n            if (g != 3) {\r\n                throw new BaseError(1, \"Corrupt Dbf file - wrong version number\");\r\n            }\r\n            b.readByte();\r\n            b.readByte();\r\n            b.readByte();\r\n            b.readUInt32();\r\n            b.readUInt16();\r\n            var h = b.readUInt16();\r\n            b.readBytes(2);\r\n            b.readBytes(1);\r\n            b.readBytes(1);\r\n            b.readBytes(4);\r\n            b.readBytes(8);\r\n            b.readBytes(1);\r\n            b.readBytes(1);\r\n            b.readBytes(2);\r\n            var i = 0;\r\n            while (i < h - 1) {\r\n                var j = new XBaseField();\r\n                j.c = stringReplace(Encoding.uTF8.getString1(b.readBytes(11), 0, 10), \"\\0\", \"\");\r\n                var k = Encoding.uTF8.getString1(b.readBytes(1), 0, 1).charAt(0);\r\n                j.a = ShapeFileUtil.j.item(k);\r\n                b.readBytes(4);\r\n                j.b = b.readByte();\r\n                b.readBytes(15);\r\n                c.b.add(j);\r\n                i += j.b;\r\n            }\r\n            if (b.readByte() != 13) {\r\n                throw new BaseError(1, \"Corrupt Dbf file - Missing field descriptor array terminator\");\r\n            }\r\n        }\r\n        return c;\r\n    };\r\n    ShapeFileUtil.e = function (a, b, c) {\r\n        var e_1, _a;\r\n        var d = ShapeFileUtil.k(b.readInt32());\r\n        var e = ShapeFileUtil.k(b.readInt32());\r\n        var f = b.readInt32();\r\n        var g = null;\r\n        switch (f) {\r\n            case 0: break;\r\n            case 1:\r\n                g = ShapeFileUtil.i(b);\r\n                break;\r\n            case 3:\r\n                g = ShapeFileUtil.b(b);\r\n                break;\r\n            case 5:\r\n                g = ShapeFileUtil.f(b);\r\n                break;\r\n            case 8: break;\r\n            case 11: break;\r\n            case 13:\r\n                g = ShapeFileUtil.d(b);\r\n                break;\r\n            case 15:\r\n                g = ShapeFileUtil.h(b);\r\n                break;\r\n            case 18: break;\r\n            case 21: break;\r\n            case 23: break;\r\n            case 25: break;\r\n            case 28: break;\r\n            case 31: break;\r\n            default: break;\r\n        }\r\n        if (g == null) {\r\n            throw new BaseError(1, \"Corrupt Shp file - failed to read \" + EnumUtil.getName(ShapeType_$type, f));\r\n        }\r\n        g.shapeType = f;\r\n        if (c != null) {\r\n            c.readBytes(1);\r\n            g.fields = new Dictionary$2(String_$type, Base.$, 0);\r\n            try {\r\n                for (var _b = tslib_1.__values(fromEnum(a.b)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var h = _c.value;\r\n                    g.fieldsNames.add(h.c);\r\n                    var i = c.readBytes(h.b);\r\n                    var j = Encoding.uTF8.getString1(i, 0, h.b);\r\n                    switch (h.a) {\r\n                        case 1:\r\n                            g.fieldsTypes.add(\"double\");\r\n                            var k = parseFloat(j);\r\n                            if (!isNaN_(k)) {\r\n                                g.fields.addItem(h.c, k);\r\n                                ShapeFileUtil.l(g, h.c, k);\r\n                            }\r\n                            break;\r\n                        case 5:\r\n                            g.fieldsTypes.add(\"float\");\r\n                            var l = parseFloat(j);\r\n                            if (!isNaN_(l)) {\r\n                                g.fields.addItem(h.c, l);\r\n                                ShapeFileUtil.l(g, h.c, l);\r\n                            }\r\n                            break;\r\n                        case 0:\r\n                            g.fieldsTypes.add(\"string\");\r\n                            var m = j.trim();\r\n                            g.fields.addItem(h.c, m);\r\n                            ShapeFileUtil.l(g, h.c, m);\r\n                            break;\r\n                        case 3:\r\n                            g.fieldsTypes.add(\"date\");\r\n                            var str_ = j;\r\n                            var n = Date.parse(str_);\r\n                            g.fields.addItem(h.c, n);\r\n                            ShapeFileUtil.l(g, h.c, n);\r\n                            break;\r\n                        default: throw new BaseError(1, \"Unrecognized field type: \" + enumGetBox(XBaseDataType_$type, h.a));\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) {\r\n                e_1 = { error: e_1_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return))\r\n                        _a.call(_b);\r\n                }\r\n                finally {\r\n                    if (e_1)\r\n                        throw e_1.error;\r\n                }\r\n            }\r\n        }\r\n        return g;\r\n    };\r\n    ShapeFileUtil.l = function (row_, property_, val_) {\r\n        if (!row_.fieldValues) {\r\n            row_.fieldValues = {};\r\n        }\r\n        ;\r\n        row_.fieldValues[property_] = val_;\r\n    };\r\n    ShapeFileUtil.k = function (a) {\r\n        return (((a & 255) << 24) | ((a & 65280) << 8) | ((a & 16711680) >> 8) | ((u32BitwiseAnd(a, 4278190080)) >> 24));\r\n    };\r\n    ShapeFileUtil.i = function (a) {\r\n        var b = ((function () {\r\n            var $ret = PointUtil.create();\r\n            $ret.x = a.readDouble();\r\n            $ret.y = a.readDouble();\r\n            return $ret;\r\n        })());\r\n        return ((function () {\r\n            var $ret = new ShapefileRecord();\r\n            $ret.bounds = new Rect(3, b, Size.empty);\r\n            $ret.points = new List$1(List$1.$.specialize(Point_$type), 1, [new List$1(Point_$type, 1, [b])]);\r\n            return $ret;\r\n        })());\r\n    };\r\n    ShapeFileUtil.d = function (a) {\r\n        var b, c;\r\n        var d = ((function () { var e = ShapeFileUtil.c(a, b, c); b = e.p1; c = e.p2; return e.ret; })());\r\n        a.readDouble();\r\n        a.readDouble();\r\n        for (var e = 0; e < c; e++) {\r\n            a.readDouble();\r\n        }\r\n        a.readDouble();\r\n        a.readDouble();\r\n        for (var f = 0; f < c; f++) {\r\n            a.readDouble();\r\n        }\r\n        return d;\r\n    };\r\n    ShapeFileUtil.c = function (a, b, c) {\r\n        var d = PointUtil.create();\r\n        var e = ((function () {\r\n            var $ret = PointUtil.create();\r\n            $ret.x = a.readDouble();\r\n            $ret.y = a.readDouble();\r\n            return $ret;\r\n        })());\r\n        var f = ((function () {\r\n            var $ret = PointUtil.create();\r\n            $ret.x = a.readDouble();\r\n            $ret.y = a.readDouble();\r\n            return $ret;\r\n        })());\r\n        var g = new Rect(0, e.x, e.y, f.x - e.x, f.y - e.y);\r\n        b = a.readInt32();\r\n        c = a.readInt32();\r\n        var h = new Array(b);\r\n        for (var i = 0; i < b; ++i) {\r\n            h[i] = a.readInt32();\r\n        }\r\n        var j = new List$1(List$1.$.specialize(Point_$type), 0);\r\n        for (var k = 0; k < b; ++k) {\r\n            var l = (k < b - 1 ? h[k + 1] : c) - h[k];\r\n            var m = new List$1(Point_$type, 2, l - 1);\r\n            for (var n = 0; n < l; ++n) {\r\n                d = PointUtil.create();\r\n                d.x = a.readDouble();\r\n                d.y = a.readDouble();\r\n                m.add(d);\r\n            }\r\n            if (m.count > 0) {\r\n                j.add(m);\r\n            }\r\n        }\r\n        return {\r\n            ret: ((function () {\r\n                var $ret = new ShapefileRecord();\r\n                $ret.bounds = g;\r\n                $ret.points = j;\r\n                return $ret;\r\n            })()),\r\n            p1: b,\r\n            p2: c\r\n        };\r\n    };\r\n    ShapeFileUtil.b = function (a) {\r\n        var b, c;\r\n        return ((function () { var d = ShapeFileUtil.c(a, b, c); b = d.p1; c = d.p2; return d.ret; })());\r\n    };\r\n    ShapeFileUtil.h = function (a) {\r\n        var b, c;\r\n        var d = ((function () { var e = ShapeFileUtil.g(a, b, c); b = e.p1; c = e.p2; return e.ret; })());\r\n        a.readDouble();\r\n        a.readDouble();\r\n        for (var e = 0; e < c; e++) {\r\n            a.readDouble();\r\n        }\r\n        a.readDouble();\r\n        a.readDouble();\r\n        for (var f = 0; f < c; f++) {\r\n            a.readDouble();\r\n        }\r\n        return d;\r\n    };\r\n    ShapeFileUtil.f = function (a) {\r\n        var b, c;\r\n        return ((function () { var d = ShapeFileUtil.g(a, b, c); b = d.p1; c = d.p2; return d.ret; })());\r\n    };\r\n    ShapeFileUtil.g = function (a, b, c) {\r\n        var d = ((function () {\r\n            var $ret = PointUtil.create();\r\n            $ret.x = a.readDouble();\r\n            $ret.y = a.readDouble();\r\n            return $ret;\r\n        })());\r\n        var e = ((function () {\r\n            var $ret = PointUtil.create();\r\n            $ret.x = a.readDouble();\r\n            $ret.y = a.readDouble();\r\n            return $ret;\r\n        })());\r\n        var f = new Rect(0, d.x, d.y, e.x - d.x, e.y - d.y);\r\n        var g = PointUtil.create();\r\n        b = a.readInt32();\r\n        c = a.readInt32();\r\n        var h = new Array(b);\r\n        for (var i = 0; i < b; ++i) {\r\n            h[i] = a.readInt32();\r\n        }\r\n        var j = new List$1(List$1.$.specialize(Point_$type), 0);\r\n        for (var k = 0; k < b; ++k) {\r\n            var l = (k < b - 1 ? h[k + 1] : c) - h[k];\r\n            var m = new List$1(Point_$type, 2, l);\r\n            g = PointUtil.create();\r\n            g.x = a.readDouble();\r\n            g.y = a.readDouble();\r\n            for (var n = 1; n < l; ++n) {\r\n                g = PointUtil.create();\r\n                g.x = a.readDouble();\r\n                g.y = a.readDouble();\r\n                m.add(g);\r\n            }\r\n            if (m.count > 1) {\r\n                j.add(m);\r\n            }\r\n        }\r\n        return {\r\n            ret: ((function () {\r\n                var $ret = new ShapefileRecord();\r\n                $ret.bounds = f;\r\n                $ret.points = j;\r\n                return $ret;\r\n            })()),\r\n            p1: b,\r\n            p2: c\r\n        };\r\n    };\r\n    ShapeFileUtil.m = function () {\r\n        ShapeFileUtil.j = new Dictionary$2(String_$type, XBaseDataType_$type, 0);\r\n        ShapeFileUtil.j.item('C', 0);\r\n        ShapeFileUtil.j.item('N', 1);\r\n        ShapeFileUtil.j.item('L', 2);\r\n        ShapeFileUtil.j.item('D', 3);\r\n        ShapeFileUtil.j.item('M', 4);\r\n        ShapeFileUtil.j.item('F', 5);\r\n        ShapeFileUtil.j.item('B', 6);\r\n        ShapeFileUtil.j.item('G', 7);\r\n        ShapeFileUtil.j.item('P', 8);\r\n        ShapeFileUtil.j.item('Y', 9);\r\n        ShapeFileUtil.j.item('T', 10);\r\n        ShapeFileUtil.j.item('I', 11);\r\n        ShapeFileUtil.j.item('V', 12);\r\n        ShapeFileUtil.j.item('X', 13);\r\n        ShapeFileUtil.j.item('@', 14);\r\n        ShapeFileUtil.j.item('O', 15);\r\n        ShapeFileUtil.j.item('+', 16);\r\n    };\r\n    ShapeFileUtil.staticInit = function () {\r\n        ShapeFileUtil.m();\r\n    };\r\n    ShapeFileUtil.$t = markType(ShapeFileUtil, 'ShapeFileUtil');\r\n    ShapeFileUtil.j = null;\r\n    return ShapeFileUtil;\r\n}(Base));\r\nexport { ShapeFileUtil };\r\n(function (v) { callStaticConstructors(); })(true);\r\n//# sourceMappingURL=ShapeFileUtil.js.map\r\n"]},"metadata":{},"sourceType":"module"}