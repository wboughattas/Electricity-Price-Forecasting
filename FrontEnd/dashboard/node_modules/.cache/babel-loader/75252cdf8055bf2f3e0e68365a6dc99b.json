{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { GeographicMapImageryDescription } from \"./GeographicMapImageryDescription\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar TileGeneratorMapImageryDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TileGeneratorMapImageryDescription, _super);\n\n  function TileGeneratorMapImageryDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.y = null;\n    return _this;\n  }\n\n  TileGeneratorMapImageryDescription.prototype.get_type = function () {\n    return \"TileGeneratorMapImagery\";\n  };\n\n  Object.defineProperty(TileGeneratorMapImageryDescription.prototype, \"tileGenerator\", {\n    get: function () {\n      return this.y;\n    },\n    set: function (a) {\n      this.y = a;\n      this.e(\"TileGenerator\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  TileGeneratorMapImageryDescription.$t = markType(TileGeneratorMapImageryDescription, 'TileGeneratorMapImageryDescription', GeographicMapImageryDescription.$);\n  return TileGeneratorMapImageryDescription;\n}(GeographicMapImageryDescription);\n\nexport { TileGeneratorMapImageryDescription };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TileGeneratorMapImageryDescription.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,+BAAT,QAAgD,mCAAhD;AAGA,SAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,kCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwD,EAAA,OAAA,CAAA,SAAA,CAAA,kCAAA,EAAA,MAAA;;AAKvD,WAAA,kCAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAGQ,IAAA,KAAA,CAAA,CAAA,GAA8B,IAA9B;;AADP;;AALS,EAAA,kCAAA,CAAA,SAAA,CAAA,QAAA,GAAV,YAAA;AACC,WAAO,yBAAP;AACA,GAFS;;AAOV,EAAA,MAAA,CAAA,cAAA,CAAI,kCAAA,CAAA,SAAJ,EAAI,eAAJ,EAAiB;SAAjB,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFgB;SAGjB,UAAkB,CAAlB,EAA6C;AAC5C,WAAK,CAAL,GAAS,CAAT;AACA,WAAK,CAAL,CAAO,eAAP;AACA,KANgB;oBAAA;;AAAA,GAAjB;AARO,EAAA,kCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,kCAAD,EAAqC,oCAArC,EAAiF,+BAAgC,CAAC,CAAlH,CAAnB;AAeR,SAAA,kCAAA;AAAC,CAhBD,CAAwD,+BAAxD,CAAA;;SAAa,kC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { GeographicMapImageryDescription } from \"./GeographicMapImageryDescription\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar TileGeneratorMapImageryDescription = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TileGeneratorMapImageryDescription, _super);\n    function TileGeneratorMapImageryDescription() {\n        var _this = _super.call(this) || this;\n        _this.y = null;\n        return _this;\n    }\n    TileGeneratorMapImageryDescription.prototype.get_type = function () {\n        return \"TileGeneratorMapImagery\";\n    };\n    Object.defineProperty(TileGeneratorMapImageryDescription.prototype, \"tileGenerator\", {\n        get: function () {\n            return this.y;\n        },\n        set: function (a) {\n            this.y = a;\n            this.e(\"TileGenerator\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TileGeneratorMapImageryDescription.$t = markType(TileGeneratorMapImageryDescription, 'TileGeneratorMapImageryDescription', GeographicMapImageryDescription.$);\n    return TileGeneratorMapImageryDescription;\n}(GeographicMapImageryDescription));\nexport { TileGeneratorMapImageryDescription };\n//# sourceMappingURL=TileGeneratorMapImageryDescription.js.map\n"]},"metadata":{},"sourceType":"module"}