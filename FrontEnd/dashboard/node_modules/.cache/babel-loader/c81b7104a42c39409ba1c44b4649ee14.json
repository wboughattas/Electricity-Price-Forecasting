{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\n/**\r\n * @hidden\r\n */\n\nvar GaugeVisualData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(GaugeVisualData, _super);\n\n  function GaugeVisualData() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._scalePath = null;\n    _this._needlePath = null;\n    _this._backingPath = null;\n    _this._underlayPath = null;\n    _this._overlayPath = null;\n    _this._scale = null;\n    _this._scaleLabels = null;\n    _this._scaleTickmarks = null;\n    _this._needle = null;\n    _this._ranges = null;\n    _this._name = null;\n    _this._viewport = null;\n    return _this;\n  }\n\n  Object.defineProperty(GaugeVisualData.prototype, \"scalePath\", {\n    get: function () {\n      return this._scalePath;\n    },\n    set: function (a) {\n      this._scalePath = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GaugeVisualData.prototype, \"needlePath\", {\n    get: function () {\n      return this._needlePath;\n    },\n    set: function (a) {\n      this._needlePath = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GaugeVisualData.prototype, \"backingPath\", {\n    get: function () {\n      return this._backingPath;\n    },\n    set: function (a) {\n      this._backingPath = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GaugeVisualData.prototype, \"underlayPath\", {\n    get: function () {\n      return this._underlayPath;\n    },\n    set: function (a) {\n      this._underlayPath = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GaugeVisualData.prototype, \"overlayPath\", {\n    get: function () {\n      return this._overlayPath;\n    },\n    set: function (a) {\n      this._overlayPath = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GaugeVisualData.prototype, \"scale\", {\n    get: function () {\n      return this._scale;\n    },\n    set: function (a) {\n      this._scale = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GaugeVisualData.prototype, \"scaleLabels\", {\n    get: function () {\n      return this._scaleLabels;\n    },\n    set: function (a) {\n      this._scaleLabels = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GaugeVisualData.prototype, \"scaleTickmarks\", {\n    get: function () {\n      return this._scaleTickmarks;\n    },\n    set: function (a) {\n      this._scaleTickmarks = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GaugeVisualData.prototype, \"needle\", {\n    get: function () {\n      return this._needle;\n    },\n    set: function (a) {\n      this._needle = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GaugeVisualData.prototype, \"ranges\", {\n    get: function () {\n      return this._ranges;\n    },\n    set: function (a) {\n      this._ranges = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GaugeVisualData.prototype, \"name\", {\n    get: function () {\n      return this._name;\n    },\n    set: function (a) {\n      this._name = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  GaugeVisualData.prototype.scaleByViewport = function () {\n    var e_1, _a, e_2, _b, e_3, _c;\n\n    if (this.scalePath != null) {\n      this.scalePath.scaleByViewport(this.viewport);\n    }\n\n    if (this.needlePath != null) {\n      this.needlePath.scaleByViewport(this.viewport);\n    }\n\n    if (this.backingPath != null) {\n      this.backingPath.scaleByViewport(this.viewport);\n    }\n\n    if (this.underlayPath != null) {\n      this.underlayPath.scaleByViewport(this.viewport);\n    }\n\n    if (this.overlayPath != null) {\n      this.overlayPath.scaleByViewport(this.viewport);\n    }\n\n    if (this.scaleLabels != null) {\n      try {\n        for (var _d = tslib_1.__values(fromEnum(this.scaleLabels)), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var a = _e.value;\n          a.scaleByViewport(this.viewport);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    if (this.scaleTickmarks != null) {\n      try {\n        for (var _f = tslib_1.__values(fromEnum(this.scaleTickmarks)), _g = _f.next(); !_g.done; _g = _f.next()) {\n          var b = _g.value;\n\n          if (b.tickPath != null) {\n            b.tickPath.scaleByViewport(this.viewport);\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    if (this.ranges != null) {\n      try {\n        for (var _h = tslib_1.__values(fromEnum(this.ranges)), _j = _h.next(); !_j.done; _j = _h.next()) {\n          var c = _j.value;\n\n          if (c.rangePath != null) {\n            c.rangePath.scaleByViewport(this.viewport);\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n    }\n  };\n\n  GaugeVisualData.prototype.serialize = function () {\n    var e_4, _a, e_5, _b, e_6, _c;\n\n    var a = new StringBuilder(0);\n    var b = true;\n    a.u(\"{\");\n\n    if (this.scalePath != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      a.l(\"scalePath: \");\n      a.u(this.scalePath.serialize());\n    }\n\n    if (this.needlePath != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      a.l(\"needlePath: \");\n      a.u(this.needlePath.serialize());\n    }\n\n    if (this.backingPath != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      a.l(\"backingPath: \");\n      a.u(this.backingPath.serialize());\n    }\n\n    if (this.underlayPath != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      a.l(\"underlayPath: \");\n      a.u(this.underlayPath.serialize());\n    }\n\n    if (this.overlayPath != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      a.l(\"overlayPath: \");\n      a.u(this.overlayPath.serialize());\n    }\n\n    if (this.scaleLabels != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      var c = true;\n      a.l(\"scaleLabels: [\");\n\n      try {\n        for (var _d = tslib_1.__values(fromEnum(this.scaleLabels)), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var d = _e.value;\n\n          if (c) {\n            c = false;\n          } else {\n            a.l(\", \");\n          }\n\n          a.u(d.serialize());\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n\n      a.u(\"]\");\n    }\n\n    if (this.scaleTickmarks != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      var e = true;\n      a.l(\"scaleTickmarks: [\");\n\n      try {\n        for (var _f = tslib_1.__values(fromEnum(this.scaleTickmarks)), _g = _f.next(); !_g.done; _g = _f.next()) {\n          var f = _g.value;\n\n          if (e) {\n            e = false;\n          } else {\n            a.l(\", \");\n          }\n\n          a.u(f.serialize());\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      a.u(\"]\");\n    }\n\n    if (this.needle != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      a.l(\"needle: \");\n      a.u(this.needle.serialize());\n    }\n\n    if (this.ranges != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      var g = true;\n      a.l(\"ranges: [\");\n\n      try {\n        for (var _h = tslib_1.__values(fromEnum(this.ranges)), _j = _h.next(); !_j.done; _j = _h.next()) {\n          var h = _j.value;\n\n          if (g) {\n            g = false;\n          } else {\n            a.l(\", \");\n          }\n\n          a.u(h.serialize());\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n\n      a.u(\"]\");\n    }\n\n    if (this.name != null) {\n      if (b) {\n        b = false;\n      } else {\n        a.l(\", \");\n      }\n\n      a.l(\"name: '\");\n      a.l(this.name);\n      a.u(\"'\");\n    }\n\n    if (b) {\n      b = false;\n    } else {\n      a.l(\", \");\n    }\n\n    a.l(\"viewport: {\");\n    a.l(\"left: \" + this.viewport.left + \", top: \" + this.viewport.top + \", width: \" + this.viewport.width + \", height: \" + this.viewport.height);\n    a.u(\"}\");\n    a.u(\"}\");\n    return a.toString();\n  };\n\n  Object.defineProperty(GaugeVisualData.prototype, \"viewport\", {\n    get: function () {\n      return this._viewport;\n    },\n    set: function (a) {\n      this._viewport = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  GaugeVisualData.$t = markType(GaugeVisualData, 'GaugeVisualData');\n  return GaugeVisualData;\n}(Base);\n\nexport { GaugeVisualData };","map":{"version":3,"sources":["../../../../src/igniteui-gauges/lib/GaugeVisualData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, fromEnum, markType } from \"igniteui-react-core\";\r\nimport { StringBuilder } from \"igniteui-react-core\";\r\n/**\r\n * @hidden\r\n */\r\nvar GaugeVisualData = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(GaugeVisualData, _super);\r\n    function GaugeVisualData() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._scalePath = null;\r\n        _this._needlePath = null;\r\n        _this._backingPath = null;\r\n        _this._underlayPath = null;\r\n        _this._overlayPath = null;\r\n        _this._scale = null;\r\n        _this._scaleLabels = null;\r\n        _this._scaleTickmarks = null;\r\n        _this._needle = null;\r\n        _this._ranges = null;\r\n        _this._name = null;\r\n        _this._viewport = null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(GaugeVisualData.prototype, \"scalePath\", {\r\n        get: function () {\r\n            return this._scalePath;\r\n        },\r\n        set: function (a) {\r\n            this._scalePath = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GaugeVisualData.prototype, \"needlePath\", {\r\n        get: function () {\r\n            return this._needlePath;\r\n        },\r\n        set: function (a) {\r\n            this._needlePath = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GaugeVisualData.prototype, \"backingPath\", {\r\n        get: function () {\r\n            return this._backingPath;\r\n        },\r\n        set: function (a) {\r\n            this._backingPath = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GaugeVisualData.prototype, \"underlayPath\", {\r\n        get: function () {\r\n            return this._underlayPath;\r\n        },\r\n        set: function (a) {\r\n            this._underlayPath = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GaugeVisualData.prototype, \"overlayPath\", {\r\n        get: function () {\r\n            return this._overlayPath;\r\n        },\r\n        set: function (a) {\r\n            this._overlayPath = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GaugeVisualData.prototype, \"scale\", {\r\n        get: function () {\r\n            return this._scale;\r\n        },\r\n        set: function (a) {\r\n            this._scale = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GaugeVisualData.prototype, \"scaleLabels\", {\r\n        get: function () {\r\n            return this._scaleLabels;\r\n        },\r\n        set: function (a) {\r\n            this._scaleLabels = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GaugeVisualData.prototype, \"scaleTickmarks\", {\r\n        get: function () {\r\n            return this._scaleTickmarks;\r\n        },\r\n        set: function (a) {\r\n            this._scaleTickmarks = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GaugeVisualData.prototype, \"needle\", {\r\n        get: function () {\r\n            return this._needle;\r\n        },\r\n        set: function (a) {\r\n            this._needle = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GaugeVisualData.prototype, \"ranges\", {\r\n        get: function () {\r\n            return this._ranges;\r\n        },\r\n        set: function (a) {\r\n            this._ranges = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GaugeVisualData.prototype, \"name\", {\r\n        get: function () {\r\n            return this._name;\r\n        },\r\n        set: function (a) {\r\n            this._name = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GaugeVisualData.prototype.scaleByViewport = function () {\r\n        var e_1, _a, e_2, _b, e_3, _c;\r\n        if (this.scalePath != null) {\r\n            this.scalePath.scaleByViewport(this.viewport);\r\n        }\r\n        if (this.needlePath != null) {\r\n            this.needlePath.scaleByViewport(this.viewport);\r\n        }\r\n        if (this.backingPath != null) {\r\n            this.backingPath.scaleByViewport(this.viewport);\r\n        }\r\n        if (this.underlayPath != null) {\r\n            this.underlayPath.scaleByViewport(this.viewport);\r\n        }\r\n        if (this.overlayPath != null) {\r\n            this.overlayPath.scaleByViewport(this.viewport);\r\n        }\r\n        if (this.scaleLabels != null) {\r\n            try {\r\n                for (var _d = tslib_1.__values(fromEnum(this.scaleLabels)), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                    var a = _e.value;\r\n                    a.scaleByViewport(this.viewport);\r\n                }\r\n            }\r\n            catch (e_1_1) {\r\n                e_1 = { error: e_1_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_e && !_e.done && (_a = _d.return))\r\n                        _a.call(_d);\r\n                }\r\n                finally {\r\n                    if (e_1)\r\n                        throw e_1.error;\r\n                }\r\n            }\r\n        }\r\n        if (this.scaleTickmarks != null) {\r\n            try {\r\n                for (var _f = tslib_1.__values(fromEnum(this.scaleTickmarks)), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                    var b = _g.value;\r\n                    if (b.tickPath != null) {\r\n                        b.tickPath.scaleByViewport(this.viewport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) {\r\n                e_2 = { error: e_2_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_g && !_g.done && (_b = _f.return))\r\n                        _b.call(_f);\r\n                }\r\n                finally {\r\n                    if (e_2)\r\n                        throw e_2.error;\r\n                }\r\n            }\r\n        }\r\n        if (this.ranges != null) {\r\n            try {\r\n                for (var _h = tslib_1.__values(fromEnum(this.ranges)), _j = _h.next(); !_j.done; _j = _h.next()) {\r\n                    var c = _j.value;\r\n                    if (c.rangePath != null) {\r\n                        c.rangePath.scaleByViewport(this.viewport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_3_1) {\r\n                e_3 = { error: e_3_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_j && !_j.done && (_c = _h.return))\r\n                        _c.call(_h);\r\n                }\r\n                finally {\r\n                    if (e_3)\r\n                        throw e_3.error;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GaugeVisualData.prototype.serialize = function () {\r\n        var e_4, _a, e_5, _b, e_6, _c;\r\n        var a = new StringBuilder(0);\r\n        var b = true;\r\n        a.u(\"{\");\r\n        if (this.scalePath != null) {\r\n            if (b) {\r\n                b = false;\r\n            }\r\n            else {\r\n                a.l(\", \");\r\n            }\r\n            a.l(\"scalePath: \");\r\n            a.u(this.scalePath.serialize());\r\n        }\r\n        if (this.needlePath != null) {\r\n            if (b) {\r\n                b = false;\r\n            }\r\n            else {\r\n                a.l(\", \");\r\n            }\r\n            a.l(\"needlePath: \");\r\n            a.u(this.needlePath.serialize());\r\n        }\r\n        if (this.backingPath != null) {\r\n            if (b) {\r\n                b = false;\r\n            }\r\n            else {\r\n                a.l(\", \");\r\n            }\r\n            a.l(\"backingPath: \");\r\n            a.u(this.backingPath.serialize());\r\n        }\r\n        if (this.underlayPath != null) {\r\n            if (b) {\r\n                b = false;\r\n            }\r\n            else {\r\n                a.l(\", \");\r\n            }\r\n            a.l(\"underlayPath: \");\r\n            a.u(this.underlayPath.serialize());\r\n        }\r\n        if (this.overlayPath != null) {\r\n            if (b) {\r\n                b = false;\r\n            }\r\n            else {\r\n                a.l(\", \");\r\n            }\r\n            a.l(\"overlayPath: \");\r\n            a.u(this.overlayPath.serialize());\r\n        }\r\n        if (this.scaleLabels != null) {\r\n            if (b) {\r\n                b = false;\r\n            }\r\n            else {\r\n                a.l(\", \");\r\n            }\r\n            var c = true;\r\n            a.l(\"scaleLabels: [\");\r\n            try {\r\n                for (var _d = tslib_1.__values(fromEnum(this.scaleLabels)), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                    var d = _e.value;\r\n                    if (c) {\r\n                        c = false;\r\n                    }\r\n                    else {\r\n                        a.l(\", \");\r\n                    }\r\n                    a.u(d.serialize());\r\n                }\r\n            }\r\n            catch (e_4_1) {\r\n                e_4 = { error: e_4_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_e && !_e.done && (_a = _d.return))\r\n                        _a.call(_d);\r\n                }\r\n                finally {\r\n                    if (e_4)\r\n                        throw e_4.error;\r\n                }\r\n            }\r\n            a.u(\"]\");\r\n        }\r\n        if (this.scaleTickmarks != null) {\r\n            if (b) {\r\n                b = false;\r\n            }\r\n            else {\r\n                a.l(\", \");\r\n            }\r\n            var e = true;\r\n            a.l(\"scaleTickmarks: [\");\r\n            try {\r\n                for (var _f = tslib_1.__values(fromEnum(this.scaleTickmarks)), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                    var f = _g.value;\r\n                    if (e) {\r\n                        e = false;\r\n                    }\r\n                    else {\r\n                        a.l(\", \");\r\n                    }\r\n                    a.u(f.serialize());\r\n                }\r\n            }\r\n            catch (e_5_1) {\r\n                e_5 = { error: e_5_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_g && !_g.done && (_b = _f.return))\r\n                        _b.call(_f);\r\n                }\r\n                finally {\r\n                    if (e_5)\r\n                        throw e_5.error;\r\n                }\r\n            }\r\n            a.u(\"]\");\r\n        }\r\n        if (this.needle != null) {\r\n            if (b) {\r\n                b = false;\r\n            }\r\n            else {\r\n                a.l(\", \");\r\n            }\r\n            a.l(\"needle: \");\r\n            a.u(this.needle.serialize());\r\n        }\r\n        if (this.ranges != null) {\r\n            if (b) {\r\n                b = false;\r\n            }\r\n            else {\r\n                a.l(\", \");\r\n            }\r\n            var g = true;\r\n            a.l(\"ranges: [\");\r\n            try {\r\n                for (var _h = tslib_1.__values(fromEnum(this.ranges)), _j = _h.next(); !_j.done; _j = _h.next()) {\r\n                    var h = _j.value;\r\n                    if (g) {\r\n                        g = false;\r\n                    }\r\n                    else {\r\n                        a.l(\", \");\r\n                    }\r\n                    a.u(h.serialize());\r\n                }\r\n            }\r\n            catch (e_6_1) {\r\n                e_6 = { error: e_6_1 };\r\n            }\r\n            finally {\r\n                try {\r\n                    if (_j && !_j.done && (_c = _h.return))\r\n                        _c.call(_h);\r\n                }\r\n                finally {\r\n                    if (e_6)\r\n                        throw e_6.error;\r\n                }\r\n            }\r\n            a.u(\"]\");\r\n        }\r\n        if (this.name != null) {\r\n            if (b) {\r\n                b = false;\r\n            }\r\n            else {\r\n                a.l(\", \");\r\n            }\r\n            a.l(\"name: '\");\r\n            a.l(this.name);\r\n            a.u(\"'\");\r\n        }\r\n        if (b) {\r\n            b = false;\r\n        }\r\n        else {\r\n            a.l(\", \");\r\n        }\r\n        a.l(\"viewport: {\");\r\n        a.l(\"left: \" + this.viewport.left + \", top: \" + this.viewport.top + \", width: \" + this.viewport.width + \", height: \" + this.viewport.height);\r\n        a.u(\"}\");\r\n        a.u(\"}\");\r\n        return a.toString();\r\n    };\r\n    Object.defineProperty(GaugeVisualData.prototype, \"viewport\", {\r\n        get: function () {\r\n            return this._viewport;\r\n        },\r\n        set: function (a) {\r\n            this._viewport = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GaugeVisualData.$t = markType(GaugeVisualData, 'GaugeVisualData');\r\n    return GaugeVisualData;\r\n}(Base));\r\nexport { GaugeVisualData };\r\n//# sourceMappingURL=GaugeVisualData.js.map\r\n"]},"metadata":{},"sourceType":"module"}