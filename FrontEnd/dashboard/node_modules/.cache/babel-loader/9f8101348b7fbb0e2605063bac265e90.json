{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FilterExpressionDescriptionMetadata } from \"./FilterExpressionDescriptionMetadata\";\nimport { FunctionFilterExpressionDescription } from \"./FunctionFilterExpressionDescription\";\n/**\r\n * @hidden\r\n */\n\nvar FunctionFilterExpressionDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(FunctionFilterExpressionDescriptionMetadata, _super);\n\n  function FunctionFilterExpressionDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FunctionFilterExpressionDescriptionMetadata.b = function (a) {\n    if (FunctionFilterExpressionDescriptionMetadata.a == null) {\n      FunctionFilterExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      FunctionFilterExpressionDescriptionMetadata.c(a, FunctionFilterExpressionDescriptionMetadata.a);\n    }\n  };\n\n  FunctionFilterExpressionDescriptionMetadata.c = function (a, b) {\n    FilterExpressionDescriptionMetadata.c(a, b);\n    b.item(\"FunctionType\", \"ExportedType:string:FilterExpressionFunctionType\");\n    b.item(\"FunctionArguments\", \"Collection:FilterExpression:FilterExpressionCollection:FilterExpression\");\n  };\n\n  FunctionFilterExpressionDescriptionMetadata.d = function (a) {\n    FunctionFilterExpressionDescriptionMetadata.b(a);\n    a.n(\"FunctionFilterExpression\", function () {\n      return new FunctionFilterExpressionDescription();\n    });\n    a.m(\"FunctionFilterExpression\", FunctionFilterExpressionDescriptionMetadata.a);\n  };\n\n  FunctionFilterExpressionDescriptionMetadata.$t = markType(FunctionFilterExpressionDescriptionMetadata, 'FunctionFilterExpressionDescriptionMetadata');\n  FunctionFilterExpressionDescriptionMetadata.a = null;\n  return FunctionFilterExpressionDescriptionMetadata;\n}(Base);\n\nexport { FunctionFilterExpressionDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FunctionFilterExpressionDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mCAAT,QAAoD,uCAApD;AACA,SAAS,mCAAT,QAAoD,uCAApD;AAEA;;AAEG;;AACH,IAAA,2CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiE,EAAA,OAAA,CAAA,SAAA,CAAA,2CAAA,EAAA,MAAA;;AAAjE,WAAA,2CAAA,GAAA;;AAmBC;;AAhBe,EAAA,2CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,2CAA2C,CAAC,CAA5C,IAAiD,IAArD,EAA2D;AAC1D,MAAA,2CAA2C,CAAC,CAA5C,GAAgD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAhD;AACA,MAAA,2CAA2C,CAAC,CAA5C,CAA8C,CAA9C,EAAiD,2CAA2C,CAAC,CAA7F;AACA;AACD,GALc;;AAMR,EAAA,2CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC,EAAyC,CAAzC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,kDAAvB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,yEAA5B;AACA,GAJM;;AAKA,EAAA,2CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,2CAA2C,CAAC,CAA5C,CAA8C,CAA9C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,0BAAJ,EAAgC,YAAA;AAAM,aAAA,IAAA,mCAAA,EAAA;AAAyC,KAA/E;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,0BAAJ,EAAgC,2CAA2C,CAAC,CAA5E;AACA,GAJM;;AAbA,EAAA,2CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,2CAAD,EAA8C,6CAA9C,CAAnB;AACQ,EAAA,2CAAA,CAAA,CAAA,GAAkC,IAAlC;AAiBhB,SAAA,2CAAA;AAAC,CAnBD,CAAiE,IAAjE,CAAA;;SAAa,2C","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { FilterExpressionDescriptionMetadata } from \"./FilterExpressionDescriptionMetadata\";\r\nimport { FunctionFilterExpressionDescription } from \"./FunctionFilterExpressionDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar FunctionFilterExpressionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(FunctionFilterExpressionDescriptionMetadata, _super);\r\n    function FunctionFilterExpressionDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FunctionFilterExpressionDescriptionMetadata.b = function (a) {\r\n        if (FunctionFilterExpressionDescriptionMetadata.a == null) {\r\n            FunctionFilterExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            FunctionFilterExpressionDescriptionMetadata.c(a, FunctionFilterExpressionDescriptionMetadata.a);\r\n        }\r\n    };\r\n    FunctionFilterExpressionDescriptionMetadata.c = function (a, b) {\r\n        FilterExpressionDescriptionMetadata.c(a, b);\r\n        b.item(\"FunctionType\", \"ExportedType:string:FilterExpressionFunctionType\");\r\n        b.item(\"FunctionArguments\", \"Collection:FilterExpression:FilterExpressionCollection:FilterExpression\");\r\n    };\r\n    FunctionFilterExpressionDescriptionMetadata.d = function (a) {\r\n        FunctionFilterExpressionDescriptionMetadata.b(a);\r\n        a.n(\"FunctionFilterExpression\", function () { return new FunctionFilterExpressionDescription(); });\r\n        a.m(\"FunctionFilterExpression\", FunctionFilterExpressionDescriptionMetadata.a);\r\n    };\r\n    FunctionFilterExpressionDescriptionMetadata.$t = markType(FunctionFilterExpressionDescriptionMetadata, 'FunctionFilterExpressionDescriptionMetadata');\r\n    FunctionFilterExpressionDescriptionMetadata.a = null;\r\n    return FunctionFilterExpressionDescriptionMetadata;\r\n}(Base));\r\nexport { FunctionFilterExpressionDescriptionMetadata };\r\n//# sourceMappingURL=FunctionFilterExpressionDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}