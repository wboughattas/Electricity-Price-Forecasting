{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { DataGridExpansionIndicatorDescription } from \"./DataGridExpansionIndicatorDescription\";\n/**\n * @hidden\n */\n\nvar DataGridExpansionIndicatorDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DataGridExpansionIndicatorDescriptionMetadata, _super);\n\n  function DataGridExpansionIndicatorDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DataGridExpansionIndicatorDescriptionMetadata.b = function (a) {\n    if (DataGridExpansionIndicatorDescriptionMetadata.a == null) {\n      DataGridExpansionIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      DataGridExpansionIndicatorDescriptionMetadata.c(a, DataGridExpansionIndicatorDescriptionMetadata.a);\n    }\n  };\n\n  DataGridExpansionIndicatorDescriptionMetadata.c = function (a, b) {\n    b.item(\"IsExpanded\", \"Boolean\");\n    b.item(\"IconColor\", \"Brush\");\n    b.item(\"IsAnimationEnabled\", \"Boolean\");\n    b.item(\"PixelScalingRatio\", \"Number:double\");\n    b.item(\"ActualPixelScalingRatio\", \"Number:double\");\n  };\n\n  DataGridExpansionIndicatorDescriptionMetadata.d = function (a) {\n    DataGridExpansionIndicatorDescriptionMetadata.b(a);\n    a.n(\"DataGridExpansionIndicator\", function () {\n      return new DataGridExpansionIndicatorDescription();\n    });\n    a.m(\"DataGridExpansionIndicator\", DataGridExpansionIndicatorDescriptionMetadata.a);\n  };\n\n  DataGridExpansionIndicatorDescriptionMetadata.$t = markType(DataGridExpansionIndicatorDescriptionMetadata, 'DataGridExpansionIndicatorDescriptionMetadata');\n  DataGridExpansionIndicatorDescriptionMetadata.a = null;\n  return DataGridExpansionIndicatorDescriptionMetadata;\n}(Base);\n\nexport { DataGridExpansionIndicatorDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DataGridExpansionIndicatorDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,qCAAT,QAAsD,yCAAtD;AAEA;;AAEG;;AACH,IAAA,6CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmE,EAAA,OAAA,CAAA,SAAA,CAAA,6CAAA,EAAA,MAAA;;AAAnE,WAAA,6CAAA,GAAA;;AAqBC;;AAlBe,EAAA,6CAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,6CAA6C,CAAC,CAA9C,IAAmD,IAAvD,EAA6D;AAC5D,MAAA,6CAA6C,CAAC,CAA9C,GAAkD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAlD;AACA,MAAA,6CAA6C,CAAC,CAA9C,CAAgD,CAAhD,EAAmD,6CAA6C,CAAC,CAAjG;AACA;AACD,GALc;;AAMR,EAAA,6CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,SAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,OAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAP,EAA6B,SAA7B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,eAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,yBAAP,EAAkC,eAAlC;AACA,GANM;;AAOA,EAAA,6CAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,6CAA6C,CAAC,CAA9C,CAAgD,CAAhD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,4BAAJ,EAAkC,YAAA;AAAM,aAAA,IAAA,qCAAA,EAAA;AAA2C,KAAnF;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,4BAAJ,EAAkC,6CAA6C,CAAC,CAAhF;AACA,GAJM;;AAfA,EAAA,6CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,6CAAD,EAAgD,+CAAhD,CAAnB;AACQ,EAAA,6CAAA,CAAA,CAAA,GAAkC,IAAlC;AAmBhB,SAAA,6CAAA;AAAC,CArBD,CAAmE,IAAnE,CAAA;;SAAa,6C","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { DataGridExpansionIndicatorDescription } from \"./DataGridExpansionIndicatorDescription\";\n/**\n * @hidden\n */\nvar DataGridExpansionIndicatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DataGridExpansionIndicatorDescriptionMetadata, _super);\n    function DataGridExpansionIndicatorDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataGridExpansionIndicatorDescriptionMetadata.b = function (a) {\n        if (DataGridExpansionIndicatorDescriptionMetadata.a == null) {\n            DataGridExpansionIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            DataGridExpansionIndicatorDescriptionMetadata.c(a, DataGridExpansionIndicatorDescriptionMetadata.a);\n        }\n    };\n    DataGridExpansionIndicatorDescriptionMetadata.c = function (a, b) {\n        b.item(\"IsExpanded\", \"Boolean\");\n        b.item(\"IconColor\", \"Brush\");\n        b.item(\"IsAnimationEnabled\", \"Boolean\");\n        b.item(\"PixelScalingRatio\", \"Number:double\");\n        b.item(\"ActualPixelScalingRatio\", \"Number:double\");\n    };\n    DataGridExpansionIndicatorDescriptionMetadata.d = function (a) {\n        DataGridExpansionIndicatorDescriptionMetadata.b(a);\n        a.n(\"DataGridExpansionIndicator\", function () { return new DataGridExpansionIndicatorDescription(); });\n        a.m(\"DataGridExpansionIndicator\", DataGridExpansionIndicatorDescriptionMetadata.a);\n    };\n    DataGridExpansionIndicatorDescriptionMetadata.$t = markType(DataGridExpansionIndicatorDescriptionMetadata, 'DataGridExpansionIndicatorDescriptionMetadata');\n    DataGridExpansionIndicatorDescriptionMetadata.a = null;\n    return DataGridExpansionIndicatorDescriptionMetadata;\n}(Base));\nexport { DataGridExpansionIndicatorDescriptionMetadata };\n//# sourceMappingURL=DataGridExpansionIndicatorDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}