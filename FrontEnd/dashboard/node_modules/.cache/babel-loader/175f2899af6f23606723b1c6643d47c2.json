{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SplineSeriesBaseDescriptionMetadata } from \"./SplineSeriesBaseDescriptionMetadata\";\nimport { SplineAreaSeriesDescription } from \"./SplineAreaSeriesDescription\";\n/**\n * @hidden\n */\n\nvar SplineAreaSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SplineAreaSeriesDescriptionMetadata, _super);\n\n  function SplineAreaSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SplineAreaSeriesDescriptionMetadata.b = function (a) {\n    if (SplineAreaSeriesDescriptionMetadata.a == null) {\n      SplineAreaSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      SplineAreaSeriesDescriptionMetadata.c(a, SplineAreaSeriesDescriptionMetadata.a);\n    }\n  };\n\n  SplineAreaSeriesDescriptionMetadata.c = function (a, b) {\n    SplineSeriesBaseDescriptionMetadata.c(a, b);\n  };\n\n  SplineAreaSeriesDescriptionMetadata.d = function (a) {\n    SplineAreaSeriesDescriptionMetadata.b(a);\n    a.n(\"SplineAreaSeries\", function () {\n      return new SplineAreaSeriesDescription();\n    });\n    a.m(\"SplineAreaSeries\", SplineAreaSeriesDescriptionMetadata.a);\n  };\n\n  SplineAreaSeriesDescriptionMetadata.$t = markType(SplineAreaSeriesDescriptionMetadata, 'SplineAreaSeriesDescriptionMetadata');\n  SplineAreaSeriesDescriptionMetadata.a = null;\n  return SplineAreaSeriesDescriptionMetadata;\n}(Base);\n\nexport { SplineAreaSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/SplineAreaSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mCAAT,QAAoD,uCAApD;AACA,SAAS,2BAAT,QAA4C,+BAA5C;AAEA;;AAEG;;AACH,IAAA,mCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyD,EAAA,OAAA,CAAA,SAAA,CAAA,mCAAA,EAAA,MAAA;;AAAzD,WAAA,mCAAA,GAAA;;AAiBC;;AAde,EAAA,mCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,mCAAmC,CAAC,CAApC,IAAyC,IAA7C,EAAmD;AAClD,MAAA,mCAAmC,CAAC,CAApC,GAAwC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAxC;AACA,MAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC,EAAyC,mCAAmC,CAAC,CAA7E;AACA;AACD,GALc;;AAMR,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC,EAAyC,CAAzC;AACA,GAFM;;AAGA,EAAA,mCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,YAAA;AAAM,aAAA,IAAA,2BAAA,EAAA;AAAiC,KAA/D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,kBAAJ,EAAwB,mCAAmC,CAAC,CAA5D;AACA,GAJM;;AAXA,EAAA,mCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,mCAAD,EAAsC,qCAAtC,CAAnB;AACQ,EAAA,mCAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,mCAAA;AAAC,CAjBD,CAAyD,IAAzD,CAAA;;SAAa,mC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SplineSeriesBaseDescriptionMetadata } from \"./SplineSeriesBaseDescriptionMetadata\";\nimport { SplineAreaSeriesDescription } from \"./SplineAreaSeriesDescription\";\n/**\n * @hidden\n */\nvar SplineAreaSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SplineAreaSeriesDescriptionMetadata, _super);\n    function SplineAreaSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SplineAreaSeriesDescriptionMetadata.b = function (a) {\n        if (SplineAreaSeriesDescriptionMetadata.a == null) {\n            SplineAreaSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            SplineAreaSeriesDescriptionMetadata.c(a, SplineAreaSeriesDescriptionMetadata.a);\n        }\n    };\n    SplineAreaSeriesDescriptionMetadata.c = function (a, b) {\n        SplineSeriesBaseDescriptionMetadata.c(a, b);\n    };\n    SplineAreaSeriesDescriptionMetadata.d = function (a) {\n        SplineAreaSeriesDescriptionMetadata.b(a);\n        a.n(\"SplineAreaSeries\", function () { return new SplineAreaSeriesDescription(); });\n        a.m(\"SplineAreaSeries\", SplineAreaSeriesDescriptionMetadata.a);\n    };\n    SplineAreaSeriesDescriptionMetadata.$t = markType(SplineAreaSeriesDescriptionMetadata, 'SplineAreaSeriesDescriptionMetadata');\n    SplineAreaSeriesDescriptionMetadata.a = null;\n    return SplineAreaSeriesDescriptionMetadata;\n}(Base));\nexport { SplineAreaSeriesDescriptionMetadata };\n//# sourceMappingURL=SplineAreaSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}