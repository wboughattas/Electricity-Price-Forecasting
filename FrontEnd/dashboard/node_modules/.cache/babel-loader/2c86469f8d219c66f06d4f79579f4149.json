{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar PolySimplification =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolySimplification, _super);\n\n  function PolySimplification() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PolySimplification.b = function (a, b) {\n    var c = a.c;\n    var d = a.d;\n\n    if (c.length == 0) {\n      return 0;\n    }\n\n    var e = 0;\n    var f = 0;\n    var g = b * b;\n    e++;\n    var h;\n    var i;\n    var j;\n\n    for (var k = 0; k < c.length; k++) {\n      h = c[k] - c[f];\n      i = d[k] - d[f];\n      j = h * h + i * i;\n\n      if (j > g) {\n        c[e] = c[k];\n        d[e] = d[k];\n        e++;\n        f = k;\n      }\n    }\n\n    return e;\n  };\n\n  PolySimplification.a = function (a, b) {\n    var c = b.x - a.x;\n    var d = b.y - a.y;\n    return c * c + d * d;\n  };\n\n  PolySimplification.$t = markType(PolySimplification, 'PolySimplification');\n  return PolySimplification;\n}(Base);\n\nexport { PolySimplification };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PolySimplification.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAA4B,QAA5B,QAA4C,QAA5C;AAGA;;AAEG;;AACH,IAAA,kBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,OAAA,CAAA,SAAA,CAAA,kBAAA,EAAA,MAAA;;AAAxC,WAAA,kBAAA,GAAA;;AAiCC;;AA/BO,EAAA,kBAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAyC,CAAzC,EAAkD;AACjD,QAAI,CAAC,GAAG,CAAC,CAAC,CAAV;AACA,QAAI,CAAC,GAAG,CAAC,CAAC,CAAV;;AACA,QAAI,CAAC,CAAC,MAAF,IAAY,CAAhB,EAAmB;AAClB,aAAO,CAAP;AACA;;AACD,QAAI,CAAC,GAAW,CAAhB;AACA,QAAI,CAAC,GAAW,CAAhB;AACA,QAAI,CAAC,GAAW,CAAC,GAAG,CAApB;AACA,IAAA,CAAC;AACD,QAAI,CAAJ;AACA,QAAI,CAAJ;AACA,QAAI,CAAJ;;AACA,SAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,GAAG,CAAC,CAAC,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AAC1C,MAAA,CAAC,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAAZ;AACA,MAAA,CAAC,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAAZ;AACA,MAAA,CAAC,GAAI,CAAC,GAAG,CAAL,GAAW,CAAC,GAAG,CAAnB;;AACA,UAAI,CAAC,GAAG,CAAR,EAAW;AACV,QAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAAR;AACA,QAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAAR;AACA,QAAA,CAAC;AACD,QAAA,CAAC,GAAG,CAAJ;AACA;AACD;;AACD,WAAO,CAAP;AACA,GAzBM;;AA0BQ,EAAA,kBAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA2B,CAA3B,EAAmC;AAClC,QAAI,CAAC,GAAW,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAxB;AACA,QAAI,CAAC,GAAW,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAxB;AACA,WAAQ,CAAC,GAAG,CAAL,GAAW,CAAC,GAAG,CAAtB;AACA,GAJc;;AA3BR,EAAA,kBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,kBAAD,EAAqB,oBAArB,CAAnB;AAgCR,SAAA,kBAAA;AAAC,CAjCD,CAAwC,IAAxC,CAAA;;SAAa,kB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\nvar PolySimplification = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolySimplification, _super);\n    function PolySimplification() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PolySimplification.b = function (a, b) {\n        var c = a.c;\n        var d = a.d;\n        if (c.length == 0) {\n            return 0;\n        }\n        var e = 0;\n        var f = 0;\n        var g = b * b;\n        e++;\n        var h;\n        var i;\n        var j;\n        for (var k = 0; k < c.length; k++) {\n            h = c[k] - c[f];\n            i = d[k] - d[f];\n            j = (h * h) + (i * i);\n            if (j > g) {\n                c[e] = c[k];\n                d[e] = d[k];\n                e++;\n                f = k;\n            }\n        }\n        return e;\n    };\n    PolySimplification.a = function (a, b) {\n        var c = b.x - a.x;\n        var d = b.y - a.y;\n        return (c * c) + (d * d);\n    };\n    PolySimplification.$t = markType(PolySimplification, 'PolySimplification');\n    return PolySimplification;\n}(Base));\nexport { PolySimplification };\n//# sourceMappingURL=PolySimplification.js.map\n"]},"metadata":{},"sourceType":"module"}