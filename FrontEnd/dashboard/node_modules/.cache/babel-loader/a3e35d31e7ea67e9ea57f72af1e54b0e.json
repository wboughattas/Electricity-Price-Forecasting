{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnFragmentDescriptionMetadata } from \"./ColumnFragmentDescriptionMetadata\";\nimport { BarFragmentDescription } from \"./BarFragmentDescription\";\n/**\n * @hidden\n */\n\nvar BarFragmentDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(BarFragmentDescriptionMetadata, _super);\n\n  function BarFragmentDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  BarFragmentDescriptionMetadata.b = function (a) {\n    if (BarFragmentDescriptionMetadata.a == null) {\n      BarFragmentDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      BarFragmentDescriptionMetadata.c(a, BarFragmentDescriptionMetadata.a);\n    }\n  };\n\n  BarFragmentDescriptionMetadata.c = function (a, b) {\n    ColumnFragmentDescriptionMetadata.c(a, b);\n  };\n\n  BarFragmentDescriptionMetadata.d = function (a) {\n    BarFragmentDescriptionMetadata.b(a);\n    a.n(\"BarFragment\", function () {\n      return new BarFragmentDescription();\n    });\n    a.m(\"BarFragment\", BarFragmentDescriptionMetadata.a);\n  };\n\n  BarFragmentDescriptionMetadata.$t = markType(BarFragmentDescriptionMetadata, 'BarFragmentDescriptionMetadata');\n  BarFragmentDescriptionMetadata.a = null;\n  return BarFragmentDescriptionMetadata;\n}(Base);\n\nexport { BarFragmentDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/BarFragmentDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,iCAAT,QAAkD,qCAAlD;AACA,SAAS,sBAAT,QAAuC,0BAAvC;AAEA;;AAEG;;AACH,IAAA,8BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoD,EAAA,OAAA,CAAA,SAAA,CAAA,8BAAA,EAAA,MAAA;;AAApD,WAAA,8BAAA,GAAA;;AAiBC;;AAde,EAAA,8BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,8BAA8B,CAAC,CAA/B,IAAoC,IAAxC,EAA8C;AAC7C,MAAA,8BAA8B,CAAC,CAA/B,GAAmC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAnC;AACA,MAAA,8BAA8B,CAAC,CAA/B,CAAiC,CAAjC,EAAoC,8BAA8B,CAAC,CAAnE;AACA;AACD,GALc;;AAMR,EAAA,8BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,iCAAiC,CAAC,CAAlC,CAAoC,CAApC,EAAuC,CAAvC;AACA,GAFM;;AAGA,EAAA,8BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,8BAA8B,CAAC,CAA/B,CAAiC,CAAjC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,aAAJ,EAAmB,YAAA;AAAM,aAAA,IAAA,sBAAA,EAAA;AAA4B,KAArD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,aAAJ,EAAmB,8BAA8B,CAAC,CAAlD;AACA,GAJM;;AAXA,EAAA,8BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,8BAAD,EAAiC,gCAAjC,CAAnB;AACQ,EAAA,8BAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,8BAAA;AAAC,CAjBD,CAAoD,IAApD,CAAA;;SAAa,8B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnFragmentDescriptionMetadata } from \"./ColumnFragmentDescriptionMetadata\";\nimport { BarFragmentDescription } from \"./BarFragmentDescription\";\n/**\n * @hidden\n */\nvar BarFragmentDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BarFragmentDescriptionMetadata, _super);\n    function BarFragmentDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BarFragmentDescriptionMetadata.b = function (a) {\n        if (BarFragmentDescriptionMetadata.a == null) {\n            BarFragmentDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            BarFragmentDescriptionMetadata.c(a, BarFragmentDescriptionMetadata.a);\n        }\n    };\n    BarFragmentDescriptionMetadata.c = function (a, b) {\n        ColumnFragmentDescriptionMetadata.c(a, b);\n    };\n    BarFragmentDescriptionMetadata.d = function (a) {\n        BarFragmentDescriptionMetadata.b(a);\n        a.n(\"BarFragment\", function () { return new BarFragmentDescription(); });\n        a.m(\"BarFragment\", BarFragmentDescriptionMetadata.a);\n    };\n    BarFragmentDescriptionMetadata.$t = markType(BarFragmentDescriptionMetadata, 'BarFragmentDescriptionMetadata');\n    BarFragmentDescriptionMetadata.a = null;\n    return BarFragmentDescriptionMetadata;\n}(Base));\nexport { BarFragmentDescriptionMetadata };\n//# sourceMappingURL=BarFragmentDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}