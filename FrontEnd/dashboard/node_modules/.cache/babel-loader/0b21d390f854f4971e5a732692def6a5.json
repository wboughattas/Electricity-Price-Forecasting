{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mlockhead\\\\dev\\\\Hackaton\\\\headsinthecloud\\\\FrontEnd\\\\dashboard\\\\src\\\\component\\\\Gauge.js\";\nimport { IgrRadialGaugeModule } from 'igniteui-react-gauges';\nimport { IgrRadialGauge } from 'igniteui-react-gauges';\nimport React, { Component } from 'react';\nIgrRadialGaugeModule.register();\n\nclass Gauge extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gaugeValue: this.props.gaugeValue\n    };\n  }\n\n  componentDidMount() {} //whenever the component updates, this will be called\n\n\n  componentDidUpdate() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(IgrRadialGauge, {\n      height: \"400px\",\n      width: \"400px\",\n      value: 25,\n      interval: 5,\n      minimumValue: 0,\n      maximumValue: 100,\n      children: [/*#__PURE__*/_jsxDEV(IgrRadialGaugeRange, {\n        startValue: 0,\n        endValue: 30,\n        brush: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IgrRadialGaugeRange, {\n        startValue: 30,\n        endValue: 60,\n        brush: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IgrRadialGaugeRange, {\n        startValue: 60,\n        endValue: 100,\n        brush: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Gauge;","map":{"version":3,"sources":["C:/Users/mlockhead/dev/Hackaton/headsinthecloud/FrontEnd/dashboard/src/component/Gauge.js"],"names":["IgrRadialGaugeModule","IgrRadialGauge","React","Component","register","Gauge","constructor","props","state","gaugeValue","componentDidMount","componentDidUpdate","render"],"mappings":";;AAAA,SAASA,oBAAT,QAAqC,uBAArC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEAH,oBAAoB,CAACI,QAArB;;AAKA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAE1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAG,KAAKF,KAAL,CAAWE;AAA1B,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB,CATyB,CAW1B;;;AACAC,EAAAA,kBAAkB,GAAG,CAEpB;;AAEDC,EAAAA,MAAM,GAAG;AAIL,wBACI,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAC,OAAvB;AAA+B,MAAA,KAAK,EAAC,OAArC;AACI,MAAA,KAAK,EAAE,EADX;AAEI,MAAA,QAAQ,EAAE,CAFd;AAGI,MAAA,YAAY,EAAE,CAHlB;AAII,MAAA,YAAY,EAAE,GAJlB;AAAA,8BAKI,QAAC,mBAAD;AAAqB,QAAA,UAAU,EAAE,CAAjC;AACI,QAAA,QAAQ,EAAE,EADd;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI,QAAC,mBAAD;AAAqB,QAAA,UAAU,EAAE,EAAjC;AACI,QAAA,QAAQ,EAAE,EADd;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cARJ,eAWI,QAAC,mBAAD;AAAqB,QAAA,UAAU,EAAE,EAAjC;AACI,QAAA,QAAQ,EAAE,GADd;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AArCyB;;AA+C9B,eAAeP,KAAf","sourcesContent":["import { IgrRadialGaugeModule } from 'igniteui-react-gauges';\r\nimport { IgrRadialGauge } from 'igniteui-react-gauges';\r\nimport React, { Component } from 'react';\r\n\r\nIgrRadialGaugeModule.register();\r\n\r\n\r\n\r\n\r\nclass Gauge extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { gaugeValue : this.props.gaugeValue };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    //whenever the component updates, this will be called\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <IgrRadialGauge height=\"400px\" width=\"400px\"\r\n                value={25}\r\n                interval={5}\r\n                minimumValue={0}\r\n                maximumValue={100}>\r\n                <IgrRadialGaugeRange startValue={0}\r\n                    endValue={30}\r\n                    brush=\"red\" />\r\n                <IgrRadialGaugeRange startValue={30}\r\n                    endValue={60}\r\n                    brush=\"yellow\" />\r\n                <IgrRadialGaugeRange startValue={60}\r\n                    endValue={100}\r\n                    brush=\"green\" />\r\n            </IgrRadialGauge>\r\n            )\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n}\r\n\r\n\r\nexport default Gauge;"]},"metadata":{},"sourceType":"module"}