{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\nimport { NumericColumnDescription } from \"./NumericColumnDescription\";\n/**\r\n * @hidden\r\n */\n\nvar NumericColumnDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(NumericColumnDescriptionMetadata, _super);\n\n  function NumericColumnDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NumericColumnDescriptionMetadata.b = function (a) {\n    if (NumericColumnDescriptionMetadata.a == null) {\n      NumericColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      NumericColumnDescriptionMetadata.c(a, NumericColumnDescriptionMetadata.a);\n    }\n  };\n\n  NumericColumnDescriptionMetadata.c = function (a, b) {\n    ColumnDescriptionMetadata.c(a, b);\n    b.item(\"NegativePrefix\", \"String\");\n    b.item(\"PositivePrefix\", \"String\");\n    b.item(\"NegativeSuffix\", \"String\");\n    b.item(\"PositiveSuffix\", \"String\");\n    b.item(\"MaxFractionDigits\", \"Number:int\");\n    b.item(\"MinFractionDigits\", \"Number:int\");\n    b.item(\"MinIntegerDigits\", \"Number:int\");\n    b.item(\"ShowGroupingSeparator\", \"Boolean\");\n    b.item(\"FormatString\", \"String\");\n    b.item(\"FormatSpecifiers\", \"Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier\");\n    b.item(\"FormatOverrideRef\", \"(w:FormatOverride,wf:FormatOverride)DataRef\");\n    b.item(\"EditorType\", \"ExportedType:string:EditorType\");\n    b.item(\"EditorDataSourceRef\", \"(w:EditorItemsSource,wf:EditorItemsSource)DataRef::object\");\n    b.item(\"EditorDataSource\", \"(w:EditorItemsSource,wf:EditorItemsSource)ExportedType:BaseDataSource:BaseDataSource\");\n    b.item(\"EditorTextField\", \"String\");\n    b.item(\"EditorValueField\", \"Array:string\");\n  };\n\n  NumericColumnDescriptionMetadata.d = function (a) {\n    NumericColumnDescriptionMetadata.b(a);\n    a.n(\"NumericColumn\", function () {\n      return new NumericColumnDescription();\n    });\n    a.m(\"NumericColumn\", NumericColumnDescriptionMetadata.a);\n  };\n\n  NumericColumnDescriptionMetadata.$t = markType(NumericColumnDescriptionMetadata, 'NumericColumnDescriptionMetadata');\n  NumericColumnDescriptionMetadata.a = null;\n  return NumericColumnDescriptionMetadata;\n}(Base);\n\nexport { NumericColumnDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/NumericColumnDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AACA,SAAS,wBAAT,QAAyC,4BAAzC;AAEA;;AAEG;;AACH,IAAA,gCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,OAAA,CAAA,SAAA,CAAA,gCAAA,EAAA,MAAA;;AAAtD,WAAA,gCAAA,GAAA;;AAiCC;;AA9Be,EAAA,gCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,gCAAgC,CAAC,CAAjC,IAAsC,IAA1C,EAAgD;AAC/C,MAAA,gCAAgC,CAAC,CAAjC,GAAqC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAArC;AACA,MAAA,gCAAgC,CAAC,CAAjC,CAAmC,CAAnC,EAAsC,gCAAgC,CAAC,CAAvE;AACA;AACD,GALc;;AAMR,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,yBAAyB,CAAC,CAA1B,CAA4B,CAA5B,EAA+B,CAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,QAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,QAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,QAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,QAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,YAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,YAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,YAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,uBAAP,EAAgC,SAAhC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,QAAvB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,sEAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,mBAAP,EAA4B,6CAA5B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,gCAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,qBAAP,EAA8B,2DAA9B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,sFAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,QAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,cAA3B;AACA,GAlBM;;AAmBA,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,gCAAgC,CAAC,CAAjC,CAAmC,CAAnC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,YAAA;AAAM,aAAA,IAAA,wBAAA,EAAA;AAA8B,KAAzD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,gCAAgC,CAAC,CAAtD;AACA,GAJM;;AA3BA,EAAA,gCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,gCAAD,EAAmC,kCAAnC,CAAnB;AACQ,EAAA,gCAAA,CAAA,CAAA,GAAkC,IAAlC;AA+BhB,SAAA,gCAAA;AAAC,CAjCD,CAAsD,IAAtD,CAAA;;SAAa,gC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\r\nimport { NumericColumnDescription } from \"./NumericColumnDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar NumericColumnDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(NumericColumnDescriptionMetadata, _super);\r\n    function NumericColumnDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NumericColumnDescriptionMetadata.b = function (a) {\r\n        if (NumericColumnDescriptionMetadata.a == null) {\r\n            NumericColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            NumericColumnDescriptionMetadata.c(a, NumericColumnDescriptionMetadata.a);\r\n        }\r\n    };\r\n    NumericColumnDescriptionMetadata.c = function (a, b) {\r\n        ColumnDescriptionMetadata.c(a, b);\r\n        b.item(\"NegativePrefix\", \"String\");\r\n        b.item(\"PositivePrefix\", \"String\");\r\n        b.item(\"NegativeSuffix\", \"String\");\r\n        b.item(\"PositiveSuffix\", \"String\");\r\n        b.item(\"MaxFractionDigits\", \"Number:int\");\r\n        b.item(\"MinFractionDigits\", \"Number:int\");\r\n        b.item(\"MinIntegerDigits\", \"Number:int\");\r\n        b.item(\"ShowGroupingSeparator\", \"Boolean\");\r\n        b.item(\"FormatString\", \"String\");\r\n        b.item(\"FormatSpecifiers\", \"Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier\");\r\n        b.item(\"FormatOverrideRef\", \"(w:FormatOverride,wf:FormatOverride)DataRef\");\r\n        b.item(\"EditorType\", \"ExportedType:string:EditorType\");\r\n        b.item(\"EditorDataSourceRef\", \"(w:EditorItemsSource,wf:EditorItemsSource)DataRef::object\");\r\n        b.item(\"EditorDataSource\", \"(w:EditorItemsSource,wf:EditorItemsSource)ExportedType:BaseDataSource:BaseDataSource\");\r\n        b.item(\"EditorTextField\", \"String\");\r\n        b.item(\"EditorValueField\", \"Array:string\");\r\n    };\r\n    NumericColumnDescriptionMetadata.d = function (a) {\r\n        NumericColumnDescriptionMetadata.b(a);\r\n        a.n(\"NumericColumn\", function () { return new NumericColumnDescription(); });\r\n        a.m(\"NumericColumn\", NumericColumnDescriptionMetadata.a);\r\n    };\r\n    NumericColumnDescriptionMetadata.$t = markType(NumericColumnDescriptionMetadata, 'NumericColumnDescriptionMetadata');\r\n    NumericColumnDescriptionMetadata.a = null;\r\n    return NumericColumnDescriptionMetadata;\r\n}(Base));\r\nexport { NumericColumnDescriptionMetadata };\r\n//# sourceMappingURL=NumericColumnDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}