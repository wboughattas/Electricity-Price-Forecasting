{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, getBoxIfEnum, typeCastObjTo$t, markType } from \"./type\";\nimport { Task } from \"./Task\";\nimport { TaskCompletionSource$1 } from \"./TaskCompletionSource$1\";\n/**\r\n * @hidden\r\n */\n\nvar TaskFactory =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TaskFactory, _super);\n\n  function TaskFactory() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TaskFactory.prototype.c = function (a, b) {\n    return new Task(0, this.b(this.a(a)).always(function () {\n      return b(a);\n    }));\n  };\n\n  TaskFactory.prototype.d = function ($tResult, a, b) {\n    var c = new TaskCompletionSource$1($tResult, 0);\n    this.b(this.a(a)).always(function () {\n      try {\n        var d = b(a);\n        c.e(d);\n      } catch (e) {\n        c.d(e);\n      }\n    });\n    return c.b;\n  };\n\n  TaskFactory.prototype.e = function ($tAntecedentResult, $tResult, a, b) {\n    var c = function (d) {\n      return getBoxIfEnum($tResult, b(d));\n    };\n\n    return this.d(Base.$, a, c).k($tResult, function (d) {\n      return typeCastObjTo$t($tResult, d.n);\n    });\n  };\n\n  TaskFactory.prototype.a = function (a) {\n    var b = new Array(a.length);\n\n    for (var c = 0; c < a.length; c++) {\n      b[c] = a[c].d;\n    }\n\n    return b;\n  };\n\n  TaskFactory.prototype.b = function (a) {\n    var promises_ = a;\n    var b = null;\n    return b;\n  };\n\n  TaskFactory.$t = markType(TaskFactory, 'TaskFactory');\n  return TaskFactory;\n}(Base);\n\nexport { TaskFactory };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TaskFactory.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAA0B,YAA1B,EAAwC,eAAxC,EAA+D,QAA/D,QAA+E,QAA/E;AACA,SAAS,IAAT,QAAqB,QAArB;AAGA,SAAS,sBAAT,QAAuC,0BAAvC;AAEA;;AAEG;;AACH,IAAA,WAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,EAAA,MAAA;;AAAjC,WAAA,WAAA,GAAA;;AAkCC;;AAhCA,EAAA,WAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAa,CAAb,EAAsC;AACrC,WAAO,IAAI,IAAJ,CAAS,CAAT,EAAY,KAAK,CAAL,CAAO,KAAK,CAAL,CAAO,CAAP,CAAP,EAAkB,MAAlB,CAAyB,YAAA;AAAM,aAAA,CAAC,CAAD,CAAC,CAAD;AAAI,KAAnC,CAAZ,CAAP;AACA,GAFD;;AAGA,EAAA,WAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAW,QAAX,EAA2B,CAA3B,EAAsC,CAAtC,EAAkE;AACjE,QAAI,CAAC,GAAoC,IAAI,sBAAJ,CAAoC,QAApC,EAA8C,CAA9C,CAAzC;AACA,SAAK,CAAL,CAAO,KAAK,CAAL,CAAO,CAAP,CAAP,EAAkB,MAAlB,CAAyB,YAAA;AACxB,UAAI;AACH,YAAI,CAAC,GAAY,CAAC,CAAC,CAAD,CAAlB;AACA,QAAA,CAAC,CAAC,CAAF,CAAI,CAAJ;AACA,OAHD,CAIA,OAAO,CAAP,EAAU;AACT,QAAA,CAAC,CAAC,CAAF,CAAgB,CAAhB;AACA;AACD,KARD;AASA,WAAO,CAAC,CAAC,CAAT;AACA,GAZD;;AAaA,EAAA,WAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAA8B,kBAA9B,EAAwD,QAAxD,EAAwE,CAAxE,EAAwG,CAAxG,EAAyJ;AACxJ,QAAI,CAAC,GAA0B,UAAC,CAAD,EAAU;AAAK,aAAA,YAAY,CAAU,QAAV,EAAoB,CAAC,CAAjC,CAAiC,CAArB,CAAZ;AAAkE,KAAhH;;AACA,WAAO,KAAK,CAAL,CAAkB,IAAK,CAAC,CAAxB,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,CAAoD,QAApD,EAA8D,UAAC,CAAD,EAAe;AAAK,aAAA,eAAe,CAAU,QAAV,EAAoB,CAAC,CAApC,CAAe,CAAf;AAAuC,KAAzH,CAAP;AACA,GAHD;;AAIQ,EAAA,WAAA,CAAA,SAAA,CAAA,CAAA,GAAR,UAAU,CAAV,EAAmB;AAClB,QAAI,CAAC,GAAuC,IAAI,KAAJ,CAAU,CAAC,CAAC,MAAZ,CAA5C;;AACA,SAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,GAAG,CAAC,CAAC,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AAC1C,MAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAAD,CAAK,CAAZ;AACA;;AACD,WAAO,CAAP;AACA,GANO;;AAOA,EAAA,WAAA,CAAA,SAAA,CAAA,CAAA,GAAR,UAAU,CAAV,EAA6B;AAC5B,QAAI,SAAS,GAAqB,CAAlC;AACA,QAAI,CAAC,GAAmB,IAAxB;AACA,WAAO,CAAP;AACA,GAJO;;AA5BD,EAAA,WAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,WAAD,EAAc,aAAd,CAAnB;AAiCR,SAAA,WAAA;AAAC,CAlCD,CAAiC,IAAjC,CAAA;;SAAa,W","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, getBoxIfEnum, typeCastObjTo$t, markType } from \"./type\";\r\nimport { Task } from \"./Task\";\r\nimport { TaskCompletionSource$1 } from \"./TaskCompletionSource$1\";\r\n/**\r\n * @hidden\r\n */\r\nvar TaskFactory = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(TaskFactory, _super);\r\n    function TaskFactory() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TaskFactory.prototype.c = function (a, b) {\r\n        return new Task(0, this.b(this.a(a)).always(function () { return b(a); }));\r\n    };\r\n    TaskFactory.prototype.d = function ($tResult, a, b) {\r\n        var c = new TaskCompletionSource$1($tResult, 0);\r\n        this.b(this.a(a)).always(function () {\r\n            try {\r\n                var d = b(a);\r\n                c.e(d);\r\n            }\r\n            catch (e) {\r\n                c.d((e));\r\n            }\r\n        });\r\n        return c.b;\r\n    };\r\n    TaskFactory.prototype.e = function ($tAntecedentResult, $tResult, a, b) {\r\n        var c = function (d) { return getBoxIfEnum($tResult, b(d)); };\r\n        return this.d(Base.$, a, c).k($tResult, function (d) { return typeCastObjTo$t($tResult, d.n); });\r\n    };\r\n    TaskFactory.prototype.a = function (a) {\r\n        var b = new Array(a.length);\r\n        for (var c = 0; c < a.length; c++) {\r\n            b[c] = a[c].d;\r\n        }\r\n        return b;\r\n    };\r\n    TaskFactory.prototype.b = function (a) {\r\n        var promises_ = a;\r\n        var b = null;\r\n        return b;\r\n    };\r\n    TaskFactory.$t = markType(TaskFactory, 'TaskFactory');\r\n    return TaskFactory;\r\n}(Base));\r\nexport { TaskFactory };\r\n//# sourceMappingURL=TaskFactory.js.map\r\n"]},"metadata":{},"sourceType":"module"}