{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PolarLineSeriesBaseDescriptionMetadata } from \"./PolarLineSeriesBaseDescriptionMetadata\";\nimport { PolarLineSeriesDescription } from \"./PolarLineSeriesDescription\";\n/**\n * @hidden\n */\n\nvar PolarLineSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolarLineSeriesDescriptionMetadata, _super);\n\n  function PolarLineSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PolarLineSeriesDescriptionMetadata.b = function (a) {\n    if (PolarLineSeriesDescriptionMetadata.a == null) {\n      PolarLineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      PolarLineSeriesDescriptionMetadata.c(a, PolarLineSeriesDescriptionMetadata.a);\n    }\n  };\n\n  PolarLineSeriesDescriptionMetadata.c = function (a, b) {\n    PolarLineSeriesBaseDescriptionMetadata.c(a, b);\n    b.item(\"UnknownValuePlotting\", \"ExportedType:string:UnknownValuePlotting\");\n  };\n\n  PolarLineSeriesDescriptionMetadata.d = function (a) {\n    PolarLineSeriesDescriptionMetadata.b(a);\n    a.n(\"PolarLineSeries\", function () {\n      return new PolarLineSeriesDescription();\n    });\n    a.m(\"PolarLineSeries\", PolarLineSeriesDescriptionMetadata.a);\n  };\n\n  PolarLineSeriesDescriptionMetadata.$t = markType(PolarLineSeriesDescriptionMetadata, 'PolarLineSeriesDescriptionMetadata');\n  PolarLineSeriesDescriptionMetadata.a = null;\n  return PolarLineSeriesDescriptionMetadata;\n}(Base);\n\nexport { PolarLineSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PolarLineSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,sCAAT,QAAuD,0CAAvD;AACA,SAAS,0BAAT,QAA2C,8BAA3C;AAEA;;AAEG;;AACH,IAAA,kCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwD,EAAA,OAAA,CAAA,SAAA,CAAA,kCAAA,EAAA,MAAA;;AAAxD,WAAA,kCAAA,GAAA;;AAkBC;;AAfe,EAAA,kCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,kCAAkC,CAAC,CAAnC,IAAwC,IAA5C,EAAkD;AACjD,MAAA,kCAAkC,CAAC,CAAnC,GAAuC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAvC;AACA,MAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC,EAAwC,kCAAkC,CAAC,CAA3E;AACA;AACD,GALc;;AAMR,EAAA,kCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,sCAAsC,CAAC,CAAvC,CAAyC,CAAzC,EAA4C,CAA5C;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,sBAAP,EAA+B,0CAA/B;AACA,GAHM;;AAIA,EAAA,kCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,iBAAJ,EAAuB,YAAA;AAAM,aAAA,IAAA,0BAAA,EAAA;AAAgC,KAA7D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,iBAAJ,EAAuB,kCAAkC,CAAC,CAA1D;AACA,GAJM;;AAZA,EAAA,kCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,kCAAD,EAAqC,oCAArC,CAAnB;AACQ,EAAA,kCAAA,CAAA,CAAA,GAAkC,IAAlC;AAgBhB,SAAA,kCAAA;AAAC,CAlBD,CAAwD,IAAxD,CAAA;;SAAa,kC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PolarLineSeriesBaseDescriptionMetadata } from \"./PolarLineSeriesBaseDescriptionMetadata\";\nimport { PolarLineSeriesDescription } from \"./PolarLineSeriesDescription\";\n/**\n * @hidden\n */\nvar PolarLineSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolarLineSeriesDescriptionMetadata, _super);\n    function PolarLineSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PolarLineSeriesDescriptionMetadata.b = function (a) {\n        if (PolarLineSeriesDescriptionMetadata.a == null) {\n            PolarLineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            PolarLineSeriesDescriptionMetadata.c(a, PolarLineSeriesDescriptionMetadata.a);\n        }\n    };\n    PolarLineSeriesDescriptionMetadata.c = function (a, b) {\n        PolarLineSeriesBaseDescriptionMetadata.c(a, b);\n        b.item(\"UnknownValuePlotting\", \"ExportedType:string:UnknownValuePlotting\");\n    };\n    PolarLineSeriesDescriptionMetadata.d = function (a) {\n        PolarLineSeriesDescriptionMetadata.b(a);\n        a.n(\"PolarLineSeries\", function () { return new PolarLineSeriesDescription(); });\n        a.m(\"PolarLineSeries\", PolarLineSeriesDescriptionMetadata.a);\n    };\n    PolarLineSeriesDescriptionMetadata.$t = markType(PolarLineSeriesDescriptionMetadata, 'PolarLineSeriesDescriptionMetadata');\n    PolarLineSeriesDescriptionMetadata.a = null;\n    return PolarLineSeriesDescriptionMetadata;\n}(Base));\nexport { PolarLineSeriesDescriptionMetadata };\n//# sourceMappingURL=PolarLineSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}