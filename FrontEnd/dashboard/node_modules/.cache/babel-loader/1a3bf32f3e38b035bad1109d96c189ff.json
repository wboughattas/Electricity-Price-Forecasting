{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\n/**\r\n * @hidden\r\n */\n\nvar NameValueCollection =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(NameValueCollection, _super);\n\n  function NameValueCollection() {\n    var _this = _super.call(this) || this;\n\n    _this.a = null;\n    _this.a = new Dictionary$2(String_$type, String_$type, 0);\n    return _this;\n  }\n\n  NameValueCollection.prototype.item = function (a, b) {\n    if (arguments.length === 2) {\n      if (this.a.containsKey(a)) {\n        this.a.item(a, b);\n      } else {\n        this.a.addItem(a, b);\n      }\n\n      return b;\n    } else {\n      if (this.a.containsKey(a)) {\n        return this.a.item(a);\n      } else {\n        return null;\n      }\n    }\n  };\n\n  NameValueCollection.$t = markType(NameValueCollection, 'NameValueCollection');\n  return NameValueCollection;\n}(Base);\n\nexport { NameValueCollection };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/NameValueCollection.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AACA,SAAS,YAAT,QAA6B,gBAA7B;AAEA;;AAEG;;AACH,IAAA,mBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,OAAA,CAAA,SAAA,CAAA,mBAAA,EAAA,MAAA;;AAGxC,WAAA,mBAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AADQ,IAAA,KAAA,CAAA,CAAA,GAAkC,IAAlC;AAGP,IAAA,KAAI,CAAC,CAAL,GAAS,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAT;;AACA;;AACD,EAAA,mBAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,CAAL,EAAgB,CAAhB,EAA0B;AACzB,QAAI,SAAS,CAAC,MAAV,KAAqB,CAAzB,EAA4B;AAC3B,UAAI,KAAK,CAAL,CAAO,WAAP,CAAmB,CAAnB,CAAJ,EAA2B;AAC1B,aAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,EAAe,CAAf;AACA,OAFD,MAEO;AACN,aAAK,CAAL,CAAO,OAAP,CAAe,CAAf,EAAkB,CAAlB;AACA;;AACD,aAAO,CAAP;AACA,KAPD,MAOO;AACN,UAAI,KAAK,CAAL,CAAO,WAAP,CAAmB,CAAnB,CAAJ,EAA2B;AAC1B,eAAO,KAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,CAAP;AACA,OAFD,MAEO;AACN,eAAO,IAAP;AACA;AACD;AACD,GAfD;;AANO,EAAA,mBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,mBAAD,EAAsB,qBAAtB,CAAnB;AAsBR,SAAA,mBAAA;AAAC,CAvBD,CAAyC,IAAzC,CAAA;;SAAa,mB","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\n/**\r\n * @hidden\r\n */\r\nvar NameValueCollection = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(NameValueCollection, _super);\r\n    function NameValueCollection() {\r\n        var _this = _super.call(this) || this;\r\n        _this.a = null;\r\n        _this.a = new Dictionary$2(String_$type, String_$type, 0);\r\n        return _this;\r\n    }\r\n    NameValueCollection.prototype.item = function (a, b) {\r\n        if (arguments.length === 2) {\r\n            if (this.a.containsKey(a)) {\r\n                this.a.item(a, b);\r\n            }\r\n            else {\r\n                this.a.addItem(a, b);\r\n            }\r\n            return b;\r\n        }\r\n        else {\r\n            if (this.a.containsKey(a)) {\r\n                return this.a.item(a);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    NameValueCollection.$t = markType(NameValueCollection, 'NameValueCollection');\r\n    return NameValueCollection;\r\n}(Base));\r\nexport { NameValueCollection };\r\n//# sourceMappingURL=NameValueCollection.js.map\r\n"]},"metadata":{},"sourceType":"module"}