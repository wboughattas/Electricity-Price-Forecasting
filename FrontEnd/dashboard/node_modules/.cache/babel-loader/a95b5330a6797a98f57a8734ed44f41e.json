{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GridColumnOptionsSimpleSectionBaseDescriptionMetadata } from \"./GridColumnOptionsSimpleSectionBaseDescriptionMetadata\";\nimport { GridColumnHideOptionsDescription } from \"./GridColumnHideOptionsDescription\";\n/**\r\n * @hidden\r\n */\n\nvar GridColumnHideOptionsDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(GridColumnHideOptionsDescriptionMetadata, _super);\n\n  function GridColumnHideOptionsDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GridColumnHideOptionsDescriptionMetadata.b = function (a) {\n    if (GridColumnHideOptionsDescriptionMetadata.a == null) {\n      GridColumnHideOptionsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GridColumnHideOptionsDescriptionMetadata.c(a, GridColumnHideOptionsDescriptionMetadata.a);\n    }\n  };\n\n  GridColumnHideOptionsDescriptionMetadata.c = function (a, b) {\n    GridColumnOptionsSimpleSectionBaseDescriptionMetadata.c(a, b);\n  };\n\n  GridColumnHideOptionsDescriptionMetadata.d = function (a) {\n    GridColumnHideOptionsDescriptionMetadata.b(a);\n    a.n(\"GridColumnHideOptions\", function () {\n      return new GridColumnHideOptionsDescription();\n    });\n    a.m(\"GridColumnHideOptions\", GridColumnHideOptionsDescriptionMetadata.a);\n  };\n\n  GridColumnHideOptionsDescriptionMetadata.$t = markType(GridColumnHideOptionsDescriptionMetadata, 'GridColumnHideOptionsDescriptionMetadata');\n  GridColumnHideOptionsDescriptionMetadata.a = null;\n  return GridColumnHideOptionsDescriptionMetadata;\n}(Base);\n\nexport { GridColumnHideOptionsDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/GridColumnHideOptionsDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,qDAAT,QAAsE,yDAAtE;AACA,SAAS,gCAAT,QAAiD,oCAAjD;AAEA;;AAEG;;AACH,IAAA,wCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8D,EAAA,OAAA,CAAA,SAAA,CAAA,wCAAA,EAAA,MAAA;;AAA9D,WAAA,wCAAA,GAAA;;AAiBC;;AAde,EAAA,wCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,wCAAwC,CAAC,CAAzC,IAA8C,IAAlD,EAAwD;AACvD,MAAA,wCAAwC,CAAC,CAAzC,GAA6C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA7C;AACA,MAAA,wCAAwC,CAAC,CAAzC,CAA2C,CAA3C,EAA8C,wCAAwC,CAAC,CAAvF;AACA;AACD,GALc;;AAMR,EAAA,wCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,qDAAqD,CAAC,CAAtD,CAAwD,CAAxD,EAA2D,CAA3D;AACA,GAFM;;AAGA,EAAA,wCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,wCAAwC,CAAC,CAAzC,CAA2C,CAA3C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,uBAAJ,EAA6B,YAAA;AAAM,aAAA,IAAA,gCAAA,EAAA;AAAsC,KAAzE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,uBAAJ,EAA6B,wCAAwC,CAAC,CAAtE;AACA,GAJM;;AAXA,EAAA,wCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,wCAAD,EAA2C,0CAA3C,CAAnB;AACQ,EAAA,wCAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,wCAAA;AAAC,CAjBD,CAA8D,IAA9D,CAAA;;SAAa,wC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { GridColumnOptionsSimpleSectionBaseDescriptionMetadata } from \"./GridColumnOptionsSimpleSectionBaseDescriptionMetadata\";\r\nimport { GridColumnHideOptionsDescription } from \"./GridColumnHideOptionsDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar GridColumnHideOptionsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(GridColumnHideOptionsDescriptionMetadata, _super);\r\n    function GridColumnHideOptionsDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    GridColumnHideOptionsDescriptionMetadata.b = function (a) {\r\n        if (GridColumnHideOptionsDescriptionMetadata.a == null) {\r\n            GridColumnHideOptionsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            GridColumnHideOptionsDescriptionMetadata.c(a, GridColumnHideOptionsDescriptionMetadata.a);\r\n        }\r\n    };\r\n    GridColumnHideOptionsDescriptionMetadata.c = function (a, b) {\r\n        GridColumnOptionsSimpleSectionBaseDescriptionMetadata.c(a, b);\r\n    };\r\n    GridColumnHideOptionsDescriptionMetadata.d = function (a) {\r\n        GridColumnHideOptionsDescriptionMetadata.b(a);\r\n        a.n(\"GridColumnHideOptions\", function () { return new GridColumnHideOptionsDescription(); });\r\n        a.m(\"GridColumnHideOptions\", GridColumnHideOptionsDescriptionMetadata.a);\r\n    };\r\n    GridColumnHideOptionsDescriptionMetadata.$t = markType(GridColumnHideOptionsDescriptionMetadata, 'GridColumnHideOptionsDescriptionMetadata');\r\n    GridColumnHideOptionsDescriptionMetadata.a = null;\r\n    return GridColumnHideOptionsDescriptionMetadata;\r\n}(Base));\r\nexport { GridColumnHideOptionsDescriptionMetadata };\r\n//# sourceMappingURL=GridColumnHideOptionsDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}