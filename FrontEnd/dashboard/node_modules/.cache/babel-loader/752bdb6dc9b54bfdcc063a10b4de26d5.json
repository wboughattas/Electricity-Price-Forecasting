{"ast":null,"code":"//\n// System.Xml.XmlTextReader\n//\n// Author:\n//   Jason Diamond (jason@injektilo.org)\n//   Adam Treat (manyoso@yahoo.com)\n//   Atsushi Enomoto  (ginga@kit.hi-ho.ne.jp)\n//\n// (C) 2001, 2002 Jason Diamond  http://injektilo.org/\n// Copyright (C) 2005-2006 Novell, Inc (http://www.novell.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n//#define USE_NAME_BUFFER\nimport * as tslib_1 from \"tslib\"; //\n// Optimization TODOs:\n//\n//\t- support PushbackChar() which reverts one character read.\n//\t\t- ReadTextReader() should always keep one pushback buffer\n//\t\t  as pushback safety net.\n//\t- Replace (peek,read) * n -> read * n + pushback\n//\n\nimport { ValueType, markStruct } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar XmlTextReader_TagName =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(XmlTextReader_TagName, _super);\n\n  function XmlTextReader_TagName(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.b = null;\n    _this.a = null;\n    _this.c = null;\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          var d = _rest[1];\n          var e = _rest[2];\n          _this.b = c;\n          _this.a = d;\n          _this.c = e;\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  XmlTextReader_TagName.$t = markStruct(XmlTextReader_TagName, 'XmlTextReader_TagName');\n  return XmlTextReader_TagName;\n}(ValueType);\n\nexport { XmlTextReader_TagName };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/XmlTextReader_TagName.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;kCAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS,SAAT,EAAoB,UAApB,QAA4C,QAA5C;AAEA;;AAEG;;AACH,IAAA,qBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2C,EAAA,OAAA,CAAA,SAAA,CAAA,qBAAA,EAAA,MAAA;;AAK1C,WAAA,qBAAA,CAAY,CAAZ,EAAsB;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAe;AAAf,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAxB,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAmBS,IAAA,KAAA,CAAA,CAAA,GAAY,IAAZ;AACA,IAAA,KAAA,CAAA,CAAA,GAAY,IAAZ;AACA,IAAA,KAAA,CAAA,CAAA,GAAY,IAAZ;AAnBR,IAAA,CAAC,GAAI,CAAC,IAAI,KAAK,CAAX,GAAgB,CAAhB,GAAoB,CAAxB;;AACA,YAAQ,CAAR;AACC,WAAK,CAAL;AAAQ;;AACR,WAAK,CAAL;AACA;AACC,cAAI,CAAC,GAAmB,KAAK,CAAC,CAAD,CAA7B;AACA,cAAI,CAAC,GAAmB,KAAK,CAAC,CAAD,CAA7B;AACA,cAAI,CAAC,GAAmB,KAAK,CAAC,CAAD,CAA7B;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,CAAT;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,CAAT;AACA,UAAA,KAAI,CAAC,CAAL,GAAS,CAAT;AACA;AACD;AAXD;;;AAeA;;AAtBM,EAAA,qBAAA,CAAA,EAAA,GAAW,UAAU,CAAC,qBAAD,EAAwB,uBAAxB,CAArB;AA0BR,SAAA,qBAAA;AAAC,CA3BD,CAA2C,SAA3C,CAAA;;SAAa,qB","sourceRoot":"","sourcesContent":["//\r\n// System.Xml.XmlTextReader\r\n//\r\n// Author:\r\n//   Jason Diamond (jason@injektilo.org)\r\n//   Adam Treat (manyoso@yahoo.com)\r\n//   Atsushi Enomoto  (ginga@kit.hi-ho.ne.jp)\r\n//\r\n// (C) 2001, 2002 Jason Diamond  http://injektilo.org/\r\n// Copyright (C) 2005-2006 Novell, Inc (http://www.novell.com)\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to\r\n// permit persons to whom the Software is furnished to do so, subject to\r\n// the following conditions:\r\n// \r\n// The above copyright notice and this permission notice shall be\r\n// included in all copies or substantial portions of the Software.\r\n// \r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n//\r\n//#define USE_NAME_BUFFER\r\nimport * as tslib_1 from \"tslib\";\r\n//\r\n// Optimization TODOs:\r\n//\r\n//\t- support PushbackChar() which reverts one character read.\r\n//\t\t- ReadTextReader() should always keep one pushback buffer\r\n//\t\t  as pushback safety net.\r\n//\t- Replace (peek,read) * n -> read * n + pushback\r\n//\r\nimport { ValueType, markStruct } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar XmlTextReader_TagName = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(XmlTextReader_TagName, _super);\r\n    function XmlTextReader_TagName(a) {\r\n        var _rest = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            _rest[_i - 1] = arguments[_i];\r\n        }\r\n        var _this = _super.call(this) || this;\r\n        _this.b = null;\r\n        _this.a = null;\r\n        _this.c = null;\r\n        a = (a == void 0) ? 0 : a;\r\n        switch (a) {\r\n            case 0: break;\r\n            case 1:\r\n                {\r\n                    var c = _rest[0];\r\n                    var d = _rest[1];\r\n                    var e = _rest[2];\r\n                    _this.b = c;\r\n                    _this.a = d;\r\n                    _this.c = e;\r\n                }\r\n                break;\r\n        }\r\n        return _this;\r\n    }\r\n    XmlTextReader_TagName.$t = markStruct(XmlTextReader_TagName, 'XmlTextReader_TagName');\r\n    return XmlTextReader_TagName;\r\n}(ValueType));\r\nexport { XmlTextReader_TagName };\r\n//# sourceMappingURL=XmlTextReader_TagName.js.map\r\n"]},"metadata":{},"sourceType":"module"}