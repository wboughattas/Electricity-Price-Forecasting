{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { CheckboxChangeEventArgsDescriptionMetadata } from \"./CheckboxChangeEventArgsDescriptionMetadata\";\nimport { CheckboxDescription } from \"./CheckboxDescription\";\n/**\r\n * @hidden\r\n */\n\nvar CheckboxDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(CheckboxDescriptionMetadata, _super);\n\n  function CheckboxDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CheckboxDescriptionMetadata.b = function (a) {\n    if (CheckboxDescriptionMetadata.a == null) {\n      CheckboxDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      CheckboxDescriptionMetadata.c(a, CheckboxDescriptionMetadata.a);\n      CheckboxChangeEventArgsDescriptionMetadata.d(a);\n    }\n  };\n\n  CheckboxDescriptionMetadata.c = function (a, b) {\n    b.item(\"BaseTheme\", \"ExportedType:string:BaseControlTheme\");\n    b.item(\"UncheckedBackgroundColor\", \"Brush\");\n    b.item(\"ActualUncheckedBackgroundColor\", \"Brush\");\n    b.item(\"CheckedBackgroundColor\", \"Brush\");\n    b.item(\"TickColor\", \"Brush\");\n    b.item(\"ActualTickColor\", \"Brush\");\n    b.item(\"UncheckedBorderColor\", \"Brush\");\n    b.item(\"CheckedBorderColor\", \"Brush\");\n    b.item(\"ActualUncheckedBorderColor\", \"Brush\");\n    b.item(\"ActualCheckedBorderColor\", \"Brush\");\n    b.item(\"BorderWidth\", \"Number:double\");\n    b.item(\"ActualBorderWidth\", \"Number:double\");\n    b.item(\"CornerRadius\", \"Number:double\");\n    b.item(\"TickStrokeWidth\", \"Number:double\");\n    b.item(\"ActualTickStrokeWidth\", \"Number:double\");\n    b.item(\"ActualCornerRadius\", \"Number:double\");\n    b.item(\"ActualCheckedBackgroundColor\", \"Brush\");\n    b.item(\"InputId\", \"String\");\n    b.item(\"Id\", \"String\");\n    b.item(\"LabelId\", \"String\");\n    b.item(\"ValueRef\", \"(w:Value,wf:Value)DataRef\");\n    b.item(\"Name\", \"String\");\n    b.item(\"TabIndex\", \"Number:int\");\n    b.item(\"Required\", \"Number:int\");\n    b.item(\"Focused\", \"(w:IsFocused,wf:IsFocused)Boolean\");\n    b.item(\"AriaLabelledBy\", \"String\");\n    b.item(\"AriaLabel\", \"String\");\n    b.item(\"LabelPosition\", \"ExportedType:string:CheckboxLabelPosition\");\n    b.item(\"DisableRipple\", \"Boolean\");\n    b.item(\"Checked\", \"(w:IsChecked,wf:IsChecked)Boolean\");\n    b.item(\"Indeterminate\", \"(w:IsIndeterminate,wf:IsIndeterminate)Boolean\");\n    b.item(\"Disabled\", \"(w:IsDisabled,wf:IsDisabled)Boolean\");\n    b.item(\"DisableTransitions\", \"Boolean\");\n    b.item(\"ChangeRef\", \"EventRef::change\");\n  };\n\n  CheckboxDescriptionMetadata.d = function (a) {\n    CheckboxDescriptionMetadata.b(a);\n    a.n(\"Checkbox\", function () {\n      return new CheckboxDescription();\n    });\n    a.m(\"Checkbox\", CheckboxDescriptionMetadata.a);\n  };\n\n  CheckboxDescriptionMetadata.$t = markType(CheckboxDescriptionMetadata, 'CheckboxDescriptionMetadata');\n  CheckboxDescriptionMetadata.a = null;\n  return CheckboxDescriptionMetadata;\n}(Base);\n\nexport { CheckboxDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/CheckboxDescriptionMetadata.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { CheckboxChangeEventArgsDescriptionMetadata } from \"./CheckboxChangeEventArgsDescriptionMetadata\";\r\nimport { CheckboxDescription } from \"./CheckboxDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar CheckboxDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(CheckboxDescriptionMetadata, _super);\r\n    function CheckboxDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CheckboxDescriptionMetadata.b = function (a) {\r\n        if (CheckboxDescriptionMetadata.a == null) {\r\n            CheckboxDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            CheckboxDescriptionMetadata.c(a, CheckboxDescriptionMetadata.a);\r\n            CheckboxChangeEventArgsDescriptionMetadata.d(a);\r\n        }\r\n    };\r\n    CheckboxDescriptionMetadata.c = function (a, b) {\r\n        b.item(\"BaseTheme\", \"ExportedType:string:BaseControlTheme\");\r\n        b.item(\"UncheckedBackgroundColor\", \"Brush\");\r\n        b.item(\"ActualUncheckedBackgroundColor\", \"Brush\");\r\n        b.item(\"CheckedBackgroundColor\", \"Brush\");\r\n        b.item(\"TickColor\", \"Brush\");\r\n        b.item(\"ActualTickColor\", \"Brush\");\r\n        b.item(\"UncheckedBorderColor\", \"Brush\");\r\n        b.item(\"CheckedBorderColor\", \"Brush\");\r\n        b.item(\"ActualUncheckedBorderColor\", \"Brush\");\r\n        b.item(\"ActualCheckedBorderColor\", \"Brush\");\r\n        b.item(\"BorderWidth\", \"Number:double\");\r\n        b.item(\"ActualBorderWidth\", \"Number:double\");\r\n        b.item(\"CornerRadius\", \"Number:double\");\r\n        b.item(\"TickStrokeWidth\", \"Number:double\");\r\n        b.item(\"ActualTickStrokeWidth\", \"Number:double\");\r\n        b.item(\"ActualCornerRadius\", \"Number:double\");\r\n        b.item(\"ActualCheckedBackgroundColor\", \"Brush\");\r\n        b.item(\"InputId\", \"String\");\r\n        b.item(\"Id\", \"String\");\r\n        b.item(\"LabelId\", \"String\");\r\n        b.item(\"ValueRef\", \"(w:Value,wf:Value)DataRef\");\r\n        b.item(\"Name\", \"String\");\r\n        b.item(\"TabIndex\", \"Number:int\");\r\n        b.item(\"Required\", \"Number:int\");\r\n        b.item(\"Focused\", \"(w:IsFocused,wf:IsFocused)Boolean\");\r\n        b.item(\"AriaLabelledBy\", \"String\");\r\n        b.item(\"AriaLabel\", \"String\");\r\n        b.item(\"LabelPosition\", \"ExportedType:string:CheckboxLabelPosition\");\r\n        b.item(\"DisableRipple\", \"Boolean\");\r\n        b.item(\"Checked\", \"(w:IsChecked,wf:IsChecked)Boolean\");\r\n        b.item(\"Indeterminate\", \"(w:IsIndeterminate,wf:IsIndeterminate)Boolean\");\r\n        b.item(\"Disabled\", \"(w:IsDisabled,wf:IsDisabled)Boolean\");\r\n        b.item(\"DisableTransitions\", \"Boolean\");\r\n        b.item(\"ChangeRef\", \"EventRef::change\");\r\n    };\r\n    CheckboxDescriptionMetadata.d = function (a) {\r\n        CheckboxDescriptionMetadata.b(a);\r\n        a.n(\"Checkbox\", function () { return new CheckboxDescription(); });\r\n        a.m(\"Checkbox\", CheckboxDescriptionMetadata.a);\r\n    };\r\n    CheckboxDescriptionMetadata.$t = markType(CheckboxDescriptionMetadata, 'CheckboxDescriptionMetadata');\r\n    CheckboxDescriptionMetadata.a = null;\r\n    return CheckboxDescriptionMetadata;\r\n}(Base));\r\nexport { CheckboxDescriptionMetadata };\r\n//# sourceMappingURL=CheckboxDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}