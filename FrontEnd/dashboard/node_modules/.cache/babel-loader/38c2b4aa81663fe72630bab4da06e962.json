{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FinancialIndicatorDescriptionMetadata } from \"./FinancialIndicatorDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar StrategyBasedIndicatorDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(StrategyBasedIndicatorDescriptionMetadata, _super);\n\n  function StrategyBasedIndicatorDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StrategyBasedIndicatorDescriptionMetadata.b = function (a) {\n    if (StrategyBasedIndicatorDescriptionMetadata.a == null) {\n      StrategyBasedIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      StrategyBasedIndicatorDescriptionMetadata.c(a, StrategyBasedIndicatorDescriptionMetadata.a);\n    }\n  };\n\n  StrategyBasedIndicatorDescriptionMetadata.c = function (a, b) {\n    FinancialIndicatorDescriptionMetadata.c(a, b);\n  };\n\n  StrategyBasedIndicatorDescriptionMetadata.d = function (a) {\n    StrategyBasedIndicatorDescriptionMetadata.b(a);\n    a.m(\"StrategyBasedIndicator\", StrategyBasedIndicatorDescriptionMetadata.a);\n  };\n\n  StrategyBasedIndicatorDescriptionMetadata.$t = markType(StrategyBasedIndicatorDescriptionMetadata, 'StrategyBasedIndicatorDescriptionMetadata');\n  StrategyBasedIndicatorDescriptionMetadata.a = null;\n  return StrategyBasedIndicatorDescriptionMetadata;\n}(Base);\n\nexport { StrategyBasedIndicatorDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/StrategyBasedIndicatorDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,qCAAT,QAAsD,yCAAtD;AAEA;;AAEG;;AACH,IAAA,yCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+D,EAAA,OAAA,CAAA,SAAA,CAAA,yCAAA,EAAA,MAAA;;AAA/D,WAAA,yCAAA,GAAA;;AAgBC;;AAbe,EAAA,yCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,yCAAyC,CAAC,CAA1C,IAA+C,IAAnD,EAAyD;AACxD,MAAA,yCAAyC,CAAC,CAA1C,GAA8C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA9C;AACA,MAAA,yCAAyC,CAAC,CAA1C,CAA4C,CAA5C,EAA+C,yCAAyC,CAAC,CAAzF;AACA;AACD,GALc;;AAMR,EAAA,yCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,qCAAqC,CAAC,CAAtC,CAAwC,CAAxC,EAA2C,CAA3C;AACA,GAFM;;AAGA,EAAA,yCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,yCAAyC,CAAC,CAA1C,CAA4C,CAA5C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,wBAAJ,EAA8B,yCAAyC,CAAC,CAAxE;AACA,GAHM;;AAXA,EAAA,yCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,yCAAD,EAA4C,2CAA5C,CAAnB;AACQ,EAAA,yCAAA,CAAA,CAAA,GAAkC,IAAlC;AAchB,SAAA,yCAAA;AAAC,CAhBD,CAA+D,IAA/D,CAAA;;SAAa,yC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FinancialIndicatorDescriptionMetadata } from \"./FinancialIndicatorDescriptionMetadata\";\n/**\n * @hidden\n */\nvar StrategyBasedIndicatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(StrategyBasedIndicatorDescriptionMetadata, _super);\n    function StrategyBasedIndicatorDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StrategyBasedIndicatorDescriptionMetadata.b = function (a) {\n        if (StrategyBasedIndicatorDescriptionMetadata.a == null) {\n            StrategyBasedIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            StrategyBasedIndicatorDescriptionMetadata.c(a, StrategyBasedIndicatorDescriptionMetadata.a);\n        }\n    };\n    StrategyBasedIndicatorDescriptionMetadata.c = function (a, b) {\n        FinancialIndicatorDescriptionMetadata.c(a, b);\n    };\n    StrategyBasedIndicatorDescriptionMetadata.d = function (a) {\n        StrategyBasedIndicatorDescriptionMetadata.b(a);\n        a.m(\"StrategyBasedIndicator\", StrategyBasedIndicatorDescriptionMetadata.a);\n    };\n    StrategyBasedIndicatorDescriptionMetadata.$t = markType(StrategyBasedIndicatorDescriptionMetadata, 'StrategyBasedIndicatorDescriptionMetadata');\n    StrategyBasedIndicatorDescriptionMetadata.a = null;\n    return StrategyBasedIndicatorDescriptionMetadata;\n}(Base));\nexport { StrategyBasedIndicatorDescriptionMetadata };\n//# sourceMappingURL=StrategyBasedIndicatorDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}