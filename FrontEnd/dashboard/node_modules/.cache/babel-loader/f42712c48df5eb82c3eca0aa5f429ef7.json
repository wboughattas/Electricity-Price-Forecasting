{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AsyncCompletedEventArgsDescriptionMetadata } from \"./AsyncCompletedEventArgsDescriptionMetadata\";\nimport { UploadStringCompletedEventArgsDescription } from \"./UploadStringCompletedEventArgsDescription\";\n/**\r\n * @hidden\r\n */\n\nvar UploadStringCompletedEventArgsDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(UploadStringCompletedEventArgsDescriptionMetadata, _super);\n\n  function UploadStringCompletedEventArgsDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  UploadStringCompletedEventArgsDescriptionMetadata.b = function (a) {\n    if (UploadStringCompletedEventArgsDescriptionMetadata.a == null) {\n      UploadStringCompletedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      UploadStringCompletedEventArgsDescriptionMetadata.c(a, UploadStringCompletedEventArgsDescriptionMetadata.a);\n    }\n  };\n\n  UploadStringCompletedEventArgsDescriptionMetadata.c = function (a, b) {\n    AsyncCompletedEventArgsDescriptionMetadata.c(a, b);\n  };\n\n  UploadStringCompletedEventArgsDescriptionMetadata.d = function (a) {\n    UploadStringCompletedEventArgsDescriptionMetadata.b(a);\n    a.n(\"UploadStringCompletedEventArgs\", function () {\n      return new UploadStringCompletedEventArgsDescription();\n    });\n    a.m(\"UploadStringCompletedEventArgs\", UploadStringCompletedEventArgsDescriptionMetadata.a);\n  };\n\n  UploadStringCompletedEventArgsDescriptionMetadata.$t = markType(UploadStringCompletedEventArgsDescriptionMetadata, 'UploadStringCompletedEventArgsDescriptionMetadata');\n  UploadStringCompletedEventArgsDescriptionMetadata.a = null;\n  return UploadStringCompletedEventArgsDescriptionMetadata;\n}(Base);\n\nexport { UploadStringCompletedEventArgsDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/UploadStringCompletedEventArgsDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,0CAAT,QAA2D,8CAA3D;AACA,SAAS,yCAAT,QAA0D,6CAA1D;AAEA;;AAEG;;AACH,IAAA,iDAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuE,EAAA,OAAA,CAAA,SAAA,CAAA,iDAAA,EAAA,MAAA;;AAAvE,WAAA,iDAAA,GAAA;;AAiBC;;AAde,EAAA,iDAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,iDAAiD,CAAC,CAAlD,IAAuD,IAA3D,EAAiE;AAChE,MAAA,iDAAiD,CAAC,CAAlD,GAAsD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAtD;AACA,MAAA,iDAAiD,CAAC,CAAlD,CAAoD,CAApD,EAAuD,iDAAiD,CAAC,CAAzG;AACA;AACD,GALc;;AAMR,EAAA,iDAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,0CAA0C,CAAC,CAA3C,CAA6C,CAA7C,EAAgD,CAAhD;AACA,GAFM;;AAGA,EAAA,iDAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,iDAAiD,CAAC,CAAlD,CAAoD,CAApD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,gCAAJ,EAAsC,YAAA;AAAM,aAAA,IAAA,yCAAA,EAAA;AAA+C,KAA3F;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,gCAAJ,EAAsC,iDAAiD,CAAC,CAAxF;AACA,GAJM;;AAXA,EAAA,iDAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,iDAAD,EAAoD,mDAApD,CAAnB;AACQ,EAAA,iDAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,iDAAA;AAAC,CAjBD,CAAuE,IAAvE,CAAA;;SAAa,iD","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { AsyncCompletedEventArgsDescriptionMetadata } from \"./AsyncCompletedEventArgsDescriptionMetadata\";\r\nimport { UploadStringCompletedEventArgsDescription } from \"./UploadStringCompletedEventArgsDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar UploadStringCompletedEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(UploadStringCompletedEventArgsDescriptionMetadata, _super);\r\n    function UploadStringCompletedEventArgsDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UploadStringCompletedEventArgsDescriptionMetadata.b = function (a) {\r\n        if (UploadStringCompletedEventArgsDescriptionMetadata.a == null) {\r\n            UploadStringCompletedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            UploadStringCompletedEventArgsDescriptionMetadata.c(a, UploadStringCompletedEventArgsDescriptionMetadata.a);\r\n        }\r\n    };\r\n    UploadStringCompletedEventArgsDescriptionMetadata.c = function (a, b) {\r\n        AsyncCompletedEventArgsDescriptionMetadata.c(a, b);\r\n    };\r\n    UploadStringCompletedEventArgsDescriptionMetadata.d = function (a) {\r\n        UploadStringCompletedEventArgsDescriptionMetadata.b(a);\r\n        a.n(\"UploadStringCompletedEventArgs\", function () { return new UploadStringCompletedEventArgsDescription(); });\r\n        a.m(\"UploadStringCompletedEventArgs\", UploadStringCompletedEventArgsDescriptionMetadata.a);\r\n    };\r\n    UploadStringCompletedEventArgsDescriptionMetadata.$t = markType(UploadStringCompletedEventArgsDescriptionMetadata, 'UploadStringCompletedEventArgsDescriptionMetadata');\r\n    UploadStringCompletedEventArgsDescriptionMetadata.a = null;\r\n    return UploadStringCompletedEventArgsDescriptionMetadata;\r\n}(Base));\r\nexport { UploadStringCompletedEventArgsDescriptionMetadata };\r\n//# sourceMappingURL=UploadStringCompletedEventArgsDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}