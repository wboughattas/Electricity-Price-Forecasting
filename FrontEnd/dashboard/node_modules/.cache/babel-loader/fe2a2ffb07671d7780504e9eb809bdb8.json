{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { isNaN_ } from \"./number\";\n/**\n * @hidden\n */\n\nvar DeviceUtils =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DeviceUtils, _super);\n\n  function DeviceUtils() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DeviceUtils.g = function (a) {\n    return a;\n  };\n\n  DeviceUtils.f = function (a) {\n    return a;\n  };\n\n  DeviceUtils.a = function (a) {\n    if (isNaN_(a)) {\n      return NaN;\n    }\n\n    if (a <= 0) {\n      return NaN;\n    }\n\n    return a;\n  };\n\n  DeviceUtils.c = function (a) {\n    return a * DeviceUtils.d();\n  };\n\n  DeviceUtils.b = function (a) {\n    return a * DeviceUtils.e();\n  };\n\n  DeviceUtils.d = function () {\n    var a = DeviceUtils.g(2);\n    return 2 / a;\n  };\n\n  DeviceUtils.e = function () {\n    var a = DeviceUtils.f(2);\n    return 2 / a;\n  };\n\n  DeviceUtils.$t = markType(DeviceUtils, 'DeviceUtils');\n  return DeviceUtils;\n}(Base);\n\nexport { DeviceUtils };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/DeviceUtils.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAqB,QAArB,QAAqC,QAArC;AACA,SAAS,MAAT,QAAuB,UAAvB;AAEA;;AAEG;;AACH,IAAA,WAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,EAAA,MAAA;;AAAjC,WAAA,WAAA,GAAA;;AA+BC;;AA7BO,EAAA,WAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkB;AACjB,WAAO,CAAP;AACA,GAFM;;AAGA,EAAA,WAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkB;AACjB,WAAO,CAAP;AACA,GAFM;;AAGA,EAAA,WAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkB;AACjB,QAAI,MAAM,CAAC,CAAD,CAAV,EAAe;AACd,aAAO,GAAP;AACA;;AACD,QAAI,CAAC,IAAI,CAAT,EAAY;AACX,aAAO,GAAP;AACA;;AACD,WAAO,CAAP;AACA,GARM;;AASA,EAAA,WAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkB;AACjB,WAAO,CAAC,GAAG,WAAW,CAAC,CAAZ,EAAX;AACA,GAFM;;AAGA,EAAA,WAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkB;AACjB,WAAO,CAAC,GAAG,WAAW,CAAC,CAAZ,EAAX;AACA,GAFM;;AAGA,EAAA,WAAA,CAAA,CAAA,GAAP,YAAA;AACC,QAAI,CAAC,GAAW,WAAW,CAAC,CAAZ,CAAc,CAAd,CAAhB;AACA,WAAO,IAAI,CAAX;AACA,GAHM;;AAIA,EAAA,WAAA,CAAA,CAAA,GAAP,YAAA;AACC,QAAI,CAAC,GAAW,WAAW,CAAC,CAAZ,CAAc,CAAd,CAAhB;AACA,WAAO,IAAI,CAAX;AACA,GAHM;;AA1BA,EAAA,WAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,WAAD,EAAc,aAAd,CAAnB;AA8BR,SAAA,WAAA;AAAC,CA/BD,CAAiC,IAAjC,CAAA;;SAAa,W","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { isNaN_ } from \"./number\";\n/**\n * @hidden\n */\nvar DeviceUtils = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DeviceUtils, _super);\n    function DeviceUtils() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DeviceUtils.g = function (a) {\n        return a;\n    };\n    DeviceUtils.f = function (a) {\n        return a;\n    };\n    DeviceUtils.a = function (a) {\n        if (isNaN_(a)) {\n            return NaN;\n        }\n        if (a <= 0) {\n            return NaN;\n        }\n        return a;\n    };\n    DeviceUtils.c = function (a) {\n        return a * DeviceUtils.d();\n    };\n    DeviceUtils.b = function (a) {\n        return a * DeviceUtils.e();\n    };\n    DeviceUtils.d = function () {\n        var a = DeviceUtils.g(2);\n        return 2 / a;\n    };\n    DeviceUtils.e = function () {\n        var a = DeviceUtils.f(2);\n        return 2 / a;\n    };\n    DeviceUtils.$t = markType(DeviceUtils, 'DeviceUtils');\n    return DeviceUtils;\n}(Base));\nexport { DeviceUtils };\n//# sourceMappingURL=DeviceUtils.js.map\n"]},"metadata":{},"sourceType":"module"}