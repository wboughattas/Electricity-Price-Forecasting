{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Point_$type, markType } from \"./type\";\nimport { Rect } from \"./Rect\";\nimport { Size } from \"./Size\";\nimport { Color } from \"./Color\";\n/**\r\n * @hidden\r\n */\n\nvar APIFactory =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(APIFactory, _super);\n\n  function APIFactory() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  APIFactory.createPoint = function (a, b) {\n    return {\n      $type: Point_$type,\n      x: a,\n      y: b\n    };\n  };\n\n  APIFactory.createRect = function (a, b, c, d) {\n    return new Rect(0, a, b, c, d);\n  };\n\n  APIFactory.createSize = function (a, b) {\n    return new Size(1, a, b);\n  };\n\n  APIFactory.createColor = function (a) {\n    var b = new Color();\n    b.colorString = a;\n    return b;\n  };\n\n  APIFactory.$t = markType(APIFactory, 'APIFactory');\n  return APIFactory;\n}(Base);\n\nexport { APIFactory };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/APIFactory.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAsB,WAAtB,EAAyC,QAAzC,QAAoE,QAApE;AACA,SAAS,IAAT,QAAqB,QAArB;AACA,SAAS,IAAT,QAAqB,QAArB;AACA,SAAS,KAAT,QAAsB,SAAtB;AAEA;;AAEG;;AACH,IAAA,UAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA;;AAAhC,WAAA,UAAA,GAAA;;AAgBC;;AAdO,EAAA,UAAA,CAAA,WAAA,GAAP,UAAmB,CAAnB,EAA8B,CAA9B,EAAuC;AACtC,WAAc;AAAE,MAAA,KAAK,EAAE,WAAT;AAAsB,MAAA,CAAC,EAAE,CAAzB;AAA4B,MAAA,CAAC,EAAE;AAA/B,KAAd;AACA,GAFM;;AAGA,EAAA,UAAA,CAAA,UAAA,GAAP,UAAkB,CAAlB,EAA6B,CAA7B,EAAwC,CAAxC,EAAmD,CAAnD,EAA4D;AAC3D,WAAO,IAAI,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAP;AACA,GAFM;;AAGA,EAAA,UAAA,CAAA,UAAA,GAAP,UAAkB,CAAlB,EAA6B,CAA7B,EAAsC;AACrC,WAAO,IAAI,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAP;AACA,GAFM;;AAGA,EAAA,UAAA,CAAA,WAAA,GAAP,UAAmB,CAAnB,EAA4B;AAC3B,QAAI,CAAC,GAAG,IAAI,KAAJ,EAAR;AACA,IAAA,CAAC,CAAC,WAAF,GAAgB,CAAhB;AACA,WAAO,CAAP;AACA,GAJM;;AAVA,EAAA,UAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,UAAD,EAAa,YAAb,CAAnB;AAeR,SAAA,UAAA;AAAC,CAhBD,CAAgC,IAAhC,CAAA;;SAAa,U","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, Point_$type, markType } from \"./type\";\r\nimport { Rect } from \"./Rect\";\r\nimport { Size } from \"./Size\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * @hidden\r\n */\r\nvar APIFactory = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(APIFactory, _super);\r\n    function APIFactory() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    APIFactory.createPoint = function (a, b) {\r\n        return { $type: Point_$type, x: a, y: b };\r\n    };\r\n    APIFactory.createRect = function (a, b, c, d) {\r\n        return new Rect(0, a, b, c, d);\r\n    };\r\n    APIFactory.createSize = function (a, b) {\r\n        return new Size(1, a, b);\r\n    };\r\n    APIFactory.createColor = function (a) {\r\n        var b = new Color();\r\n        b.colorString = a;\r\n        return b;\r\n    };\r\n    APIFactory.$t = markType(APIFactory, 'APIFactory');\r\n    return APIFactory;\r\n}(Base));\r\nexport { APIFactory };\r\n//# sourceMappingURL=APIFactory.js.map\r\n"]},"metadata":{},"sourceType":"module"}