{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { IVisualData_$type } from \"./IVisualData\";\nimport { PointData } from \"./PointData\";\nimport { List$1 } from \"./List$1\";\nimport { SegmentData } from \"./SegmentData\";\nimport { LineSegmentData } from \"./LineSegmentData\";\nimport { PolylineSegmentData } from \"./PolylineSegmentData\";\nimport { ArcSegmentData } from \"./ArcSegmentData\";\nimport { PolyBezierSegmentData } from \"./PolyBezierSegmentData\";\nimport { BezierSegmentData } from \"./BezierSegmentData\";\nimport { StringBuilder } from \"./StringBuilder\";\n/**\r\n * @hidden\r\n */\n\nvar PathFigureData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PathFigureData, _super);\n\n  function PathFigureData(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this._startPoint = null;\n    _this._segments = null;\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        {\n          _this.segments = new List$1(SegmentData.$, 0);\n          _this.startPoint = new PointData(NaN, NaN);\n        }\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          _this.segments = new List$1(SegmentData.$, 0);\n          _this.startPoint = PointData.b(c._startPoint);\n\n          for (var d = 0; d < c._segments.count; d++) {\n            var e = c._segments._inner[d];\n            var f = null;\n\n            switch (e.a) {\n              case 0:\n                f = new LineSegmentData(1, e);\n                break;\n\n              case 3:\n                f = new PolylineSegmentData(1, e);\n                break;\n\n              case 4:\n                f = new ArcSegmentData(1, e);\n                break;\n\n              case 2:\n                f = new PolyBezierSegmentData(1, e);\n                break;\n\n              case 1:\n                f = new BezierSegmentData(1, e);\n                break;\n            }\n\n            _this.segments.add(f);\n          }\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(PathFigureData.prototype, \"startPoint\", {\n    get: function () {\n      return this._startPoint;\n    },\n    set: function (a) {\n      this._startPoint = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PathFigureData.prototype, \"segments\", {\n    get: function () {\n      return this._segments;\n    },\n    set: function (a) {\n      this._segments = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PathFigureData.prototype.serialize = function () {\n    var a = new StringBuilder(0);\n    a.u(\"{\");\n\n    if (this.startPoint != null) {\n      a.u(\"startPoint: { x: \" + this.startPoint.x + \", y: \" + this.startPoint.y + \"}, \");\n    }\n\n    a.u(\"segments: [\");\n\n    for (var b = 0; b < this.segments.count; b++) {\n      if (b != 0) {\n        a.l(\", \");\n      }\n\n      a.l(this.segments._inner[b].serialize());\n    }\n\n    a.u(\"]\");\n    a.u(\"}\");\n    return a.toString();\n  };\n\n  PathFigureData.prototype.d = function (a) {\n    if (this.startPoint != null) {\n      this.startPoint = new PointData((this.startPoint.x - a.left) / a.width, (this.startPoint.y - a.top) / a.height);\n    }\n\n    for (var b = 0; b < this.segments.count; b++) {\n      this.segments._inner[b].scaleByViewport(a);\n    }\n  };\n\n  PathFigureData.prototype.getPointsOverride = function (a, b) {\n    var c = new List$1(PointData.$, 0);\n    a.add(c);\n\n    if (!b.ignoreFigureStartPoint) {\n      c.add(new PointData(this.startPoint.x, this.startPoint.y));\n    }\n\n    for (var d = 0; d < this.segments.count; d++) {\n      this.segments._inner[d].getPointsOverride(c, b);\n    }\n  };\n\n  PathFigureData.$t = markType(PathFigureData, 'PathFigureData', Base.$, [IVisualData_$type]);\n  return PathFigureData;\n}(Base);\n\nexport { PathFigureData };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PathFigureData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, markType } from \"./type\";\r\nimport { IVisualData_$type } from \"./IVisualData\";\r\nimport { PointData } from \"./PointData\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { SegmentData } from \"./SegmentData\";\r\nimport { LineSegmentData } from \"./LineSegmentData\";\r\nimport { PolylineSegmentData } from \"./PolylineSegmentData\";\r\nimport { ArcSegmentData } from \"./ArcSegmentData\";\r\nimport { PolyBezierSegmentData } from \"./PolyBezierSegmentData\";\r\nimport { BezierSegmentData } from \"./BezierSegmentData\";\r\nimport { StringBuilder } from \"./StringBuilder\";\r\n/**\r\n * @hidden\r\n */\r\nvar PathFigureData = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(PathFigureData, _super);\r\n    function PathFigureData(a) {\r\n        var _rest = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            _rest[_i - 1] = arguments[_i];\r\n        }\r\n        var _this = _super.call(this) || this;\r\n        _this._startPoint = null;\r\n        _this._segments = null;\r\n        a = (a == void 0) ? 0 : a;\r\n        switch (a) {\r\n            case 0:\r\n                {\r\n                    _this.segments = new List$1(SegmentData.$, 0);\r\n                    _this.startPoint = new PointData(NaN, NaN);\r\n                }\r\n                break;\r\n            case 1:\r\n                {\r\n                    var c = _rest[0];\r\n                    _this.segments = new List$1(SegmentData.$, 0);\r\n                    _this.startPoint = PointData.b(c._startPoint);\r\n                    for (var d = 0; d < c._segments.count; d++) {\r\n                        var e = c._segments._inner[d];\r\n                        var f = null;\r\n                        switch (e.a) {\r\n                            case 0:\r\n                                f = new LineSegmentData(1, e);\r\n                                break;\r\n                            case 3:\r\n                                f = new PolylineSegmentData(1, e);\r\n                                break;\r\n                            case 4:\r\n                                f = new ArcSegmentData(1, e);\r\n                                break;\r\n                            case 2:\r\n                                f = new PolyBezierSegmentData(1, e);\r\n                                break;\r\n                            case 1:\r\n                                f = new BezierSegmentData(1, e);\r\n                                break;\r\n                        }\r\n                        _this.segments.add(f);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PathFigureData.prototype, \"startPoint\", {\r\n        get: function () {\r\n            return this._startPoint;\r\n        },\r\n        set: function (a) {\r\n            this._startPoint = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PathFigureData.prototype, \"segments\", {\r\n        get: function () {\r\n            return this._segments;\r\n        },\r\n        set: function (a) {\r\n            this._segments = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PathFigureData.prototype.serialize = function () {\r\n        var a = new StringBuilder(0);\r\n        a.u(\"{\");\r\n        if (this.startPoint != null) {\r\n            a.u(\"startPoint: { x: \" + this.startPoint.x + \", y: \" + this.startPoint.y + \"}, \");\r\n        }\r\n        a.u(\"segments: [\");\r\n        for (var b = 0; b < this.segments.count; b++) {\r\n            if (b != 0) {\r\n                a.l(\", \");\r\n            }\r\n            a.l(this.segments._inner[b].serialize());\r\n        }\r\n        a.u(\"]\");\r\n        a.u(\"}\");\r\n        return a.toString();\r\n    };\r\n    PathFigureData.prototype.d = function (a) {\r\n        if (this.startPoint != null) {\r\n            this.startPoint = new PointData((this.startPoint.x - a.left) / a.width, (this.startPoint.y - a.top) / a.height);\r\n        }\r\n        for (var b = 0; b < this.segments.count; b++) {\r\n            this.segments._inner[b].scaleByViewport(a);\r\n        }\r\n    };\r\n    PathFigureData.prototype.getPointsOverride = function (a, b) {\r\n        var c = new List$1(PointData.$, 0);\r\n        a.add(c);\r\n        if (!b.ignoreFigureStartPoint) {\r\n            c.add(new PointData(this.startPoint.x, this.startPoint.y));\r\n        }\r\n        for (var d = 0; d < this.segments.count; d++) {\r\n            this.segments._inner[d].getPointsOverride(c, b);\r\n        }\r\n    };\r\n    PathFigureData.$t = markType(PathFigureData, 'PathFigureData', Base.$, [IVisualData_$type]);\r\n    return PathFigureData;\r\n}(Base));\r\nexport { PathFigureData };\r\n//# sourceMappingURL=PathFigureData.js.map\r\n"]},"metadata":{},"sourceType":"module"}