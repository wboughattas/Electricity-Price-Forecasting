{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { getEnumerator } from \"./type\";\nimport { EnumUtil } from './type';\nexport function stringStartsWith(str, check) {\n  return str.indexOf(check) == 0;\n}\nexport function stringEndsWith(str, check) {\n  var ind = str.lastIndexOf(check);\n  return ind >= 0 && ind == str.length - check.length;\n}\nexport function stringContains(str, check) {\n  return str.indexOf(check) != -1;\n}\nexport function stringCreateFromCharArray(charArray) {\n  return charArray.join(\"\");\n}\nexport function stringCreateFromChar(char, count) {\n  var ret = \"\";\n\n  for (var i = 0; i < count; i++) {\n    ret = ret + char;\n  }\n\n  return ret;\n}\nexport function stringCreateFromCharArraySlice(charArray, start, length) {\n  var ret = \"\";\n\n  for (var i = 0; i < length; i++) {\n    ret = ret + charArray[start + i];\n  }\n\n  return ret;\n}\n;\nexport function stringToCharArray(target) {\n  return target.split(\"\");\n}\nexport function stringCopyToCharArray(source, sourceIndex, destination, destinationIndex, count) {\n  for (var i = destinationIndex; i < destinationIndex + count; i++) {\n    destination[i] = source.charAt(sourceIndex + i - destinationIndex);\n  }\n}\n;\nexport function stringIsDigit(str, index) {\n  index = index || 0;\n  var ch = str.charAt(index);\n\n  if (ch >= \"0\" && ch <= \"9\") {\n    return true;\n  }\n\n  return false;\n}\n;\nexport function charMaxValue() {\n  return \"\\uffff\";\n}\nexport function charMinValue() {\n  return \"\\u0000\";\n} // static toDateTime(target: string) {\n// \tvar result = new Date(target);\n// \tif (!isNaN(+result)) {\n// \t\treturn result;\n// \t}\n// \t// TODO: Cache this regex?\n// \tif (/^((([0-9]{1,4})\\s*(\\s+((a|p)m?)\\s*))|(([0-9]{1,4})\\s*:\\s*([0-9]?[0-9])\\s*(:\\s*([0-9]?[0-9])\\s*(.\\s*([0-9]{0,4})[0-9]*\\s*)?)?(\\s+((a|p)m?)\\s*)?)|(\\s*([0-9]?[0-9])\\s*:\\s*([0-9]?[0-9])\\s*.\\s*([0-9]{0,4})[0-9]*\\s*(\\s+((a|p)m?)\\s*)?))$/i.test(target)) {\n// \t\t// The string can be a time string only, in which case we should return today at that time.\n// \t\treturn new Date(new Date().toDateString() + \" \" + target);\n// \t}\n// \tthrow new FormatException(1, \"The string cannot be converted to a date\");\n// }\n// static toDecimal(target: string) {\n// \tvar result = +target;\n// \tif (isNaN(result)) {\n// \t\tnew FormatException(1, \"The string cannot be converted to a number\");\n// \t}\n// \treturn result;\n// }\n\nexport function stringToString1(target) {\n  return target.toString();\n}\nexport function stringRemove(target, index, count) {\n  if (!count || index + count > target.length) {\n    return target.substr(0, index);\n  }\n\n  return target.substr(0, index) + target.substr(index + count);\n}\nexport function stringCompareTo(target, other) {\n  if (target == other) {\n    return 0;\n  }\n\n  if (target < other) {\n    return -1;\n  }\n\n  return 1;\n}\nexport var stringCompare = stringCompareTo;\nexport function stringIsNullOrEmpty(target) {\n  return !target || target.length < 1;\n}\nexport function stringIsNullOrWhiteSpace(target) {\n  return !target || target.trim().length < 1;\n}\nexport function stringEmpty() {\n  return \"\";\n}\nexport function stringEquals(target, other) {\n  return target == other;\n}\nexport function stringEscapeRegExp(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function createGuid() {\n  /*jslint bitwise: true */\n  function S4() {\n    return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n  }\n\n  return (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase();\n}\nexport function stringConcat() {\n  var _a;\n\n  var s = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    s[_i] = arguments[_i];\n  }\n\n  return (_a = String.prototype).concat.apply(_a, tslib_1.__spread(s));\n}\nexport function stringReplace(str, oldValue, newValue) {\n  return str.replace(new RegExp(stringEscapeRegExp(oldValue), \"g\"), newValue);\n}\nexport function stringJoin(sep) {\n  var vals = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    vals[_i - 1] = arguments[_i];\n  }\n\n  return vals.join(sep);\n}\nexport function stringJoin1($t, sep, vals) {\n  var result;\n  var en = getEnumerator(vals);\n\n  while (en.moveNext()) {\n    var v = en.current.toString();\n\n    if (result === undefined) {\n      result = v;\n    } else {\n      result += sep + v;\n    }\n  }\n\n  return result;\n}\nexport function stringToString$1($t, v) {\n  if (v !== null && $t) {\n    if ($t.isNullable) {\n      $t = $t.typeArguments[0];\n    }\n\n    if ($t.isEnumType) {\n      return EnumUtil.getName($t, v);\n    }\n  }\n\n  return v.toString();\n}\nexport function stringToLocaleLower(str, locale) {\n  if (locale == null || locale.name == null) return str.toLocaleLowerCase();\n  return str.toLocaleLowerCase(locale.name);\n}\nexport function stringToLocaleUpper(str, locale) {\n  if (locale == null || locale.name == null) return str.toLocaleUpperCase();\n  return str.toLocaleUpperCase(locale.name);\n}","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/string.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { getEnumerator } from \"./type\";\nimport { EnumUtil } from './type';\nexport function stringStartsWith(str, check) {\n    return str.indexOf(check) == 0;\n}\nexport function stringEndsWith(str, check) {\n    var ind = str.lastIndexOf(check);\n    return ind >= 0 && ind == str.length - check.length;\n}\nexport function stringContains(str, check) {\n    return str.indexOf(check) != -1;\n}\nexport function stringCreateFromCharArray(charArray) {\n    return charArray.join(\"\");\n}\nexport function stringCreateFromChar(char, count) {\n    var ret = \"\";\n    for (var i = 0; i < count; i++) {\n        ret = ret + char;\n    }\n    return ret;\n}\nexport function stringCreateFromCharArraySlice(charArray, start, length) {\n    var ret = \"\";\n    for (var i = 0; i < length; i++) {\n        ret = ret + charArray[start + i];\n    }\n    return ret;\n}\n;\nexport function stringToCharArray(target) {\n    return target.split(\"\");\n}\nexport function stringCopyToCharArray(source, sourceIndex, destination, destinationIndex, count) {\n    for (var i = destinationIndex; i < destinationIndex + count; i++) {\n        destination[i] = source.charAt(sourceIndex + i - destinationIndex);\n    }\n}\n;\nexport function stringIsDigit(str, index) {\n    index = index || 0;\n    var ch = str.charAt(index);\n    if (ch >= \"0\" && ch <= \"9\") {\n        return true;\n    }\n    return false;\n}\n;\nexport function charMaxValue() {\n    return \"\\uffff\";\n}\nexport function charMinValue() {\n    return \"\\u0000\";\n}\n// static toDateTime(target: string) {\n// \tvar result = new Date(target);\n// \tif (!isNaN(+result)) {\n// \t\treturn result;\n// \t}\n// \t// TODO: Cache this regex?\n// \tif (/^((([0-9]{1,4})\\s*(\\s+((a|p)m?)\\s*))|(([0-9]{1,4})\\s*:\\s*([0-9]?[0-9])\\s*(:\\s*([0-9]?[0-9])\\s*(.\\s*([0-9]{0,4})[0-9]*\\s*)?)?(\\s+((a|p)m?)\\s*)?)|(\\s*([0-9]?[0-9])\\s*:\\s*([0-9]?[0-9])\\s*.\\s*([0-9]{0,4})[0-9]*\\s*(\\s+((a|p)m?)\\s*)?))$/i.test(target)) {\n// \t\t// The string can be a time string only, in which case we should return today at that time.\n// \t\treturn new Date(new Date().toDateString() + \" \" + target);\n// \t}\n// \tthrow new FormatException(1, \"The string cannot be converted to a date\");\n// }\n// static toDecimal(target: string) {\n// \tvar result = +target;\n// \tif (isNaN(result)) {\n// \t\tnew FormatException(1, \"The string cannot be converted to a number\");\n// \t}\n// \treturn result;\n// }\nexport function stringToString1(target) {\n    return target.toString();\n}\nexport function stringRemove(target, index, count) {\n    if (!count || ((index + count) > target.length)) {\n        return target.substr(0, index);\n    }\n    return target.substr(0, index) + target.substr(index + count);\n}\nexport function stringCompareTo(target, other) {\n    if (target == other) {\n        return 0;\n    }\n    if (target < other) {\n        return -1;\n    }\n    return 1;\n}\nexport var stringCompare = stringCompareTo;\nexport function stringIsNullOrEmpty(target) { return !target || target.length < 1; }\nexport function stringIsNullOrWhiteSpace(target) { return !target || target.trim().length < 1; }\nexport function stringEmpty() { return \"\"; }\nexport function stringEquals(target, other) { return target == other; }\nexport function stringEscapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function createGuid() {\n    /*jslint bitwise: true */\n    function S4() {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    }\n    return (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() +\n        S4() + S4()).toLowerCase();\n}\nexport function stringConcat() {\n    var _a;\n    var s = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        s[_i] = arguments[_i];\n    }\n    return (_a = String.prototype).concat.apply(_a, tslib_1.__spread(s));\n}\nexport function stringReplace(str, oldValue, newValue) {\n    return str.replace(new RegExp(stringEscapeRegExp(oldValue), \"g\"), newValue);\n}\nexport function stringJoin(sep) {\n    var vals = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        vals[_i - 1] = arguments[_i];\n    }\n    return vals.join(sep);\n}\nexport function stringJoin1($t, sep, vals) {\n    var result;\n    var en = getEnumerator(vals);\n    while (en.moveNext()) {\n        var v = en.current.toString();\n        if (result === undefined) {\n            result = v;\n        }\n        else {\n            result += sep + v;\n        }\n    }\n    return result;\n}\nexport function stringToString$1($t, v) {\n    if (v !== null && $t) {\n        if ($t.isNullable) {\n            $t = $t.typeArguments[0];\n        }\n        if ($t.isEnumType) {\n            return EnumUtil.getName($t, v);\n        }\n    }\n    return v.toString();\n}\nexport function stringToLocaleLower(str, locale) {\n    if (locale == null || locale.name == null)\n        return str.toLocaleLowerCase();\n    return str.toLocaleLowerCase(locale.name);\n}\nexport function stringToLocaleUpper(str, locale) {\n    if (locale == null || locale.name == null)\n        return str.toLocaleUpperCase();\n    return str.toLocaleUpperCase(locale.name);\n}\n//# sourceMappingURL=string.js.map\n"]},"metadata":{},"sourceType":"module"}