{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\nimport { TextColumnDescription } from \"./TextColumnDescription\";\n/**\n * @hidden\n */\n\nvar TextColumnDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TextColumnDescriptionMetadata, _super);\n\n  function TextColumnDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TextColumnDescriptionMetadata.b = function (a) {\n    if (TextColumnDescriptionMetadata.a == null) {\n      TextColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TextColumnDescriptionMetadata.c(a, TextColumnDescriptionMetadata.a);\n    }\n  };\n\n  TextColumnDescriptionMetadata.c = function (a, b) {\n    ColumnDescriptionMetadata.c(a, b);\n    b.item(\"EditorType\", \"ExportedType:string:EditorType\");\n    b.item(\"EditorDataSourceRef\", \"(w:EditorItemsSource,wf:EditorItemsSource)DataRef::object\");\n    b.item(\"EditorDataSource\", \"(w:EditorItemsSource,wf:EditorItemsSource)ExportedType:BaseDataSource:BaseDataSource\");\n    b.item(\"EditorTextField\", \"String\");\n    b.item(\"EditorValueField\", \"Array:string\");\n  };\n\n  TextColumnDescriptionMetadata.d = function (a) {\n    TextColumnDescriptionMetadata.b(a);\n    a.n(\"TextColumn\", function () {\n      return new TextColumnDescription();\n    });\n    a.m(\"TextColumn\", TextColumnDescriptionMetadata.a);\n  };\n\n  TextColumnDescriptionMetadata.$t = markType(TextColumnDescriptionMetadata, 'TextColumnDescriptionMetadata');\n  TextColumnDescriptionMetadata.a = null;\n  return TextColumnDescriptionMetadata;\n}(Base);\n\nexport { TextColumnDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TextColumnDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AACA,SAAS,qBAAT,QAAsC,yBAAtC;AAEA;;AAEG;;AACH,IAAA,6BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmD,EAAA,OAAA,CAAA,SAAA,CAAA,6BAAA,EAAA,MAAA;;AAAnD,WAAA,6BAAA,GAAA;;AAsBC;;AAnBe,EAAA,6BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,6BAA6B,CAAC,CAA9B,IAAmC,IAAvC,EAA6C;AAC5C,MAAA,6BAA6B,CAAC,CAA9B,GAAkC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAlC;AACA,MAAA,6BAA6B,CAAC,CAA9B,CAAgC,CAAhC,EAAmC,6BAA6B,CAAC,CAAjE;AACA;AACD,GALc;;AAMR,EAAA,6BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,yBAAyB,CAAC,CAA1B,CAA4B,CAA5B,EAA+B,CAA/B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,gCAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,qBAAP,EAA8B,2DAA9B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,sFAA3B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,QAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,kBAAP,EAA2B,cAA3B;AACA,GAPM;;AAQA,EAAA,6BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,6BAA6B,CAAC,CAA9B,CAAgC,CAAhC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,YAAJ,EAAkB,YAAA;AAAM,aAAA,IAAA,qBAAA,EAAA;AAA2B,KAAnD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,YAAJ,EAAkB,6BAA6B,CAAC,CAAhD;AACA,GAJM;;AAhBA,EAAA,6BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,6BAAD,EAAgC,+BAAhC,CAAnB;AACQ,EAAA,6BAAA,CAAA,CAAA,GAAkC,IAAlC;AAoBhB,SAAA,6BAAA;AAAC,CAtBD,CAAmD,IAAnD,CAAA;;SAAa,6B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnDescriptionMetadata } from \"./ColumnDescriptionMetadata\";\nimport { TextColumnDescription } from \"./TextColumnDescription\";\n/**\n * @hidden\n */\nvar TextColumnDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TextColumnDescriptionMetadata, _super);\n    function TextColumnDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TextColumnDescriptionMetadata.b = function (a) {\n        if (TextColumnDescriptionMetadata.a == null) {\n            TextColumnDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            TextColumnDescriptionMetadata.c(a, TextColumnDescriptionMetadata.a);\n        }\n    };\n    TextColumnDescriptionMetadata.c = function (a, b) {\n        ColumnDescriptionMetadata.c(a, b);\n        b.item(\"EditorType\", \"ExportedType:string:EditorType\");\n        b.item(\"EditorDataSourceRef\", \"(w:EditorItemsSource,wf:EditorItemsSource)DataRef::object\");\n        b.item(\"EditorDataSource\", \"(w:EditorItemsSource,wf:EditorItemsSource)ExportedType:BaseDataSource:BaseDataSource\");\n        b.item(\"EditorTextField\", \"String\");\n        b.item(\"EditorValueField\", \"Array:string\");\n    };\n    TextColumnDescriptionMetadata.d = function (a) {\n        TextColumnDescriptionMetadata.b(a);\n        a.n(\"TextColumn\", function () { return new TextColumnDescription(); });\n        a.m(\"TextColumn\", TextColumnDescriptionMetadata.a);\n    };\n    TextColumnDescriptionMetadata.$t = markType(TextColumnDescriptionMetadata, 'TextColumnDescriptionMetadata');\n    TextColumnDescriptionMetadata.a = null;\n    return TextColumnDescriptionMetadata;\n}(Base));\nexport { TextColumnDescriptionMetadata };\n//# sourceMappingURL=TextColumnDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}