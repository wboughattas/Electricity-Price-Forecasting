{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PolarBaseDescriptionMetadata } from \"./PolarBaseDescriptionMetadata\";\nimport { PolarScatterSeriesDescription } from \"./PolarScatterSeriesDescription\";\n/**\n * @hidden\n */\n\nvar PolarScatterSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolarScatterSeriesDescriptionMetadata, _super);\n\n  function PolarScatterSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PolarScatterSeriesDescriptionMetadata.b = function (a) {\n    if (PolarScatterSeriesDescriptionMetadata.a == null) {\n      PolarScatterSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      PolarScatterSeriesDescriptionMetadata.c(a, PolarScatterSeriesDescriptionMetadata.a);\n    }\n  };\n\n  PolarScatterSeriesDescriptionMetadata.c = function (a, b) {\n    PolarBaseDescriptionMetadata.c(a, b);\n  };\n\n  PolarScatterSeriesDescriptionMetadata.d = function (a) {\n    PolarScatterSeriesDescriptionMetadata.b(a);\n    a.n(\"PolarScatterSeries\", function () {\n      return new PolarScatterSeriesDescription();\n    });\n    a.m(\"PolarScatterSeries\", PolarScatterSeriesDescriptionMetadata.a);\n  };\n\n  PolarScatterSeriesDescriptionMetadata.$t = markType(PolarScatterSeriesDescriptionMetadata, 'PolarScatterSeriesDescriptionMetadata');\n  PolarScatterSeriesDescriptionMetadata.a = null;\n  return PolarScatterSeriesDescriptionMetadata;\n}(Base);\n\nexport { PolarScatterSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PolarScatterSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,4BAAT,QAA6C,gCAA7C;AACA,SAAS,6BAAT,QAA8C,iCAA9C;AAEA;;AAEG;;AACH,IAAA,qCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2D,EAAA,OAAA,CAAA,SAAA,CAAA,qCAAA,EAAA,MAAA;;AAA3D,WAAA,qCAAA,GAAA;;AAiBC;;AAde,EAAA,qCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,qCAAqC,CAAC,CAAtC,IAA2C,IAA/C,EAAqD;AACpD,MAAA,qCAAqC,CAAC,CAAtC,GAA0C,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA1C;AACA,MAAA,qCAAqC,CAAC,CAAtC,CAAwC,CAAxC,EAA2C,qCAAqC,CAAC,CAAjF;AACA;AACD,GALc;;AAMR,EAAA,qCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,4BAA4B,CAAC,CAA7B,CAA+B,CAA/B,EAAkC,CAAlC;AACA,GAFM;;AAGA,EAAA,qCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,qCAAqC,CAAC,CAAtC,CAAwC,CAAxC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,oBAAJ,EAA0B,YAAA;AAAM,aAAA,IAAA,6BAAA,EAAA;AAAmC,KAAnE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,oBAAJ,EAA0B,qCAAqC,CAAC,CAAhE;AACA,GAJM;;AAXA,EAAA,qCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,qCAAD,EAAwC,uCAAxC,CAAnB;AACQ,EAAA,qCAAA,CAAA,CAAA,GAAkC,IAAlC;AAehB,SAAA,qCAAA;AAAC,CAjBD,CAA2D,IAA3D,CAAA;;SAAa,qC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PolarBaseDescriptionMetadata } from \"./PolarBaseDescriptionMetadata\";\nimport { PolarScatterSeriesDescription } from \"./PolarScatterSeriesDescription\";\n/**\n * @hidden\n */\nvar PolarScatterSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolarScatterSeriesDescriptionMetadata, _super);\n    function PolarScatterSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PolarScatterSeriesDescriptionMetadata.b = function (a) {\n        if (PolarScatterSeriesDescriptionMetadata.a == null) {\n            PolarScatterSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            PolarScatterSeriesDescriptionMetadata.c(a, PolarScatterSeriesDescriptionMetadata.a);\n        }\n    };\n    PolarScatterSeriesDescriptionMetadata.c = function (a, b) {\n        PolarBaseDescriptionMetadata.c(a, b);\n    };\n    PolarScatterSeriesDescriptionMetadata.d = function (a) {\n        PolarScatterSeriesDescriptionMetadata.b(a);\n        a.n(\"PolarScatterSeries\", function () { return new PolarScatterSeriesDescription(); });\n        a.m(\"PolarScatterSeries\", PolarScatterSeriesDescriptionMetadata.a);\n    };\n    PolarScatterSeriesDescriptionMetadata.$t = markType(PolarScatterSeriesDescriptionMetadata, 'PolarScatterSeriesDescriptionMetadata');\n    PolarScatterSeriesDescriptionMetadata.a = null;\n    return PolarScatterSeriesDescriptionMetadata;\n}(Base));\nexport { PolarScatterSeriesDescriptionMetadata };\n//# sourceMappingURL=PolarScatterSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}