{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { PrimitiveVisualData } from \"./PrimitiveVisualData\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\nimport { markType } from \"./type\";\nimport { AppearanceHelper } from \"./AppearanceHelper\";\nimport { StringBuilder } from \"./StringBuilder\";\n/**\n * @hidden\n */\n\nvar PolygonVisualData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolygonVisualData, _super);\n\n  function PolygonVisualData(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = this;\n\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        {\n          _this = _super.call(this, 1, \"polygon1\") || this;\n          _this._points = null;\n          _this.points = new List$1(PointData.$, 0);\n        }\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          var d = _rest[1];\n          _this = _super.call(this, 1, c) || this;\n          _this._points = null;\n          _this.points = new List$1(PointData.$, 0);\n\n          for (var e = 0; e < d.ak.count; e++) {\n            _this.points.add(PointData.b(d.ak._inner[e]));\n          }\n\n          AppearanceHelper.p(_this.appearance, d);\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  PolygonVisualData.prototype.get_type = function () {\n    return \"Polygon\";\n  };\n\n  Object.defineProperty(PolygonVisualData.prototype, \"type\", {\n    get: function () {\n      return this.get_type();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PolygonVisualData.prototype, \"points\", {\n    get: function () {\n      return this._points;\n    },\n    set: function (a) {\n      this._points = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PolygonVisualData.prototype.e = function () {\n    var a = new StringBuilder(0);\n    a.u(\"points: [\");\n\n    for (var b = 0; b < this.points.count; b++) {\n      if (b != 0) {\n        a.l(\", \");\n      }\n\n      a.l(\"{ x: \" + this.points._inner[b].x + \", y: \" + this.points._inner[b].y + \"}\");\n    }\n\n    a.u(\"]\");\n    return a.toString();\n  };\n\n  PolygonVisualData.prototype.scaleByViewport = function (a) {\n    _super.prototype.scaleByViewport.call(this, a);\n\n    for (var b = 0; b < this.points.count; b++) {\n      this.points._inner[b] = new PointData((this.points._inner[b].x - a.left) / a.width, (this.points._inner[b].y - a.top) / a.height);\n    }\n  };\n\n  PolygonVisualData.prototype.getPointsOverride = function (a, b) {\n    var c = new List$1(PointData.$, 0);\n    a.add(c);\n\n    for (var d = 0; d < this.points.count; d++) {\n      c.add(this.points._inner[d]);\n    }\n  };\n\n  PolygonVisualData.$t = markType(PolygonVisualData, 'PolygonVisualData', PrimitiveVisualData.$);\n  return PolygonVisualData;\n}(PrimitiveVisualData);\n\nexport { PolygonVisualData };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PolygonVisualData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { PrimitiveVisualData } from \"./PrimitiveVisualData\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\nimport { markType } from \"./type\";\nimport { AppearanceHelper } from \"./AppearanceHelper\";\nimport { StringBuilder } from \"./StringBuilder\";\n/**\n * @hidden\n */\nvar PolygonVisualData = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolygonVisualData, _super);\n    function PolygonVisualData(a) {\n        var _rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _rest[_i - 1] = arguments[_i];\n        }\n        var _this = this;\n        a = (a == void 0) ? 0 : a;\n        switch (a) {\n            case 0:\n                {\n                    _this = _super.call(this, 1, \"polygon1\") || this;\n                    _this._points = null;\n                    _this.points = new List$1(PointData.$, 0);\n                }\n                break;\n            case 1:\n                {\n                    var c = _rest[0];\n                    var d = _rest[1];\n                    _this = _super.call(this, 1, c) || this;\n                    _this._points = null;\n                    _this.points = new List$1(PointData.$, 0);\n                    for (var e = 0; e < d.ak.count; e++) {\n                        _this.points.add(PointData.b(d.ak._inner[e]));\n                    }\n                    AppearanceHelper.p(_this.appearance, d);\n                }\n                break;\n        }\n        return _this;\n    }\n    PolygonVisualData.prototype.get_type = function () {\n        return \"Polygon\";\n    };\n    Object.defineProperty(PolygonVisualData.prototype, \"type\", {\n        get: function () {\n            return this.get_type();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PolygonVisualData.prototype, \"points\", {\n        get: function () {\n            return this._points;\n        },\n        set: function (a) {\n            this._points = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PolygonVisualData.prototype.e = function () {\n        var a = new StringBuilder(0);\n        a.u(\"points: [\");\n        for (var b = 0; b < this.points.count; b++) {\n            if (b != 0) {\n                a.l(\", \");\n            }\n            a.l(\"{ x: \" + this.points._inner[b].x + \", y: \" + this.points._inner[b].y + \"}\");\n        }\n        a.u(\"]\");\n        return a.toString();\n    };\n    PolygonVisualData.prototype.scaleByViewport = function (a) {\n        _super.prototype.scaleByViewport.call(this, a);\n        for (var b = 0; b < this.points.count; b++) {\n            this.points._inner[b] = new PointData((this.points._inner[b].x - a.left) / a.width, (this.points._inner[b].y - a.top) / a.height);\n        }\n    };\n    PolygonVisualData.prototype.getPointsOverride = function (a, b) {\n        var c = new List$1(PointData.$, 0);\n        a.add(c);\n        for (var d = 0; d < this.points.count; d++) {\n            c.add(this.points._inner[d]);\n        }\n    };\n    PolygonVisualData.$t = markType(PolygonVisualData, 'PolygonVisualData', PrimitiveVisualData.$);\n    return PolygonVisualData;\n}(PrimitiveVisualData));\nexport { PolygonVisualData };\n//# sourceMappingURL=PolygonVisualData.js.map\n"]},"metadata":{},"sourceType":"module"}