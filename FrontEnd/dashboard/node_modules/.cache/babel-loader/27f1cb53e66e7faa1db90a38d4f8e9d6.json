{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { XObject } from \"./XObject\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar XNode =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(XNode, _super);\n\n  function XNode(a) {\n    return _super.call(this, a) || this;\n  }\n\n  XNode.$t = markType(XNode, 'XNode', XObject.$);\n  return XNode;\n}(XObject);\n\nexport { XNode };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/XNode.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,OAAT,QAAwB,WAAxB;AAEA,SAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,KAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,OAAA,CAAA,SAAA,CAAA,KAAA,EAAA,MAAA;;AAEnC,WAAA,KAAA,CAAY,CAAZ,EAAsB;WACrB,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,CAAN,KAAQ,I;AACR;;AAHM,EAAA,KAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,KAAD,EAAQ,OAAR,EAAuB,OAAQ,CAAC,CAAhC,CAAnB;AAIR,SAAA,KAAA;AAAC,CALD,CAAoC,OAApC,CAAA;;SAAsB,K","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { XObject } from \"./XObject\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar XNode = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(XNode, _super);\n    function XNode(a) {\n        return _super.call(this, a) || this;\n    }\n    XNode.$t = markType(XNode, 'XNode', XObject.$);\n    return XNode;\n}(XObject));\nexport { XNode };\n//# sourceMappingURL=XNode.js.map\n"]},"metadata":{},"sourceType":"module"}