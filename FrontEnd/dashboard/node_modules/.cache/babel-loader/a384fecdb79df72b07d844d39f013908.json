{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, Delegate_$type, markType, getInstanceType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { stringReplace } from \"./string\";\n/**\n * @hidden\n */\n\nvar TypeDescriptionCleanups =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TypeDescriptionCleanups, _super);\n\n  function TypeDescriptionCleanups() {\n    var _this = _super.call(this) || this;\n\n    _this.a = new Dictionary$2(String_$type, Delegate_$type, 0);\n\n    _this.a.item(\"Series\", function (a) {\n      var s_ = a;\n      if (s_.removeAxes) s_.removeAxes();\n    });\n\n    return _this;\n  }\n\n  TypeDescriptionCleanups.prototype.b = function (a, b) {\n    if (b == null) {\n      return;\n    }\n\n    var c = \"\";\n    var d;\n    var obj_ = b;\n    var impl_ = obj_.i;\n    var e = impl_;\n\n    if (e) {\n      d = getInstanceType(impl_);\n    } else {\n      impl_ = obj_._chart || obj_._map || obj_._gauge;\n      e = impl_;\n\n      if (e) {\n        d = getInstanceType(impl_);\n      } else {\n        return;\n      }\n    }\n\n    while (d != null) {\n      c = d.typeName;\n      c = stringReplace(stringReplace(c, \"Ultra\", \"\"), \"Xam\", \"\");\n\n      if (this.a.containsKey(c)) {\n        this.a.item(c)(b);\n      }\n\n      d = d.baseType;\n\n      if (d != null && (d.typeName == \"Object\" || d.typeName == \"Base\")) {\n        return;\n      }\n    }\n  };\n\n  TypeDescriptionCleanups.$t = markType(TypeDescriptionCleanups, 'TypeDescriptionCleanups');\n  return TypeDescriptionCleanups;\n}(Base);\n\nexport { TypeDescriptionCleanups };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TypeDescriptionCleanups.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAqB,YAArB,EAAmC,cAAnC,EAAmD,QAAnD,EAA6D,eAA7D,QAAoF,QAApF;AACA,SAAS,YAAT,QAA6B,gBAA7B;AAEA,SAAS,aAAT,QAA8B,UAA9B;AAEA;;AAEG;;AACH,IAAA,uBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,OAAA,CAAA,SAAA,CAAA,uBAAA,EAAA,MAAA;;AAG5C,WAAA,uBAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AADQ,IAAA,KAAA,CAAA,CAAA,GAA+C,IAAI,YAAJ,CAA8C,YAA9C,EAA4D,cAA5D,EAA4E,CAA5E,CAA/C;;AAGP,IAAA,KAAI,CAAC,CAAL,CAAO,IAAP,CAAY,QAAZ,EAAsB,UAAC,CAAD,EAAO;AAC5B,UAAI,EAAE,GAAG,CAAT;AACA,UAAI,EAAE,CAAC,UAAP,EAAmB,EAAE,CAAC,UAAH;AACnB,KAHD;;;AAIA;;AACD,EAAA,uBAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAA8B,CAA9B,EAAoC;AACnC,QAAI,CAAC,IAAI,IAAT,EAAe;AACd;AACA;;AACD,QAAI,CAAC,GAAW,EAAhB;AACA,QAAI,CAAJ;AACA,QAAI,IAAI,GAAG,CAAX;AACA,QAAI,KAAK,GAAG,IAAI,CAAC,CAAjB;AACA,QAAI,CAAC,GAAa,KAAlB;;AACA,QAAI,CAAJ,EAAO;AACN,MAAA,CAAC,GAAG,eAAe,CAAC,KAAD,CAAnB;AACA,KAFD,MAEO;AACN,MAAA,KAAK,GAAG,IAAI,CAAC,MAAL,IAAe,IAAI,CAAC,IAApB,IAA4B,IAAI,CAAC,MAAzC;AACA,MAAA,CAAC,GAAa,KAAd;;AACA,UAAI,CAAJ,EAAO;AACN,QAAA,CAAC,GAAG,eAAe,CAAC,KAAD,CAAnB;AACA,OAFD,MAEO;AACN;AACA;AACD;;AACD,WAAO,CAAC,IAAI,IAAZ,EAAkB;AACjB,MAAA,CAAC,GAAG,CAAC,CAAC,QAAN;AACA,MAAA,CAAC,GAAG,aAAa,CAAC,aAAa,CAAC,CAAD,EAAI,OAAJ,EAAa,EAAb,CAAd,EAAgC,KAAhC,EAAuC,EAAvC,CAAjB;;AACA,UAAI,KAAK,CAAL,CAAO,WAAP,CAAmB,CAAnB,CAAJ,EAA2B;AAC1B,aAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,EAAe,CAAf;AACA;;AACD,MAAA,CAAC,GAAG,CAAC,CAAC,QAAN;;AACA,UAAI,CAAC,IAAI,IAAL,KAAc,CAAC,CAAC,QAAF,IAAc,QAAd,IAA0B,CAAC,CAAC,QAAF,IAAc,MAAtD,CAAJ,EAAmE;AAClE;AACA;AACD;AACD,GA/BD;;AATO,EAAA,uBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,uBAAD,EAA0B,yBAA1B,CAAnB;AAyCR,SAAA,uBAAA;AAAC,CA1CD,CAA6C,IAA7C,CAAA;;SAAa,uB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, Delegate_$type, markType, getInstanceType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { stringReplace } from \"./string\";\n/**\n * @hidden\n */\nvar TypeDescriptionCleanups = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TypeDescriptionCleanups, _super);\n    function TypeDescriptionCleanups() {\n        var _this = _super.call(this) || this;\n        _this.a = new Dictionary$2(String_$type, Delegate_$type, 0);\n        _this.a.item(\"Series\", function (a) {\n            var s_ = a;\n            if (s_.removeAxes)\n                s_.removeAxes();\n        });\n        return _this;\n    }\n    TypeDescriptionCleanups.prototype.b = function (a, b) {\n        if (b == null) {\n            return;\n        }\n        var c = \"\";\n        var d;\n        var obj_ = b;\n        var impl_ = obj_.i;\n        var e = (impl_);\n        if (e) {\n            d = getInstanceType(impl_);\n        }\n        else {\n            impl_ = obj_._chart || obj_._map || obj_._gauge;\n            e = (impl_);\n            if (e) {\n                d = getInstanceType(impl_);\n            }\n            else {\n                return;\n            }\n        }\n        while (d != null) {\n            c = d.typeName;\n            c = stringReplace(stringReplace(c, \"Ultra\", \"\"), \"Xam\", \"\");\n            if (this.a.containsKey(c)) {\n                this.a.item(c)(b);\n            }\n            d = d.baseType;\n            if (d != null && (d.typeName == \"Object\" || d.typeName == \"Base\")) {\n                return;\n            }\n        }\n    };\n    TypeDescriptionCleanups.$t = markType(TypeDescriptionCleanups, 'TypeDescriptionCleanups');\n    return TypeDescriptionCleanups;\n}(Base));\nexport { TypeDescriptionCleanups };\n//# sourceMappingURL=TypeDescriptionCleanups.js.map\n"]},"metadata":{},"sourceType":"module"}