{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalRangeCategorySeriesDescriptionMetadata } from \"./HorizontalRangeCategorySeriesDescriptionMetadata\";\nimport { RangeColumnSeriesDescription } from \"./RangeColumnSeriesDescription\";\n/**\n * @hidden\n */\n\nvar RangeColumnSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RangeColumnSeriesDescriptionMetadata, _super);\n\n  function RangeColumnSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RangeColumnSeriesDescriptionMetadata.b = function (a) {\n    if (RangeColumnSeriesDescriptionMetadata.a == null) {\n      RangeColumnSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      RangeColumnSeriesDescriptionMetadata.c(a, RangeColumnSeriesDescriptionMetadata.a);\n    }\n  };\n\n  RangeColumnSeriesDescriptionMetadata.c = function (a, b) {\n    HorizontalRangeCategorySeriesDescriptionMetadata.c(a, b);\n    b.item(\"RadiusX\", \"Number:double\");\n    b.item(\"RadiusY\", \"Number:double\");\n  };\n\n  RangeColumnSeriesDescriptionMetadata.d = function (a) {\n    RangeColumnSeriesDescriptionMetadata.b(a);\n    a.n(\"RangeColumnSeries\", function () {\n      return new RangeColumnSeriesDescription();\n    });\n    a.m(\"RangeColumnSeries\", RangeColumnSeriesDescriptionMetadata.a);\n  };\n\n  RangeColumnSeriesDescriptionMetadata.$t = markType(RangeColumnSeriesDescriptionMetadata, 'RangeColumnSeriesDescriptionMetadata');\n  RangeColumnSeriesDescriptionMetadata.a = null;\n  return RangeColumnSeriesDescriptionMetadata;\n}(Base);\n\nexport { RangeColumnSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/RangeColumnSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,gDAAT,QAAiE,oDAAjE;AACA,SAAS,4BAAT,QAA6C,gCAA7C;AAEA;;AAEG;;AACH,IAAA,oCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0D,EAAA,OAAA,CAAA,SAAA,CAAA,oCAAA,EAAA,MAAA;;AAA1D,WAAA,oCAAA,GAAA;;AAmBC;;AAhBe,EAAA,oCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,oCAAoC,CAAC,CAArC,IAA0C,IAA9C,EAAoD;AACnD,MAAA,oCAAoC,CAAC,CAArC,GAAyC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAzC;AACA,MAAA,oCAAoC,CAAC,CAArC,CAAuC,CAAvC,EAA0C,oCAAoC,CAAC,CAA/E;AACA;AACD,GALc;;AAMR,EAAA,oCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,gDAAgD,CAAC,CAAjD,CAAmD,CAAnD,EAAsD,CAAtD;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,eAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,eAAlB;AACA,GAJM;;AAKA,EAAA,oCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,oCAAoC,CAAC,CAArC,CAAuC,CAAvC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,mBAAJ,EAAyB,YAAA;AAAM,aAAA,IAAA,4BAAA,EAAA;AAAkC,KAAjE;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,mBAAJ,EAAyB,oCAAoC,CAAC,CAA9D;AACA,GAJM;;AAbA,EAAA,oCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,oCAAD,EAAuC,sCAAvC,CAAnB;AACQ,EAAA,oCAAA,CAAA,CAAA,GAAkC,IAAlC;AAiBhB,SAAA,oCAAA;AAAC,CAnBD,CAA0D,IAA1D,CAAA;;SAAa,oC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalRangeCategorySeriesDescriptionMetadata } from \"./HorizontalRangeCategorySeriesDescriptionMetadata\";\nimport { RangeColumnSeriesDescription } from \"./RangeColumnSeriesDescription\";\n/**\n * @hidden\n */\nvar RangeColumnSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RangeColumnSeriesDescriptionMetadata, _super);\n    function RangeColumnSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RangeColumnSeriesDescriptionMetadata.b = function (a) {\n        if (RangeColumnSeriesDescriptionMetadata.a == null) {\n            RangeColumnSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            RangeColumnSeriesDescriptionMetadata.c(a, RangeColumnSeriesDescriptionMetadata.a);\n        }\n    };\n    RangeColumnSeriesDescriptionMetadata.c = function (a, b) {\n        HorizontalRangeCategorySeriesDescriptionMetadata.c(a, b);\n        b.item(\"RadiusX\", \"Number:double\");\n        b.item(\"RadiusY\", \"Number:double\");\n    };\n    RangeColumnSeriesDescriptionMetadata.d = function (a) {\n        RangeColumnSeriesDescriptionMetadata.b(a);\n        a.n(\"RangeColumnSeries\", function () { return new RangeColumnSeriesDescription(); });\n        a.m(\"RangeColumnSeries\", RangeColumnSeriesDescriptionMetadata.a);\n    };\n    RangeColumnSeriesDescriptionMetadata.$t = markType(RangeColumnSeriesDescriptionMetadata, 'RangeColumnSeriesDescriptionMetadata');\n    RangeColumnSeriesDescriptionMetadata.a = null;\n    return RangeColumnSeriesDescriptionMetadata;\n}(Base));\nexport { RangeColumnSeriesDescriptionMetadata };\n//# sourceMappingURL=RangeColumnSeriesDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}