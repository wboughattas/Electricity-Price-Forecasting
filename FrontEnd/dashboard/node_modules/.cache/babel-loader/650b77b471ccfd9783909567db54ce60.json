{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nvar BinaryUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function BinaryUtil() {}\n\n  BinaryUtil.isResponseTypeSupported = function (responseType) {\n    var xhr = null;\n\n    try {\n      xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", \"/\");\n      xhr.responseType = responseType;\n    } catch (e) {\n      return false;\n    }\n\n    if (xhr === null) {\n      return false;\n    }\n\n    return xhr.responseType === responseType;\n  };\n\n  BinaryUtil.getBinary = function (url, callback, error) {\n    var data,\n        ret,\n        req,\n        useVbArray = false,\n        arrayBufferSupported = BinaryUtil.isResponseTypeSupported(\"arraybuffer\") && typeof Uint8Array != \"undefined\";\n\n    if (typeof XMLHttpRequest == \"undefined\") {\n      try {\n        req = new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n      } catch (e) {}\n\n      try {\n        req = new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n      } catch (e) {}\n\n      req = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    } else {\n      req = new XMLHttpRequest();\n    }\n\n    if (!arrayBufferSupported) {\n      if (req.overrideMimeType) {\n        req.overrideMimeType(\"text/plain; charset=x-user-defined\");\n      }\n    }\n\n    if (typeof VBArray != \"undefined\") {\n      useVbArray = true;\n    }\n\n    req.onreadystatechange = function () {\n      if (req.readyState == 4) {\n        var isFileSchemeDownload = false;\n\n        if (req.status == 0) {\n          isFileSchemeDownload = new URL(url).protocol == \"file:\" || new URL(url).protocol == \"igfile:\";\n        }\n\n        if (req.status == 200 || isFileSchemeDownload) {\n          if (arrayBufferSupported && typeof this.response != \"undefined\") {\n            callback(new Uint8Array(this.response));\n          } else {\n            if (useVbArray) {\n              data = new VBArray(req.responseBody).toArray();\n\n              for (var i = 0; i < data.length; i++) {\n                data[i] = String.fromCharCode(data[i]);\n              }\n\n              ret = data.join(\"\");\n              callback(ret);\n            } else {\n              callback(req.responseText);\n            }\n          }\n        } else {\n          error(req.error);\n        }\n      }\n    };\n\n    req.open(\"GET\", url, true);\n\n    if (arrayBufferSupported) {\n      req.responseType = \"arraybuffer\";\n    }\n\n    req.send(null);\n  };\n\n  ;\n  return BinaryUtil;\n}();\n\nexport { BinaryUtil };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/binary.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nvar BinaryUtil = /** @class */ /*@__PURE__*/ (function () {\r\n    function BinaryUtil() {\r\n    }\r\n    BinaryUtil.isResponseTypeSupported = function (responseType) {\r\n        var xhr = null;\r\n        try {\r\n            xhr = new XMLHttpRequest();\r\n            xhr.open(\"GET\", \"/\");\r\n            xhr.responseType = responseType;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n        if (xhr === null) {\r\n            return false;\r\n        }\r\n        return xhr.responseType === responseType;\r\n    };\r\n    BinaryUtil.getBinary = function (url, callback, error) {\r\n        var data, ret, req, useVbArray = false, arrayBufferSupported = BinaryUtil.isResponseTypeSupported(\"arraybuffer\") &&\r\n            typeof Uint8Array != \"undefined\";\r\n        if (typeof XMLHttpRequest == \"undefined\") {\r\n            try {\r\n                req = new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                req = new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\r\n            }\r\n            catch (e) { }\r\n            req = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        }\r\n        else {\r\n            req = new XMLHttpRequest();\r\n        }\r\n        if (!arrayBufferSupported) {\r\n            if (req.overrideMimeType) {\r\n                req.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n            }\r\n        }\r\n        if (typeof VBArray != \"undefined\") {\r\n            useVbArray = true;\r\n        }\r\n        req.onreadystatechange = function () {\r\n            if (req.readyState == 4) {\r\n                var isFileSchemeDownload = false;\r\n                if (req.status == 0) {\r\n                    isFileSchemeDownload = new URL(url).protocol == \"file:\" ||\r\n                        new URL(url).protocol == \"igfile:\";\r\n                }\r\n                if (req.status == 200 || isFileSchemeDownload) {\r\n                    if (arrayBufferSupported && typeof this.response != \"undefined\") {\r\n                        callback(new Uint8Array(this.response));\r\n                    }\r\n                    else {\r\n                        if (useVbArray) {\r\n                            data = new VBArray(req.responseBody).toArray();\r\n                            for (var i = 0; i < data.length; i++) {\r\n                                data[i] = String.fromCharCode(data[i]);\r\n                            }\r\n                            ret = data.join(\"\");\r\n                            callback(ret);\r\n                        }\r\n                        else {\r\n                            callback(req.responseText);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    error(req.error);\r\n                }\r\n            }\r\n        };\r\n        req.open(\"GET\", url, true);\r\n        if (arrayBufferSupported) {\r\n            req.responseType = \"arraybuffer\";\r\n        }\r\n        req.send(null);\r\n    };\r\n    ;\r\n    return BinaryUtil;\r\n}());\r\nexport { BinaryUtil };\r\n//# sourceMappingURL=binary.js.map\r\n"]},"metadata":{},"sourceType":"module"}