{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapImageryDescriptionMetadata } from \"./GeographicMapImageryDescriptionMetadata\";\nimport { ShapeSeriesBaseDescriptionMetadata } from \"./ShapeSeriesBaseDescriptionMetadata\";\nimport { TileSeriesDescription } from \"./TileSeriesDescription\";\n/**\r\n * @hidden\r\n */\n\nvar TileSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TileSeriesDescriptionMetadata, _super);\n\n  function TileSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TileSeriesDescriptionMetadata.b = function (a) {\n    if (TileSeriesDescriptionMetadata.a == null) {\n      TileSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TileSeriesDescriptionMetadata.c(a, TileSeriesDescriptionMetadata.a);\n      GeographicMapImageryDescriptionMetadata.d(a);\n    }\n  };\n\n  TileSeriesDescriptionMetadata.c = function (a, b) {\n    ShapeSeriesBaseDescriptionMetadata.c(a, b);\n    b.item(\"TileImagery\", \"ExportedType:GeographicMapImagery\");\n  };\n\n  TileSeriesDescriptionMetadata.d = function (a) {\n    TileSeriesDescriptionMetadata.b(a);\n    a.n(\"TileSeries\", function () {\n      return new TileSeriesDescription();\n    });\n    a.m(\"TileSeries\", TileSeriesDescriptionMetadata.a);\n  };\n\n  TileSeriesDescriptionMetadata.$t = markType(TileSeriesDescriptionMetadata, 'TileSeriesDescriptionMetadata');\n  TileSeriesDescriptionMetadata.a = null;\n  return TileSeriesDescriptionMetadata;\n}(Base);\n\nexport { TileSeriesDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/TileSeriesDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,uCAAT,QAAwD,2CAAxD;AACA,SAAS,kCAAT,QAAmD,sCAAnD;AACA,SAAS,qBAAT,QAAsC,yBAAtC;AAEA;;AAEG;;AACH,IAAA,6BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmD,EAAA,OAAA,CAAA,SAAA,CAAA,6BAAA,EAAA,MAAA;;AAAnD,WAAA,6BAAA,GAAA;;AAmBC;;AAhBe,EAAA,6BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,6BAA6B,CAAC,CAA9B,IAAmC,IAAvC,EAA6C;AAC5C,MAAA,6BAA6B,CAAC,CAA9B,GAAkC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAlC;AACA,MAAA,6BAA6B,CAAC,CAA9B,CAAgC,CAAhC,EAAmC,6BAA6B,CAAC,CAAjE;AACA,MAAA,uCAAuC,CAAC,CAAxC,CAA0C,CAA1C;AACA;AACD,GANc;;AAOR,EAAA,6BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,kCAAkC,CAAC,CAAnC,CAAqC,CAArC,EAAwC,CAAxC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,mCAAtB;AACA,GAHM;;AAIA,EAAA,6BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,6BAA6B,CAAC,CAA9B,CAAgC,CAAhC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,YAAJ,EAAkB,YAAA;AAAM,aAAA,IAAA,qBAAA,EAAA;AAA2B,KAAnD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,YAAJ,EAAkB,6BAA6B,CAAC,CAAhD;AACA,GAJM;;AAbA,EAAA,6BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,6BAAD,EAAgC,+BAAhC,CAAnB;AACQ,EAAA,6BAAA,CAAA,CAAA,GAAkC,IAAlC;AAiBhB,SAAA,6BAAA;AAAC,CAnBD,CAAmD,IAAnD,CAAA;;SAAa,6B","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { GeographicMapImageryDescriptionMetadata } from \"./GeographicMapImageryDescriptionMetadata\";\r\nimport { ShapeSeriesBaseDescriptionMetadata } from \"./ShapeSeriesBaseDescriptionMetadata\";\r\nimport { TileSeriesDescription } from \"./TileSeriesDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar TileSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(TileSeriesDescriptionMetadata, _super);\r\n    function TileSeriesDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TileSeriesDescriptionMetadata.b = function (a) {\r\n        if (TileSeriesDescriptionMetadata.a == null) {\r\n            TileSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            TileSeriesDescriptionMetadata.c(a, TileSeriesDescriptionMetadata.a);\r\n            GeographicMapImageryDescriptionMetadata.d(a);\r\n        }\r\n    };\r\n    TileSeriesDescriptionMetadata.c = function (a, b) {\r\n        ShapeSeriesBaseDescriptionMetadata.c(a, b);\r\n        b.item(\"TileImagery\", \"ExportedType:GeographicMapImagery\");\r\n    };\r\n    TileSeriesDescriptionMetadata.d = function (a) {\r\n        TileSeriesDescriptionMetadata.b(a);\r\n        a.n(\"TileSeries\", function () { return new TileSeriesDescription(); });\r\n        a.m(\"TileSeries\", TileSeriesDescriptionMetadata.a);\r\n    };\r\n    TileSeriesDescriptionMetadata.$t = markType(TileSeriesDescriptionMetadata, 'TileSeriesDescriptionMetadata');\r\n    TileSeriesDescriptionMetadata.a = null;\r\n    return TileSeriesDescriptionMetadata;\r\n}(Base));\r\nexport { TileSeriesDescriptionMetadata };\r\n//# sourceMappingURL=TileSeriesDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}