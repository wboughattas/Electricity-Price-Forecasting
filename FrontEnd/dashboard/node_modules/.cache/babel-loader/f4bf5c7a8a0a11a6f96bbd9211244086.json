{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { CalculatedColumnDescriptionMetadata } from \"./CalculatedColumnDescriptionMetadata\";\nimport { FinancialCalculationDataSourceDescription } from \"./FinancialCalculationDataSourceDescription\";\n/**\n * @hidden\n */\n\nvar FinancialCalculationDataSourceDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(FinancialCalculationDataSourceDescriptionMetadata, _super);\n\n  function FinancialCalculationDataSourceDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FinancialCalculationDataSourceDescriptionMetadata.b = function (a) {\n    if (FinancialCalculationDataSourceDescriptionMetadata.a == null) {\n      FinancialCalculationDataSourceDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      FinancialCalculationDataSourceDescriptionMetadata.c(a, FinancialCalculationDataSourceDescriptionMetadata.a);\n      CalculatedColumnDescriptionMetadata.d(a);\n    }\n  };\n\n  FinancialCalculationDataSourceDescriptionMetadata.c = function (a, b) {\n    b.item(\"TypicalColumn\", \"ExportedType:CalculatedColumn\");\n    b.item(\"TrueRange\", \"ExportedType:CalculatedColumn\");\n    b.item(\"TrueLow\", \"ExportedType:CalculatedColumn\");\n    b.item(\"Period\", \"Number:int\");\n    b.item(\"ShortPeriod\", \"Number:int\");\n    b.item(\"LongPeriod\", \"Number:int\");\n    b.item(\"Count\", \"Number:int\");\n    b.item(\"CalculateFrom\", \"Number:int\");\n    b.item(\"CalculateCount\", \"Number:int\");\n    b.item(\"Multiplier\", \"Number:double\");\n    b.item(\"MinimumValue\", \"Number:double\");\n    b.item(\"MaximumValue\", \"Number:double\");\n    b.item(\"SpecifiesRange\", \"Boolean\");\n  };\n\n  FinancialCalculationDataSourceDescriptionMetadata.d = function (a) {\n    FinancialCalculationDataSourceDescriptionMetadata.b(a);\n    a.n(\"FinancialCalculationDataSource\", function () {\n      return new FinancialCalculationDataSourceDescription();\n    });\n    a.m(\"FinancialCalculationDataSource\", FinancialCalculationDataSourceDescriptionMetadata.a);\n  };\n\n  FinancialCalculationDataSourceDescriptionMetadata.$t = markType(FinancialCalculationDataSourceDescriptionMetadata, 'FinancialCalculationDataSourceDescriptionMetadata');\n  FinancialCalculationDataSourceDescriptionMetadata.a = null;\n  return FinancialCalculationDataSourceDescriptionMetadata;\n}(Base);\n\nexport { FinancialCalculationDataSourceDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FinancialCalculationDataSourceDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,mCAAT,QAAoD,uCAApD;AACA,SAAS,yCAAT,QAA0D,6CAA1D;AAEA;;AAEG;;AACH,IAAA,iDAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuE,EAAA,OAAA,CAAA,SAAA,CAAA,iDAAA,EAAA,MAAA;;AAAvE,WAAA,iDAAA,GAAA;;AA8BC;;AA3Be,EAAA,iDAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,iDAAiD,CAAC,CAAlD,IAAuD,IAA3D,EAAiE;AAChE,MAAA,iDAAiD,CAAC,CAAlD,GAAsD,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAtD;AACA,MAAA,iDAAiD,CAAC,CAAlD,CAAoD,CAApD,EAAuD,iDAAiD,CAAC,CAAzG;AACA,MAAA,mCAAmC,CAAC,CAApC,CAAsC,CAAtC;AACA;AACD,GANc;;AAOR,EAAA,iDAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,+BAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,+BAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,+BAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,YAAjB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,YAAtB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,YAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,YAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,YAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,YAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,eAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,eAAvB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,cAAP,EAAuB,eAAvB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,SAAzB;AACA,GAdM;;AAeA,EAAA,iDAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,iDAAiD,CAAC,CAAlD,CAAoD,CAApD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,gCAAJ,EAAsC,YAAA;AAAM,aAAA,IAAA,yCAAA,EAAA;AAA+C,KAA3F;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,gCAAJ,EAAsC,iDAAiD,CAAC,CAAxF;AACA,GAJM;;AAxBA,EAAA,iDAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,iDAAD,EAAoD,mDAApD,CAAnB;AACQ,EAAA,iDAAA,CAAA,CAAA,GAAkC,IAAlC;AA4BhB,SAAA,iDAAA;AAAC,CA9BD,CAAuE,IAAvE,CAAA;;SAAa,iD","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { CalculatedColumnDescriptionMetadata } from \"./CalculatedColumnDescriptionMetadata\";\nimport { FinancialCalculationDataSourceDescription } from \"./FinancialCalculationDataSourceDescription\";\n/**\n * @hidden\n */\nvar FinancialCalculationDataSourceDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FinancialCalculationDataSourceDescriptionMetadata, _super);\n    function FinancialCalculationDataSourceDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FinancialCalculationDataSourceDescriptionMetadata.b = function (a) {\n        if (FinancialCalculationDataSourceDescriptionMetadata.a == null) {\n            FinancialCalculationDataSourceDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            FinancialCalculationDataSourceDescriptionMetadata.c(a, FinancialCalculationDataSourceDescriptionMetadata.a);\n            CalculatedColumnDescriptionMetadata.d(a);\n        }\n    };\n    FinancialCalculationDataSourceDescriptionMetadata.c = function (a, b) {\n        b.item(\"TypicalColumn\", \"ExportedType:CalculatedColumn\");\n        b.item(\"TrueRange\", \"ExportedType:CalculatedColumn\");\n        b.item(\"TrueLow\", \"ExportedType:CalculatedColumn\");\n        b.item(\"Period\", \"Number:int\");\n        b.item(\"ShortPeriod\", \"Number:int\");\n        b.item(\"LongPeriod\", \"Number:int\");\n        b.item(\"Count\", \"Number:int\");\n        b.item(\"CalculateFrom\", \"Number:int\");\n        b.item(\"CalculateCount\", \"Number:int\");\n        b.item(\"Multiplier\", \"Number:double\");\n        b.item(\"MinimumValue\", \"Number:double\");\n        b.item(\"MaximumValue\", \"Number:double\");\n        b.item(\"SpecifiesRange\", \"Boolean\");\n    };\n    FinancialCalculationDataSourceDescriptionMetadata.d = function (a) {\n        FinancialCalculationDataSourceDescriptionMetadata.b(a);\n        a.n(\"FinancialCalculationDataSource\", function () { return new FinancialCalculationDataSourceDescription(); });\n        a.m(\"FinancialCalculationDataSource\", FinancialCalculationDataSourceDescriptionMetadata.a);\n    };\n    FinancialCalculationDataSourceDescriptionMetadata.$t = markType(FinancialCalculationDataSourceDescriptionMetadata, 'FinancialCalculationDataSourceDescriptionMetadata');\n    FinancialCalculationDataSourceDescriptionMetadata.a = null;\n    return FinancialCalculationDataSourceDescriptionMetadata;\n}(Base));\nexport { FinancialCalculationDataSourceDescriptionMetadata };\n//# sourceMappingURL=FinancialCalculationDataSourceDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}