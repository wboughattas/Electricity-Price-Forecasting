{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { ShapeSeriesBaseDescription } from \"./ShapeSeriesBaseDescription\";\nimport { markType } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar ScatterPolylineSeriesDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ScatterPolylineSeriesDescription, _super);\n\n  function ScatterPolylineSeriesDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.b8 = null;\n    return _this;\n  }\n\n  ScatterPolylineSeriesDescription.prototype.get_type = function () {\n    return \"ScatterPolylineSeries\";\n  };\n\n  Object.defineProperty(ScatterPolylineSeriesDescription.prototype, \"shapeStyle\", {\n    get: function () {\n      return this.b8;\n    },\n    set: function (a) {\n      this.b8 = a;\n      this.e(\"ShapeStyle\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ScatterPolylineSeriesDescription.$t = markType(ScatterPolylineSeriesDescription, 'ScatterPolylineSeriesDescription', ShapeSeriesBaseDescription.$);\n  return ScatterPolylineSeriesDescription;\n}(ShapeSeriesBaseDescription);\n\nexport { ScatterPolylineSeriesDescription };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ScatterPolylineSeriesDescription.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,0BAAT,QAA2C,8BAA3C;AAGA,SAAqB,QAArB,QAAqC,QAArC;AAEA;;AAEG;;AACH,IAAA,gCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,OAAA,CAAA,SAAA,CAAA,gCAAA,EAAA,MAAA;;AAKrD,WAAA,gCAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAGQ,IAAA,KAAA,CAAA,EAAA,GAAuB,IAAvB;;AADP;;AALS,EAAA,gCAAA,CAAA,SAAA,CAAA,QAAA,GAAV,YAAA;AACC,WAAO,uBAAP;AACA,GAFS;;AAOV,EAAA,MAAA,CAAA,cAAA,CAAI,gCAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;SAAd,YAAA;AACC,aAAO,KAAK,EAAZ;AACA,KAFa;SAGd,UAAe,CAAf,EAAkC;AACjC,WAAK,EAAL,GAAU,CAAV;AACA,WAAK,CAAL,CAAO,YAAP;AACA,KANa;oBAAA;;AAAA,GAAd;AARO,EAAA,gCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,gCAAD,EAAmC,kCAAnC,EAA6E,0BAA2B,CAAC,CAAzG,CAAnB;AAeR,SAAA,gCAAA;AAAC,CAhBD,CAAsD,0BAAtD,CAAA;;SAAa,gC","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { ShapeSeriesBaseDescription } from \"./ShapeSeriesBaseDescription\";\r\nimport { markType } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar ScatterPolylineSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(ScatterPolylineSeriesDescription, _super);\r\n    function ScatterPolylineSeriesDescription() {\r\n        var _this = _super.call(this) || this;\r\n        _this.b8 = null;\r\n        return _this;\r\n    }\r\n    ScatterPolylineSeriesDescription.prototype.get_type = function () {\r\n        return \"ScatterPolylineSeries\";\r\n    };\r\n    Object.defineProperty(ScatterPolylineSeriesDescription.prototype, \"shapeStyle\", {\r\n        get: function () {\r\n            return this.b8;\r\n        },\r\n        set: function (a) {\r\n            this.b8 = a;\r\n            this.e(\"ShapeStyle\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScatterPolylineSeriesDescription.$t = markType(ScatterPolylineSeriesDescription, 'ScatterPolylineSeriesDescription', ShapeSeriesBaseDescription.$);\r\n    return ScatterPolylineSeriesDescription;\r\n}(ShapeSeriesBaseDescription));\r\nexport { ScatterPolylineSeriesDescription };\r\n//# sourceMappingURL=ScatterPolylineSeriesDescription.js.map\r\n"]},"metadata":{},"sourceType":"module"}