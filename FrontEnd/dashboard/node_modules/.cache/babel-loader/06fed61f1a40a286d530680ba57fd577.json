{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, markType } from \"./type\";\nimport { LinearGradientBrush } from \"./LinearGradientBrush\";\n/**\n * @hidden\n */\n\nvar BrushUtilCore =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(BrushUtilCore, _super);\n\n  function BrushUtilCore() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  BrushUtilCore.a = function (a) {\n    var b = typeCast(LinearGradientBrush.$, a);\n\n    if (b != null) {\n      return BrushUtilCore.c(b);\n    }\n\n    if (a.color.l == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  BrushUtilCore.c = function (a) {\n    var d = a.gradientStops;\n\n    for (var c = 0; c < d.length; c++) {\n      var b = d[c];\n\n      if (!BrushUtilCore.b(b)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  BrushUtilCore.b = function (a) {\n    if (a.color.l == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  BrushUtilCore.$t = markType(BrushUtilCore, 'BrushUtilCore');\n  return BrushUtilCore;\n}(Base);\n\nexport { BrushUtilCore };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/BrushUtilCore.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,QAAf,EAA+B,QAA/B,QAA+C,QAA/C;AAEA,SAAS,mBAAT,QAAoC,uBAApC;AAIA;;AAEG;;AACH,IAAA,aAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,EAAA,MAAA;;AAAnC,WAAA,aAAA,GAAA;;AA4BC;;AA1BO,EAAA,aAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAiB;AAChB,QAAI,CAAC,GAAG,QAAQ,CAA4B,mBAAoB,CAAC,CAAjD,EAAoD,CAApD,CAAhB;;AACA,QAAI,CAAC,IAAI,IAAT,EAAe;AACd,aAAO,aAAa,CAAC,CAAd,CAAgB,CAAhB,CAAP;AACA;;AACD,QAAI,CAAC,CAAC,KAAF,CAAQ,CAAR,IAAa,CAAjB,EAAoB;AACnB,aAAO,IAAP;AACA;;AACD,WAAO,KAAP;AACA,GATM;;AAUA,EAAA,aAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAA+B;AAC9B,QAAI,CAAC,GAAG,CAAC,CAAC,aAAV;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,MAAtB,EAA8B,CAAC,EAA/B,EAAmC;AAClC,UAAI,CAAC,GAAG,CAAC,CAAC,CAAD,CAAT;;AACA,UAAI,CAAC,aAAa,CAAC,CAAd,CAAgB,CAAhB,CAAL,EAAyB;AACxB,eAAO,KAAP;AACA;AACD;;AACD,WAAO,IAAP;AACA,GATM;;AAUA,EAAA,aAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAwB;AACvB,QAAI,CAAC,CAAC,KAAF,CAAQ,CAAR,IAAa,CAAjB,EAAoB;AACnB,aAAO,IAAP;AACA;;AACD,WAAO,KAAP;AACA,GALM;;AArBA,EAAA,aAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,aAAD,EAAgB,eAAhB,CAAnB;AA2BR,SAAA,aAAA;AAAC,CA5BD,CAAmC,IAAnC,CAAA;;SAAa,a","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, markType } from \"./type\";\nimport { LinearGradientBrush } from \"./LinearGradientBrush\";\n/**\n * @hidden\n */\nvar BrushUtilCore = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BrushUtilCore, _super);\n    function BrushUtilCore() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BrushUtilCore.a = function (a) {\n        var b = typeCast(LinearGradientBrush.$, a);\n        if (b != null) {\n            return BrushUtilCore.c(b);\n        }\n        if (a.color.l == 0) {\n            return true;\n        }\n        return false;\n    };\n    BrushUtilCore.c = function (a) {\n        var d = a.gradientStops;\n        for (var c = 0; c < d.length; c++) {\n            var b = d[c];\n            if (!BrushUtilCore.b(b)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BrushUtilCore.b = function (a) {\n        if (a.color.l == 0) {\n            return true;\n        }\n        return false;\n    };\n    BrushUtilCore.$t = markType(BrushUtilCore, 'BrushUtilCore');\n    return BrushUtilCore;\n}(Base));\nexport { BrushUtilCore };\n//# sourceMappingURL=BrushUtilCore.js.map\n"]},"metadata":{},"sourceType":"module"}