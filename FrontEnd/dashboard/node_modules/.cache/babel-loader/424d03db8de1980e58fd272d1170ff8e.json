{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"./type\";\nimport { Brush } from \"./Brush\";\nimport { BrushCollection } from \"./BrushCollection\";\nimport { MathUtil } from \"./MathUtil\";\nimport { ColorUtil } from \"./ColorUtil\";\nimport { truncate, isNaN_ } from \"./number\";\n/**\n * @hidden\n */\n\nvar BrushCollectionUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(BrushCollectionUtil, _super);\n\n  function BrushCollectionUtil() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  BrushCollectionUtil.b = function (a, b) {\n    if (isNaN_(b)) {\n      return null;\n    }\n\n    b = MathUtil.b(b, 0, a.count - 1);\n    var c = truncate(Math.floor(b));\n\n    if (c == b) {\n      return a.item(c);\n    }\n\n    return BrushCollectionUtil.c(b - c, a.item(c), a.item(c + 1), a.af);\n  };\n\n  BrushCollectionUtil.c = function (a, b, c, d) {\n    var e = b.color;\n    var f = c.color;\n    var g = ColorUtil.n(e, a, f, d);\n    var h = new Brush();\n    h.color = g;\n    return h;\n  };\n\n  BrushCollectionUtil.a = function (a) {\n    var e_1, _a;\n\n    var b = new BrushCollection();\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        var d = ColorUtil.g(c);\n\n        if (d != null) {\n          b.add(d);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return b;\n  };\n\n  BrushCollectionUtil.$t = markType(BrushCollectionUtil, 'BrushCollectionUtil');\n  return BrushCollectionUtil;\n}(Base);\n\nexport { BrushCollectionUtil };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/BrushCollectionUtil.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAA+K,QAA/K,EAA+L,QAA/L,QAA+M,QAA/M;AACA,SAAS,KAAT,QAAsB,SAAtB;AACA,SAAS,eAAT,QAAgC,mBAAhC;AAEA,SAAS,QAAT,QAAyB,YAAzB;AAGA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAAS,QAAT,EAAmB,MAAnB,QAAiC,UAAjC;AAEA;;AAEG;;AACH,IAAA,mBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,OAAA,CAAA,SAAA,CAAA,mBAAA,EAAA,MAAA;;AAAzC,WAAA,mBAAA,GAAA;;AA+BC;;AA7BO,EAAA,mBAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAA6B,CAA7B,EAAsC;AACrC,QAAI,MAAM,CAAC,CAAD,CAAV,EAAe;AACd,aAAO,IAAP;AACA;;AACD,IAAA,CAAC,GAAG,QAAQ,CAAC,CAAT,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAC,CAAC,KAAF,GAAU,CAA3B,CAAJ;AACA,QAAI,CAAC,GAAmB,QAAQ,CAAC,IAAI,CAAC,KAAL,CAAW,CAAX,CAAD,CAAhC;;AACA,QAAI,CAAC,IAAI,CAAT,EAAY;AACX,aAAO,CAAC,CAAC,IAAF,CAAO,CAAP,CAAP;AACA;;AACD,WAAO,mBAAmB,CAAC,CAApB,CAAsB,CAAC,GAAG,CAA1B,EAA6B,CAAC,CAAC,IAAF,CAAO,CAAP,CAA7B,EAAwC,CAAC,CAAC,IAAF,CAAO,CAAC,GAAG,CAAX,CAAxC,EAAuD,CAAC,CAAC,EAAzD,CAAP;AACA,GAVM;;AAWQ,EAAA,mBAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA4B,CAA5B,EAAsC,CAAtC,EAAgD,CAAhD,EAAoE;AACnE,QAAI,CAAC,GAAU,CAAC,CAAC,KAAjB;AACA,QAAI,CAAC,GAAU,CAAC,CAAC,KAAjB;AACA,QAAI,CAAC,GAAU,SAAS,CAAC,CAAV,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAf;AACA,QAAI,CAAC,GAAU,IAAI,KAAJ,EAAf;AACA,IAAA,CAAC,CAAC,KAAF,GAAU,CAAV;AACA,WAAO,CAAP;AACA,GAPc;;AAQR,EAAA,mBAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAA0B;;;AACzB,QAAI,CAAC,GAAG,IAAI,eAAJ,EAAR;;;AACA,WAAc,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,QAAQ,CAAQ,CAAR,CAAR,CAAA,EAAkB,EAAA,GAAA,EAAA,CAAA,IAAA,EAAhC,EAAgC,CAAA,EAAA,CAAA,IAAhC,EAAgC,EAAA,GAAA,EAAA,CAAA,IAAA,EAAhC,EAAkC;AAA7B,YAAI,CAAC,GAAA,EAAA,CAAA,KAAL;AACJ,YAAI,CAAC,GAAG,SAAS,CAAC,CAAV,CAAY,CAAZ,CAAR;;AACA,YAAI,CAAC,IAAI,IAAT,EAAe;AACd,UAAA,CAAC,CAAC,GAAF,CAAM,CAAN;AACA;AACD;;;;;;;;AACD,O,SACA;AA7BM,YAAA,GAAA,EA8BR,MAAA,GAAA,CAAC,KAAD;AAAC;AA/BY;;;GAqBL;;;;CArBR,C,IAAA,CAAA","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"./type\";\nimport { Brush } from \"./Brush\";\nimport { BrushCollection } from \"./BrushCollection\";\nimport { MathUtil } from \"./MathUtil\";\nimport { ColorUtil } from \"./ColorUtil\";\nimport { truncate, isNaN_ } from \"./number\";\n/**\n * @hidden\n */\nvar BrushCollectionUtil = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BrushCollectionUtil, _super);\n    function BrushCollectionUtil() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BrushCollectionUtil.b = function (a, b) {\n        if (isNaN_(b)) {\n            return null;\n        }\n        b = MathUtil.b(b, 0, a.count - 1);\n        var c = truncate(Math.floor(b));\n        if (c == b) {\n            return a.item(c);\n        }\n        return BrushCollectionUtil.c(b - c, a.item(c), a.item(c + 1), a.af);\n    };\n    BrushCollectionUtil.c = function (a, b, c, d) {\n        var e = b.color;\n        var f = c.color;\n        var g = ColorUtil.n(e, a, f, d);\n        var h = new Brush();\n        h.color = g;\n        return h;\n    };\n    BrushCollectionUtil.a = function (a) {\n        var e_1, _a;\n        var b = new BrushCollection();\n        try {\n            for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                var d = ColorUtil.g(c);\n                if (d != null) {\n                    b.add(d);\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        return b;\n    };\n    BrushCollectionUtil.$t = markType(BrushCollectionUtil, 'BrushCollectionUtil');\n    return BrushCollectionUtil;\n}(Base));\nexport { BrushCollectionUtil };\n//# sourceMappingURL=BrushCollectionUtil.js.map\n"]},"metadata":{},"sourceType":"module"}