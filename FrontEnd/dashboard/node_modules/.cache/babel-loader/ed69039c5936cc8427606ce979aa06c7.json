{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Number_$type, Point_$type, markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\nimport { PathFigureCollection } from \"./PathFigureCollection\";\nimport { PathFigure } from \"./PathFigure\";\nimport { PolyBezierSegment } from \"./PolyBezierSegment\";\nimport { LineSegment } from \"./LineSegment\";\nimport { MathUtil } from \"./MathUtil\";\nimport { arrayGetLength } from \"./array\";\nimport { isNaN_ } from \"./number\";\n/**\r\n * @hidden\r\n */\n\nvar Numeric =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(Numeric, _super);\n\n  function Numeric() {\n    return _super.call(this) || this;\n  }\n\n  Numeric.e = function (a, b, c, d, e) {\n    var f;\n    var g = a.count;\n    var h = new Array(g);\n\n    if (b._inner[0] == 0) {\n      return false;\n    }\n\n    var i = b._inner[0];\n    e._inner[0] = d._inner[0] / i;\n\n    for (f = 1; f < g; f++) {\n      h[f] = c._inner[f - 1] / i;\n      i = b._inner[f] - a._inner[f] * h[f];\n\n      if (i == 0) {\n        return false;\n      }\n\n      e._inner[f] = (d._inner[f] - a._inner[f] * e._inner[f - 1]) / i;\n    }\n\n    for (f = g - 2; f >= 0; f--) {\n      e._inner[f] -= h[f + 1] * e._inner[f + 1];\n    }\n\n    return true;\n  };\n\n  Numeric.d = function (a, b) {\n    var c = arrayGetLength(a, 0);\n    var d = new Array(c);\n    var e = new Array(c);\n    var f = new Array(c);\n\n    for (var g = 0; g < c; g++) {\n      f[g] = 0;\n    }\n\n    for (var h = 0; h < c; h++) {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n\n      for (var l = 0; l < c; l++) {\n        if (f[l] != 1) {\n          for (var m = 0; m < c; m++) {\n            if (f[m] == 0) {\n              if (Math.abs(a[l][m]) >= i) {\n                i = Math.abs(a[l][m]);\n                j = l;\n                k = m;\n              }\n            }\n          }\n        }\n      }\n\n      ++f[k];\n\n      if (j != k) {\n        for (var n = 0; n < c; n++) {\n          var o = a[j][n];\n          a[j][n] = a[k][n];\n          a[k][n] = o;\n        }\n\n        {\n          var p = b[j];\n          b[j] = b[k];\n          b[k] = p;\n        }\n      }\n\n      e[h] = j;\n      d[h] = k;\n\n      if (a[k][k] == 0) {\n        return false;\n      }\n\n      var q = 1 / a[k][k];\n      a[k][k] = 1;\n\n      for (var r = 0; r < c; r++) {\n        a[k][r] *= q;\n      }\n\n      b[k] *= q;\n\n      for (var s = 0; s < c; s++) {\n        if (s != k) {\n          var t = a[s][k];\n          a[s][k] = 0;\n\n          for (var u = 0; u < c; u++) {\n            a[s][u] -= a[k][u] * t;\n          }\n\n          b[s] -= b[k] * t;\n        }\n      }\n    }\n\n    for (var v = c - 1; v >= 0; v--) {\n      if (e[v] != d[v]) {\n        for (var w = 0; w < c; w++) {\n          var x = a[w][e[v]];\n          a[w][e[v]] = a[w][d[v]];\n          a[w][d[v]] = x;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  Numeric.c = function (a, b, c, d, e) {\n    var f = new List$1(Number_$type, 0);\n\n    for (var g = 0; g < a; ++g) {\n      while (g < a && (isNaN_(b(g)) || isNaN_(c(g)))) {\n        f.add(NaN);\n        ++g;\n      }\n\n      var h = g;\n\n      while (g < a && !isNaN_(b(g)) && !isNaN_(c(g))) {\n        ++g;\n      }\n\n      --g;\n\n      if (g - h > 0) {\n        f.o(Numeric.b(h, g - h + 1, b, c, d, e));\n      } else {\n        for (; h <= g; ++h) {\n          f.add(NaN);\n        }\n      }\n    }\n\n    return f.toArray();\n  };\n\n  Numeric.b = function (a, b, c, d, e, f) {\n    return Numeric.a(b, function (g) {\n      return c(g + a);\n    }, function (g) {\n      return d(g + a);\n    }, e, f);\n  };\n\n  Numeric.a = function (a, b, c, d, e) {\n    var f = new Array(a - 1);\n    var g = new Array(a);\n    g[0] = isNaN_(d) ? 0 : -0.5;\n    f[0] = isNaN_(d) ? 0 : 3 / (b(1) - b(0)) * ((c(1) - c(0)) / (b(1) - b(0)) - d);\n\n    for (var h = 1; h < a - 1; h++) {\n      var i = (b(h) - b(h - 1)) / (b(h + 1) - b(h - 1));\n      var j = i * g[h - 1] + 2;\n      g[h] = (i - 1) / j;\n      f[h] = (c(h + 1) - c(h)) / (b(h + 1) - b(h)) - (c(h) - c(h - 1)) / (b(h) - b(h - 1));\n      f[h] = (6 * f[h] / (b(h + 1) - b(h - 1)) - i * f[h - 1]) / j;\n    }\n\n    var k = isNaN_(e) ? 0 : 0.5;\n    var l = isNaN_(e) ? 0 : 3 / (b(a - 1) - b(a - 2)) * (e - (c(a - 1) - c(a - 2)) / (b(a - 1) - b(a - 2)));\n    g[a - 1] = (l - k * f[a - 2]) / (k * g[a - 2] + 1);\n\n    for (var m = a - 2; m >= 0; m--) {\n      g[m] = g[m] * g[m + 1] + f[m];\n    }\n\n    return g;\n  };\n\n  Numeric.prototype.f = function (a, b, c, d, e, f, g) {\n    var h = d - b;\n    var i = (d - a) / h;\n    var j = (a - b) / h;\n    return i * c + j * e + ((i * i * i - i) * f + (j * j * j - j) * g) * (h * h) / 6;\n  };\n\n  Numeric.h = function (a, b, c, d) {\n    var e = new PathFigureCollection();\n    var f = 0;\n    var g = -1;\n    var h = NaN;\n    var i = NaN;\n\n    for (var j = 0; j < a; j++) {\n      h = b(j);\n      i = c(j);\n\n      if (isNaN_(h) || isNaN_(i)) {\n        g = j - 1;\n\n        if (g - f > 0) {\n          e.add(Numeric.g(f, g, b, c, d));\n        }\n\n        f = j + 1;\n      }\n    }\n\n    if (!isNaN_(h) && !isNaN_(i)) {\n      g = a - 1;\n    }\n\n    if (g - f > 0) {\n      e.add(Numeric.g(f, g, b, c, d));\n    }\n\n    return e;\n  };\n\n  Numeric.g = function (a, b, c, d, e) {\n    e = 0.5 * MathUtil.b(isNaN_(e) ? 0.5 : e, 0, 1);\n    var f = new PathFigure();\n    var g = b - a + 1;\n\n    if (g < 2) {\n      return f;\n    }\n\n    if (g == 2) {\n      f._startPoint = {\n        $type: Point_$type,\n        x: c(a),\n        y: d(a)\n      };\n\n      var h = function () {\n        var $ret = new LineSegment(1);\n        $ret.c = {\n          $type: Point_$type,\n          x: c(a + 1),\n          y: d(a + 1)\n        };\n        return $ret;\n      }();\n\n      f._segments.add(h);\n\n      return f;\n    }\n\n    var i = new PolyBezierSegment();\n    var j = c(a);\n    var k = d(a);\n    var l = c(a + 1);\n    var m = d(a + 1);\n\n    while (l == j && m == k && a + 1 <= b) {\n      a++;\n      l = c(a + 1);\n      m = d(a + 1);\n    }\n\n    var n = l - j;\n    var o = m - k;\n    var p = Math.sqrt(n * n + o * o);\n\n    for (var q = a + 1; q < b; ++q) {\n      var r = c(q);\n      var s = d(q);\n\n      if (r == j && s == k) {\n        continue;\n      }\n\n      var t = c(q + 1) - c(q - 1);\n      var u = d(q + 1) - d(q - 1);\n      var v = t * t + u * u;\n\n      if (v < 0.01) {\n        t = -(d(q + 1) - d(q));\n        u = c(q + 1) - c(q);\n        v = t * t + u * u;\n      }\n\n      v = Math.sqrt(v);\n      var w = e * Math.sqrt((r - j) * (r - j) + (s - k) * (s - k));\n\n      if (v > 0.01) {\n        i.b.add({\n          $type: Point_$type,\n          x: j + n * w / p,\n          y: k + o * w / p\n        });\n        i.b.add({\n          $type: Point_$type,\n          x: r - t * w / v,\n          y: s - u * w / v\n        });\n        i.b.add({\n          $type: Point_$type,\n          x: r,\n          y: s\n        });\n        j = r;\n        k = s;\n        n = t;\n        o = u;\n        p = v;\n      }\n    }\n\n    {\n      var x = b;\n      var y = c(x);\n      var z = d(x);\n\n      if (!(y == j && z == k)) {\n        var aa = c(x) - c(x - 1);\n        var ab = d(x) - d(x - 1);\n        var ac = aa * aa + ab * ab;\n        var ad = e * Math.sqrt((y - j) * (y - j) + (z - k) * (z - k));\n        i.b.add({\n          $type: Point_$type,\n          x: j + n * ad / p,\n          y: k + o * ad / p\n        });\n        i.b.add({\n          $type: Point_$type,\n          x: y - aa * ad / ac,\n          y: z - ab * ad / ac\n        });\n        i.b.add({\n          $type: Point_$type,\n          x: y,\n          y: z\n        });\n      }\n    }\n    f._startPoint = {\n      $type: Point_$type,\n      x: c(a),\n      y: d(a)\n    };\n\n    f._segments.add(i);\n\n    return f;\n  };\n\n  Numeric.$t = markType(Numeric, 'Numeric');\n  return Numeric;\n}(Base);\n\nexport { Numeric };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/Numeric.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, Number_$type, Point_$type, markType } from \"./type\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { PathFigureCollection } from \"./PathFigureCollection\";\r\nimport { PathFigure } from \"./PathFigure\";\r\nimport { PolyBezierSegment } from \"./PolyBezierSegment\";\r\nimport { LineSegment } from \"./LineSegment\";\r\nimport { MathUtil } from \"./MathUtil\";\r\nimport { arrayGetLength } from \"./array\";\r\nimport { isNaN_ } from \"./number\";\r\n/**\r\n * @hidden\r\n */\r\nvar Numeric = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(Numeric, _super);\r\n    function Numeric() {\r\n        return _super.call(this) || this;\r\n    }\r\n    Numeric.e = function (a, b, c, d, e) {\r\n        var f;\r\n        var g = a.count;\r\n        var h = new Array(g);\r\n        if (b._inner[0] == 0) {\r\n            return false;\r\n        }\r\n        var i = b._inner[0];\r\n        e._inner[0] = d._inner[0] / (i);\r\n        for (f = 1; f < g; f++) {\r\n            h[f] = c._inner[f - 1] / i;\r\n            i = b._inner[f] - a._inner[f] * h[f];\r\n            if (i == 0) {\r\n                return false;\r\n            }\r\n            e._inner[f] = (d._inner[f] - a._inner[f] * e._inner[f - 1]) / i;\r\n        }\r\n        for (f = (g - 2); f >= 0; f--) {\r\n            e._inner[f] -= h[f + 1] * e._inner[f + 1];\r\n        }\r\n        return true;\r\n    };\r\n    Numeric.d = function (a, b) {\r\n        var c = arrayGetLength(a, 0);\r\n        var d = new Array(c);\r\n        var e = new Array(c);\r\n        var f = new Array(c);\r\n        for (var g = 0; g < c; g++) {\r\n            f[g] = 0;\r\n        }\r\n        for (var h = 0; h < c; h++) {\r\n            var i = 0;\r\n            var j = 0;\r\n            var k = 0;\r\n            for (var l = 0; l < c; l++) {\r\n                if (f[l] != 1) {\r\n                    for (var m = 0; m < c; m++) {\r\n                        if (f[m] == 0) {\r\n                            if (Math.abs(a[l][m]) >= i) {\r\n                                i = Math.abs(a[l][m]);\r\n                                j = l;\r\n                                k = m;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            ++(f[k]);\r\n            if (j != k) {\r\n                for (var n = 0; n < c; n++) {\r\n                    var o = a[j][n];\r\n                    a[j][n] = a[k][n];\r\n                    a[k][n] = o;\r\n                }\r\n                {\r\n                    var p = b[j];\r\n                    b[j] = b[k];\r\n                    b[k] = p;\r\n                }\r\n            }\r\n            e[h] = j;\r\n            d[h] = k;\r\n            if (a[k][k] == 0) {\r\n                return false;\r\n            }\r\n            var q = 1 / a[k][k];\r\n            a[k][k] = 1;\r\n            for (var r = 0; r < c; r++) {\r\n                a[k][r] *= q;\r\n            }\r\n            b[k] *= q;\r\n            for (var s = 0; s < c; s++) {\r\n                if (s != k) {\r\n                    var t = a[s][k];\r\n                    a[s][k] = 0;\r\n                    for (var u = 0; u < c; u++) {\r\n                        a[s][u] -= a[k][u] * t;\r\n                    }\r\n                    b[s] -= b[k] * t;\r\n                }\r\n            }\r\n        }\r\n        for (var v = c - 1; v >= 0; v--) {\r\n            if (e[v] != d[v]) {\r\n                for (var w = 0; w < c; w++) {\r\n                    var x = a[w][e[v]];\r\n                    a[w][e[v]] = a[w][d[v]];\r\n                    a[w][d[v]] = x;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Numeric.c = function (a, b, c, d, e) {\r\n        var f = new List$1(Number_$type, 0);\r\n        for (var g = 0; g < a; ++g) {\r\n            while (g < a && (isNaN_(b(g)) || isNaN_(c(g)))) {\r\n                f.add(NaN);\r\n                ++g;\r\n            }\r\n            var h = g;\r\n            while (g < a && !isNaN_(b(g)) && !isNaN_(c(g))) {\r\n                ++g;\r\n            }\r\n            --g;\r\n            if (g - h > 0) {\r\n                f.o(Numeric.b(h, g - h + 1, b, c, d, e));\r\n            }\r\n            else {\r\n                for (; h <= g; ++h) {\r\n                    f.add(NaN);\r\n                }\r\n            }\r\n        }\r\n        return f.toArray();\r\n    };\r\n    Numeric.b = function (a, b, c, d, e, f) {\r\n        return Numeric.a(b, function (g) { return c(g + a); }, function (g) { return d(g + a); }, e, f);\r\n    };\r\n    Numeric.a = function (a, b, c, d, e) {\r\n        var f = new Array(a - 1);\r\n        var g = new Array(a);\r\n        g[0] = isNaN_(d) ? 0 : -0.5;\r\n        f[0] = isNaN_(d) ? 0 : (3 / (b(1) - b(0))) * ((c(1) - c(0)) / (b(1) - b(0)) - d);\r\n        for (var h = 1; h < a - 1; h++) {\r\n            var i = (b(h) - b(h - 1)) / (b(h + 1) - b(h - 1));\r\n            var j = i * g[h - 1] + 2;\r\n            g[h] = (i - 1) / j;\r\n            f[h] = (c(h + 1) - c(h)) / (b(h + 1) - b(h)) - (c(h) - c(h - 1)) / (b(h) - b(h - 1));\r\n            f[h] = (6 * f[h] / (b(h + 1) - b(h - 1)) - i * f[h - 1]) / j;\r\n        }\r\n        var k = isNaN_(e) ? 0 : 0.5;\r\n        var l = isNaN_(e) ? 0 : (3 / (b(a - 1) - b(a - 2))) * (e - (c(a - 1) - c(a - 2)) / (b(a - 1) - b(a - 2)));\r\n        g[a - 1] = (l - k * f[a - 2]) / (k * g[a - 2] + 1);\r\n        for (var m = a - 2; m >= 0; m--) {\r\n            g[m] = g[m] * g[m + 1] + f[m];\r\n        }\r\n        return g;\r\n    };\r\n    Numeric.prototype.f = function (a, b, c, d, e, f, g) {\r\n        var h = d - b;\r\n        var i = (d - a) / h;\r\n        var j = (a - b) / h;\r\n        return i * c + j * e + ((i * i * i - i) * f + (j * j * j - j) * g) * (h * h) / 6;\r\n    };\r\n    Numeric.h = function (a, b, c, d) {\r\n        var e = new PathFigureCollection();\r\n        var f = 0;\r\n        var g = -1;\r\n        var h = NaN;\r\n        var i = NaN;\r\n        for (var j = 0; j < a; j++) {\r\n            h = b(j);\r\n            i = c(j);\r\n            if (isNaN_(h) || isNaN_(i)) {\r\n                g = j - 1;\r\n                if (g - f > 0) {\r\n                    e.add(Numeric.g(f, g, b, c, d));\r\n                }\r\n                f = j + 1;\r\n            }\r\n        }\r\n        if (!isNaN_(h) && !isNaN_(i)) {\r\n            g = a - 1;\r\n        }\r\n        if (g - f > 0) {\r\n            e.add(Numeric.g(f, g, b, c, d));\r\n        }\r\n        return e;\r\n    };\r\n    Numeric.g = function (a, b, c, d, e) {\r\n        e = 0.5 * MathUtil.b(isNaN_(e) ? 0.5 : e, 0, 1);\r\n        var f = new PathFigure();\r\n        var g = b - a + 1;\r\n        if (g < 2) {\r\n            return f;\r\n        }\r\n        if (g == 2) {\r\n            f._startPoint = { $type: Point_$type, x: c(a), y: d(a) };\r\n            var h = ((function () {\r\n                var $ret = new LineSegment(1);\r\n                $ret.c = { $type: Point_$type, x: c(a + 1), y: d(a + 1) };\r\n                return $ret;\r\n            })());\r\n            f._segments.add(h);\r\n            return f;\r\n        }\r\n        var i = new PolyBezierSegment();\r\n        var j = c(a);\r\n        var k = d(a);\r\n        var l = c(a + 1);\r\n        var m = d(a + 1);\r\n        while (l == j && m == k && a + 1 <= b) {\r\n            a++;\r\n            l = c(a + 1);\r\n            m = d(a + 1);\r\n        }\r\n        var n = l - j;\r\n        var o = m - k;\r\n        var p = Math.sqrt(n * n + o * o);\r\n        for (var q = a + 1; q < b; ++q) {\r\n            var r = c(q);\r\n            var s = d(q);\r\n            if (r == j && s == k) {\r\n                continue;\r\n            }\r\n            var t = c(q + 1) - c(q - 1);\r\n            var u = d(q + 1) - d(q - 1);\r\n            var v = t * t + u * u;\r\n            if (v < 0.01) {\r\n                t = -(d(q + 1) - d(q));\r\n                u = c(q + 1) - c(q);\r\n                v = t * t + u * u;\r\n            }\r\n            v = Math.sqrt(v);\r\n            var w = e * Math.sqrt((r - j) * (r - j) + (s - k) * (s - k));\r\n            if (v > 0.01) {\r\n                i.b.add({ $type: Point_$type, x: j + n * w / p, y: k + o * w / p });\r\n                i.b.add({ $type: Point_$type, x: r - t * w / v, y: s - u * w / v });\r\n                i.b.add({ $type: Point_$type, x: r, y: s });\r\n                j = r;\r\n                k = s;\r\n                n = t;\r\n                o = u;\r\n                p = v;\r\n            }\r\n        }\r\n        {\r\n            var x = b;\r\n            var y = c(x);\r\n            var z = d(x);\r\n            if (!(y == j && z == k)) {\r\n                var aa = c(x) - c(x - 1);\r\n                var ab = d(x) - d(x - 1);\r\n                var ac = aa * aa + ab * ab;\r\n                var ad = e * Math.sqrt((y - j) * (y - j) + (z - k) * (z - k));\r\n                i.b.add({ $type: Point_$type, x: j + n * ad / p, y: k + o * ad / p });\r\n                i.b.add({ $type: Point_$type, x: y - aa * ad / ac, y: z - ab * ad / ac });\r\n                i.b.add({ $type: Point_$type, x: y, y: z });\r\n            }\r\n        }\r\n        f._startPoint = { $type: Point_$type, x: c(a), y: d(a) };\r\n        f._segments.add(i);\r\n        return f;\r\n    };\r\n    Numeric.$t = markType(Numeric, 'Numeric');\r\n    return Numeric;\r\n}(Base));\r\nexport { Numeric };\r\n//# sourceMappingURL=Numeric.js.map\r\n"]},"metadata":{},"sourceType":"module"}