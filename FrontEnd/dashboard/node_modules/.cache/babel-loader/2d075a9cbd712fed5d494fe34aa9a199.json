{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, Number_$type, typeGetValue, markType } from \"./type\";\nimport { IFastItemColumnInternal_$type } from \"./IFastItemColumnInternal\";\nimport { IFastItemColumn$1_$type } from \"./IFastItemColumn$1\";\nimport { List$1 } from \"./List$1\";\nimport { FastReflectionHelper } from \"./FastReflectionHelper\";\nimport { NotImplementedException } from \"./NotImplementedException\";\nimport { isNaN_ } from \"./number\";\n/**\n * @hidden\n */\n\nvar FastItemColumn =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(FastItemColumn, _super);\n\n  function FastItemColumn(a, b, c, d) {\n    var _this = _super.call(this) || this;\n\n    _this.l = null;\n    _this.d = false;\n    _this.e = false;\n    _this.a = null;\n    _this.b = null;\n    _this._propertyName = null;\n    _this.j = 0;\n    _this.i = 0;\n    _this.h = null;\n    _this.m = 0;\n    _this.l = c;\n    _this.d = d;\n    _this.propertyName = b;\n    _this.e = FastReflectionHelper.needsHelper(b);\n\n    if (_this.e) {\n      _this.a = new FastReflectionHelper(true, _this.propertyName);\n    }\n\n    _this.c = a;\n    return _this;\n  }\n\n  Object.defineProperty(FastItemColumn.prototype, \"c\", {\n    get: function () {\n      return this.b;\n    },\n    set: function (a) {\n      this.b = a;\n      this.reset();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FastItemColumn.prototype, \"propertyName\", {\n    get: function () {\n      return this._propertyName;\n    },\n    set: function (a) {\n      this._propertyName = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FastItemColumn.prototype, \"minimum\", {\n    get: function () {\n      var e_1, _a;\n\n      if (isNaN_(this.j) && this.h != null) {\n        this.j = Number.POSITIVE_INFINITY;\n\n        try {\n          for (var _b = tslib_1.__values(fromEnum(this.h)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var a = _c.value;\n\n            if (!isNaN_(a)) {\n              this.j = Math.min(this.j, a);\n            }\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n      }\n\n      return this.j;\n    },\n    set: function (a) {\n      this.j = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FastItemColumn.prototype, \"maximum\", {\n    get: function () {\n      var e_2, _a;\n\n      if (isNaN_(this.i) && this.h != null) {\n        this.i = Number.NEGATIVE_INFINITY;\n\n        try {\n          for (var _b = tslib_1.__values(fromEnum(this.h)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var a = _c.value;\n\n            if (!isNaN_(a)) {\n              this.i = Math.max(this.i, a);\n            }\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n\n      return this.i;\n    },\n    set: function (a) {\n      this.i = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FastItemColumn.prototype.item = function (a, b) {\n    if (arguments.length === 2) {\n      this.h._inner[a] = b;\n      return b;\n    } else {\n      return this.h._inner[a];\n    }\n  };\n\n  FastItemColumn.prototype.getEnumerator = function () {\n    return this.h.getEnumerator();\n  };\n\n  FastItemColumn.prototype.getEnumeratorObject = function () {\n    return this.h.getEnumerator();\n  };\n\n  FastItemColumn.prototype.contains = function (a) {\n    return this.h.contains(a);\n  };\n\n  FastItemColumn.prototype.copyTo = function (a, b) {\n    this.h.copyTo(a, b);\n  };\n\n  Object.defineProperty(FastItemColumn.prototype, \"count\", {\n    get: function () {\n      return this.h.count;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FastItemColumn.prototype, \"isReadOnly\", {\n    get: function () {\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FastItemColumn.prototype.indexOf = function (a) {\n    return this.h.indexOf(a);\n  };\n\n  FastItemColumn.prototype.add = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  FastItemColumn.prototype.clear = function () {\n    throw new NotImplementedException(0);\n  };\n\n  FastItemColumn.prototype.remove = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  FastItemColumn.prototype.insert = function (a, b) {\n    throw new NotImplementedException(0);\n  };\n\n  FastItemColumn.prototype.removeAt = function (a) {\n    throw new NotImplementedException(0);\n  };\n\n  FastItemColumn.prototype.reset = function () {\n    this.h = null;\n    this.minimum = NaN;\n    this.maximum = NaN;\n    this.m = 0;\n    return this.c != null ? this.insertRange(0, this.c.count) : true;\n  };\n\n  FastItemColumn.prototype.insertRange = function (a, b) {\n    var c = new Array(b);\n    var source_ = this.b.asArray();\n    var item_;\n    var d = this.minimum;\n    var e = this.maximum;\n    var f = isNaN_(this.minimum);\n    var g = isNaN_(this.maximum);\n    var h = 0;\n    var i;\n    var j = this.l;\n    var sourceItem_ = null;\n    var propertyName_ = this._propertyName;\n\n    if (this.e) {\n      for (var i_ = a; i_ < a + b; ++i_) {\n        sourceItem_ = source_[i_];\n\n        if (sourceItem_ == null) {\n          item_ = NaN;\n        } else {\n          item_ = this.a.getPropertyValue(sourceItem_);\n        }\n\n        if (this.d) {\n          if (typeof item_ == 'function') {\n            item_ = item_.apply(sourceItem_);\n          }\n        }\n\n        if (j != null) {\n          item_ = j(item_);\n        }\n\n        i = item_ == null ? NaN : item_;\n        var k = i != i;\n\n        if (k) {\n          this.m++;\n        }\n\n        if (f || i < d) {\n          d = i;\n          f = k;\n        }\n\n        if (g || i > e) {\n          e = i;\n          g = k;\n        }\n\n        c[h] = i;\n        h++;\n      }\n    } else {\n      if (this.l != null || this.d) {\n        for (var i_ = a; i_ < a + b; ++i_) {\n          sourceItem_ = source_[i_];\n\n          if (sourceItem_ == null) {\n            item_ = NaN;\n          } else {\n            item_ = sourceItem_[propertyName_];\n          }\n\n          if (this.d) {\n            if (typeof item_ == 'function') {\n              item_ = item_.apply(sourceItem_);\n            }\n          }\n\n          if (j != null) {\n            item_ = j(item_);\n          }\n\n          i = item_ == null ? NaN : item_;\n          var l = i != i;\n\n          if (l) {\n            this.m++;\n          }\n\n          if (f || i < d) {\n            d = i;\n            f = l;\n          }\n\n          if (g || i > e) {\n            e = i;\n            g = l;\n          }\n\n          c[h] = i;\n          h++;\n        }\n      } else {\n        for (var i_ = a; i_ < a + b; ++i_) {\n          sourceItem_ = source_[i_];\n\n          if (sourceItem_ == null) {\n            item_ = NaN;\n          } else {\n            item_ = sourceItem_[propertyName_];\n          }\n\n          i = item_ == null ? NaN : item_;\n          var m = i != i;\n\n          if (m) {\n            this.m++;\n          }\n\n          if (f || i < d) {\n            d = i;\n            f = m;\n          }\n\n          if (g || i > e) {\n            e = i;\n            g = m;\n          }\n\n          c[h] = i;\n          h++;\n        }\n      }\n    }\n\n    this.minimum = d;\n    this.maximum = e;\n\n    if (this.h == null) {\n      this.h = new List$1(Number_$type, 1, c);\n    } else {\n      this.h.t(a, c);\n    }\n\n    return true;\n  };\n\n  FastItemColumn.prototype.removeRange = function (a, b) {\n    for (var c = a; c < a + b && !isNaN_(this.minimum) && !isNaN_(this.maximum); ++c) {\n      if (this.item(c) == this.minimum) {\n        this.minimum = NaN;\n      }\n\n      if (this.item(c) == this.maximum) {\n        this.maximum = NaN;\n      }\n\n      if (isNaN_(this.item(c))) {\n        this.m--;\n      }\n    }\n\n    this.h.v(a, b);\n    return true;\n  };\n\n  FastItemColumn.prototype.r = function (a, b) {\n    if (isNaN_(a)) {\n      if (!isNaN_(b)) {\n        if (!isNaN_(this.minimum)) {\n          this.minimum = Math.min(b, this.minimum);\n        }\n\n        if (!isNaN_(this.maximum)) {\n          this.maximum = Math.max(b, this.maximum);\n        }\n      }\n\n      return;\n    }\n\n    if (isNaN_(b)) {\n      this.minimum = !isNaN_(this.minimum) && a == this.minimum ? NaN : this.minimum;\n      this.maximum = !isNaN_(this.maximum) && a == this.maximum ? NaN : this.maximum;\n      return;\n    }\n\n    if (!isNaN_(this.minimum)) {\n      if (a == this.minimum && b > this.minimum) {\n        this.minimum = NaN;\n      } else {\n        this.minimum = Math.min(b, this.minimum);\n      }\n    }\n\n    if (!isNaN_(this.maximum)) {\n      if (a == this.maximum && b < this.maximum) {\n        this.maximum = NaN;\n      } else {\n        this.maximum = Math.max(b, this.maximum);\n      }\n    }\n  };\n\n  FastItemColumn.prototype.replaceRange = function (a, b) {\n    var c = false;\n\n    for (var d = 0; d < b; ++d) {\n      var e = this.h._inner[a + d];\n      var f = this.k(this.c.item(a + d));\n\n      if (isNaN_(e)) {\n        this.m--;\n      }\n\n      if (isNaN_(f)) {\n        this.m++;\n      }\n\n      if (e != f) {\n        this.h._inner[a + d] = f;\n        c = true;\n        this.r(e, f);\n      }\n    }\n\n    return c;\n  };\n\n  FastItemColumn.prototype.k = function (a) {\n    if (a == null) {\n      return NaN;\n    }\n\n    var sourceItem_ = a;\n    var from_ = a;\n    var propertyName_ = this._propertyName;\n\n    if (this.e) {\n      a = this.a.getPropertyValue(from_);\n    } else {\n      a = from_[propertyName_];\n    }\n\n    if (this.d) {\n      from_ = a;\n\n      if (typeof from_ == 'function') {\n        a = from_.apply(sourceItem_);\n      }\n    }\n\n    if (this.l != null) {\n      a = this.l(a);\n    }\n\n    if (a == null) {\n      return NaN;\n    }\n\n    return a;\n  };\n\n  Object.defineProperty(FastItemColumn.prototype, \"mayContainUnknowns\", {\n    get: function () {\n      return this.m > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FastItemColumn.p = function (a, b) {\n    FastItemColumn.q(a, 0, a.count - 1, b);\n  };\n\n  FastItemColumn.q = function (a, b, c, d) {\n    if (b < c) {\n      var e = FastItemColumn.n(a, b, c, d);\n      FastItemColumn.q(a, b, e - 1, d);\n      FastItemColumn.q(a, e + 1, c, d);\n    }\n  };\n\n  FastItemColumn.n = function (a, b, c, d) {\n    var e = a.item(c);\n    var f = b;\n\n    for (var g = b; g < c; g++) {\n      if (d(a.item(g), e) <= 0) {\n        var h = a.item(f);\n        a.item(f, a.item(g));\n        a.item(g, h);\n        f++;\n      }\n    }\n\n    var i = a.item(f);\n    a.item(f, a.item(c));\n    a.item(c, i);\n    return f;\n  };\n\n  FastItemColumn.g = function (a, b) {\n    var c = new List$1(Number_$type, 2, a.count);\n\n    for (var d = 0; d < a.count; d++) {\n      c.add(d);\n    }\n\n    if (a.count < 22) {\n      FastItemColumn.p(c, function (e, f) {\n        var g = a.item(typeGetValue(e));\n        var h = a.item(typeGetValue(f));\n        return b(g, h);\n      });\n    } else {\n      c.aa(function (e, f) {\n        var g = a.item(e);\n        var h = a.item(f);\n        return b(g, h);\n      });\n    }\n\n    return c;\n  };\n\n  FastItemColumn.prototype.f = function () {\n    return FastItemColumn.g(this.h, function (a, b) {\n      var c = a;\n      var d = b;\n\n      if (c < d) {\n        return -1;\n      }\n\n      if (c > d) {\n        return 1;\n      }\n\n      return 0;\n    });\n  };\n\n  FastItemColumn.prototype.asArray = function () {\n    return this.h.asArray();\n  };\n\n  FastItemColumn.prototype.getItem = function (a) {\n    return this.item(a);\n  };\n\n  FastItemColumn.$t = markType(FastItemColumn, 'FastItemColumn', Base.$, [IFastItemColumnInternal_$type, IFastItemColumn$1_$type.specialize(Number_$type)]);\n  return FastItemColumn;\n}(Base);\n\nexport { FastItemColumn };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/FastItemColumn.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, Number_$type, typeGetValue, markType } from \"./type\";\nimport { IFastItemColumnInternal_$type } from \"./IFastItemColumnInternal\";\nimport { IFastItemColumn$1_$type } from \"./IFastItemColumn$1\";\nimport { List$1 } from \"./List$1\";\nimport { FastReflectionHelper } from \"./FastReflectionHelper\";\nimport { NotImplementedException } from \"./NotImplementedException\";\nimport { isNaN_ } from \"./number\";\n/**\n * @hidden\n */\nvar FastItemColumn = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FastItemColumn, _super);\n    function FastItemColumn(a, b, c, d) {\n        var _this = _super.call(this) || this;\n        _this.l = null;\n        _this.d = false;\n        _this.e = false;\n        _this.a = null;\n        _this.b = null;\n        _this._propertyName = null;\n        _this.j = 0;\n        _this.i = 0;\n        _this.h = null;\n        _this.m = 0;\n        _this.l = c;\n        _this.d = d;\n        _this.propertyName = b;\n        _this.e = FastReflectionHelper.needsHelper(b);\n        if (_this.e) {\n            _this.a = new FastReflectionHelper(true, _this.propertyName);\n        }\n        _this.c = a;\n        return _this;\n    }\n    Object.defineProperty(FastItemColumn.prototype, \"c\", {\n        get: function () {\n            return this.b;\n        },\n        set: function (a) {\n            this.b = a;\n            this.reset();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FastItemColumn.prototype, \"propertyName\", {\n        get: function () {\n            return this._propertyName;\n        },\n        set: function (a) {\n            this._propertyName = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FastItemColumn.prototype, \"minimum\", {\n        get: function () {\n            var e_1, _a;\n            if (isNaN_(this.j) && this.h != null) {\n                this.j = Number.POSITIVE_INFINITY;\n                try {\n                    for (var _b = tslib_1.__values(fromEnum(this.h)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var a = _c.value;\n                        if (!isNaN_(a)) {\n                            this.j = Math.min(this.j, a);\n                        }\n                    }\n                }\n                catch (e_1_1) {\n                    e_1 = { error: e_1_1 };\n                }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return))\n                            _a.call(_b);\n                    }\n                    finally {\n                        if (e_1)\n                            throw e_1.error;\n                    }\n                }\n            }\n            return this.j;\n        },\n        set: function (a) {\n            this.j = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FastItemColumn.prototype, \"maximum\", {\n        get: function () {\n            var e_2, _a;\n            if (isNaN_(this.i) && this.h != null) {\n                this.i = Number.NEGATIVE_INFINITY;\n                try {\n                    for (var _b = tslib_1.__values(fromEnum(this.h)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var a = _c.value;\n                        if (!isNaN_(a)) {\n                            this.i = Math.max(this.i, a);\n                        }\n                    }\n                }\n                catch (e_2_1) {\n                    e_2 = { error: e_2_1 };\n                }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return))\n                            _a.call(_b);\n                    }\n                    finally {\n                        if (e_2)\n                            throw e_2.error;\n                    }\n                }\n            }\n            return this.i;\n        },\n        set: function (a) {\n            this.i = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FastItemColumn.prototype.item = function (a, b) {\n        if (arguments.length === 2) {\n            this.h._inner[a] = b;\n            return b;\n        }\n        else {\n            return this.h._inner[a];\n        }\n    };\n    FastItemColumn.prototype.getEnumerator = function () {\n        return this.h.getEnumerator();\n    };\n    FastItemColumn.prototype.getEnumeratorObject = function () {\n        return this.h.getEnumerator();\n    };\n    FastItemColumn.prototype.contains = function (a) {\n        return this.h.contains(a);\n    };\n    FastItemColumn.prototype.copyTo = function (a, b) {\n        this.h.copyTo(a, b);\n    };\n    Object.defineProperty(FastItemColumn.prototype, \"count\", {\n        get: function () {\n            return this.h.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FastItemColumn.prototype, \"isReadOnly\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FastItemColumn.prototype.indexOf = function (a) {\n        return this.h.indexOf(a);\n    };\n    FastItemColumn.prototype.add = function (a) {\n        throw new NotImplementedException(0);\n    };\n    FastItemColumn.prototype.clear = function () {\n        throw new NotImplementedException(0);\n    };\n    FastItemColumn.prototype.remove = function (a) {\n        throw new NotImplementedException(0);\n    };\n    FastItemColumn.prototype.insert = function (a, b) {\n        throw new NotImplementedException(0);\n    };\n    FastItemColumn.prototype.removeAt = function (a) {\n        throw new NotImplementedException(0);\n    };\n    FastItemColumn.prototype.reset = function () {\n        this.h = null;\n        this.minimum = NaN;\n        this.maximum = NaN;\n        this.m = 0;\n        return this.c != null ? this.insertRange(0, this.c.count) : true;\n    };\n    FastItemColumn.prototype.insertRange = function (a, b) {\n        var c = new Array(b);\n        var source_ = this.b.asArray();\n        var item_;\n        var d = this.minimum;\n        var e = this.maximum;\n        var f = isNaN_(this.minimum);\n        var g = isNaN_(this.maximum);\n        var h = 0;\n        var i;\n        var j = this.l;\n        var sourceItem_ = null;\n        var propertyName_ = this._propertyName;\n        if (this.e) {\n            for (var i_ = a; i_ < a + b; ++i_) {\n                sourceItem_ = source_[i_];\n                if (sourceItem_ == null) {\n                    item_ = NaN;\n                }\n                else {\n                    item_ = this.a.getPropertyValue(sourceItem_);\n                }\n                if (this.d) {\n                    if ((typeof (item_) == 'function')) {\n                        item_ = item_.apply(sourceItem_);\n                    }\n                }\n                if (j != null) {\n                    item_ = j(item_);\n                }\n                i = item_ == null ? NaN : item_;\n                var k = (i != i);\n                if (k) {\n                    this.m++;\n                }\n                if (f || i < d) {\n                    d = i;\n                    f = k;\n                }\n                if (g || i > e) {\n                    e = i;\n                    g = k;\n                }\n                c[h] = i;\n                h++;\n            }\n        }\n        else {\n            if (this.l != null || this.d) {\n                for (var i_ = a; i_ < a + b; ++i_) {\n                    sourceItem_ = source_[i_];\n                    if (sourceItem_ == null) {\n                        item_ = NaN;\n                    }\n                    else {\n                        item_ = (sourceItem_[propertyName_]);\n                    }\n                    if (this.d) {\n                        if ((typeof (item_) == 'function')) {\n                            item_ = item_.apply(sourceItem_);\n                        }\n                    }\n                    if (j != null) {\n                        item_ = j(item_);\n                    }\n                    i = item_ == null ? NaN : item_;\n                    var l = (i != i);\n                    if (l) {\n                        this.m++;\n                    }\n                    if (f || i < d) {\n                        d = i;\n                        f = l;\n                    }\n                    if (g || i > e) {\n                        e = i;\n                        g = l;\n                    }\n                    c[h] = i;\n                    h++;\n                }\n            }\n            else {\n                for (var i_ = a; i_ < a + b; ++i_) {\n                    sourceItem_ = source_[i_];\n                    if (sourceItem_ == null) {\n                        item_ = NaN;\n                    }\n                    else {\n                        item_ = (sourceItem_[propertyName_]);\n                    }\n                    i = item_ == null ? NaN : item_;\n                    var m = (i != i);\n                    if (m) {\n                        this.m++;\n                    }\n                    if (f || i < d) {\n                        d = i;\n                        f = m;\n                    }\n                    if (g || i > e) {\n                        e = i;\n                        g = m;\n                    }\n                    c[h] = i;\n                    h++;\n                }\n            }\n        }\n        this.minimum = d;\n        this.maximum = e;\n        if (this.h == null) {\n            this.h = new List$1(Number_$type, 1, c);\n        }\n        else {\n            this.h.t(a, c);\n        }\n        return true;\n    };\n    FastItemColumn.prototype.removeRange = function (a, b) {\n        for (var c = a; c < a + b && !isNaN_(this.minimum) && !isNaN_(this.maximum); ++c) {\n            if (this.item(c) == this.minimum) {\n                this.minimum = NaN;\n            }\n            if (this.item(c) == this.maximum) {\n                this.maximum = NaN;\n            }\n            if (isNaN_(this.item(c))) {\n                this.m--;\n            }\n        }\n        this.h.v(a, b);\n        return true;\n    };\n    FastItemColumn.prototype.r = function (a, b) {\n        if (isNaN_(a)) {\n            if (!isNaN_(b)) {\n                if (!isNaN_(this.minimum)) {\n                    this.minimum = Math.min(b, this.minimum);\n                }\n                if (!isNaN_(this.maximum)) {\n                    this.maximum = Math.max(b, this.maximum);\n                }\n            }\n            return;\n        }\n        if (isNaN_(b)) {\n            this.minimum = !isNaN_(this.minimum) && a == this.minimum ? NaN : this.minimum;\n            this.maximum = !isNaN_(this.maximum) && a == this.maximum ? NaN : this.maximum;\n            return;\n        }\n        if (!isNaN_(this.minimum)) {\n            if (a == this.minimum && b > this.minimum) {\n                this.minimum = NaN;\n            }\n            else {\n                this.minimum = Math.min(b, this.minimum);\n            }\n        }\n        if (!isNaN_(this.maximum)) {\n            if (a == this.maximum && b < this.maximum) {\n                this.maximum = NaN;\n            }\n            else {\n                this.maximum = Math.max(b, this.maximum);\n            }\n        }\n    };\n    FastItemColumn.prototype.replaceRange = function (a, b) {\n        var c = false;\n        for (var d = 0; d < b; ++d) {\n            var e = this.h._inner[a + d];\n            var f = this.k(this.c.item(a + d));\n            if (isNaN_(e)) {\n                this.m--;\n            }\n            if (isNaN_(f)) {\n                this.m++;\n            }\n            if (e != f) {\n                this.h._inner[a + d] = f;\n                c = true;\n                this.r(e, f);\n            }\n        }\n        return c;\n    };\n    FastItemColumn.prototype.k = function (a) {\n        if (a == null) {\n            return NaN;\n        }\n        var sourceItem_ = a;\n        var from_ = a;\n        var propertyName_ = this._propertyName;\n        if (this.e) {\n            a = this.a.getPropertyValue(from_);\n        }\n        else {\n            a = from_[propertyName_];\n        }\n        if (this.d) {\n            from_ = a;\n            if ((typeof (from_) == 'function')) {\n                a = from_.apply(sourceItem_);\n            }\n        }\n        if (this.l != null) {\n            a = this.l(a);\n        }\n        if (a == null) {\n            return NaN;\n        }\n        return a;\n    };\n    Object.defineProperty(FastItemColumn.prototype, \"mayContainUnknowns\", {\n        get: function () {\n            return this.m > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FastItemColumn.p = function (a, b) {\n        FastItemColumn.q(a, 0, a.count - 1, b);\n    };\n    FastItemColumn.q = function (a, b, c, d) {\n        if (b < c) {\n            var e = FastItemColumn.n(a, b, c, d);\n            FastItemColumn.q(a, b, e - 1, d);\n            FastItemColumn.q(a, e + 1, c, d);\n        }\n    };\n    FastItemColumn.n = function (a, b, c, d) {\n        var e = a.item(c);\n        var f = b;\n        for (var g = b; g < c; g++) {\n            if (d(a.item(g), e) <= 0) {\n                var h = a.item(f);\n                a.item(f, a.item(g));\n                a.item(g, h);\n                f++;\n            }\n        }\n        var i = a.item(f);\n        a.item(f, a.item(c));\n        a.item(c, i);\n        return f;\n    };\n    FastItemColumn.g = function (a, b) {\n        var c = new List$1(Number_$type, 2, a.count);\n        for (var d = 0; d < a.count; d++) {\n            c.add(d);\n        }\n        if (a.count < 22) {\n            FastItemColumn.p(c, function (e, f) {\n                var g = a.item(typeGetValue(e));\n                var h = a.item(typeGetValue(f));\n                return b(g, h);\n            });\n        }\n        else {\n            c.aa(function (e, f) {\n                var g = a.item(e);\n                var h = a.item(f);\n                return b(g, h);\n            });\n        }\n        return c;\n    };\n    FastItemColumn.prototype.f = function () {\n        return FastItemColumn.g(this.h, function (a, b) {\n            var c = a;\n            var d = b;\n            if (c < d) {\n                return -1;\n            }\n            if (c > d) {\n                return 1;\n            }\n            return 0;\n        });\n    };\n    FastItemColumn.prototype.asArray = function () {\n        return this.h.asArray();\n    };\n    FastItemColumn.prototype.getItem = function (a) {\n        return this.item(a);\n    };\n    FastItemColumn.$t = markType(FastItemColumn, 'FastItemColumn', Base.$, [IFastItemColumnInternal_$type, IFastItemColumn$1_$type.specialize(Number_$type)]);\n    return FastItemColumn;\n}(Base));\nexport { FastItemColumn };\n//# sourceMappingURL=FastItemColumn.js.map\n"]},"metadata":{},"sourceType":"module"}