{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapSeriesHostDescriptionMetadata } from \"./GeographicMapSeriesHostDescriptionMetadata\";\n/**\r\n * @hidden\r\n */\n\nvar GeographicProportionalSymbolSeriesBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(GeographicProportionalSymbolSeriesBaseDescriptionMetadata, _super);\n\n  function GeographicProportionalSymbolSeriesBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GeographicProportionalSymbolSeriesBaseDescriptionMetadata.b = function (a) {\n    if (GeographicProportionalSymbolSeriesBaseDescriptionMetadata.a == null) {\n      GeographicProportionalSymbolSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      GeographicProportionalSymbolSeriesBaseDescriptionMetadata.c(a, GeographicProportionalSymbolSeriesBaseDescriptionMetadata.a);\n    }\n  };\n\n  GeographicProportionalSymbolSeriesBaseDescriptionMetadata.c = function (a, b) {\n    GeographicMapSeriesHostDescriptionMetadata.c(a, b);\n  };\n\n  GeographicProportionalSymbolSeriesBaseDescriptionMetadata.d = function (a) {\n    GeographicProportionalSymbolSeriesBaseDescriptionMetadata.b(a);\n    a.m(\"GeographicProportionalSymbolSeriesBase\", GeographicProportionalSymbolSeriesBaseDescriptionMetadata.a);\n  };\n\n  GeographicProportionalSymbolSeriesBaseDescriptionMetadata.$t = markType(GeographicProportionalSymbolSeriesBaseDescriptionMetadata, 'GeographicProportionalSymbolSeriesBaseDescriptionMetadata');\n  GeographicProportionalSymbolSeriesBaseDescriptionMetadata.a = null;\n  return GeographicProportionalSymbolSeriesBaseDescriptionMetadata;\n}(Base);\n\nexport { GeographicProportionalSymbolSeriesBaseDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/GeographicProportionalSymbolSeriesBaseDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,0CAAT,QAA2D,8CAA3D;AAEA;;AAEG;;AACH,IAAA,yDAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+E,EAAA,OAAA,CAAA,SAAA,CAAA,yDAAA,EAAA,MAAA;;AAA/E,WAAA,yDAAA,GAAA;;AAgBC;;AAbe,EAAA,yDAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,yDAAyD,CAAC,CAA1D,IAA+D,IAAnE,EAAyE;AACxE,MAAA,yDAAyD,CAAC,CAA1D,GAA8D,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAA9D;AACA,MAAA,yDAAyD,CAAC,CAA1D,CAA4D,CAA5D,EAA+D,yDAAyD,CAAC,CAAzH;AACA;AACD,GALc;;AAMR,EAAA,yDAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,0CAA0C,CAAC,CAA3C,CAA6C,CAA7C,EAAgD,CAAhD;AACA,GAFM;;AAGA,EAAA,yDAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,yDAAyD,CAAC,CAA1D,CAA4D,CAA5D;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,wCAAJ,EAA8C,yDAAyD,CAAC,CAAxG;AACA,GAHM;;AAXA,EAAA,yDAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,yDAAD,EAA4D,2DAA5D,CAAnB;AACQ,EAAA,yDAAA,CAAA,CAAA,GAAkC,IAAlC;AAchB,SAAA,yDAAA;AAAC,CAhBD,CAA+E,IAA/E,CAAA;;SAAa,yD","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { GeographicMapSeriesHostDescriptionMetadata } from \"./GeographicMapSeriesHostDescriptionMetadata\";\r\n/**\r\n * @hidden\r\n */\r\nvar GeographicProportionalSymbolSeriesBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(GeographicProportionalSymbolSeriesBaseDescriptionMetadata, _super);\r\n    function GeographicProportionalSymbolSeriesBaseDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    GeographicProportionalSymbolSeriesBaseDescriptionMetadata.b = function (a) {\r\n        if (GeographicProportionalSymbolSeriesBaseDescriptionMetadata.a == null) {\r\n            GeographicProportionalSymbolSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            GeographicProportionalSymbolSeriesBaseDescriptionMetadata.c(a, GeographicProportionalSymbolSeriesBaseDescriptionMetadata.a);\r\n        }\r\n    };\r\n    GeographicProportionalSymbolSeriesBaseDescriptionMetadata.c = function (a, b) {\r\n        GeographicMapSeriesHostDescriptionMetadata.c(a, b);\r\n    };\r\n    GeographicProportionalSymbolSeriesBaseDescriptionMetadata.d = function (a) {\r\n        GeographicProportionalSymbolSeriesBaseDescriptionMetadata.b(a);\r\n        a.m(\"GeographicProportionalSymbolSeriesBase\", GeographicProportionalSymbolSeriesBaseDescriptionMetadata.a);\r\n    };\r\n    GeographicProportionalSymbolSeriesBaseDescriptionMetadata.$t = markType(GeographicProportionalSymbolSeriesBaseDescriptionMetadata, 'GeographicProportionalSymbolSeriesBaseDescriptionMetadata');\r\n    GeographicProportionalSymbolSeriesBaseDescriptionMetadata.a = null;\r\n    return GeographicProportionalSymbolSeriesBaseDescriptionMetadata;\r\n}(Base));\r\nexport { GeographicProportionalSymbolSeriesBaseDescriptionMetadata };\r\n//# sourceMappingURL=GeographicProportionalSymbolSeriesBaseDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}