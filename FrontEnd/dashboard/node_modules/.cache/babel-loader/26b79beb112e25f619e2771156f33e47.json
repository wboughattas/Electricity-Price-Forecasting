{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { PrimitiveVisualData } from \"./PrimitiveVisualData\";\nimport { List$1 } from \"./List$1\";\nimport { GeometryData } from \"./GeometryData\";\nimport { AppearanceHelper } from \"./AppearanceHelper\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { fromEnum, markType } from \"./type\";\n/**\r\n * @hidden\r\n */\n\nvar PathVisualData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PathVisualData, _super);\n\n  function PathVisualData(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = this;\n\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        {\n          _this = _super.call(this, 1, \"path1\") || this;\n          _this._data = null;\n          _this.data = new List$1(GeometryData.$, 0);\n        }\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          var d = _rest[1];\n          _this = _super.call(this, 1, c) || this;\n          _this._data = null;\n          _this.data = AppearanceHelper.g(d.ak);\n          AppearanceHelper.p(_this.appearance, d);\n        }\n        break;\n\n      case 2:\n        {\n          var c = _rest[0];\n          var d = _rest[1];\n          _this = _super.call(this, 1, c) || this;\n          _this._data = null;\n          _this.data = AppearanceHelper.h(d);\n          AppearanceHelper.p(_this.appearance, d);\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  PathVisualData.prototype.get_type = function () {\n    return \"Path\";\n  };\n\n  Object.defineProperty(PathVisualData.prototype, \"type\", {\n    get: function () {\n      return this.get_type();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PathVisualData.prototype, \"data\", {\n    get: function () {\n      return this._data;\n    },\n    set: function (a) {\n      this._data = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PathVisualData.prototype.e = function () {\n    var a = new StringBuilder(0);\n    a.u(\"data: [\");\n\n    for (var b = 0; b < this.data.count; b++) {\n      if (b != 0) {\n        a.l(\", \");\n      }\n\n      a.l(this.data._inner[b] != null ? this.data._inner[b].serialize() : \"null\");\n    }\n\n    a.u(\"]\");\n    return a.toString();\n  };\n\n  PathVisualData.prototype.scaleByViewport = function (a) {\n    var e_1, _a;\n\n    _super.prototype.scaleByViewport.call(this, a);\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.data)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var b = _c.value;\n        b.scaleByViewport(a);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  PathVisualData.prototype.getPointsOverride = function (a, b) {\n    for (var c = 0; c < this.data.count; c++) {\n      var d = this.data._inner[c];\n      d.getPointsOverride(a, b);\n    }\n  };\n\n  PathVisualData.$t = markType(PathVisualData, 'PathVisualData', PrimitiveVisualData.$);\n  return PathVisualData;\n}(PrimitiveVisualData);\n\nexport { PathVisualData };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PathVisualData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PrimitiveVisualData } from \"./PrimitiveVisualData\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { GeometryData } from \"./GeometryData\";\r\nimport { AppearanceHelper } from \"./AppearanceHelper\";\r\nimport { StringBuilder } from \"./StringBuilder\";\r\nimport { fromEnum, markType } from \"./type\";\r\n/**\r\n * @hidden\r\n */\r\nvar PathVisualData = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(PathVisualData, _super);\r\n    function PathVisualData(a) {\r\n        var _rest = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            _rest[_i - 1] = arguments[_i];\r\n        }\r\n        var _this = this;\r\n        a = (a == void 0) ? 0 : a;\r\n        switch (a) {\r\n            case 0:\r\n                {\r\n                    _this = _super.call(this, 1, \"path1\") || this;\r\n                    _this._data = null;\r\n                    _this.data = new List$1(GeometryData.$, 0);\r\n                }\r\n                break;\r\n            case 1:\r\n                {\r\n                    var c = _rest[0];\r\n                    var d = _rest[1];\r\n                    _this = _super.call(this, 1, c) || this;\r\n                    _this._data = null;\r\n                    _this.data = AppearanceHelper.g(d.ak);\r\n                    AppearanceHelper.p(_this.appearance, d);\r\n                }\r\n                break;\r\n            case 2:\r\n                {\r\n                    var c = _rest[0];\r\n                    var d = _rest[1];\r\n                    _this = _super.call(this, 1, c) || this;\r\n                    _this._data = null;\r\n                    _this.data = AppearanceHelper.h(d);\r\n                    AppearanceHelper.p(_this.appearance, d);\r\n                }\r\n                break;\r\n        }\r\n        return _this;\r\n    }\r\n    PathVisualData.prototype.get_type = function () {\r\n        return \"Path\";\r\n    };\r\n    Object.defineProperty(PathVisualData.prototype, \"type\", {\r\n        get: function () {\r\n            return this.get_type();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PathVisualData.prototype, \"data\", {\r\n        get: function () {\r\n            return this._data;\r\n        },\r\n        set: function (a) {\r\n            this._data = a;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PathVisualData.prototype.e = function () {\r\n        var a = new StringBuilder(0);\r\n        a.u(\"data: [\");\r\n        for (var b = 0; b < this.data.count; b++) {\r\n            if (b != 0) {\r\n                a.l(\", \");\r\n            }\r\n            a.l((this.data._inner[b] != null ? this.data._inner[b].serialize() : \"null\"));\r\n        }\r\n        a.u(\"]\");\r\n        return a.toString();\r\n    };\r\n    PathVisualData.prototype.scaleByViewport = function (a) {\r\n        var e_1, _a;\r\n        _super.prototype.scaleByViewport.call(this, a);\r\n        try {\r\n            for (var _b = tslib_1.__values(fromEnum(this.data)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var b = _c.value;\r\n                b.scaleByViewport(a);\r\n            }\r\n        }\r\n        catch (e_1_1) {\r\n            e_1 = { error: e_1_1 };\r\n        }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return))\r\n                    _a.call(_b);\r\n            }\r\n            finally {\r\n                if (e_1)\r\n                    throw e_1.error;\r\n            }\r\n        }\r\n    };\r\n    PathVisualData.prototype.getPointsOverride = function (a, b) {\r\n        for (var c = 0; c < this.data.count; c++) {\r\n            var d = this.data._inner[c];\r\n            d.getPointsOverride(a, b);\r\n        }\r\n    };\r\n    PathVisualData.$t = markType(PathVisualData, 'PathVisualData', PrimitiveVisualData.$);\r\n    return PathVisualData;\r\n}(PrimitiveVisualData));\r\nexport { PathVisualData };\r\n//# sourceMappingURL=PathVisualData.js.map\r\n"]},"metadata":{},"sourceType":"module"}