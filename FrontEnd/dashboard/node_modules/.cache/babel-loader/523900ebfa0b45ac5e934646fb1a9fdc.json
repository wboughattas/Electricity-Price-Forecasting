{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mlockhead\\\\dev\\\\Hackaton\\\\headsinthecloud\\\\FrontEnd\\\\dashboard\\\\src\\\\component\\\\Gauge.js\";\nimport { IgrRadialGaugeModule } from 'igniteui-react-gauges';\nimport { IgrRadialGauge } from 'igniteui-react-gauges';\nimport { IgrRadialGaugeRange } from 'igniteui-react-gauges';\nimport React, { Component } from 'react';\nIgrRadialGaugeModule.register();\n\nclass Gauge extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gaugeValue: this.props.gaugeValue\n    };\n  }\n\n  componentDidMount() {} //whenever the component updates, this will be called --> maybe use this to get the gaugeValue\n\n\n  componentDidUpdate() {\n    console.log(document.getElementById(\"gauge\").value());\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: document.getElementById(\"gauge\").value()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IgrRadialGauge, {\n        id: \"gauge\",\n        value: this.state.gaugeValue,\n        isNeedleDraggingEnabled: true,\n        isNeedleDraggingConstrained: true,\n        needleBrush: \"DodgerBlue\",\n        needleOutline: \"DodgerBlue\",\n        needleEndExtent: 0.475,\n        needleStrokeThickness: 1,\n        needlePivotShape: \"CircleOverlay\",\n        needlePivotBrush: \"#9f9fa0\",\n        needlePivotOutline: \"#9f9fa0\",\n        needlePivotWidthRatio: 0.2,\n        needlePivotStrokeThickness: 1,\n        height: \"300px\",\n        width: \"300px\",\n        minimumValue: 0,\n        maximumValue: 100,\n        interval: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Gauge;","map":{"version":3,"sources":["C:/Users/mlockhead/dev/Hackaton/headsinthecloud/FrontEnd/dashboard/src/component/Gauge.js"],"names":["IgrRadialGaugeModule","IgrRadialGauge","IgrRadialGaugeRange","React","Component","register","Gauge","constructor","props","state","gaugeValue","componentDidMount","componentDidUpdate","console","log","document","getElementById","value","render"],"mappings":";;AAAA,SAASA,oBAAT,QAAqC,uBAArC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEAJ,oBAAoB,CAACK,QAArB;;AAKA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAE1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GACA;AACIC,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE;AAD3B,KADA;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB,CAbyB,CAe1B;;;AACAC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC,EAAZ;AACH;;AAIDC,EAAAA,MAAM,GAAG;AAIL,wBACI;AAAA,8BACI;AAAA,kBAAIH,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA,QAAC,cAAD;AAAgB,QAAA,EAAE,EAAC,OAAnB;AAEI,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,UAFtB;AAII,QAAA,uBAAuB,EAAE,IAJ7B;AAKI,QAAA,2BAA2B,EAAE,IALjC;AAMI,QAAA,WAAW,EAAC,YANhB;AAOI,QAAA,aAAa,EAAC,YAPlB;AAQI,QAAA,eAAe,EAAE,KARrB;AASI,QAAA,qBAAqB,EAAE,CAT3B;AAUI,QAAA,gBAAgB,EAAC,eAVrB;AAWI,QAAA,gBAAgB,EAAC,SAXrB;AAYI,QAAA,kBAAkB,EAAC,SAZvB;AAaI,QAAA,qBAAqB,EAAE,GAb3B;AAcI,QAAA,0BAA0B,EAAE,CAdhC;AAeI,QAAA,MAAM,EAAC,OAfX;AAemB,QAAA,KAAK,EAAC,OAfzB;AAgBI,QAAA,YAAY,EAAE,CAhBlB;AAiBI,QAAA,YAAY,EAAE,GAjBlB;AAiBuB,QAAA,QAAQ,EAAE;AAjBjC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AAjDyB;;AA2D9B,eAAeJ,KAAf","sourcesContent":["import { IgrRadialGaugeModule } from 'igniteui-react-gauges';\r\nimport { IgrRadialGauge } from 'igniteui-react-gauges';\r\nimport { IgrRadialGaugeRange } from 'igniteui-react-gauges';\r\nimport React, { Component } from 'react';\r\n\r\nIgrRadialGaugeModule.register();\r\n\r\n\r\n\r\n\r\nclass Gauge extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            gaugeValue: this.props.gaugeValue\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n         \r\n    }\r\n\r\n    //whenever the component updates, this will be called --> maybe use this to get the gaugeValue\r\n    componentDidUpdate() {\r\n        console.log(document.getElementById(\"gauge\").value());\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <p>{document.getElementById(\"gauge\").value()}</p>\r\n            <IgrRadialGauge id=\"gauge\"\r\n\r\n                value={this.state.gaugeValue}\r\n\r\n                isNeedleDraggingEnabled={true}\r\n                isNeedleDraggingConstrained={true}\r\n                needleBrush=\"DodgerBlue\"\r\n                needleOutline=\"DodgerBlue\"\r\n                needleEndExtent={0.475}\r\n                needleStrokeThickness={1}\r\n                needlePivotShape=\"CircleOverlay\"\r\n                needlePivotBrush=\"#9f9fa0\"\r\n                needlePivotOutline=\"#9f9fa0\"\r\n                needlePivotWidthRatio={0.2}\r\n                needlePivotStrokeThickness={1}\r\n                height=\"300px\" width=\"300px\"\r\n                minimumValue={0}\r\n                maximumValue={100} interval={10} />\r\n               </div> \r\n            )\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n}\r\n\r\n\r\nexport default Gauge;"]},"metadata":{},"sourceType":"module"}