{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { PieChartBaseDescriptionMetadata } from \"./PieChartBaseDescriptionMetadata\";\nimport { PieChartDescription } from \"./PieChartDescription\";\n/**\r\n * @hidden\r\n */\n\nvar PieChartDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PieChartDescriptionMetadata, _super);\n\n  function PieChartDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PieChartDescriptionMetadata.e = function (a, b) {\n    b.item(\"_qualifiedName\", \"String:Infragistics.Controls.Charts.XamPieChart\");\n    b.item(\"Width\", \"(w:Width/DimensionTransform)String\");\n    b.item(\"Height\", \"(w:Height/DimensionTransform)String\");\n    b.item(\"Background\", \"(wf:BackColor/ColorTransform)Brush\");\n  };\n\n  PieChartDescriptionMetadata.b = function (a) {\n    if (PieChartDescriptionMetadata.a == null) {\n      PieChartDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      PieChartDescriptionMetadata.c(a, PieChartDescriptionMetadata.a);\n    }\n  };\n\n  PieChartDescriptionMetadata.c = function (a, b) {\n    PieChartBaseDescriptionMetadata.c(a, b);\n    PieChartDescriptionMetadata.e(a, b);\n  };\n\n  PieChartDescriptionMetadata.d = function (a) {\n    PieChartDescriptionMetadata.b(a);\n    a.n(\"PieChart\", function () {\n      return new PieChartDescription();\n    });\n    a.m(\"PieChart\", PieChartDescriptionMetadata.a);\n  };\n\n  PieChartDescriptionMetadata.$t = markType(PieChartDescriptionMetadata, 'PieChartDescriptionMetadata');\n  PieChartDescriptionMetadata.a = null;\n  return PieChartDescriptionMetadata;\n}(Base);\n\nexport { PieChartDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/PieChartDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,+BAAT,QAAgD,mCAAhD;AACA,SAAS,mBAAT,QAAoC,uBAApC;AAEA;;AAEG;;AACH,IAAA,2BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiD,EAAA,OAAA,CAAA,SAAA,CAAA,2BAAA,EAAA,MAAA;;AAAjD,WAAA,2BAAA,GAAA;;AAwBC;;AAtBe,EAAA,2BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA4C,CAA5C,EAA2E;AAC1E,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,iDAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,oCAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,qCAAjB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,oCAArB;AACA,GALc;;AAOA,EAAA,2BAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,2BAA2B,CAAC,CAA5B,IAAiC,IAArC,EAA2C;AAC1C,MAAA,2BAA2B,CAAC,CAA5B,GAAgC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAhC;AACA,MAAA,2BAA2B,CAAC,CAA5B,CAA8B,CAA9B,EAAiC,2BAA2B,CAAC,CAA7D;AACA;AACD,GALc;;AAMR,EAAA,2BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,+BAA+B,CAAC,CAAhC,CAAkC,CAAlC,EAAqC,CAArC;AACA,IAAA,2BAA2B,CAAC,CAA5B,CAA8B,CAA9B,EAAiC,CAAjC;AACA,GAHM;;AAIA,EAAA,2BAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,2BAA2B,CAAC,CAA5B,CAA8B,CAA9B;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,UAAJ,EAAgB,YAAA;AAAM,aAAA,IAAA,mBAAA,EAAA;AAAyB,KAA/C;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,UAAJ,EAAgB,2BAA2B,CAAC,CAA5C;AACA,GAJM;;AAlBA,EAAA,2BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,2BAAD,EAA8B,6BAA9B,CAAnB;AAOQ,EAAA,2BAAA,CAAA,CAAA,GAAkC,IAAlC;AAgBhB,SAAA,2BAAA;AAAC,CAxBD,CAAiD,IAAjD,CAAA;;SAAa,2B","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Base, String_$type, markType } from \"./type\";\r\nimport { Dictionary$2 } from \"./Dictionary$2\";\r\nimport { PieChartBaseDescriptionMetadata } from \"./PieChartBaseDescriptionMetadata\";\r\nimport { PieChartDescription } from \"./PieChartDescription\";\r\n/**\r\n * @hidden\r\n */\r\nvar PieChartDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(PieChartDescriptionMetadata, _super);\r\n    function PieChartDescriptionMetadata() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PieChartDescriptionMetadata.e = function (a, b) {\r\n        b.item(\"_qualifiedName\", \"String:Infragistics.Controls.Charts.XamPieChart\");\r\n        b.item(\"Width\", \"(w:Width/DimensionTransform)String\");\r\n        b.item(\"Height\", \"(w:Height/DimensionTransform)String\");\r\n        b.item(\"Background\", \"(wf:BackColor/ColorTransform)Brush\");\r\n    };\r\n    PieChartDescriptionMetadata.b = function (a) {\r\n        if (PieChartDescriptionMetadata.a == null) {\r\n            PieChartDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\r\n            PieChartDescriptionMetadata.c(a, PieChartDescriptionMetadata.a);\r\n        }\r\n    };\r\n    PieChartDescriptionMetadata.c = function (a, b) {\r\n        PieChartBaseDescriptionMetadata.c(a, b);\r\n        PieChartDescriptionMetadata.e(a, b);\r\n    };\r\n    PieChartDescriptionMetadata.d = function (a) {\r\n        PieChartDescriptionMetadata.b(a);\r\n        a.n(\"PieChart\", function () { return new PieChartDescription(); });\r\n        a.m(\"PieChart\", PieChartDescriptionMetadata.a);\r\n    };\r\n    PieChartDescriptionMetadata.$t = markType(PieChartDescriptionMetadata, 'PieChartDescriptionMetadata');\r\n    PieChartDescriptionMetadata.a = null;\r\n    return PieChartDescriptionMetadata;\r\n}(Base));\r\nexport { PieChartDescriptionMetadata };\r\n//# sourceMappingURL=PieChartDescriptionMetadata.js.map\r\n"]},"metadata":{},"sourceType":"module"}