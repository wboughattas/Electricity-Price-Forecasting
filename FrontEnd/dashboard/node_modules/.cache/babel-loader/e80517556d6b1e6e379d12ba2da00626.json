{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar ExpressionSyntax =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ExpressionSyntax, _super);\n\n  function ExpressionSyntax() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ExpressionSyntax.c = function (a, b, c) {\n    var d = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      d[_i - 3] = arguments[_i];\n    }\n\n    return null;\n  };\n\n  ExpressionSyntax.a = function (a) {\n    var b = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      b[_i - 1] = arguments[_i];\n    }\n\n    return null;\n  };\n\n  ExpressionSyntax.b = function (a, b) {\n    return null;\n  };\n\n  ExpressionSyntax.d = function (a) {\n    return null;\n  };\n\n  ExpressionSyntax.e = function (a, b) {\n    return null;\n  };\n\n  ExpressionSyntax.$t = markType(ExpressionSyntax, 'ExpressionSyntax');\n  return ExpressionSyntax;\n}(Base);\n\nexport { ExpressionSyntax };\n/**\n * @hidden\n */\n\nvar LambdaExpression =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(LambdaExpression, _super);\n\n  function LambdaExpression() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LambdaExpression.$t = markType(LambdaExpression, 'LambdaExpression', ExpressionSyntax.$);\n  return LambdaExpression;\n}(ExpressionSyntax);\n\nexport { LambdaExpression };\n/**\n * @hidden\n */\n\nvar MemberExpression =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(MemberExpression, _super);\n\n  function MemberExpression() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.f = null;\n    return _this;\n  }\n\n  MemberExpression.prototype.g = function (a) {\n    return null;\n  };\n\n  MemberExpression.$t = markType(MemberExpression, 'MemberExpression', ExpressionSyntax.$);\n  return MemberExpression;\n}(ExpressionSyntax);\n\nexport { MemberExpression };\n/**\n * @hidden\n */\n\nvar MethodCallExpression =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(MethodCallExpression, _super);\n\n  function MethodCallExpression() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.f = null;\n    _this.g = null;\n    return _this;\n  }\n\n  MethodCallExpression.prototype.h = function (a, b) {\n    return null;\n  };\n\n  MethodCallExpression.$t = markType(MethodCallExpression, 'MethodCallExpression', ExpressionSyntax.$);\n  return MethodCallExpression;\n}(ExpressionSyntax);\n\nexport { MethodCallExpression };\n/**\n * @hidden\n */\n\nvar ParameterExpression =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ParameterExpression, _super);\n\n  function ParameterExpression() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.f = false;\n    _this.g = null;\n    return _this;\n  }\n\n  ParameterExpression.$t = markType(ParameterExpression, 'ParameterExpression', ExpressionSyntax.$);\n  return ParameterExpression;\n}(ExpressionSyntax);\n\nexport { ParameterExpression };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ExpressionSyntax_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\nvar ExpressionSyntax = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExpressionSyntax, _super);\n    function ExpressionSyntax() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ExpressionSyntax.c = function (a, b, c) {\n        var d = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            d[_i - 3] = arguments[_i];\n        }\n        return null;\n    };\n    ExpressionSyntax.a = function (a) {\n        var b = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            b[_i - 1] = arguments[_i];\n        }\n        return null;\n    };\n    ExpressionSyntax.b = function (a, b) {\n        return null;\n    };\n    ExpressionSyntax.d = function (a) {\n        return null;\n    };\n    ExpressionSyntax.e = function (a, b) {\n        return null;\n    };\n    ExpressionSyntax.$t = markType(ExpressionSyntax, 'ExpressionSyntax');\n    return ExpressionSyntax;\n}(Base));\nexport { ExpressionSyntax };\n/**\n * @hidden\n */\nvar LambdaExpression = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(LambdaExpression, _super);\n    function LambdaExpression() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LambdaExpression.$t = markType(LambdaExpression, 'LambdaExpression', ExpressionSyntax.$);\n    return LambdaExpression;\n}(ExpressionSyntax));\nexport { LambdaExpression };\n/**\n * @hidden\n */\nvar MemberExpression = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MemberExpression, _super);\n    function MemberExpression() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.f = null;\n        return _this;\n    }\n    MemberExpression.prototype.g = function (a) {\n        return null;\n    };\n    MemberExpression.$t = markType(MemberExpression, 'MemberExpression', ExpressionSyntax.$);\n    return MemberExpression;\n}(ExpressionSyntax));\nexport { MemberExpression };\n/**\n * @hidden\n */\nvar MethodCallExpression = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MethodCallExpression, _super);\n    function MethodCallExpression() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.f = null;\n        _this.g = null;\n        return _this;\n    }\n    MethodCallExpression.prototype.h = function (a, b) {\n        return null;\n    };\n    MethodCallExpression.$t = markType(MethodCallExpression, 'MethodCallExpression', ExpressionSyntax.$);\n    return MethodCallExpression;\n}(ExpressionSyntax));\nexport { MethodCallExpression };\n/**\n * @hidden\n */\nvar ParameterExpression = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ParameterExpression, _super);\n    function ParameterExpression() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.f = false;\n        _this.g = null;\n        return _this;\n    }\n    ParameterExpression.$t = markType(ParameterExpression, 'ParameterExpression', ExpressionSyntax.$);\n    return ParameterExpression;\n}(ExpressionSyntax));\nexport { ParameterExpression };\n//# sourceMappingURL=ExpressionSyntax_combined.js.map\n"]},"metadata":{},"sourceType":"module"}