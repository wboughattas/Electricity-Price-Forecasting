{"ast":null,"code":"/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\nimport { markEnum } from \"./type\";\nexport var DateTimeKind_$type = /*@__PURE__*/markEnum(\"DateTimeKind\", \"Unspecified,0|Utc,1|Local,2\");\nexport function dateKind() {\n  return 2\n  /* Local */\n  ;\n}\n;\nexport function defaultDVDateParse(str) {\n  return new Date(parseInt(str.replace(\"/Date(\", \"\").replace(\")/\", \"\"), 10));\n}\nexport function dateNow() {\n  return new Date();\n}\n;\nexport function dateMinValue() {\n  return new Date(1, 0, 1, 0, 0, 0, 0);\n}\n;\nexport function dateMaxValue() {\n  return new Date(9999, 12, 31, 23, 59, 59, 0.9999999);\n}\n;\nexport function dateFromMilliseconds(value) {\n  return new Date(value);\n}\n;\nexport function dateStdTimezoneOffset(date) {\n  var jan, jul, janOffset, julOffset;\n  jan = new Date(date.getFullYear(), 0, 1);\n  jul = new Date(date.getFullYear(), 6, 1);\n  julOffset = jul.getTimezoneOffset();\n  janOffset = jan.getTimezoneOffset();\n  return Math.max(janOffset, julOffset);\n}\n;\nexport function dateIsDST(date) {\n  return date.getTimezoneOffset() < dateStdTimezoneOffset(date);\n}\n;\nexport function dateFromValues(year, month, day, hour, minute, second, millisecond) {\n  return new Date(year, month - 1, day, hour, minute, second, millisecond);\n}\nexport function dateFromTicks(ticks) {\n  return new Date(ticks);\n}\nexport function dateAddSeconds(value, seconds) {\n  return dateAddDays(value, seconds / 86400);\n}\nexport function dateAddMinutes(value, minutes) {\n  return dateAddDays(value, minutes / 1440);\n}\nexport function dateAddHours(value, hours) {\n  return dateAddDays(value, hours / 24);\n}\nexport function dateAddDays(value, days) {\n  var result = new Date(+value + days * 86400000); // Correct for any daylight saving time shifts\n\n  if (!dateIsDST(value)) {\n    if (dateIsDST(result)) {\n      result = new Date(+result - 3600000);\n    }\n  } else {\n    if (!dateIsDST(result)) {\n      result = new Date(+result + 3600000);\n    }\n  }\n\n  return result;\n}\nexport function dateAddMonths(value, num) {\n  var result = new Date(value.getTime());\n  var currentMonth = result.getMonth() + result.getFullYear() * 12;\n  result.setMonth(result.getMonth() + num);\n  var diff = result.getMonth() + result.getFullYear() * 12 - currentMonth; // If don't get the right number, set date to\n  // last day of previous month\n\n  if (diff != num) {\n    result.setDate(0);\n  }\n\n  return result;\n}\nexport function dateAddYears(value, num) {\n  var result = new Date(value.getTime());\n  result.setFullYear(result.getFullYear() + num);\n  return result;\n}\nexport function dateIsLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 == 0);\n}\nexport function dateToFileTime(value) {\n  return (+value - +new Date(1600, 11, 31, 19, 0, 0, 0)) * 10000;\n}\nexport function dateFromFileTime(value) {\n  // TODO: Test this\n  return +(value / 10000) + +new Date(1600, 11, 31, 19, 0, 0, 0);\n}\nexport function dateFromFileTimeUtc(value) {\n  return new Date(+(value / 10000) + +Date.UTC(1600, 12, 1, 0, 0, 0, 0));\n}\nexport function dateGetMonth(value) {\n  return value.getMonth() + 1;\n}\nexport function dateToday() {\n  var r = new Date();\n  r.setHours(0, 0, 0, 0);\n  return r;\n}\nexport function dateGetTimeOfDay(value) {\n  return value.getHours() * 3600000 + value.getMinutes() * 60000 + value.getSeconds() * 1000 + value.getMilliseconds();\n}\nexport function dateGetDate(value) {\n  return new Date(+value - dateGetTimeOfDay(value));\n}\nexport function dateEquals(d1, d2) {\n  return d2 instanceof Date && +d1 === +d2;\n}\nexport function dateAdd(d, t) {\n  return new Date(+d + t);\n}\n;\nexport function dateSubtract(d, t) {\n  return new Date(+d - t);\n}\n;\nexport function daysInMonth(year, month) {\n  switch (month) {\n    case 1:\n      return 31;\n    // Jan\n\n    case 2:\n      return dateIsLeapYear(year) ? 29 : 28;\n    // Feb\n\n    case 3:\n      return 31;\n    // Mar\n\n    case 4:\n      return 30;\n    // Apr\n\n    case 5:\n      return 31;\n    // May\n\n    case 6:\n      return 30;\n    // Jun\n\n    case 7:\n      return 31;\n    // Jul\n\n    case 8:\n      return 31;\n    // Aug\n\n    case 9:\n      return 30;\n    // Sep\n\n    case 10:\n      return 31;\n    // Oct\n\n    case 11:\n      return 30;\n    // Nov\n\n    case 12:\n      return 31;\n    // Dec\n  } // TODO: throw error here?\n\n\n  return 0;\n}","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/date.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\r\nhttps://www.infragistics.com/legal/license/igultimate-la\r\nhttps://www.infragistics.com/legal/license/igultimate-eula\r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\nimport { markEnum } from \"./type\";\r\nexport var DateTimeKind_$type = /*@__PURE__*/ markEnum(\"DateTimeKind\", \"Unspecified,0|Utc,1|Local,2\");\r\nexport function dateKind() {\r\n    return 2 /* Local */;\r\n}\r\n;\r\nexport function defaultDVDateParse(str) {\r\n    return new Date(parseInt(str.replace(\"/Date(\", \"\").replace(\")/\", \"\"), 10));\r\n}\r\nexport function dateNow() {\r\n    return new Date();\r\n}\r\n;\r\nexport function dateMinValue() {\r\n    return new Date(1, 0, 1, 0, 0, 0, 0);\r\n}\r\n;\r\nexport function dateMaxValue() {\r\n    return new Date(9999, 12, 31, 23, 59, 59, 0.9999999);\r\n}\r\n;\r\nexport function dateFromMilliseconds(value) {\r\n    return new Date(value);\r\n}\r\n;\r\nexport function dateStdTimezoneOffset(date) {\r\n    var jan, jul, janOffset, julOffset;\r\n    jan = new Date(date.getFullYear(), 0, 1);\r\n    jul = new Date(date.getFullYear(), 6, 1);\r\n    julOffset = jul.getTimezoneOffset();\r\n    janOffset = jan.getTimezoneOffset();\r\n    return Math.max(janOffset, julOffset);\r\n}\r\n;\r\nexport function dateIsDST(date) {\r\n    return date.getTimezoneOffset() < dateStdTimezoneOffset(date);\r\n}\r\n;\r\nexport function dateFromValues(year, month, day, hour, minute, second, millisecond) {\r\n    return new Date(year, month - 1, day, hour, minute, second, millisecond);\r\n}\r\nexport function dateFromTicks(ticks) {\r\n    return new Date(ticks);\r\n}\r\nexport function dateAddSeconds(value, seconds) {\r\n    return dateAddDays(value, seconds / 86400);\r\n}\r\nexport function dateAddMinutes(value, minutes) {\r\n    return dateAddDays(value, minutes / 1440);\r\n}\r\nexport function dateAddHours(value, hours) {\r\n    return dateAddDays(value, hours / 24);\r\n}\r\nexport function dateAddDays(value, days) {\r\n    var result = new Date(+value + (days * 86400000));\r\n    // Correct for any daylight saving time shifts\r\n    if (!dateIsDST(value)) {\r\n        if (dateIsDST(result)) {\r\n            result = new Date(+result - 3600000);\r\n        }\r\n    }\r\n    else {\r\n        if (!dateIsDST(result)) {\r\n            result = new Date(+result + 3600000);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function dateAddMonths(value, num) {\r\n    var result = new Date(value.getTime());\r\n    var currentMonth = result.getMonth() + result.getFullYear() * 12;\r\n    result.setMonth(result.getMonth() + num);\r\n    var diff = result.getMonth() + result.getFullYear() * 12 - currentMonth;\r\n    // If don't get the right number, set date to\r\n    // last day of previous month\r\n    if (diff != num) {\r\n        result.setDate(0);\r\n    }\r\n    return result;\r\n}\r\nexport function dateAddYears(value, num) {\r\n    var result = new Date(value.getTime());\r\n    result.setFullYear(result.getFullYear() + num);\r\n    return result;\r\n}\r\nexport function dateIsLeapYear(year) {\r\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 == 0);\r\n}\r\nexport function dateToFileTime(value) {\r\n    return (+value - +new Date(1600, 11, 31, 19, 0, 0, 0)) * 10000;\r\n}\r\nexport function dateFromFileTime(value) {\r\n    // TODO: Test this\r\n    return +(value / 10000) + +new Date(1600, 11, 31, 19, 0, 0, 0);\r\n}\r\nexport function dateFromFileTimeUtc(value) {\r\n    return new Date(+(value / 10000) + +Date.UTC(1600, 12, 1, 0, 0, 0, 0));\r\n}\r\nexport function dateGetMonth(value) {\r\n    return value.getMonth() + 1;\r\n}\r\nexport function dateToday() {\r\n    var r = new Date();\r\n    r.setHours(0, 0, 0, 0);\r\n    return r;\r\n}\r\nexport function dateGetTimeOfDay(value) {\r\n    return (value.getHours() * 3600000) +\r\n        (value.getMinutes() * 60000) +\r\n        (value.getSeconds() * 1000) +\r\n        value.getMilliseconds();\r\n}\r\nexport function dateGetDate(value) {\r\n    return new Date(+value - dateGetTimeOfDay(value));\r\n}\r\nexport function dateEquals(d1, d2) {\r\n    return d2 instanceof Date && +d1 === +d2;\r\n}\r\nexport function dateAdd(d, t) { return new Date(+d + t); }\r\n;\r\nexport function dateSubtract(d, t) { return new Date(+d - t); }\r\n;\r\nexport function daysInMonth(year, month) {\r\n    switch (month) {\r\n        case 1: return 31; // Jan\r\n        case 2: return dateIsLeapYear(year) ? 29 : 28; // Feb\r\n        case 3: return 31; // Mar\r\n        case 4: return 30; // Apr\r\n        case 5: return 31; // May\r\n        case 6: return 30; // Jun\r\n        case 7: return 31; // Jul\r\n        case 8: return 31; // Aug\r\n        case 9: return 30; // Sep\r\n        case 10: return 31; // Oct\r\n        case 11: return 30; // Nov\r\n        case 12: return 31; // Dec\r\n    }\r\n    // TODO: throw error here?\r\n    return 0;\r\n}\r\n//# sourceMappingURL=date.js.map\r\n"]},"metadata":{},"sourceType":"module"}