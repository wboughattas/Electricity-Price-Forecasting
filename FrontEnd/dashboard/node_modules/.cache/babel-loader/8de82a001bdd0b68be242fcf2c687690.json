{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnChooserDescription } from \"./ColumnChooserDescription\";\n/**\n * @hidden\n */\n\nvar ColumnChooserDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ColumnChooserDescriptionMetadata, _super);\n\n  function ColumnChooserDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ColumnChooserDescriptionMetadata.b = function (a) {\n    if (ColumnChooserDescriptionMetadata.a == null) {\n      ColumnChooserDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ColumnChooserDescriptionMetadata.c(a, ColumnChooserDescriptionMetadata.a);\n    }\n  };\n\n  ColumnChooserDescriptionMetadata.c = function (a, b) {\n    b.item(\"TargetGridRef\", \"(w:TargetGrid,wf:TargetGrid)DataRef::object\");\n    b.item(\"Title\", \"String\");\n    b.item(\"TitleFontFamily\", \"(w:TitleFontFamily/FontFamilyTransform,wf:TitleFontFamily,web:titleStyle/FontFamilyTransform)String\");\n    b.item(\"TitleFontSize\", \"(w:TitleFontSize,wf:TitleFontSize,web:titleStyle/FontSizeTransform)Number:double\");\n    b.item(\"TitleFontStyle\", \"(w:TitleFontStyle/FontStyleTransform,wf:TitleFontFamily/FontStyleTransform,web:titleStyle/FontStyleTransform)String\");\n    b.item(\"TitleFontWeight\", \"(w:TitleFontWeight/FontWeightTransform,wf:TitleFontFamily/FontWeightTransform,web:titleStyle/FontWeightTransform)String\");\n    b.item(\"TitleColor\", \"Brush\");\n    b.item(\"FilterPlaceholderText\", \"String\");\n    b.item(\"BaseTheme\", \"ExportedType:string:BaseControlTheme\");\n    b.item(\"Density\", \"ExportedType:string:ControlDisplayDensity\");\n    b.item(\"BackgroundColor\", \"Brush\");\n  };\n\n  ColumnChooserDescriptionMetadata.d = function (a) {\n    ColumnChooserDescriptionMetadata.b(a);\n    a.n(\"ColumnChooser\", function () {\n      return new ColumnChooserDescription();\n    });\n    a.m(\"ColumnChooser\", ColumnChooserDescriptionMetadata.a);\n  };\n\n  ColumnChooserDescriptionMetadata.$t = markType(ColumnChooserDescriptionMetadata, 'ColumnChooserDescriptionMetadata');\n  ColumnChooserDescriptionMetadata.a = null;\n  return ColumnChooserDescriptionMetadata;\n}(Base);\n\nexport { ColumnChooserDescriptionMetadata };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ColumnChooserDescriptionMetadata.ts"],"names":[],"mappings":"AAAA;;;;;AAKE;;AAEF,SAAS,IAAT,EAAe,YAAf,EAAmC,QAAnC,QAAmD,QAAnD;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,wBAAT,QAAyC,4BAAzC;AAEA;;AAEG;;AACH,IAAA,gCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,OAAA,CAAA,SAAA,CAAA,gCAAA,EAAA,MAAA;;AAAtD,WAAA,gCAAA,GAAA;;AA2BC;;AAxBe,EAAA,gCAAA,CAAA,CAAA,GAAf,UAAiB,CAAjB,EAA0C;AACzC,QAAI,gCAAgC,CAAC,CAAjC,IAAsC,IAA1C,EAAgD;AAC/C,MAAA,gCAAgC,CAAC,CAAjC,GAAqC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAArC;AACA,MAAA,gCAAgC,CAAC,CAAjC,CAAmC,CAAnC,EAAsC,gCAAgC,CAAC,CAAvE;AACA;AACD,GALc;;AAMR,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAoC,CAApC,EAAmE;AAClE,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,6CAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,QAAhB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,qGAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,eAAP,EAAwB,kFAAxB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,gBAAP,EAAyB,qHAAzB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,yHAA1B;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,OAArB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,uBAAP,EAAgC,QAAhC;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,sCAApB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,2CAAlB;AACA,IAAA,CAAC,CAAC,IAAF,CAAO,iBAAP,EAA0B,OAA1B;AACA,GAZM;;AAaA,EAAA,gCAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAkC;AACjC,IAAA,gCAAgC,CAAC,CAAjC,CAAmC,CAAnC;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,YAAA;AAAM,aAAA,IAAA,wBAAA,EAAA;AAA8B,KAAzD;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,eAAJ,EAAqB,gCAAgC,CAAC,CAAtD;AACA,GAJM;;AArBA,EAAA,gCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,gCAAD,EAAmC,kCAAnC,CAAnB;AACQ,EAAA,gCAAA,CAAA,CAAA,GAAkC,IAAlC;AAyBhB,SAAA,gCAAA;AAAC,CA3BD,CAAsD,IAAtD,CAAA;;SAAa,gC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { ColumnChooserDescription } from \"./ColumnChooserDescription\";\n/**\n * @hidden\n */\nvar ColumnChooserDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ColumnChooserDescriptionMetadata, _super);\n    function ColumnChooserDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColumnChooserDescriptionMetadata.b = function (a) {\n        if (ColumnChooserDescriptionMetadata.a == null) {\n            ColumnChooserDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ColumnChooserDescriptionMetadata.c(a, ColumnChooserDescriptionMetadata.a);\n        }\n    };\n    ColumnChooserDescriptionMetadata.c = function (a, b) {\n        b.item(\"TargetGridRef\", \"(w:TargetGrid,wf:TargetGrid)DataRef::object\");\n        b.item(\"Title\", \"String\");\n        b.item(\"TitleFontFamily\", \"(w:TitleFontFamily/FontFamilyTransform,wf:TitleFontFamily,web:titleStyle/FontFamilyTransform)String\");\n        b.item(\"TitleFontSize\", \"(w:TitleFontSize,wf:TitleFontSize,web:titleStyle/FontSizeTransform)Number:double\");\n        b.item(\"TitleFontStyle\", \"(w:TitleFontStyle/FontStyleTransform,wf:TitleFontFamily/FontStyleTransform,web:titleStyle/FontStyleTransform)String\");\n        b.item(\"TitleFontWeight\", \"(w:TitleFontWeight/FontWeightTransform,wf:TitleFontFamily/FontWeightTransform,web:titleStyle/FontWeightTransform)String\");\n        b.item(\"TitleColor\", \"Brush\");\n        b.item(\"FilterPlaceholderText\", \"String\");\n        b.item(\"BaseTheme\", \"ExportedType:string:BaseControlTheme\");\n        b.item(\"Density\", \"ExportedType:string:ControlDisplayDensity\");\n        b.item(\"BackgroundColor\", \"Brush\");\n    };\n    ColumnChooserDescriptionMetadata.d = function (a) {\n        ColumnChooserDescriptionMetadata.b(a);\n        a.n(\"ColumnChooser\", function () { return new ColumnChooserDescription(); });\n        a.m(\"ColumnChooser\", ColumnChooserDescriptionMetadata.a);\n    };\n    ColumnChooserDescriptionMetadata.$t = markType(ColumnChooserDescriptionMetadata, 'ColumnChooserDescriptionMetadata');\n    ColumnChooserDescriptionMetadata.a = null;\n    return ColumnChooserDescriptionMetadata;\n}(Base));\nexport { ColumnChooserDescriptionMetadata };\n//# sourceMappingURL=ColumnChooserDescriptionMetadata.js.map\n"]},"metadata":{},"sourceType":"module"}